{"version":3,"file":"break.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kTests","loop_break","src","pass","loop_if_break","continuing_break_if","while_break","while_if_break","for_break","for_if_break","switch_case_break","switch_case_if_break","break","return_break","if_break","continuing_break","continuing_if_break","switch_break","test","desc","params","u","combine","fn","t","code","stmt","expectCompileResult"],"sources":["../../../../../src/webgpu/shader/validation/parse/break.spec.ts"],"sourcesContent":["export const description = `Validation tests for break`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kTests = {\n  loop_break: {\n    src: 'loop { break; }',\n    pass: true,\n  },\n  loop_if_break: {\n    src: 'loop { if true { break; } }',\n    pass: true,\n  },\n  continuing_break_if: {\n    src: 'loop { continuing { break if (true); } }',\n    pass: true,\n  },\n  while_break: {\n    src: 'while true { break; }',\n    pass: true,\n  },\n  while_if_break: {\n    src: 'while true { if true { break; } }',\n    pass: true,\n  },\n  for_break: {\n    src: 'for (;;) { break; }',\n    pass: true,\n  },\n  for_if_break: {\n    src: 'for (;;) { if true { break; } }',\n    pass: true,\n  },\n  switch_case_break: {\n    src: 'switch(1) { default: { break; } }',\n    pass: true,\n  },\n  switch_case_if_break: {\n    src: 'switch(1) { default: { if true { break; } } }',\n    pass: true,\n  },\n  break: {\n    src: 'break;',\n    pass: false,\n  },\n  return_break: {\n    src: 'return break;',\n    pass: false,\n  },\n  if_break: {\n    src: 'if true { break; }',\n    pass: false,\n  },\n  continuing_break: {\n    src: 'loop { continuing { break; } }',\n    pass: false,\n  },\n  continuing_if_break: {\n    src: 'loop { continuing { if (true) { break; } } }',\n    pass: false,\n  },\n  switch_break: {\n    src: 'switch(1) { break; }',\n    pass: false,\n  },\n};\n\ng.test('placement')\n  .desc('Test that break placement is validated correctly')\n  .params(u => u.combine('stmt', keysOf(kTests)))\n  .fn(t => {\n    const code = `\n@vertex\nfn vtx() -> @builtin(position) vec4f {\n  ${kTests[t.params.stmt].src}\n  return vec4f(1);\n}\n    `;\n    t.expectCompileResult(kTests[t.params.stmt].pass, code);\n  });\n"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI,4BAA2B,CAEvD,SAASC,aAAa,QAAQ,4CAA4C;AAC1E,SAASC,MAAM,QAAQ,wCAAwC;AAC/D,SAASC,oBAAoB,QAAQ,8BAA8B;;AAEnE,OAAO,MAAMC,CAAC,GAAGH,aAAa,CAACE,oBAAoB,CAAC;;AAEpD,MAAME,MAAM,GAAG;EACbC,UAAU,EAAE;IACVC,GAAG,EAAE,iBAAiB;IACtBC,IAAI,EAAE;EACR,CAAC;EACDC,aAAa,EAAE;IACbF,GAAG,EAAE,6BAA6B;IAClCC,IAAI,EAAE;EACR,CAAC;EACDE,mBAAmB,EAAE;IACnBH,GAAG,EAAE,0CAA0C;IAC/CC,IAAI,EAAE;EACR,CAAC;EACDG,WAAW,EAAE;IACXJ,GAAG,EAAE,uBAAuB;IAC5BC,IAAI,EAAE;EACR,CAAC;EACDI,cAAc,EAAE;IACdL,GAAG,EAAE,mCAAmC;IACxCC,IAAI,EAAE;EACR,CAAC;EACDK,SAAS,EAAE;IACTN,GAAG,EAAE,qBAAqB;IAC1BC,IAAI,EAAE;EACR,CAAC;EACDM,YAAY,EAAE;IACZP,GAAG,EAAE,iCAAiC;IACtCC,IAAI,EAAE;EACR,CAAC;EACDO,iBAAiB,EAAE;IACjBR,GAAG,EAAE,mCAAmC;IACxCC,IAAI,EAAE;EACR,CAAC;EACDQ,oBAAoB,EAAE;IACpBT,GAAG,EAAE,+CAA+C;IACpDC,IAAI,EAAE;EACR,CAAC;EACDS,KAAK,EAAE;IACLV,GAAG,EAAE,QAAQ;IACbC,IAAI,EAAE;EACR,CAAC;EACDU,YAAY,EAAE;IACZX,GAAG,EAAE,eAAe;IACpBC,IAAI,EAAE;EACR,CAAC;EACDW,QAAQ,EAAE;IACRZ,GAAG,EAAE,oBAAoB;IACzBC,IAAI,EAAE;EACR,CAAC;EACDY,gBAAgB,EAAE;IAChBb,GAAG,EAAE,gCAAgC;IACrCC,IAAI,EAAE;EACR,CAAC;EACDa,mBAAmB,EAAE;IACnBd,GAAG,EAAE,8CAA8C;IACnDC,IAAI,EAAE;EACR,CAAC;EACDc,YAAY,EAAE;IACZf,GAAG,EAAE,sBAAsB;IAC3BC,IAAI,EAAE;EACR;AACF,CAAC;;AAEDJ,CAAC,CAACmB,IAAI,CAAC,WAAW,CAAC;AAChBC,IAAI,CAAC,kDAAkD,CAAC;AACxDC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,MAAM,EAAEzB,MAAM,CAACG,MAAM,CAAC,CAAC,CAAC;AAC9CuB,EAAE,CAAC,CAAAC,CAAC,KAAI;EACP,MAAMC,IAAI,GAAI;AAClB;AACA;AACA,IAAIzB,MAAM,CAACwB,CAAC,CAACJ,MAAM,CAACM,IAAI,CAAC,CAACxB,GAAI;AAC9B;AACA;AACA,KAAK;EACDsB,CAAC,CAACG,mBAAmB,CAAC3B,MAAM,CAACwB,CAAC,CAACJ,MAAM,CAACM,IAAI,CAAC,CAACvB,IAAI,EAAEsB,IAAI,CAAC;AACzD,CAAC,CAAC"}