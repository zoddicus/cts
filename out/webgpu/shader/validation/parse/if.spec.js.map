{"version":3,"file":"if.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kTests","true","wgsl","pass","paren_true","expr","paren_expr","true_else","paren_true_else","expr_else","paren_expr_else","true_else_if_true","paren_true_else_if_paren_true","true_else_if_paren_true","paren_true_else_if_true","expr_else_if_expr","paren_expr_else_if_paren_expr","expr_else_if_paren_expr","paren_expr_else_if_expr","if","block","semicolon","true_lbrace","true_rbrace","lparen_true","rparen_true","true_lparen","true_rparen","true_else_if_no_block","true_else_if","true_else_if_semicolon","true_else_if_true_lbrace","true_else_if_true_rbrace","true_else_if_lparen_true","true_else_if_rparen_true","true_else_if_true_lparen","true_else_if_true_rparen","else","else_if","true_elif","true_elsif","elif","elsif","test","desc","params","u","combine","fn","t","code","expectCompileResult"],"sources":["../../../../../src/webgpu/shader/validation/parse/if.spec.ts"],"sourcesContent":["export const description = `Validation parser tests for 'if' statements`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kTests = {\n  true: { wgsl: `if true {}`, pass: true },\n  paren_true: { wgsl: `if (true) {}`, pass: true },\n  expr: { wgsl: `if expr {}`, pass: true },\n  paren_expr: { wgsl: `if (expr) {}`, pass: true },\n\n  true_else: { wgsl: `if true {} else {}`, pass: true },\n  paren_true_else: { wgsl: `if (true) {} else {}`, pass: true },\n  expr_else: { wgsl: `if expr {} else {}`, pass: true },\n  paren_expr_else: { wgsl: `if (expr) {} else {}`, pass: true },\n\n  true_else_if_true: { wgsl: `if true {} else if true {}`, pass: true },\n  paren_true_else_if_paren_true: { wgsl: `if (true) {} else if (true) {}`, pass: true },\n  true_else_if_paren_true: { wgsl: `if true {} else if (true) {}`, pass: true },\n  paren_true_else_if_true: { wgsl: `if (true) {} else if true {}`, pass: true },\n\n  expr_else_if_expr: { wgsl: `if expr {} else if expr {}`, pass: true },\n  paren_expr_else_if_paren_expr: { wgsl: `if (expr) {} else if (expr) {}`, pass: true },\n  expr_else_if_paren_expr: { wgsl: `if expr {} else if (expr) {}`, pass: true },\n  paren_expr_else_if_expr: { wgsl: `if (expr) {} else if expr {}`, pass: true },\n\n  if: { wgsl: `if`, pass: false },\n  block: { wgsl: `if{}`, pass: false },\n  semicolon: { wgsl: `if;`, pass: false },\n  true_lbrace: { wgsl: `if true {`, pass: false },\n  true_rbrace: { wgsl: `if true }`, pass: false },\n\n  lparen_true: { wgsl: `if (true {}`, pass: false },\n  rparen_true: { wgsl: `if )true {}`, pass: false },\n  true_lparen: { wgsl: `if true( {}`, pass: false },\n  true_rparen: { wgsl: `if true) {}`, pass: false },\n\n  true_else_if_no_block: { wgsl: `if true {} else if `, pass: false },\n  true_else_if: { wgsl: `if true {} else if {}`, pass: false },\n  true_else_if_semicolon: { wgsl: `if true {} else if ;`, pass: false },\n  true_else_if_true_lbrace: { wgsl: `if true {} else if true {`, pass: false },\n  true_else_if_true_rbrace: { wgsl: `if true {} else if true }`, pass: false },\n\n  true_else_if_lparen_true: { wgsl: `if true {} else if (true {}`, pass: false },\n  true_else_if_rparen_true: { wgsl: `if true {} else if )true {}`, pass: false },\n  true_else_if_true_lparen: { wgsl: `if true {} else if true( {}`, pass: false },\n  true_else_if_true_rparen: { wgsl: `if true {} else if true) {}`, pass: false },\n\n  else: { wgsl: `else { }`, pass: false },\n  else_if: { wgsl: `else if true { }`, pass: false },\n  true_elif: { wgsl: `if (true) { } elif (true) {}`, pass: false },\n  true_elsif: { wgsl: `if (true) { } elsif (true) {}`, pass: false },\n  elif: { wgsl: `elif (true) {}`, pass: false },\n  elsif: { wgsl: `elsif (true) {}`, pass: false },\n};\n\ng.test('parse')\n  .desc(`Test that 'if' statements are parsed correctly.`)\n  .params(u => u.combine('test', keysOf(kTests)))\n  .fn(t => {\n    const code = `\nfn f() {\n  let expr = true;\n  ${kTests[t.params.test].wgsl}\n}`;\n    t.expectCompileResult(kTests[t.params.test].pass, code);\n  });\n"],"mappings":"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"}