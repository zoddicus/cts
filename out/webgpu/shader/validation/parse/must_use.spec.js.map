{"version":3,"file":"must_use.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kMustUseDeclarations","var","code","valid","function_no_return","function_scalar_return","function_struct_return","function_var","function_call","function_parameter","empty_parameter","parameter","test","desc","params","u","combine","fn","t","expectCompileResult","kMustUseCalls","phony","let","condition","param","statement","call","use","res","kMustUseBuiltinCalls","u32","i32","struct","bitcast","all","any","select","arrayLength","abs","acos","acosh","asin","asinh","atan","atanh","atan2","ceil","clamp","cos","cosh","countLeadingZeros","countOneBits","countTrailingZeros","cross","degrees","determinant","distance","dot","exp","exp2","extractBits","faceForward","firstLeadingBit","firstTrailingBit","floor","fma","fract","frexp","insertBits","inverseSqrt","ldexp","length","log","log2","max","min","mix","modf","normalize","pow","quantizeToF16","radians","reflect","refract","reverseBits","round","saturate","sign","sin","sinh","smoothstep","sqrt","step","tan","tanh","transpose","trunc","dpdx","dpdxCoarse","dpdxFine","dpdy","dpdyCoarse","dpdyFine","fwidth","fwidthCoarse","fwidthFine","textureDimensions","textureGather","textureGatherCompare","textureLoad","textureNumLayers","textureNumLevels","textureNumSamples","textureSample","textureSampleBias","textureSampleCompare","textureSampleCompareLevel","textureSampleGrad","textureSampleLevel","textureSampleBaseClampToEdge","pack4x8snorm","pack4x8unorm","pack2x16snorm","pack2x16unorm","pack2x16float","unpack4x8snorm","unpack4x8unorm","unpack2x16snorm","unpack2x16unorm","unpack2x16float","workgroupUniformLoad","kNoMustUseBuiltinCalls","atomicLoad","atomicAdd","atomicSub","atomicMax","atomicMin","atomicAnd","atomicOr","atomicXor","atomicExchange","atomicCompareExchangeWeak"],"sources":["../../../../../src/webgpu/shader/validation/parse/must_use.spec.ts"],"sourcesContent":["export const description = `Validation tests for @must_use`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kMustUseDeclarations = {\n  var: {\n    code: `@must_use @group(0) @binding(0)\n    var<storage> x : array<u32>;`,\n    valid: false,\n  },\n  function_no_return: {\n    code: `@must_use fn foo() { }`,\n    valid: false,\n  },\n  function_scalar_return: {\n    code: `@must_use fn foo() -> u32 { return 0; }`,\n    valid: true,\n  },\n  function_struct_return: {\n    code: `struct S { x : u32 }\n    @must_use fn foo() -> S { return S(); }`,\n    valid: true,\n  },\n  function_var: {\n    code: `fn foo() { @must_use var x = 0; }`,\n    valid: false,\n  },\n  function_call: {\n    code: `fn bar() -> u32 { return 0; }\n    fn foo() { @must_use bar(); }`,\n    valid: false,\n  },\n  function_parameter: {\n    code: `fn foo(@must_use param : u32) -> u32 { return param; }`,\n    valid: false,\n  },\n  empty_parameter: {\n    code: `@must_use() fn foo() -> u32 { return 0; }`,\n    valid: false,\n  },\n  parameter: {\n    code: `@must_use(0) fn foo() -> u32 { return 0; }`,\n    valid: false,\n  },\n};\n\ng.test('declaration')\n  .desc(`Validate attribute can only be applied to a function declaration with a return type`)\n  .params(u => u.combine('test', keysOf(kMustUseDeclarations)))\n  .fn(t => {\n    const test = kMustUseDeclarations[t.params.test];\n    t.expectCompileResult(test.valid, test.code);\n  });\n\nconst kMustUseCalls = {\n  phony: `_ = bar();`,\n  let: `let tmp = bar();`,\n  var: `var tmp = bar();`,\n  condition: `if bar() == 0 { }`,\n  param: `baz(bar());`,\n  statement: `bar();`,\n};\n\ng.test('call')\n  .desc(`Validate that a call to must_use function cannot be the whole function call statement`)\n  .params(u => u.combine('use', ['@must_use', ''] as const).combine('call', keysOf(kMustUseCalls)))\n  .fn(t => {\n    const test = kMustUseCalls[t.params.call];\n    const code = `\n    fn baz(param : u32) { }\n    ${t.params.use} fn bar() -> u32 { return 0; }\n    fn foo() {\n      ${test}\n    }`;\n    const res = t.params.call !== 'statement' || t.params.use === '';\n    t.expectCompileResult(res, code);\n  });\n\nconst kMustUseBuiltinCalls = {\n  // Type constructors\n  u32: `u32()`,\n  i32: `i32(0)`,\n  struct: `S()`,\n  // Reinterpretation\n  bitcast: `bitcast<f32>(8u)`,\n  // Logical\n  all: `all(vec2<bool>(true))`,\n  any: `any(vec2<bool>(true))`,\n  select: `select(0i, 1i, true)`,\n  // Array\n  arrayLength: `arrayLength(&storage_var)`,\n  // Numeric\n  abs: `abs(0.5)`,\n  acos: `acos(0.5)`,\n  acosh: `acosh(1.0)`,\n  asin: `asin(0.5)`,\n  asinh: `asinh(0.5)`,\n  atan: `atan(0.5)`,\n  atanh: `atanh(0.5)`,\n  atan2: `atan2(0.5, 0.5)`,\n  ceil: `ceil(0.5)`,\n  clamp: `clamp(0.5, 0.1, 1.0)`,\n  cos: `cos(0.5)`,\n  cosh: `cosh(0.5)`,\n  countLeadingZeros: `countLeadingZeros(0)`,\n  countOneBits: `countOneBits(0)`,\n  countTrailingZeros: `countTrailingZeros(0)`,\n  cross: `cross(vec3f(), vec3f())`,\n  degrees: `degrees(0.5)`,\n  determinant: `determinant(mat2x2f())`,\n  distance: `distance(0.5, 0.5)`,\n  dot: `dot(vec2f(0.5, 0.5), vec2f(0.5, 0.5))`,\n  exp: `exp(0.5)`,\n  exp2: `exp2(0.5)`,\n  extractBits: `extractBits(0, 0, 1)`,\n  faceForward: `faceForward(vec2f(), vec2f(), vec2f())`,\n  firstLeadingBit: `firstLeadingBit(0)`,\n  firstTrailingBit: `firstTrailingBit(0)`,\n  floor: `floor(0.5)`,\n  fma: `fma(0.5, 0.5, 0.5)`,\n  fract: `fract(0.5)`,\n  frexp: `frexp(0.5)`,\n  insertBits: `insertBits(0, 0, 0, 1)`,\n  inverseSqrt: `inverseSqrt(0.5)`,\n  ldexp: `ldexp(0.5, 1)`,\n  length: `length(0.5)`,\n  log: `log(0.5)`,\n  log2: `log2(0.5)`,\n  max: `max(0, 0)`,\n  min: `min(0, 0)`,\n  mix: `mix(0.5, 0.5, 0.5)`,\n  modf: `modf(0.5)`,\n  normalize: `normalize(vec2f(0.5, 0.5))`,\n  pow: `pow(0.5, 0.5)`,\n  quantizeToF16: `quantizeToF16(0.5)`,\n  radians: `radians(0.5)`,\n  reflect: `reflect(vec2f(0.5, 0.5), vec2f(0.5, 0.5))`,\n  refract: `refract(vec2f(0.5, 0.5), vec2f(0.5, 0.5), 0.5)`,\n  reverseBits: `reverseBits(0)`,\n  round: `round(0.5)`,\n  saturate: `saturate(0.5)`,\n  sign: `sign(0.5)`,\n  sin: `sin(0.5)`,\n  sinh: `sinh(0.5)`,\n  smoothstep: `smoothstep(0.1, 1.0, 0.5)`,\n  sqrt: `sqrt(0.5)`,\n  step: `step(0.1, 0.5)`,\n  tan: `tan(0.5)`,\n  tanh: `tanh(0.5)`,\n  transpose: `transpose(mat2x2f())`,\n  trunc: `trunc(0.5)`,\n  // Derivative\n  dpdx: `dpdx(0.5)`,\n  dpdxCoarse: `dpdxCoarse(0.5)`,\n  dpdxFine: `dpdxFine(0.5)`,\n  dpdy: `dpdy(0.5)`,\n  dpdyCoarse: `dpdyCoarse(0.5)`,\n  dpdyFine: `dpdyFine(0.5)`,\n  fwidth: `fwidth(0.5)`,\n  fwidthCoarse: `fwidthCoarse(0.5)`,\n  fwidthFine: `fwidthFine(0.5)`,\n  // Texture\n  textureDimensions: `textureDimensions(tex_2d)`,\n  textureGather: `textureGather(0, tex_2d, s, vec2f(0,0))`,\n  textureGatherCompare: `textureGatherCompare(tex_depth_2d, s_comp, vec2f(0,0), 0)`,\n  textureLoad: `textureLoad(tex_2d, vec2i(0,0), 0)`,\n  textureNumLayers: `textureNumLayers(tex_array_2d)`,\n  textureNumLevels: `textureNumLevels(tex_2d)`,\n  textureNumSamples: `textureNumSamples(tex_multi_2d)`,\n  textureSample: `textureSample(tex_2d, s, vec2f(0,0))`,\n  textureSampleBias: `textureSampleBias(tex_2d, s, vec2f(0,0), 0)`,\n  textureSampleCompare: `textureSampleCompare(tex_depth_2d, s_comp, vec2f(0,0), 0)`,\n  textureSampleCompareLevel: `textureSampleCompareLevel(tex_depth_2d, s_comp, vec2f(0,0), 0)`,\n  textureSampleGrad: `textureSampleGrad(tex_2d, s, vec2f(0,0), vec2f(0,0), vec2f(0,0))`,\n  textureSampleLevel: `textureSampleLevel(tex_2d, s, vec2f(0,0), 0)`,\n  textureSampleBaseClampToEdge: `textureSampleBaseClampToEdge(tex_2d, s, vec2f(0,0))`,\n  // Data Packing\n  pack4x8snorm: `pack4x8snorm(vec4f())`,\n  pack4x8unorm: `pack4x8unorm(vec4f())`,\n  pack2x16snorm: `pack2x16snorm(vec2f())`,\n  pack2x16unorm: `pack2x16unorm(vec2f())`,\n  pack2x16float: `pack2x16float(vec2f())`,\n  // Data Unpacking\n  unpack4x8snorm: `unpack4x8snorm(0)`,\n  unpack4x8unorm: `unpack4x8unorm(0)`,\n  unpack2x16snorm: `unpack2x16snorm(0)`,\n  unpack2x16unorm: `unpack2x16unorm(0)`,\n  unpack2x16float: `unpack2x16float(0)`,\n  // Synchronization\n  workgroupUniformLoad: `workgroupUniformLoad(&wg_var)`,\n};\n\ng.test('builtin_must_use')\n  .desc(`Validate must_use built-in functions`)\n  .params(u =>\n    u.combine('call', keysOf(kMustUseBuiltinCalls)).combine('use', [true, false] as const)\n  )\n  .fn(t => {\n    let call = kMustUseBuiltinCalls[t.params.call];\n    if (t.params.use) {\n      call = `_ = ${call}`;\n    }\n    const code = `\nstruct S {\n  x : u32\n}\n\n@group(0) @binding(0)\nvar<storage> storage_var : array<u32>;\n@group(0) @binding(1)\nvar tex_2d : texture_2d<f32>;\n@group(0) @binding(2)\nvar s : sampler;\n@group(0) @binding(3)\nvar tex_depth_2d : texture_depth_2d;\n@group(0) @binding(4)\nvar s_comp : sampler_comparison;\n@group(0) @binding(5)\nvar tex_storage_2d : texture_storage_2d<rgba8unorm, write>;\n@group(0) @binding(6)\nvar tex_multi_2d : texture_multisampled_2d<f32>;\n@group(0) @binding(7)\nvar tex_array_2d : texture_2d_array<f32>;\n\nvar<workgroup> wg_var : u32;\n\nfn foo() {\n  ${call};\n}`;\n\n    t.expectCompileResult(t.params.use, code);\n  });\n\nconst kNoMustUseBuiltinCalls = {\n  atomicLoad: `atomicLoad(&a)`,\n  atomicAdd: `atomicAdd(&a, 0)`,\n  atomicSub: `atomicSub(&a, 0)`,\n  atomicMax: `atomicMax(&a, 0)`,\n  atomicMin: `atomicMin(&a, 0)`,\n  atomicAnd: `atomicAnd(&a, 0)`,\n  atomicOr: `atomicOr(&a, 0)`,\n  atomicXor: `atomicXor(&a, 0)`,\n  atomicExchange: `atomicExchange(&a, 0)`,\n  atomicCompareExchangeWeak: `atomicCompareExchangeWeak(&a, 0, 0)`,\n};\n\ng.test('builtin_no_must_use')\n  .desc(`Validate built-in functions without must_use`)\n  .params(u =>\n    u.combine('call', keysOf(kNoMustUseBuiltinCalls)).combine('use', [true, false] as const)\n  )\n  .fn(t => {\n    let call = kNoMustUseBuiltinCalls[t.params.call];\n    if (t.params.use) {\n      call = `_ = ${call}`;\n    }\n    const code = `\nvar<workgroup> a : atomic<u32>;\n\nfn foo() {\n  ${call};\n}`;\n\n    t.expectCompileResult(true, code);\n  });\n"],"mappings":"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"}