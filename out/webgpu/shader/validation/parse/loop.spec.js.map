{"version":3,"file":"loop.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kTests","break","wgsl","pass","return","break_continuing","var_break","var_break_continuing_inc","var_break_continuing_discard","continuing_break_if","expr_break","loop","continuing_break","break_continuing_continue","break_continuing_return","break_continuing_if_break","break_continuing_if_return","break_continuing_lbrace","break_continuing_rbrace","continuing","semicolon","lbrace","rbrace","lparen","rparen","continue","discard","empty","test","desc","params","u","combine","fn","t","code","expectCompileResult"],"sources":["../../../../../src/webgpu/shader/validation/parse/loop.spec.ts"],"sourcesContent":["export const description = `Validation parser tests for 'loop' statements`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kTests = {\n  break: { wgsl: `loop { break; }`, pass: true },\n  return: { wgsl: `loop { return; }`, pass: true },\n  break_continuing: { wgsl: `loop { break; continuing {} }`, pass: true },\n  var_break: { wgsl: `loop { var a = 1; break; }`, pass: true },\n  var_break_continuing_inc: {\n    wgsl: `loop { var a = 1; break; continuing { a += 1; }}`,\n    pass: true,\n  },\n  var_break_continuing_discard: {\n    wgsl: `loop { var a = 1; break; continuing { discard; }}`,\n    pass: true,\n  },\n  continuing_break_if: {\n    wgsl: `loop { continuing { break if true; } }`,\n    pass: true,\n  },\n\n  expr_break: { wgsl: `loop expr { break; }`, pass: false },\n  loop: { wgsl: `loop`, pass: false },\n  continuing_break: { wgsl: `loop { continuing {} break; }`, pass: false },\n  break_continuing_continue: { wgsl: `loop { break; continuing { continue; } }`, pass: false },\n  break_continuing_return: { wgsl: `loop { break; continuing { return; } }`, pass: false },\n  break_continuing_if_break: {\n    wgsl: `loop { break; continuing { if true { break; } }`,\n    pass: false,\n  },\n  break_continuing_if_return: {\n    wgsl: `loop { break; continuing { if true { return; } }`,\n    pass: false,\n  },\n  break_continuing_lbrace: { wgsl: `loop { break; continuing { }`, pass: false },\n  break_continuing_rbrace: { wgsl: `loop { break; continuing } }`, pass: false },\n  continuing: { wgsl: `loop { continuing {} }`, pass: false },\n  semicolon: { wgsl: `loop;`, pass: false },\n  lbrace: { wgsl: `loop {`, pass: false },\n  rbrace: { wgsl: `loop }`, pass: false },\n  lparen: { wgsl: `loop ({}`, pass: false },\n  rparen: { wgsl: `loop ){}`, pass: false },\n\n  // note: these parse, but fails due to behavior-analysis\n  continue: { wgsl: `loop { continue; }`, pass: false },\n  discard: { wgsl: `loop { discard; }`, pass: false },\n  empty: { wgsl: `loop{}`, pass: false },\n};\n\ng.test('parse')\n  .desc(`Test that 'loop' statements are parsed correctly.`)\n  .params(u => u.combine('test', keysOf(kTests)))\n  .fn(t => {\n    const code = `\nfn f() {\n  let expr = true;\n  ${kTests[t.params.test].wgsl}\n}`;\n    t.expectCompileResult(kTests[t.params.test].pass, code);\n  });\n"],"mappings":"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"}