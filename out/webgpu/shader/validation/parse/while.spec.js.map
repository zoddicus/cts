{"version":3,"file":"while.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kTests","true","wgsl","pass","paren_true","true_break","true_discard","true_return","expr","paren_expr","while","block","semicolon","true_lbrace","true_rbrace","lparen_true","rparen_true","true_lparen","true_rparen","lparen_true_lparen","rparen_true_rparen","test","desc","params","u","combine","fn","t","code","expectCompileResult"],"sources":["../../../../../src/webgpu/shader/validation/parse/while.spec.ts"],"sourcesContent":["export const description = `Validation parser tests for 'while' statements`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kTests = {\n  true: { wgsl: `while true {}`, pass: true },\n  paren_true: { wgsl: `while (true) {}`, pass: true },\n  true_break: { wgsl: `while true { break; }`, pass: true },\n  true_discard: { wgsl: `while true { discard; }`, pass: true },\n  true_return: { wgsl: `while true { return; }`, pass: true },\n  expr: { wgsl: `while expr {}`, pass: true },\n  paren_expr: { wgsl: `while (expr) {}`, pass: true },\n\n  while: { wgsl: `while`, pass: false },\n  block: { wgsl: `while{}`, pass: false },\n  semicolon: { wgsl: `while;`, pass: false },\n  true_lbrace: { wgsl: `while true {`, pass: false },\n  true_rbrace: { wgsl: `while true }`, pass: false },\n\n  lparen_true: { wgsl: `while (true {}`, pass: false },\n  rparen_true: { wgsl: `while )true {}`, pass: false },\n  true_lparen: { wgsl: `while true( {}`, pass: false },\n  true_rparen: { wgsl: `while true) {}`, pass: false },\n  lparen_true_lparen: { wgsl: `while (true( {}`, pass: false },\n  rparen_true_rparen: { wgsl: `while )true) {}`, pass: false },\n};\n\ng.test('parse')\n  .desc(`Test that 'while' statements are parsed correctly.`)\n  .params(u => u.combine('test', keysOf(kTests)))\n  .fn(t => {\n    const code = `\nfn f() {\n  let expr = true;\n  ${kTests[t.params.test].wgsl}\n}`;\n    t.expectCompileResult(kTests[t.params.test].pass, code);\n  });\n"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI,gDAA+C,CAE3E,SAASC,aAAa,QAAQ,4CAA4C;AAC1E,SAASC,MAAM,QAAQ,wCAAwC;AAC/D,SAASC,oBAAoB,QAAQ,8BAA8B;;AAEnE,OAAO,MAAMC,CAAC,GAAGH,aAAa,CAACE,oBAAoB,CAAC;;AAEpD,MAAME,MAAM,GAAG;EACbC,IAAI,EAAE,EAAEC,IAAI,EAAG,eAAc,EAAEC,IAAI,EAAE,IAAI,CAAC,CAAC;EAC3CC,UAAU,EAAE,EAAEF,IAAI,EAAG,iBAAgB,EAAEC,IAAI,EAAE,IAAI,CAAC,CAAC;EACnDE,UAAU,EAAE,EAAEH,IAAI,EAAG,uBAAsB,EAAEC,IAAI,EAAE,IAAI,CAAC,CAAC;EACzDG,YAAY,EAAE,EAAEJ,IAAI,EAAG,yBAAwB,EAAEC,IAAI,EAAE,IAAI,CAAC,CAAC;EAC7DI,WAAW,EAAE,EAAEL,IAAI,EAAG,wBAAuB,EAAEC,IAAI,EAAE,IAAI,CAAC,CAAC;EAC3DK,IAAI,EAAE,EAAEN,IAAI,EAAG,eAAc,EAAEC,IAAI,EAAE,IAAI,CAAC,CAAC;EAC3CM,UAAU,EAAE,EAAEP,IAAI,EAAG,iBAAgB,EAAEC,IAAI,EAAE,IAAI,CAAC,CAAC;;EAEnDO,KAAK,EAAE,EAAER,IAAI,EAAG,OAAM,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;EACrCQ,KAAK,EAAE,EAAET,IAAI,EAAG,SAAQ,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;EACvCS,SAAS,EAAE,EAAEV,IAAI,EAAG,QAAO,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;EAC1CU,WAAW,EAAE,EAAEX,IAAI,EAAG,cAAa,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;EAClDW,WAAW,EAAE,EAAEZ,IAAI,EAAG,cAAa,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;;EAElDY,WAAW,EAAE,EAAEb,IAAI,EAAG,gBAAe,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;EACpDa,WAAW,EAAE,EAAEd,IAAI,EAAG,gBAAe,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;EACpDc,WAAW,EAAE,EAAEf,IAAI,EAAG,gBAAe,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;EACpDe,WAAW,EAAE,EAAEhB,IAAI,EAAG,gBAAe,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;EACpDgB,kBAAkB,EAAE,EAAEjB,IAAI,EAAG,iBAAgB,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;EAC5DiB,kBAAkB,EAAE,EAAElB,IAAI,EAAG,iBAAgB,EAAEC,IAAI,EAAE,KAAK,CAAC;AAC7D,CAAC;;AAEDJ,CAAC,CAACsB,IAAI,CAAC,OAAO,CAAC;AACZC,IAAI,CAAE,oDAAmD,CAAC;AAC1DC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE5B,MAAM,CAACG,MAAM,CAAC,CAAC,CAAC;AAC9C0B,EAAE,CAAC,CAAAC,CAAC,KAAI;EACP,MAAMC,IAAI,GAAI;AAClB;AACA;AACA,IAAI5B,MAAM,CAAC2B,CAAC,CAACJ,MAAM,CAACF,IAAI,CAAC,CAACnB,IAAK;AAC/B,EAAE;EACEyB,CAAC,CAACE,mBAAmB,CAAC7B,MAAM,CAAC2B,CAAC,CAACJ,MAAM,CAACF,IAAI,CAAC,CAAClB,IAAI,EAAEyB,IAAI,CAAC;AACzD,CAAC,CAAC"}