{"version":3,"file":"test_types.js","names":["kTestTypes","bool","value","i32","u32","f32","f16","requires","vec2af","vec3af","vec4af","vec2ai","vec3ai","vec4ai","vec2f","vec3h","vec4u","vec3b","mat2x3f","mat4x2h","array","atomic","header","struct","texture","sampler"],"sources":["../../../../../src/webgpu/shader/validation/statement/test_types.ts"],"sourcesContent":["export type TestType = {\n  /** A WGSL expression that produces a value of the given type */\n  value: string;\n  /** An optional shader enable required to use the type */\n  requires?: string;\n  /** An optional module-scope WGSL declaration required to use the type */\n  header?: string;\n};\n\n/** A selection of different types used by statement validation tests */\nexport const kTestTypes: Record<string, TestType> = {\n  bool: { value: 'true' },\n  i32: { value: '1i' },\n  u32: { value: '1u' },\n  f32: { value: '1f' },\n  f16: { value: '1h', requires: 'f16' },\n  'abstract-int': { value: '1' },\n  'abstract-float': { value: '1.0' },\n  vec2af: { value: 'vec2(1.0)' },\n  vec3af: { value: 'vec3(1.0)' },\n  vec4af: { value: 'vec4(1.0)' },\n  vec2ai: { value: 'vec2(1)' },\n  vec3ai: { value: 'vec3(1)' },\n  vec4ai: { value: 'vec4(1)' },\n  vec2f: { value: 'vec2f(1)' },\n  vec3h: { value: 'vec3h(1)', requires: 'f16' },\n  vec4u: { value: 'vec4u(1)' },\n  vec3b: { value: 'vec3<bool>(true)' },\n  mat2x3f: { value: 'mat2x3f(1, 2, 3, 4, 5, 6)' },\n  mat4x2h: { value: 'mat4x2h(1, 2, 3, 4, 5, 6, 7, 8)', requires: 'f16' },\n  array: { value: 'array<i32, 4>(1, 2, 3, 4)' },\n  atomic: { value: 'A', header: 'var<workgroup> A : atomic<i32>;' },\n  struct: { value: 'Str(1)', header: 'struct Str{ i : i32 }' },\n  texture: { value: 'T', header: '@group(0) @binding(0) var T : texture_2d<f32>;' },\n  sampler: { value: 'S', header: '@group(0) @binding(1) var S : sampler;' },\n} as const;\n"],"mappings":";;;;;;;;;AASA;AACA,OAAO,MAAMA,UAAoC,GAAG;EAClDC,IAAI,EAAE,EAAEC,KAAK,EAAE,MAAM,CAAC,CAAC;EACvBC,GAAG,EAAE,EAAED,KAAK,EAAE,IAAI,CAAC,CAAC;EACpBE,GAAG,EAAE,EAAEF,KAAK,EAAE,IAAI,CAAC,CAAC;EACpBG,GAAG,EAAE,EAAEH,KAAK,EAAE,IAAI,CAAC,CAAC;EACpBI,GAAG,EAAE,EAAEJ,KAAK,EAAE,IAAI,EAAEK,QAAQ,EAAE,KAAK,CAAC,CAAC;EACrC,cAAc,EAAE,EAAEL,KAAK,EAAE,GAAG,CAAC,CAAC;EAC9B,gBAAgB,EAAE,EAAEA,KAAK,EAAE,KAAK,CAAC,CAAC;EAClCM,MAAM,EAAE,EAAEN,KAAK,EAAE,WAAW,CAAC,CAAC;EAC9BO,MAAM,EAAE,EAAEP,KAAK,EAAE,WAAW,CAAC,CAAC;EAC9BQ,MAAM,EAAE,EAAER,KAAK,EAAE,WAAW,CAAC,CAAC;EAC9BS,MAAM,EAAE,EAAET,KAAK,EAAE,SAAS,CAAC,CAAC;EAC5BU,MAAM,EAAE,EAAEV,KAAK,EAAE,SAAS,CAAC,CAAC;EAC5BW,MAAM,EAAE,EAAEX,KAAK,EAAE,SAAS,CAAC,CAAC;EAC5BY,KAAK,EAAE,EAAEZ,KAAK,EAAE,UAAU,CAAC,CAAC;EAC5Ba,KAAK,EAAE,EAAEb,KAAK,EAAE,UAAU,EAAEK,QAAQ,EAAE,KAAK,CAAC,CAAC;EAC7CS,KAAK,EAAE,EAAEd,KAAK,EAAE,UAAU,CAAC,CAAC;EAC5Be,KAAK,EAAE,EAAEf,KAAK,EAAE,kBAAkB,CAAC,CAAC;EACpCgB,OAAO,EAAE,EAAEhB,KAAK,EAAE,2BAA2B,CAAC,CAAC;EAC/CiB,OAAO,EAAE,EAAEjB,KAAK,EAAE,iCAAiC,EAAEK,QAAQ,EAAE,KAAK,CAAC,CAAC;EACtEa,KAAK,EAAE,EAAElB,KAAK,EAAE,2BAA2B,CAAC,CAAC;EAC7CmB,MAAM,EAAE,EAAEnB,KAAK,EAAE,GAAG,EAAEoB,MAAM,EAAE,iCAAiC,CAAC,CAAC;EACjEC,MAAM,EAAE,EAAErB,KAAK,EAAE,QAAQ,EAAEoB,MAAM,EAAE,uBAAuB,CAAC,CAAC;EAC5DE,OAAO,EAAE,EAAEtB,KAAK,EAAE,GAAG,EAAEoB,MAAM,EAAE,gDAAgD,CAAC,CAAC;EACjFG,OAAO,EAAE,EAAEvB,KAAK,EAAE,GAAG,EAAEoB,MAAM,EAAE,wCAAwC,CAAC;AAC1E,CAAU"}