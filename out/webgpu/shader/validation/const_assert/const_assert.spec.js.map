{"version":3,"file":"const_assert.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","buildStaticAssert","expr","scope","stmt","kConditionCases","any_false","val","any_true","binary_op_eq_const_false","binary_op_eq_const_true","const_eq_literal_float_false","const_eq_literal_float_true","const_eq_literal_int_false","const_eq_literal_int_true","literal_false","literal_not_false","literal_not_true","literal_true","min_max_false","min_max_true","variable_false","variable_not_false","variable_not_true","variable_true","kConditionConstants","test","desc","params","u","combine","beginSubcases","fn","t","case","expectCompileResult","lhs","rhs","staticAssert","stage"],"sources":["../../../../../src/webgpu/shader/validation/const_assert/const_assert.spec.ts"],"sourcesContent":["export const description = `Validation tests for const_assert`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\n/**\n * Builds a const_assert() statement.\n * @param expr the constant expression\n * @param scope module-scope or function-scope constant expression\n * @returns the WGSL code\n */\nfunction buildStaticAssert(expr: string, scope: 'module' | 'function') {\n  const stmt = `const_assert (${expr});`;\n  return scope === 'module' ? stmt : `fn f() { ${stmt} }`;\n}\n\ninterface Condition {\n  expr: string;\n  val: boolean;\n}\n\ninterface MappedCondition {\n  [key: string]: Condition;\n}\n\nconst kConditionCases: MappedCondition = {\n  any_false: { expr: `any(vec3(false, false, false))`, val: false },\n  any_true: { expr: `any(vec3(false, true, false))`, val: true },\n  binary_op_eq_const_false: { expr: `one + 5 == two`, val: false },\n  binary_op_eq_const_true: { expr: `one + 1 == two`, val: true },\n  const_eq_literal_float_false: { expr: `one == 0.0`, val: false },\n  const_eq_literal_float_true: { expr: `one == 1.0`, val: true },\n  const_eq_literal_int_false: { expr: `one == 10`, val: false },\n  const_eq_literal_int_true: { expr: `one == 1`, val: true },\n  literal_false: { expr: `false`, val: false },\n  literal_not_false: { expr: `!false`, val: true },\n  literal_not_true: { expr: `!true`, val: false },\n  literal_true: { expr: `true`, val: true },\n  min_max_false: { expr: `min(three, max(two, one)) == 3`, val: false },\n  min_max_true: { expr: `min(three, max(two, one)) == 2`, val: true },\n  variable_false: { expr: `is_false`, val: false },\n  variable_not_false: { expr: `!is_false`, val: true },\n  variable_not_true: { expr: `!is_true`, val: false },\n  variable_true: { expr: `is_true`, val: true },\n};\n\nconst kConditionConstants = `\nconst one = 1;\nconst two = 2;\nconst three = 3;\nconst is_true = true;\nconst is_false = false;\n`;\n\ng.test('constant_expression_no_assert')\n  .desc(`Test that const_assert does not assert on a true conditional expression`)\n  .params(u =>\n    u\n      .combine('scope', ['module', 'function'] as const)\n      .beginSubcases()\n      .combine('case', keysOf(kConditionCases))\n  )\n  .fn(t => {\n    const expr = kConditionCases[t.params.case].expr;\n    const val = kConditionCases[t.params.case].val;\n    t.expectCompileResult(\n      true,\n      kConditionConstants + buildStaticAssert(val ? expr : `!(${expr})`, t.params.scope)\n    );\n  });\n\ng.test('constant_expression_assert')\n  .desc(`Test that const_assert does assert on a false conditional expression`)\n  .params(u =>\n    u\n      .combine('scope', ['module', 'function'] as const)\n      .beginSubcases()\n      .combine('case', keysOf(kConditionCases))\n  )\n  .fn(t => {\n    const expr = kConditionCases[t.params.case].expr;\n    const val = kConditionCases[t.params.case].val;\n    t.expectCompileResult(\n      false,\n      kConditionConstants + buildStaticAssert(val ? `!(${expr})` : expr, t.params.scope)\n    );\n  });\n\ng.test('constant_expression_logical_or_no_assert')\n  .desc(\n    `Test that const_assert does not assert on a condition expression that contains a logical-or which evaluates to true`\n  )\n  .params(u =>\n    u\n      .combine('scope', ['module', 'function'] as const)\n      .beginSubcases()\n      .combine('lhs', keysOf(kConditionCases))\n      .combine('rhs', keysOf(kConditionCases))\n  )\n  .fn(t => {\n    const expr = `(${kConditionCases[t.params.lhs].expr}) || (${\n      kConditionCases[t.params.rhs].expr\n    })`;\n    const val = kConditionCases[t.params.lhs].val || kConditionCases[t.params.rhs].val;\n    t.expectCompileResult(\n      true,\n      kConditionConstants + buildStaticAssert(val ? expr : `!(${expr})`, t.params.scope)\n    );\n  });\n\ng.test('constant_expression_logical_or_assert')\n  .desc(\n    `Test that const_assert does assert on a condition expression that contains a logical-or which evaluates to false`\n  )\n  .params(u =>\n    u\n      .combine('scope', ['module', 'function'] as const)\n      .beginSubcases()\n      .combine('lhs', keysOf(kConditionCases))\n      .combine('rhs', keysOf(kConditionCases))\n  )\n  .fn(t => {\n    const expr = `(${kConditionCases[t.params.lhs].expr}) || (${\n      kConditionCases[t.params.rhs].expr\n    })`;\n    const val = kConditionCases[t.params.lhs].val || kConditionCases[t.params.rhs].val;\n    t.expectCompileResult(\n      false,\n      kConditionConstants + buildStaticAssert(val ? `!(${expr})` : expr, t.params.scope)\n    );\n  });\n\ng.test('constant_expression_logical_and_no_assert')\n  .desc(\n    `Test that const_assert does not assert on a condition expression that contains a logical-and which evaluates to true`\n  )\n  .params(u =>\n    u\n      .combine('scope', ['module', 'function'] as const)\n      .beginSubcases()\n      .combine('lhs', keysOf(kConditionCases))\n      .combine('rhs', keysOf(kConditionCases))\n  )\n  .fn(t => {\n    const expr = `(${kConditionCases[t.params.lhs].expr}) && (${\n      kConditionCases[t.params.rhs].expr\n    })`;\n    const val = kConditionCases[t.params.lhs].val && kConditionCases[t.params.rhs].val;\n    t.expectCompileResult(\n      true,\n      kConditionConstants + buildStaticAssert(val ? expr : `!(${expr})`, t.params.scope)\n    );\n  });\n\ng.test('constant_expression_logical_and_assert')\n  .desc(\n    `Test that const_assert does assert on a condition expression that contains a logical-and which evaluates to false`\n  )\n  .params(u =>\n    u\n      .combine('scope', ['module', 'function'] as const)\n      .beginSubcases()\n      .combine('lhs', keysOf(kConditionCases))\n      .combine('rhs', keysOf(kConditionCases))\n  )\n  .fn(t => {\n    const expr = `(${kConditionCases[t.params.lhs].expr}) && (${\n      kConditionCases[t.params.rhs].expr\n    })`;\n    const val = kConditionCases[t.params.lhs].val && kConditionCases[t.params.rhs].val;\n    t.expectCompileResult(\n      false,\n      kConditionConstants + buildStaticAssert(val ? `!(${expr})` : expr, t.params.scope)\n    );\n  });\n\ng.test('evaluation_stage')\n  .desc(`Test that the const_assert expression must be a constant expression.`)\n  .params(u =>\n    u\n      .combine('scope', ['module', 'function'] as const)\n      .combine('stage', ['constant', 'override', 'runtime'] as const)\n      .beginSubcases()\n  )\n  .fn(t => {\n    const staticAssert = buildStaticAssert('value', t.params.scope);\n    switch (t.params.stage) {\n      case 'constant':\n        t.expectCompileResult(true, `const value = true;\\n${staticAssert}`);\n        break;\n      case 'override':\n        t.expectCompileResult(false, `override value = true;\\n${staticAssert}`);\n        break;\n      case 'runtime':\n        t.expectCompileResult(false, `var<private> value = true;\\n${staticAssert}`);\n        break;\n    }\n  });\n"],"mappings":"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"}