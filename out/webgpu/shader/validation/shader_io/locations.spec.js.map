{"version":3,"file":"locations.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","generateShader","g","kValidLocationTypes","Set","kInvalidLocationTypes","test","desc","params","u","combine","beginSubcases","fn","t","code","attribute","type","stage","target_stage","io","target_io","use_struct","expectation","expectCompileResult","beforeAllSubcases","startsWith","endsWith","selectDeviceOrSkipTestCase","has","p1","first","p2","second","s1a","s1b","s2a","s2b","ra","rb","firstIsRet","secondIsRet","kValidationTests","zero","src","pass","one","extra_comma","i32","u32","hex","const_expr","max","newline","comment","misspelling","no_parens","empty_params","missing_left_paren","missing_right_paren","extra_params","f32","f32_literal","negative","override_expr","vec","attr","ext"],"sources":["../../../../../src/webgpu/shader/validation/shader_io/locations.spec.ts"],"sourcesContent":["export const description = `Validation tests for entry point user-defined IO`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nimport { generateShader } from './util.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValidLocationTypes = new Set([\n  'f16',\n  'f32',\n  'i32',\n  'u32',\n  'vec2<f32>',\n  'vec2<i32>',\n  'vec2<u32>',\n  'vec3<f32>',\n  'vec3<i32>',\n  'vec3<u32>',\n  'vec4<f32>',\n  'vec4<i32>',\n  'vec4<u32>',\n  'vec2h',\n  'vec2f',\n  'vec2i',\n  'vec2u',\n  'vec3h',\n  'vec3f',\n  'vec3i',\n  'vec3u',\n  'vec4h',\n  'vec4f',\n  'vec4i',\n  'vec4u',\n  'MyAlias',\n]);\n\nconst kInvalidLocationTypes = new Set([\n  'bool',\n  'vec2<bool>',\n  'vec3<bool>',\n  'vec4<bool>',\n  'mat2x2<f32>',\n  'mat2x3<f32>',\n  'mat2x4<f32>',\n  'mat3x2<f32>',\n  'mat3x3<f32>',\n  'mat3x4<f32>',\n  'mat4x2<f32>',\n  'mat4x3<f32>',\n  'mat4x4<f32>',\n  'mat2x2f',\n  'mat2x3f',\n  'mat2x4f',\n  'mat3x2f',\n  'mat3x3f',\n  'mat3x4f',\n  'mat4x2f',\n  'mat4x3f',\n  'mat4x4f',\n  'mat2x2h',\n  'mat2x3h',\n  'mat2x4h',\n  'mat3x2h',\n  'mat3x3h',\n  'mat3x4h',\n  'mat4x2h',\n  'mat4x3h',\n  'mat4x4h',\n  'array<f32, 12>',\n  'array<i32, 12>',\n  'array<u32, 12>',\n  'array<bool, 12>',\n  'atomic<i32>',\n  'atomic<u32>',\n  'MyStruct',\n  'texture_1d<i32>',\n  'texture_2d<f32>',\n  'texture_2d_array<i32>',\n  'texture_3d<f32>',\n  'texture_cube<u32>',\n  'texture_cube_array<i32>',\n  'texture_multisampled_2d<i32>',\n  'texture_external',\n  'texture_storage_1d<rgba8unorm, write>',\n  'texture_storage_2d<rg32float, write>',\n  'texture_storage_2d_array<r32float, write>',\n  'texture_storage_3d<r32float, write>',\n  'texture_depth_2d',\n  'texture_depth_2d_array',\n  'texture_depth_cube',\n  'texture_depth_cube_array',\n  'texture_depth_multisampled_2d',\n  'sampler',\n  'sampler_comparison',\n]);\n\ng.test('stage_inout')\n  .desc(`Test validation of user-defined IO stage and in/out usage`)\n  .params(u =>\n    u\n      .combine('use_struct', [true, false] as const)\n      .combine('target_stage', ['vertex', 'fragment', 'compute'] as const)\n      .combine('target_io', ['in', 'out'] as const)\n      .beginSubcases()\n  )\n  .fn(t => {\n    const code = generateShader({\n      attribute: '@location(0)',\n      type: 'f32',\n      stage: t.params.target_stage,\n      io: t.params.target_io,\n      use_struct: t.params.use_struct,\n    });\n\n    // Expect to fail for compute shaders or when used as a non-struct vertex output (since the\n    // position built-in must also be specified).\n    const expectation =\n      t.params.target_stage === 'fragment' ||\n      (t.params.target_stage === 'vertex' && (t.params.target_io === 'in' || t.params.use_struct));\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('type')\n  .desc(`Test validation of user-defined IO types`)\n  .params(u =>\n    u\n      .combine('use_struct', [true, false] as const)\n      .combine('type', new Set([...kValidLocationTypes, ...kInvalidLocationTypes]))\n      .beginSubcases()\n  )\n  .beforeAllSubcases(t => {\n    if (\n      t.params.type === 'f16' ||\n      ((t.params.type.startsWith('mat') || t.params.type.startsWith('vec')) &&\n        t.params.type.endsWith('h'))\n    ) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    let code = '';\n\n    if (\n      t.params.type === 'f16' ||\n      ((t.params.type.startsWith('mat') || t.params.type.startsWith('vec')) &&\n        t.params.type.endsWith('h'))\n    ) {\n      code += 'enable f16;\\n';\n    }\n\n    if (t.params.type === 'MyStruct') {\n      // Generate a struct that contains a valid type.\n      code += `struct MyStruct {\n                value : f32,\n              }\n              `;\n    }\n    if (t.params.type === 'MyAlias') {\n      code += 'alias MyAlias = i32;\\n';\n    }\n\n    code += generateShader({\n      attribute: '@location(0) @interpolate(flat)',\n      type: t.params.type,\n      stage: 'fragment',\n      io: 'in',\n      use_struct: t.params.use_struct,\n    });\n\n    t.expectCompileResult(kValidLocationTypes.has(t.params.type), code);\n  });\n\ng.test('nesting')\n  .desc(`Test validation of nested user-defined IO`)\n  .params(u =>\n    u\n      .combine('target_stage', ['vertex', 'fragment', ''] as const)\n      .combine('target_io', ['in', 'out'] as const)\n      .beginSubcases()\n  )\n  .fn(t => {\n    let code = '';\n\n    // Generate a struct that contains a valid type.\n    code += `struct Inner {\n               @location(0) value : f32,\n             }\n             struct Outer {\n               inner : Inner,\n             }\n             `;\n\n    code += generateShader({\n      attribute: '',\n      type: 'Outer',\n      stage: t.params.target_stage,\n      io: t.params.target_io,\n      use_struct: false,\n    });\n\n    // Expect to pass only if the struct is not used for entry point IO.\n    t.expectCompileResult(t.params.target_stage === '', code);\n  });\n\ng.test('duplicates')\n  .desc(`Test that duplicated user-defined IO attributes are validated.`)\n  .params(u =>\n    u\n      // Place two @location(0) attributes onto the entry point function.\n      // The function:\n      // - has two non-struct parameters (`p1` and `p2`)\n      // - has two struct parameters each with two members (`s1{a,b}` and `s2{a,b}`)\n      // - returns a struct with two members (`ra` and `rb`)\n      // By default, all of these user-defined IO variables will have unique location attributes.\n      .combine('first', ['p1', 's1a', 's2a', 'ra'] as const)\n      .combine('second', ['p2', 's1b', 's2b', 'rb'] as const)\n      .beginSubcases()\n  )\n  .fn(t => {\n    const p1 = t.params.first === 'p1' ? '0' : '1';\n    const p2 = t.params.second === 'p2' ? '0' : '2';\n    const s1a = t.params.first === 's1a' ? '0' : '3';\n    const s1b = t.params.second === 's1b' ? '0' : '4';\n    const s2a = t.params.first === 's2a' ? '0' : '5';\n    const s2b = t.params.second === 's2b' ? '0' : '6';\n    const ra = t.params.first === 'ra' ? '0' : '1';\n    const rb = t.params.second === 'rb' ? '0' : '2';\n    const code = `\n    struct S1 {\n      @location(${s1a}) a : f32,\n      @location(${s1b}) b : f32,\n    };\n    struct S2 {\n      @location(${s2a}) a : f32,\n      @location(${s2b}) b : f32,\n    };\n    struct R {\n      @location(${ra}) a : f32,\n      @location(${rb}) b : f32,\n    };\n    @fragment\n    fn main(@location(${p1}) p1 : f32,\n            @location(${p2}) p2 : f32,\n            s1 : S1,\n            s2 : S2,\n            ) -> R {\n      return R();\n    }\n    `;\n\n    // The test should fail if both @location(0) attributes are on the input parameters or\n    // structures, or it they are both on the output struct. Otherwise it should pass.\n    const firstIsRet = t.params.first === 'ra';\n    const secondIsRet = t.params.second === 'rb';\n    const expectation = firstIsRet !== secondIsRet;\n    t.expectCompileResult(expectation, code);\n  });\n\nconst kValidationTests = {\n  zero: {\n    src: `@location(0)`,\n    pass: true,\n  },\n  one: {\n    src: `@location(1)`,\n    pass: true,\n  },\n  extra_comma: {\n    src: `@location(1,)`,\n    pass: true,\n  },\n  i32: {\n    src: `@location(1i)`,\n    pass: true,\n  },\n  u32: {\n    src: `@location(1u)`,\n    pass: true,\n  },\n  hex: {\n    src: `@location(0x1)`,\n    pass: true,\n  },\n  const_expr: {\n    src: `@location(a + b)`,\n    pass: true,\n  },\n  max: {\n    src: `@location(2147483647)`,\n    pass: true,\n  },\n  newline: {\n    src: '@\\nlocation(1)',\n    pass: true,\n  },\n  comment: {\n    src: `@/* comment */location(1)`,\n    pass: true,\n  },\n\n  misspelling: {\n    src: `@mlocation(1)`,\n    pass: false,\n  },\n  no_parens: {\n    src: `@location`,\n    pass: false,\n  },\n  empty_params: {\n    src: `@location()`,\n    pass: false,\n  },\n  missing_left_paren: {\n    src: `@location 1)`,\n    pass: false,\n  },\n  missing_right_paren: {\n    src: `@location(1`,\n    pass: false,\n  },\n  extra_params: {\n    src: `@location(1, 2)`,\n    pass: false,\n  },\n  f32: {\n    src: `@location(1f)`,\n    pass: false,\n  },\n  f32_literal: {\n    src: `@location(1.0)`,\n    pass: false,\n  },\n  negative: {\n    src: `@location(-1)`,\n    pass: false,\n  },\n  override_expr: {\n    src: `@location(z + y)`,\n    pass: false,\n  },\n  vec: {\n    src: `@location(vec2(1,1))`,\n    pass: false,\n  },\n};\ng.test('validation')\n  .desc(`Test validation of location`)\n  .params(u => u.combine('attr', keysOf(kValidationTests)))\n  .fn(t => {\n    const code = `\nconst a = 5;\nconst b = 6;\noverride z = 7;\noverride y = 8;\n\n@vertex fn main(\n  ${kValidationTests[t.params.attr].src} res: f32\n) -> @builtin(position) vec4f {\n  return vec4f(0);\n}`;\n    t.expectCompileResult(kValidationTests[t.params.attr].pass, code);\n  });\n\ng.test('location_fp16')\n  .desc(`Test validation of location with fp16`)\n  .params(u => u.combine('ext', ['', 'h']))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(t => {\n    const code = `\n\n@vertex fn main(\n  @location(1${t.params.ext}) res: f32\n) -> @builtin(position) vec4f {\n  return vec4f();\n}`;\n    t.expectCompileResult(t.params.ext === '', code);\n  });\n"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI,kDAAiD,CAE7E,SAASC,aAAa,QAAQ,4CAA4C;AAC1E,SAASC,MAAM,QAAQ,wCAAwC;AAC/D,SAASC,oBAAoB,QAAQ,8BAA8B;;AAEnE,SAASC,cAAc,QAAQ,WAAW;;AAE1C,OAAO,MAAMC,CAAC,GAAGJ,aAAa,CAACE,oBAAoB,CAAC;;AAEpD,MAAMG,mBAAmB,GAAG,IAAIC,GAAG,CAAC;AAClC,KAAK;AACL,KAAK;AACL,KAAK;AACL,KAAK;AACL,WAAW;AACX,WAAW;AACX,WAAW;AACX,WAAW;AACX,WAAW;AACX,WAAW;AACX,WAAW;AACX,WAAW;AACX,WAAW;AACX,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,SAAS;AACV,CAAC;;AAEF,MAAMC,qBAAqB,GAAG,IAAID,GAAG,CAAC;AACpC,MAAM;AACN,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,iBAAiB;AACjB,aAAa;AACb,aAAa;AACb,UAAU;AACV,iBAAiB;AACjB,iBAAiB;AACjB,uBAAuB;AACvB,iBAAiB;AACjB,mBAAmB;AACnB,yBAAyB;AACzB,8BAA8B;AAC9B,kBAAkB;AAClB,uCAAuC;AACvC,sCAAsC;AACtC,2CAA2C;AAC3C,qCAAqC;AACrC,kBAAkB;AAClB,wBAAwB;AACxB,oBAAoB;AACpB,0BAA0B;AAC1B,+BAA+B;AAC/B,SAAS;AACT,oBAAoB;AACrB,CAAC;;AAEFF,CAAC,CAACI,IAAI,CAAC,aAAa,CAAC;AAClBC,IAAI,CAAE,2DAA0D,CAAC;AACjEC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAU,CAAC;AAC7CA,OAAO,CAAC,cAAc,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,SAAS,CAAU,CAAC;AACnEA,OAAO,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,KAAK,CAAU,CAAC;AAC5CC,aAAa,CAAC;AACnB,CAAC;AACAC,EAAE,CAAC,CAAAC,CAAC,KAAI;EACP,MAAMC,IAAI,GAAGb,cAAc,CAAC;IAC1Bc,SAAS,EAAE,cAAc;IACzBC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAEJ,CAAC,CAACL,MAAM,CAACU,YAAY;IAC5BC,EAAE,EAAEN,CAAC,CAACL,MAAM,CAACY,SAAS;IACtBC,UAAU,EAAER,CAAC,CAACL,MAAM,CAACa;EACvB,CAAC,CAAC;;EAEF;EACA;EACA,MAAMC,WAAW;EACfT,CAAC,CAACL,MAAM,CAACU,YAAY,KAAK,UAAU;EACnCL,CAAC,CAACL,MAAM,CAACU,YAAY,KAAK,QAAQ,KAAKL,CAAC,CAACL,MAAM,CAACY,SAAS,KAAK,IAAI,IAAIP,CAAC,CAACL,MAAM,CAACa,UAAU,CAAE;EAC9FR,CAAC,CAACU,mBAAmB,CAACD,WAAW,EAAER,IAAI,CAAC;AAC1C,CAAC,CAAC;;AAEJZ,CAAC,CAACI,IAAI,CAAC,MAAM,CAAC;AACXC,IAAI,CAAE,0CAAyC,CAAC;AAChDC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAU,CAAC;AAC7CA,OAAO,CAAC,MAAM,EAAE,IAAIN,GAAG,CAAC,CAAC,GAAGD,mBAAmB,EAAE,GAAGE,qBAAqB,CAAC,CAAC,CAAC;AAC5EM,aAAa,CAAC;AACnB,CAAC;AACAa,iBAAiB,CAAC,CAAAX,CAAC,KAAI;EACtB;EACEA,CAAC,CAACL,MAAM,CAACQ,IAAI,KAAK,KAAK;EACtB,CAACH,CAAC,CAACL,MAAM,CAACQ,IAAI,CAACS,UAAU,CAAC,KAAK,CAAC,IAAIZ,CAAC,CAACL,MAAM,CAACQ,IAAI,CAACS,UAAU,CAAC,KAAK,CAAC;EAClEZ,CAAC,CAACL,MAAM,CAACQ,IAAI,CAACU,QAAQ,CAAC,GAAG,CAAE;EAC9B;IACAb,CAAC,CAACc,0BAA0B,CAAC,YAAY,CAAC;EAC5C;AACF,CAAC,CAAC;AACDf,EAAE,CAAC,CAAAC,CAAC,KAAI;EACP,IAAIC,IAAI,GAAG,EAAE;;EAEb;EACED,CAAC,CAACL,MAAM,CAACQ,IAAI,KAAK,KAAK;EACtB,CAACH,CAAC,CAACL,MAAM,CAACQ,IAAI,CAACS,UAAU,CAAC,KAAK,CAAC,IAAIZ,CAAC,CAACL,MAAM,CAACQ,IAAI,CAACS,UAAU,CAAC,KAAK,CAAC;EAClEZ,CAAC,CAACL,MAAM,CAACQ,IAAI,CAACU,QAAQ,CAAC,GAAG,CAAE;EAC9B;IACAZ,IAAI,IAAI,eAAe;EACzB;;EAEA,IAAID,CAAC,CAACL,MAAM,CAACQ,IAAI,KAAK,UAAU,EAAE;IAChC;IACAF,IAAI,IAAK;AACf;AACA;AACA,eAAe;EACX;EACA,IAAID,CAAC,CAACL,MAAM,CAACQ,IAAI,KAAK,SAAS,EAAE;IAC/BF,IAAI,IAAI,wBAAwB;EAClC;;EAEAA,IAAI,IAAIb,cAAc,CAAC;IACrBc,SAAS,EAAE,iCAAiC;IAC5CC,IAAI,EAAEH,CAAC,CAACL,MAAM,CAACQ,IAAI;IACnBC,KAAK,EAAE,UAAU;IACjBE,EAAE,EAAE,IAAI;IACRE,UAAU,EAAER,CAAC,CAACL,MAAM,CAACa;EACvB,CAAC,CAAC;;EAEFR,CAAC,CAACU,mBAAmB,CAACpB,mBAAmB,CAACyB,GAAG,CAACf,CAAC,CAACL,MAAM,CAACQ,IAAI,CAAC,EAAEF,IAAI,CAAC;AACrE,CAAC,CAAC;;AAEJZ,CAAC,CAACI,IAAI,CAAC,SAAS,CAAC;AACdC,IAAI,CAAE,2CAA0C,CAAC;AACjDC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,cAAc,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,EAAE,CAAU,CAAC;AAC5DA,OAAO,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,KAAK,CAAU,CAAC;AAC5CC,aAAa,CAAC;AACnB,CAAC;AACAC,EAAE,CAAC,CAAAC,CAAC,KAAI;EACP,IAAIC,IAAI,GAAG,EAAE;;EAEb;EACAA,IAAI,IAAK;AACb;AACA;AACA;AACA;AACA;AACA,cAAc;;EAEVA,IAAI,IAAIb,cAAc,CAAC;IACrBc,SAAS,EAAE,EAAE;IACbC,IAAI,EAAE,OAAO;IACbC,KAAK,EAAEJ,CAAC,CAACL,MAAM,CAACU,YAAY;IAC5BC,EAAE,EAAEN,CAAC,CAACL,MAAM,CAACY,SAAS;IACtBC,UAAU,EAAE;EACd,CAAC,CAAC;;EAEF;EACAR,CAAC,CAACU,mBAAmB,CAACV,CAAC,CAACL,MAAM,CAACU,YAAY,KAAK,EAAE,EAAEJ,IAAI,CAAC;AAC3D,CAAC,CAAC;;AAEJZ,CAAC,CAACI,IAAI,CAAC,YAAY,CAAC;AACjBC,IAAI,CAAE,gEAA+D,CAAC;AACtEC,MAAM,CAAC,CAAAC,CAAC;AACPA;AACE;AACA;AACA;AACA;AACA;AACA;AAAA,CACCC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAU,CAAC;AACrDA,OAAO,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAU,CAAC;AACtDC,aAAa,CAAC;AACnB,CAAC;AACAC,EAAE,CAAC,CAAAC,CAAC,KAAI;EACP,MAAMgB,EAAE,GAAGhB,CAAC,CAACL,MAAM,CAACsB,KAAK,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG;EAC9C,MAAMC,EAAE,GAAGlB,CAAC,CAACL,MAAM,CAACwB,MAAM,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG;EAC/C,MAAMC,GAAG,GAAGpB,CAAC,CAACL,MAAM,CAACsB,KAAK,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG;EAChD,MAAMI,GAAG,GAAGrB,CAAC,CAACL,MAAM,CAACwB,MAAM,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG;EACjD,MAAMG,GAAG,GAAGtB,CAAC,CAACL,MAAM,CAACsB,KAAK,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG;EAChD,MAAMM,GAAG,GAAGvB,CAAC,CAACL,MAAM,CAACwB,MAAM,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG;EACjD,MAAMK,EAAE,GAAGxB,CAAC,CAACL,MAAM,CAACsB,KAAK,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG;EAC9C,MAAMQ,EAAE,GAAGzB,CAAC,CAACL,MAAM,CAACwB,MAAM,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG;EAC/C,MAAMlB,IAAI,GAAI;AAClB;AACA,kBAAkBmB,GAAI;AACtB,kBAAkBC,GAAI;AACtB;AACA;AACA,kBAAkBC,GAAI;AACtB,kBAAkBC,GAAI;AACtB;AACA;AACA,kBAAkBC,EAAG;AACrB,kBAAkBC,EAAG;AACrB;AACA;AACA,wBAAwBT,EAAG;AAC3B,wBAAwBE,EAAG;AAC3B;AACA;AACA;AACA;AACA;AACA,KAAK;;EAED;EACA;EACA,MAAMQ,UAAU,GAAG1B,CAAC,CAACL,MAAM,CAACsB,KAAK,KAAK,IAAI;EAC1C,MAAMU,WAAW,GAAG3B,CAAC,CAACL,MAAM,CAACwB,MAAM,KAAK,IAAI;EAC5C,MAAMV,WAAW,GAAGiB,UAAU,KAAKC,WAAW;EAC9C3B,CAAC,CAACU,mBAAmB,CAACD,WAAW,EAAER,IAAI,CAAC;AAC1C,CAAC,CAAC;;AAEJ,MAAM2B,gBAAgB,GAAG;EACvBC,IAAI,EAAE;IACJC,GAAG,EAAG,cAAa;IACnBC,IAAI,EAAE;EACR,CAAC;EACDC,GAAG,EAAE;IACHF,GAAG,EAAG,cAAa;IACnBC,IAAI,EAAE;EACR,CAAC;EACDE,WAAW,EAAE;IACXH,GAAG,EAAG,eAAc;IACpBC,IAAI,EAAE;EACR,CAAC;EACDG,GAAG,EAAE;IACHJ,GAAG,EAAG,eAAc;IACpBC,IAAI,EAAE;EACR,CAAC;EACDI,GAAG,EAAE;IACHL,GAAG,EAAG,eAAc;IACpBC,IAAI,EAAE;EACR,CAAC;EACDK,GAAG,EAAE;IACHN,GAAG,EAAG,gBAAe;IACrBC,IAAI,EAAE;EACR,CAAC;EACDM,UAAU,EAAE;IACVP,GAAG,EAAG,kBAAiB;IACvBC,IAAI,EAAE;EACR,CAAC;EACDO,GAAG,EAAE;IACHR,GAAG,EAAG,uBAAsB;IAC5BC,IAAI,EAAE;EACR,CAAC;EACDQ,OAAO,EAAE;IACPT,GAAG,EAAE,gBAAgB;IACrBC,IAAI,EAAE;EACR,CAAC;EACDS,OAAO,EAAE;IACPV,GAAG,EAAG,2BAA0B;IAChCC,IAAI,EAAE;EACR,CAAC;;EAEDU,WAAW,EAAE;IACXX,GAAG,EAAG,eAAc;IACpBC,IAAI,EAAE;EACR,CAAC;EACDW,SAAS,EAAE;IACTZ,GAAG,EAAG,WAAU;IAChBC,IAAI,EAAE;EACR,CAAC;EACDY,YAAY,EAAE;IACZb,GAAG,EAAG,aAAY;IAClBC,IAAI,EAAE;EACR,CAAC;EACDa,kBAAkB,EAAE;IAClBd,GAAG,EAAG,cAAa;IACnBC,IAAI,EAAE;EACR,CAAC;EACDc,mBAAmB,EAAE;IACnBf,GAAG,EAAG,aAAY;IAClBC,IAAI,EAAE;EACR,CAAC;EACDe,YAAY,EAAE;IACZhB,GAAG,EAAG,iBAAgB;IACtBC,IAAI,EAAE;EACR,CAAC;EACDgB,GAAG,EAAE;IACHjB,GAAG,EAAG,eAAc;IACpBC,IAAI,EAAE;EACR,CAAC;EACDiB,WAAW,EAAE;IACXlB,GAAG,EAAG,gBAAe;IACrBC,IAAI,EAAE;EACR,CAAC;EACDkB,QAAQ,EAAE;IACRnB,GAAG,EAAG,eAAc;IACpBC,IAAI,EAAE;EACR,CAAC;EACDmB,aAAa,EAAE;IACbpB,GAAG,EAAG,kBAAiB;IACvBC,IAAI,EAAE;EACR,CAAC;EACDoB,GAAG,EAAE;IACHrB,GAAG,EAAG,sBAAqB;IAC3BC,IAAI,EAAE;EACR;AACF,CAAC;AACD1C,CAAC,CAACI,IAAI,CAAC,YAAY,CAAC;AACjBC,IAAI,CAAE,6BAA4B,CAAC;AACnCC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,MAAM,EAAEX,MAAM,CAAC0C,gBAAgB,CAAC,CAAC,CAAC;AACxD7B,EAAE,CAAC,CAAAC,CAAC,KAAI;EACP,MAAMC,IAAI,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI2B,gBAAgB,CAAC5B,CAAC,CAACL,MAAM,CAACyD,IAAI,CAAC,CAACtB,GAAI;AACxC;AACA;AACA,EAAE;EACE9B,CAAC,CAACU,mBAAmB,CAACkB,gBAAgB,CAAC5B,CAAC,CAACL,MAAM,CAACyD,IAAI,CAAC,CAACrB,IAAI,EAAE9B,IAAI,CAAC;AACnE,CAAC,CAAC;;AAEJZ,CAAC,CAACI,IAAI,CAAC,eAAe,CAAC;AACpBC,IAAI,CAAE,uCAAsC,CAAC;AAC7CC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;AACxCc,iBAAiB,CAAC,CAAAX,CAAC,KAAI;EACtBA,CAAC,CAACc,0BAA0B,CAAC,YAAY,CAAC;AAC5C,CAAC,CAAC;AACDf,EAAE,CAAC,CAAAC,CAAC,KAAI;EACP,MAAMC,IAAI,GAAI;AAClB;AACA;AACA,eAAeD,CAAC,CAACL,MAAM,CAAC0D,GAAI;AAC5B;AACA;AACA,EAAE;EACErD,CAAC,CAACU,mBAAmB,CAACV,CAAC,CAACL,MAAM,CAAC0D,GAAG,KAAK,EAAE,EAAEpD,IAAI,CAAC;AAClD,CAAC,CAAC"}