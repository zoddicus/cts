{"version":3,"file":"builtins.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","generateShader","g","kBuiltins","name","stage","io","type","kTestTypes","test","desc","params","u","combineWithParams","combine","beginSubcases","beforeAllSubcases","t","skipIf","isCompatibility","includes","fn","code","attribute","target_stage","target_io","use_struct","expectation","some","x","expectCompileResult","target_type","p1","first","p2","second","s1a","s1b","s2a","s2b","ra","rb","firstIsRet","secondIsRet","use","kTests","pos","src","pass","trailing_comma","newline_in_attr","whitespace_in_attr","invalid_name","no_params","missing_param","missing_parens","missing_lparen","missing_rparen","multiple_params","ident_param","number_param","duplicate","builtin","undefined","scope","attr"],"sources":["../../../../../src/webgpu/shader/validation/shader_io/builtins.spec.ts"],"sourcesContent":["export const description = `Validation tests for entry point built-in variables`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nimport { generateShader } from './util.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\n// List of all built-in variables and their stage, in|out usage, and type.\n// Taken from table in Section 15:\n// https://www.w3.org/TR/2021/WD-WGSL-20211013/#builtin-variables\nexport const kBuiltins = [\n  { name: 'vertex_index', stage: 'vertex', io: 'in', type: 'u32' },\n  { name: 'instance_index', stage: 'vertex', io: 'in', type: 'u32' },\n  { name: 'position', stage: 'vertex', io: 'out', type: 'vec4<f32>' },\n  { name: 'position', stage: 'fragment', io: 'in', type: 'vec4<f32>' },\n  { name: 'front_facing', stage: 'fragment', io: 'in', type: 'bool' },\n  { name: 'frag_depth', stage: 'fragment', io: 'out', type: 'f32' },\n  { name: 'local_invocation_id', stage: 'compute', io: 'in', type: 'vec3<u32>' },\n  { name: 'local_invocation_index', stage: 'compute', io: 'in', type: 'u32' },\n  { name: 'global_invocation_id', stage: 'compute', io: 'in', type: 'vec3<u32>' },\n  { name: 'workgroup_id', stage: 'compute', io: 'in', type: 'vec3<u32>' },\n  { name: 'num_workgroups', stage: 'compute', io: 'in', type: 'vec3<u32>' },\n  { name: 'sample_index', stage: 'fragment', io: 'in', type: 'u32' },\n  { name: 'sample_mask', stage: 'fragment', io: 'in', type: 'u32' },\n  { name: 'sample_mask', stage: 'fragment', io: 'out', type: 'u32' },\n] as const;\n\n// List of types to test against.\nconst kTestTypes = [\n  'bool',\n  'u32',\n  'i32',\n  'f32',\n  'vec2<bool>',\n  'vec2<u32>',\n  'vec2<i32>',\n  'vec2<f32>',\n  'vec3<bool>',\n  'vec3<u32>',\n  'vec3<i32>',\n  'vec3<f32>',\n  'vec4<bool>',\n  'vec4<u32>',\n  'vec4<i32>',\n  'vec4<f32>',\n  'mat2x2<f32>',\n  'mat2x3<f32>',\n  'mat2x4<f32>',\n  'mat3x2<f32>',\n  'mat3x3<f32>',\n  'mat3x4<f32>',\n  'mat4x2<f32>',\n  'mat4x3<f32>',\n  'mat4x4<f32>',\n  'atomic<u32>',\n  'atomic<i32>',\n  'array<bool,4>',\n  'array<u32,4>',\n  'array<i32,4>',\n  'array<f32,4>',\n  'MyStruct',\n] as const;\n\ng.test('stage_inout')\n  .desc(\n    `Test that each @builtin attribute is validated against the required stage and in/out usage for that built-in variable.`\n  )\n  .params(u =>\n    u\n      .combineWithParams(kBuiltins)\n      .combine('use_struct', [true, false] as const)\n      .combine('target_stage', ['', 'vertex', 'fragment', 'compute'] as const)\n      .combine('target_io', ['in', 'out'] as const)\n      .beginSubcases()\n  )\n  .beforeAllSubcases(t => {\n    t.skipIf(\n      t.isCompatibility && ['sample_index', 'sample_mask'].includes(t.params.name),\n      'compatibility mode does not support sample_index or sample_mask'\n    );\n  })\n  .fn(t => {\n    const code = generateShader({\n      attribute: `@builtin(${t.params.name})`,\n      type: t.params.type,\n      stage: t.params.target_stage,\n      io: t.params.target_io,\n      use_struct: t.params.use_struct,\n    });\n\n    // Expect to pass iff the built-in table contains an entry that matches.\n    const expectation = kBuiltins.some(\n      x =>\n        x.name === t.params.name &&\n        (x.stage === t.params.target_stage ||\n          (t.params.use_struct && t.params.target_stage === '')) &&\n        (x.io === t.params.target_io || t.params.target_stage === '') &&\n        x.type === t.params.type\n    );\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('type')\n  .desc(\n    `Test that each @builtin attribute is validated against the required type of that built-in variable.`\n  )\n  .params(u =>\n    u\n      .combineWithParams(kBuiltins)\n      .beginSubcases()\n      .combine('target_type', kTestTypes)\n      .combine('use_struct', [true, false] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.skipIf(\n      t.isCompatibility && ['sample_index', 'sample_mask'].includes(t.params.name),\n      'compatibility mode does not support sample_index or sample_mask'\n    );\n  })\n  .fn(t => {\n    let code = '';\n\n    if (t.params.target_type === 'MyStruct') {\n      // Generate a struct that contains the correct built-in type.\n      code += 'struct MyStruct {\\n';\n      code += `  value : ${t.params.type}\\n`;\n      code += '};\\n\\n';\n    }\n\n    code += generateShader({\n      attribute: `@builtin(${t.params.name})`,\n      type: t.params.target_type,\n      stage: t.params.stage,\n      io: t.params.io,\n      use_struct: t.params.use_struct,\n    });\n\n    // Expect to pass iff the built-in table contains an entry that matches.\n    const expectation = kBuiltins.some(\n      x =>\n        x.name === t.params.name &&\n        x.stage === t.params.stage &&\n        x.io === t.params.io &&\n        x.type === t.params.target_type\n    );\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('nesting')\n  .desc(`Test validation of nested built-in variables`)\n  .params(u =>\n    u\n      .combine('target_stage', ['fragment', ''] as const)\n      .combine('target_io', ['in', 'out'] as const)\n      .beginSubcases()\n  )\n  .fn(t => {\n    // Generate a struct that contains a frag_depth builtin, nested inside another struct.\n    let code = `\n    struct Inner {\n      @builtin(frag_depth) value : f32\n    };\n    struct Outer {\n      inner : Inner\n    };`;\n\n    code += generateShader({\n      attribute: '',\n      type: 'Outer',\n      stage: t.params.target_stage,\n      io: t.params.target_io,\n      use_struct: false,\n    });\n\n    // Expect to pass only if the struct is not used for entry point IO.\n    t.expectCompileResult(t.params.target_stage === '', code);\n  });\n\ng.test('duplicates')\n  .desc(`Test that duplicated built-in variables are validated.`)\n  .params(u =>\n    u\n      // Place two @builtin(sample_mask) attributes onto the entry point function.\n      // We use `sample_mask` as it is valid as both an input and output for the same entry point.\n      // The function:\n      // - has two non-struct parameters (`p1` and `p2`)\n      // - has two struct parameters each with two members (`s1{a,b}` and `s2{a,b}`)\n      // - returns a struct with two members (`ra` and `rb`)\n      // By default, all of these variables will have unique @location() attributes.\n      .combine('first', ['p1', 's1a', 's2a', 'ra'] as const)\n      .combine('second', ['p2', 's1b', 's2b', 'rb'] as const)\n      .beginSubcases()\n  )\n  .beforeAllSubcases(t => {\n    t.skipIf(t.isCompatibility, 'compatibility mode does not support sample_mask');\n  })\n  .fn(t => {\n    const p1 =\n      t.params.first === 'p1' ? '@builtin(sample_mask)' : '@location(1) @interpolate(flat)';\n    const p2 =\n      t.params.second === 'p2' ? '@builtin(sample_mask)' : '@location(2) @interpolate(flat)';\n    const s1a =\n      t.params.first === 's1a' ? '@builtin(sample_mask)' : '@location(3) @interpolate(flat)';\n    const s1b =\n      t.params.second === 's1b' ? '@builtin(sample_mask)' : '@location(4) @interpolate(flat)';\n    const s2a =\n      t.params.first === 's2a' ? '@builtin(sample_mask)' : '@location(5) @interpolate(flat)';\n    const s2b =\n      t.params.second === 's2b' ? '@builtin(sample_mask)' : '@location(6) @interpolate(flat)';\n    const ra =\n      t.params.first === 'ra' ? '@builtin(sample_mask)' : '@location(1) @interpolate(flat)';\n    const rb =\n      t.params.second === 'rb' ? '@builtin(sample_mask)' : '@location(2) @interpolate(flat)';\n    const code = `\n    struct S1 {\n      ${s1a} a : u32,\n      ${s1b} b : u32,\n    };\n    struct S2 {\n      ${s2a} a : u32,\n      ${s2b} b : u32,\n    };\n    struct R {\n      ${ra} a : u32,\n      ${rb} b : u32,\n    };\n    @fragment\n    fn main(${p1} p1 : u32,\n            ${p2} p2 : u32,\n            s1 : S1,\n            s2 : S2,\n            ) -> R {\n      return R();\n    }\n    `;\n\n    // The test should fail if both @builtin(sample_mask) attributes are on the input parameters\n    // or structures, or it they are both on the output struct. Otherwise it should pass.\n    const firstIsRet = t.params.first === 'ra';\n    const secondIsRet = t.params.second === 'rb';\n    const expectation = firstIsRet !== secondIsRet;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('missing_vertex_position')\n  .desc(`Test that vertex shaders are required to output @builtin(position).`)\n  .params(u =>\n    u\n      .combine('use_struct', [true, false] as const)\n      .combine('attribute', ['@builtin(position)', '@location(0)'] as const)\n      .beginSubcases()\n  )\n  .fn(t => {\n    const code = `\n    struct S {\n      ${t.params.attribute} value : vec4<f32>\n    };\n\n    @vertex\n    fn main() -> ${t.params.use_struct ? 'S' : `${t.params.attribute} vec4<f32>`} {\n      return ${t.params.use_struct ? 'S' : 'vec4<f32>'}();\n    }\n    `;\n\n    // Expect to pass only when using @builtin(position).\n    t.expectCompileResult(t.params.attribute === '@builtin(position)', code);\n  });\n\ng.test('reuse_builtin_name')\n  .desc(`Test that a builtin name can be used in different contexts`)\n  .params(u =>\n    u\n      .combineWithParams(kBuiltins)\n      .combine('use', ['alias', 'struct', 'function', 'module-var', 'function-var'])\n  )\n  .fn(t => {\n    let code = '';\n    if (t.params.use === 'alias') {\n      code += `alias ${t.params.name} = i32;`;\n    } else if (t.params.use === `struct`) {\n      code += `struct ${t.params.name} { i: f32, }`;\n    } else if (t.params.use === `function`) {\n      code += `fn ${t.params.name}() {}`;\n    } else if (t.params.use === `module-var`) {\n      code += `const ${t.params.name} = 1;`;\n    } else if (t.params.use === `function-var`) {\n      code += `fn test() { let ${t.params.name} = 1; }`;\n    }\n    t.expectCompileResult(true, code);\n  });\n\nconst kTests = {\n  pos: {\n    src: `@builtin(position)`,\n    pass: true,\n  },\n  trailing_comma: {\n    src: `@builtin(position,)`,\n    pass: true,\n  },\n  newline_in_attr: {\n    src: `@ \\n builtin(position)`,\n    pass: true,\n  },\n  whitespace_in_attr: {\n    src: `@/* comment */builtin/* comment */\\n\\n(\\t/*comment*/position/*comment*/)`,\n    pass: true,\n  },\n  invalid_name: {\n    src: `@abuiltin(position)`,\n    pass: false,\n  },\n  no_params: {\n    src: `@builtin`,\n    pass: false,\n  },\n  missing_param: {\n    src: `@builtin()`,\n    pass: false,\n  },\n  missing_parens: {\n    src: `@builtin position`,\n    pass: false,\n  },\n  missing_lparen: {\n    src: `@builtin position)`,\n    pass: false,\n  },\n  missing_rparen: {\n    src: `@builtin(position`,\n    pass: false,\n  },\n  multiple_params: {\n    src: `@builtin(position, frag_depth)`,\n    pass: false,\n  },\n  ident_param: {\n    src: `@builtin(identifier)`,\n    pass: false,\n  },\n  number_param: {\n    src: `@builtin(2)`,\n    pass: false,\n  },\n  duplicate: {\n    src: `@builtin(position) @builtin(position)`,\n    pass: false,\n  },\n};\n\ng.test('parse')\n  .desc(`Test that @builtin is parsed correctly.`)\n  .params(u => u.combine('builtin', keysOf(kTests)))\n  .fn(t => {\n    const src = kTests[t.params.builtin].src;\n    const code = `\n@vertex\nfn main() -> ${src} vec4<f32> {\n  return vec4<f32>(.4, .2, .3, .1);\n}`;\n    t.expectCompileResult(kTests[t.params.builtin].pass, code);\n  });\n\ng.test('placement')\n  .desc('Tests the locations @builtin is allowed to appear')\n  .params(u =>\n    u\n      .combine('scope', [\n        // The fn-param and fn-ret are part of the shader_io/builtins tests\n        'private-var',\n        'storage-var',\n        'struct-member',\n        'non-ep-param',\n        'non-ep-ret',\n        'fn-decl',\n        'fn-var',\n        'while-stmt',\n        undefined,\n      ] as const)\n      .combine('attribute', [\n        {\n          'private-var': false,\n          'storage-var': false,\n          'struct-member': true,\n          'non-ep-param': false,\n          'non-ep-ret': false,\n          'fn-decl': false,\n          'fn-var': false,\n          'fn-return': false,\n          'while-stmt': false,\n        },\n      ])\n      .beginSubcases()\n  )\n  .fn(t => {\n    const scope = t.params.scope;\n\n    const attr = '@builtin(vertex_index)';\n    const code = `\n      ${scope === 'private-var' ? attr : ''}\n      var<private> priv_var : u32;\n\n      ${scope === 'storage-var' ? attr : ''}\n      @group(0) @binding(0)\n      var<storage> stor_var : u32;\n\n      struct A {\n        ${scope === 'struct-member' ? attr : ''}\n        a : u32,\n      }\n\n      fn v(${scope === 'non-ep-param' ? attr : ''} i : u32) ->\n            ${scope === 'non-ep-ret' ? attr : ''} u32 { return 1; }\n\n      @vertex\n      ${scope === 'fn-decl' ? attr : ''}\n      fn f(\n        @location(0) b : u32,\n      ) -> @builtin(position) vec4f {\n        ${scope === 'fn-var' ? attr : ''}\n        var<function> func_v : u32;\n\n        ${scope === 'while-stmt' ? attr : ''}\n        while false {}\n\n        return vec4(1, 1, 1, 1);\n      }\n    `;\n\n    t.expectCompileResult(scope === undefined || t.params.attribute[scope], code);\n  });\n"],"mappings":"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"}