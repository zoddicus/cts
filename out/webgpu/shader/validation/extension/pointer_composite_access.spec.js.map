{"version":3,"file":"pointer_composite_access.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","makeSource","module","init_expr","pointer_read_expr","kCases","array_index_access_via_identifier","via_deref","via_pointer","vector_index_access_via_identifier","vector_member_access_via_identifier","matrix_index_access_via_identifier","struct_member_access_via_identifier","builtin_struct_modf_via_identifier","builtin_struct_frexp_via_identifier","array_index_access_via_pointer","vector_index_access_via_pointer","vector_member_access_via_pointer","matrix_index_access_via_pointer","struct_member_access_via_pointer","builtin_struct_modf_via_pointer","builtin_struct_frexp_via_pointer","test","desc","params","u","combine","fn","t","curr","case","source","expectCompileResult","should_pass","hasLanguageFeature"],"sources":["../../../../../src/webgpu/shader/validation/extension/pointer_composite_access.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for pointer_composite_access extension\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nfunction makeSource(module: string, init_expr: string, pointer_read_expr: string) {\n  return `\n    ${module}\n    fn f() {\n        var a = ${init_expr};\n        let p = &a;\n        let r = ${pointer_read_expr};\n    }`;\n}\n\nconst kCases = {\n  // Via identifier 'a'\n  array_index_access_via_identifier: {\n    module: '',\n    init_expr: 'array<i32, 3>()',\n    via_deref: '(*(&a))[0]',\n    via_pointer: '(&a)[0]',\n  },\n  vector_index_access_via_identifier: {\n    module: '',\n    init_expr: 'vec3<i32>()',\n    via_deref: '(*(&a))[0]',\n    via_pointer: '(&a)[0]',\n  },\n  vector_member_access_via_identifier: {\n    module: '',\n    init_expr: 'vec3<i32>()',\n    via_deref: '(*(&a)).x',\n    via_pointer: '(&a).x',\n  },\n  matrix_index_access_via_identifier: {\n    module: '',\n    init_expr: 'mat2x3<f32>()',\n    via_deref: '(*(&a))[0]',\n    via_pointer: '(&a)[0]',\n  },\n  struct_member_access_via_identifier: {\n    module: 'struct S { a : i32, }',\n    init_expr: 'S()',\n    via_deref: '(*(&a)).a',\n    via_pointer: '(&a).a',\n  },\n  builtin_struct_modf_via_identifier: {\n    module: '',\n    init_expr: 'modf(1.5)',\n    via_deref: 'vec2((*(&a)).fract, (*(&a)).whole)',\n    via_pointer: 'vec2((&a).fract, (&a).whole)',\n  },\n  builtin_struct_frexp_via_identifier: {\n    module: '',\n    init_expr: 'frexp(1.5)',\n    via_deref: 'vec2((*(&a)).fract, f32((*(&a)).exp))',\n    via_pointer: 'vec2((&a).fract, f32((&a).exp))',\n  },\n\n  // Via pointer 'p'\n  array_index_access_via_pointer: {\n    module: '',\n    init_expr: 'array<i32, 3>()',\n    via_deref: '(*p)[0]',\n    via_pointer: 'p[0]',\n  },\n  vector_index_access_via_pointer: {\n    module: '',\n    init_expr: 'vec3<i32>()',\n    via_deref: '(*p)[0]',\n    via_pointer: 'p[0]',\n  },\n  vector_member_access_via_pointer: {\n    module: '',\n    init_expr: 'vec3<i32>()',\n    via_deref: '(*p).x',\n    via_pointer: 'p.x',\n  },\n  matrix_index_access_via_pointer: {\n    module: '',\n    init_expr: 'mat2x3<f32>()',\n    via_deref: '(*p)[0]',\n    via_pointer: 'p[0]',\n  },\n  struct_member_access_via_pointer: {\n    module: 'struct S { a : i32, }',\n    init_expr: 'S()',\n    via_deref: '(*p).a',\n    via_pointer: 'p.a',\n  },\n  builtin_struct_modf_via_pointer: {\n    module: '',\n    init_expr: 'modf(1.5)',\n    via_deref: 'vec2((*p).fract, (*p).whole)',\n    via_pointer: 'vec2(p.fract, p.whole)',\n  },\n  builtin_struct_frexp_via_pointer: {\n    module: '',\n    init_expr: 'frexp(1.5)',\n    via_deref: 'vec2((*p).fract, f32((*p).exp))',\n    via_pointer: 'vec2(p.fract, f32(p.exp))',\n  },\n};\n\ng.test('deref')\n  .desc('Baseline test: pointer deref is always valid')\n  .params(u => u.combine('case', keysOf(kCases)))\n  .fn(t => {\n    const curr = kCases[t.params.case];\n    const source = makeSource(curr.module, curr.init_expr, curr.via_deref);\n    t.expectCompileResult(true, source);\n  });\n\ng.test('pointer')\n  .desc(\n    'Tests that direct pointer access is valid if pointer_composite_access is supported, else it should fail'\n  )\n  .params(u => u.combine('case', keysOf(kCases)))\n  .fn(t => {\n    const curr = kCases[t.params.case];\n    const source = makeSource(curr.module, curr.init_expr, curr.via_pointer);\n    const should_pass = t.hasLanguageFeature('pointer_composite_access');\n    t.expectCompileResult(should_pass, source);\n  });\n"],"mappings":"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"}