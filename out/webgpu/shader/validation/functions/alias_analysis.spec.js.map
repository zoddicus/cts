{"version":3,"file":"alias_analysis.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kUses","no_access","is_write","gen","ref","assign","compound_assign_lhs","compound_assign_rhs","increment","binary_lhs","binary_rhs","unary_minus","bitcast","convert","builtin_arg","index_access","let_init","var_init","return","switch_cond","shouldPass","aliased","uses","some","u","includes","test","desc","params","combine","beginSubcases","fn","t","code","address_space","a_use","b_use","expectCompileResult"],"sources":["../../../../../src/webgpu/shader/validation/functions/alias_analysis.spec.ts"],"sourcesContent":["export const description = `Validation tests for function alias analysis`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\ninterface Use {\n  is_write: boolean;\n  gen: (ref: string) => string;\n}\n\nconst kUses: Record<string, Use> = {\n  no_access: { is_write: false, gen: ref => `{ let p = &*&${ref}; }` },\n  assign: { is_write: true, gen: ref => `${ref} = 42;` },\n  compound_assign_lhs: { is_write: true, gen: ref => `${ref} += 1;` },\n  compound_assign_rhs: { is_write: false, gen: ref => `{ var tmp : i32; tmp += ${ref}; }` },\n  increment: { is_write: true, gen: ref => `${ref}++;` },\n  binary_lhs: { is_write: false, gen: ref => `_ = ${ref} + 1;` },\n  binary_rhs: { is_write: false, gen: ref => `_ = 1 + ${ref};` },\n  unary_minus: { is_write: false, gen: ref => `_ = -${ref};` },\n  bitcast: { is_write: false, gen: ref => `_ = bitcast<f32>(${ref});` },\n  convert: { is_write: false, gen: ref => `_ = f32(${ref});` },\n  builtin_arg: { is_write: false, gen: ref => `_ = abs(${ref});` },\n  index_access: { is_write: false, gen: ref => `{ var arr : array<i32, 4>; _ = arr[${ref}]; }` },\n  let_init: { is_write: false, gen: ref => `{ let tmp = ${ref}; }` },\n  var_init: { is_write: false, gen: ref => `{ var tmp = ${ref}; }` },\n  return: { is_write: false, gen: ref => `{ return ${ref}; }` },\n  switch_cond: { is_write: false, gen: ref => `switch(${ref}) { default { break; } }` },\n};\n\ntype UseName = keyof typeof kUses;\n\nfunction shouldPass(aliased: boolean, ...uses: UseName[]): boolean {\n  // Expect fail if the pointers are aliased and at least one of the accesses is a write.\n  // If either of the accesses is a \"no access\" then expect pass.\n  return !aliased || !uses.some(u => kUses[u].is_write) || uses.includes('no_access');\n}\n\ng.test('two_pointers')\n  .desc(`Test aliasing of two pointers passed to a function.`)\n  .params(u =>\n    u\n      .combine('address_space', ['private', 'function'] as const)\n      .combine('a_use', keysOf(kUses))\n      .combine('b_use', keysOf(kUses))\n      .combine('aliased', [true, false])\n      .beginSubcases()\n  )\n  .fn(t => {\n    const code = `\n${t.params.address_space === 'private' ? `var<private> x : i32; var<private> y : i32;` : ``}\n\nfn callee(pa : ptr<${t.params.address_space}, i32>,\n          pb : ptr<${t.params.address_space}, i32>) -> i32 {\n  ${kUses[t.params.a_use].gen(`*pa`)}\n  ${kUses[t.params.b_use].gen(`*pb`)}\n  return 0;\n}\n\nfn caller() {\n  ${t.params.address_space === 'function' ? `var x : i32; var y : i32;` : ``}\n  callee(&x, ${t.params.aliased ? `&x` : `&y`});\n}\n`;\n    t.expectCompileResult(shouldPass(t.params.aliased, t.params.a_use, t.params.b_use), code);\n  });\n\ng.test('one_pointer_one_module_scope')\n  .desc(`Test aliasing of a pointer with a direct access to a module-scope variable.`)\n  .params(u =>\n    u\n      .combine('a_use', keysOf(kUses))\n      .combine('b_use', keysOf(kUses))\n      .combine('aliased', [true, false])\n      .beginSubcases()\n  )\n  .fn(t => {\n    const code = `\nvar<private> x : i32;\nvar<private> y : i32;\n\nfn callee(pb : ptr<private, i32>) -> i32 {\n  ${kUses[t.params.a_use].gen(`x`)}\n  ${kUses[t.params.b_use].gen(`*pb`)}\n  return 0;\n}\n\nfn caller() {\n  callee(${t.params.aliased ? `&x` : `&y`});\n}\n`;\n    t.expectCompileResult(shouldPass(t.params.aliased, t.params.a_use, t.params.b_use), code);\n  });\n\ng.test('subcalls')\n  .desc(`Test aliasing of two pointers passed to a function, and then passed to other functions.`)\n  .params(u =>\n    u\n      .combine('a_use', ['no_access', 'assign', 'binary_lhs'] as UseName[])\n      .combine('b_use', ['no_access', 'assign', 'binary_lhs'] as UseName[])\n      .combine('aliased', [true, false])\n      .beginSubcases()\n  )\n  .fn(t => {\n    const code = `\nvar<private> x : i32;\nvar<private> y : i32;\n\nfn subcall_no_access(p : ptr<private, i32>) {\n  let pp = &*p;\n}\n\nfn subcall_binary_lhs(p : ptr<private, i32>) -> i32 {\n  return *p + 1;\n}\n\nfn subcall_assign(p : ptr<private, i32>) {\n  *p = 42;\n}\n\nfn callee(pa : ptr<private, i32>, pb : ptr<private, i32>) -> i32 {\n  let new_pa = &*pa;\n  let new_pb = &*pb;\n  subcall_${t.params.a_use}(new_pa);\n  subcall_${t.params.b_use}(new_pb);\n  return 0;\n}\n\nfn caller() {\n  callee(&x, ${t.params.aliased ? `&x` : `&y`});\n}\n`;\n    t.expectCompileResult(shouldPass(t.params.aliased, t.params.a_use, t.params.b_use), code);\n  });\n\ng.test('member_accessors')\n  .desc(`Test aliasing of two pointers passed to a function and used with member accessors.`)\n  .params(u =>\n    u\n      .combine('a_use', ['no_access', 'assign', 'binary_lhs'] as UseName[])\n      .combine('b_use', ['no_access', 'assign', 'binary_lhs'] as UseName[])\n      .combine('aliased', [true, false])\n      .beginSubcases()\n  )\n  .fn(t => {\n    const code = `\nstruct S { a : i32 }\n\nvar<private> x : S;\nvar<private> y : S;\n\nfn callee(pa : ptr<private, S>,\n          pb : ptr<private, S>) -> i32 {\n  ${kUses[t.params.a_use].gen(`(*pa).a`)}\n  ${kUses[t.params.b_use].gen(`(*pb).a`)}\n  return 0;\n}\n\nfn caller() {\n  callee(&x, ${t.params.aliased ? `&x` : `&y`});\n}\n`;\n    t.expectCompileResult(shouldPass(t.params.aliased, t.params.a_use, t.params.b_use), code);\n  });\n\ng.test('same_pointer_read_and_write')\n  .desc(`Test that we can read from and write to the same pointer.`)\n  .params(u => u.beginSubcases())\n  .fn(t => {\n    const code = `\nvar<private> v : i32;\n\nfn callee(p : ptr<private, i32>) {\n  *p = *p + 1;\n}\n\nfn caller() {\n  callee(&v);\n}\n`;\n    t.expectCompileResult(true, code);\n  });\n\ng.test('aliasing_inside_function')\n  .desc(`Test that we can alias pointers inside a function.`)\n  .params(u => u.beginSubcases())\n  .fn(t => {\n    const code = `\nvar<private> v : i32;\n\nfn foo() {\n  var v : i32;\n  let p1 = &v;\n  let p2 = &v;\n  *p1 = 42;\n  *p2 = 42;\n}\n`;\n    t.expectCompileResult(true, code);\n  });\n"],"mappings":"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"}