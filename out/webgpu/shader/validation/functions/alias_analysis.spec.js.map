{"version":3,"file":"alias_analysis.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kUses","no_access","is_write","gen","ref","assign","compound_assign_lhs","compound_assign_rhs","increment","binary_lhs","binary_rhs","unary_minus","bitcast","convert","builtin_arg","index_access","let_init","var_init","return","switch_cond","shouldPass","aliased","uses","some","u","includes","kWritableAddressSpaces","ptr","addressSpace","type","declareModuleScopeVar","name","binding","maybeDeclareModuleScopeVar","maybeDeclareFunctionScopeVar","requiresUnrestrictedPointerParameters","test","desc","params","combine","beginSubcases","fn","t","address_space","skipIfLanguageFeatureNotSupported","code","a_use","b_use","expectCompileResult","index","member","ptr_i32","ptr_S","kAtomicBuiltins","isWrite","builtin","callAtomicBuiltin","ptr_atomic_i32","builtin_a","builtin_b","shouldFail","emitUse","use"],"sources":["../../../../../src/webgpu/shader/validation/functions/alias_analysis.spec.ts"],"sourcesContent":["export const description = `Validation tests for function alias analysis`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\ninterface Use {\n  is_write: boolean;\n  gen: (ref: string) => string;\n}\n\nconst kUses: Record<string, Use> = {\n  no_access: { is_write: false, gen: ref => `{ let p = &*&${ref}; }` },\n  assign: { is_write: true, gen: ref => `${ref} = 42;` },\n  compound_assign_lhs: { is_write: true, gen: ref => `${ref} += 1;` },\n  compound_assign_rhs: { is_write: false, gen: ref => `{ var tmp : i32; tmp += ${ref}; }` },\n  increment: { is_write: true, gen: ref => `${ref}++;` },\n  binary_lhs: { is_write: false, gen: ref => `_ = ${ref} + 1;` },\n  binary_rhs: { is_write: false, gen: ref => `_ = 1 + ${ref};` },\n  unary_minus: { is_write: false, gen: ref => `_ = -${ref};` },\n  bitcast: { is_write: false, gen: ref => `_ = bitcast<f32>(${ref});` },\n  convert: { is_write: false, gen: ref => `_ = f32(${ref});` },\n  builtin_arg: { is_write: false, gen: ref => `_ = abs(${ref});` },\n  index_access: { is_write: false, gen: ref => `{ var arr : array<i32, 4>; _ = arr[${ref}]; }` },\n  let_init: { is_write: false, gen: ref => `{ let tmp = ${ref}; }` },\n  var_init: { is_write: false, gen: ref => `{ var tmp = ${ref}; }` },\n  return: { is_write: false, gen: ref => `{ return ${ref}; }` },\n  switch_cond: { is_write: false, gen: ref => `switch(${ref}) { default { break; } }` },\n};\n\ntype UseName = keyof typeof kUses;\n\nfunction shouldPass(aliased: boolean, ...uses: UseName[]): boolean {\n  // Expect fail if the pointers are aliased and at least one of the accesses is a write.\n  // If either of the accesses is a \"no access\" then expect pass.\n  return !aliased || !uses.some(u => kUses[u].is_write) || uses.includes('no_access');\n}\n\ntype AddressSpace = 'private' | 'function' | 'storage' | 'uniform' | 'workgroup';\n\nconst kWritableAddressSpaces = ['private', 'function', 'storage', 'workgroup'] as const;\n\nfunction ptr(addressSpace: AddressSpace, type: string) {\n  switch (addressSpace) {\n    case 'function':\n      return `ptr<function, ${type}>`;\n    case 'private':\n      return `ptr<private, ${type}>`;\n    case 'storage':\n      return `ptr<storage, ${type}, read_write>`;\n    case 'uniform':\n      return `ptr<uniform, ${type}>`;\n    case 'workgroup':\n      return `ptr<workgroup, ${type}>`;\n  }\n}\n\nfunction declareModuleScopeVar(\n  name: string,\n  addressSpace: 'private' | 'storage' | 'uniform' | 'workgroup',\n  type: string\n) {\n  const binding = name === 'x' ? 0 : 1;\n  switch (addressSpace) {\n    case 'private':\n      return `var<private> ${name} : ${type};`;\n    case 'storage':\n      return `@binding(${binding}) @group(0) var<storage, read_write> ${name} : ${type};`;\n    case 'uniform':\n      return `@binding(${binding}) @group(0) var<uniform> ${name} : ${type};`;\n    case 'workgroup':\n      return `var<workgroup> ${name} : ${type};`;\n  }\n}\n\nfunction maybeDeclareModuleScopeVar(name: string, addressSpace: AddressSpace, type: string) {\n  if (addressSpace === 'function') {\n    return '';\n  }\n  return declareModuleScopeVar(name, addressSpace, type);\n}\n\nfunction maybeDeclareFunctionScopeVar(name: string, addressSpace: AddressSpace, type: string) {\n  switch (addressSpace) {\n    case 'function':\n      return `var ${name} : ${type};`;\n    default:\n      return ``;\n  }\n}\n\n/**\n * @returns true if a pointer of the given address space requires the\n * 'unrestricted_pointer_parameters' language feature.\n */\nfunction requiresUnrestrictedPointerParameters(addressSpace: AddressSpace) {\n  return addressSpace !== 'function' && addressSpace !== 'private';\n}\n\ng.test('two_pointers')\n  .desc(`Test aliasing of two pointers passed to a function.`)\n  .params(u =>\n    u\n      .combine('address_space', kWritableAddressSpaces)\n      .combine('aliased', [true, false])\n      .beginSubcases()\n      .combine('a_use', keysOf(kUses))\n      .combine('b_use', keysOf(kUses))\n  )\n  .fn(t => {\n    if (requiresUnrestrictedPointerParameters(t.params.address_space)) {\n      t.skipIfLanguageFeatureNotSupported('unrestricted_pointer_parameters');\n    }\n\n    const code = `\n${maybeDeclareModuleScopeVar('x', t.params.address_space, 'i32')}\n${maybeDeclareModuleScopeVar('y', t.params.address_space, 'i32')}\n\nfn callee(pa : ${ptr(t.params.address_space, 'i32')},\n          pb : ${ptr(t.params.address_space, 'i32')}) -> i32 {\n  ${kUses[t.params.a_use].gen(`*pa`)}\n  ${kUses[t.params.b_use].gen(`*pb`)}\n  return 0;\n}\n\nfn caller() {\n  ${maybeDeclareFunctionScopeVar('x', t.params.address_space, 'i32')}\n  ${maybeDeclareFunctionScopeVar('y', t.params.address_space, 'i32')}\n  callee(&x, ${t.params.aliased ? `&x` : `&y`});\n}\n`;\n    t.expectCompileResult(shouldPass(t.params.aliased, t.params.a_use, t.params.b_use), code);\n  });\n\ng.test('two_pointers_to_array_elements')\n  .desc(`Test aliasing of two array element pointers passed to a function.`)\n  .params(u =>\n    u\n      .combine('address_space', kWritableAddressSpaces)\n      .combine('index', [0, 1])\n      .combine('aliased', [true, false])\n      .beginSubcases()\n      .combine('a_use', keysOf(kUses))\n      .combine('b_use', keysOf(kUses))\n  )\n  .fn(t => {\n    t.skipIfLanguageFeatureNotSupported('unrestricted_pointer_parameters');\n\n    const code = `\n${maybeDeclareModuleScopeVar('x', t.params.address_space, 'array<i32, 4>')}\n${maybeDeclareModuleScopeVar('y', t.params.address_space, 'array<i32, 4>')}\n\nfn callee(pa : ${ptr(t.params.address_space, 'i32')},\n          pb : ${ptr(t.params.address_space, 'i32')}) -> i32 {\n  ${kUses[t.params.a_use].gen(`*pa`)}\n  ${kUses[t.params.b_use].gen(`*pb`)}\n  return 0;\n}\n\nfn caller() {\n  ${maybeDeclareFunctionScopeVar('x', t.params.address_space, 'array<i32, 4>')}\n  ${maybeDeclareFunctionScopeVar('y', t.params.address_space, 'array<i32, 4>')}\n  callee(&x[${t.params.index}], ${t.params.aliased ? `&x[0]` : `&y[0]`});\n}\n`;\n    t.expectCompileResult(shouldPass(t.params.aliased, t.params.a_use, t.params.b_use), code);\n  });\n\ng.test('two_pointers_to_array_elements_indirect')\n  .desc(\n    `Test aliasing of two array pointers passed to a function, which indexes those arrays and then\npasses the element pointers to another function.`\n  )\n  .params(u =>\n    u\n      .combine('address_space', kWritableAddressSpaces)\n      .combine('index', [0, 1])\n      .combine('aliased', [true, false])\n      .beginSubcases()\n      .combine('a_use', keysOf(kUses))\n      .combine('b_use', keysOf(kUses))\n  )\n  .fn(t => {\n    t.skipIfLanguageFeatureNotSupported('unrestricted_pointer_parameters');\n\n    const code = `\n${maybeDeclareModuleScopeVar('x', t.params.address_space, 'array<i32, 4>')}\n${maybeDeclareModuleScopeVar('y', t.params.address_space, 'array<i32, 4>')}\n\nfn callee(pa : ${ptr(t.params.address_space, 'i32')},\n          pb : ${ptr(t.params.address_space, 'i32')}) -> i32 {\n  ${kUses[t.params.a_use].gen(`*pa`)}\n  ${kUses[t.params.b_use].gen(`*pb`)}\n  return 0;\n}\n\nfn index(pa : ${ptr(t.params.address_space, 'array<i32, 4>')},\n         pb : ${ptr(t.params.address_space, 'array<i32, 4>')}) -> i32 {\n  return callee(&(*pa)[${t.params.index}], &(*pb)[0]);\n}\n\nfn caller() {\n  ${maybeDeclareFunctionScopeVar('x', t.params.address_space, 'array<i32, 4>')}\n  ${maybeDeclareFunctionScopeVar('y', t.params.address_space, 'array<i32, 4>')}\n  index(&x, ${t.params.aliased ? `&x` : `&y`});\n}\n`;\n    t.expectCompileResult(shouldPass(t.params.aliased, t.params.a_use, t.params.b_use), code);\n  });\n\ng.test('two_pointers_to_struct_members')\n  .desc(`Test aliasing of two struct member pointers passed to a function.`)\n  .params(u =>\n    u\n      .combine('address_space', kWritableAddressSpaces)\n      .combine('member', ['a', 'b'])\n      .combine('aliased', [true, false])\n      .beginSubcases()\n      .combine('a_use', keysOf(kUses))\n      .combine('b_use', keysOf(kUses))\n  )\n  .fn(t => {\n    t.skipIfLanguageFeatureNotSupported('unrestricted_pointer_parameters');\n\n    const code = `\nstruct S {\n  a : i32,\n  b : i32,\n}\n\n${maybeDeclareModuleScopeVar('x', t.params.address_space, 'S')}\n${maybeDeclareModuleScopeVar('y', t.params.address_space, 'S')}\n\nfn callee(pa : ${ptr(t.params.address_space, 'i32')},\n          pb : ${ptr(t.params.address_space, 'i32')}) -> i32 {\n  ${kUses[t.params.a_use].gen(`*pa`)}\n  ${kUses[t.params.b_use].gen(`*pb`)}\n  return 0;\n}\n\nfn caller() {\n  ${maybeDeclareFunctionScopeVar('x', t.params.address_space, 'S')}\n  ${maybeDeclareFunctionScopeVar('y', t.params.address_space, 'S')}\n  callee(&x.${t.params.member}, ${t.params.aliased ? `&x.a` : `&y.a`});\n}\n`;\n    t.expectCompileResult(shouldPass(t.params.aliased, t.params.a_use, t.params.b_use), code);\n  });\n\ng.test('two_pointers_to_struct_members_indirect')\n  .desc(\n    `Test aliasing of two structure pointers passed to a function, which accesses members of those\nstructures and then passes the member pointers to another function.`\n  )\n  .params(u =>\n    u\n      .combine('address_space', kWritableAddressSpaces)\n      .combine('member', ['a', 'b'])\n      .combine('aliased', [true, false])\n      .beginSubcases()\n      .combine('a_use', keysOf(kUses))\n      .combine('b_use', keysOf(kUses))\n  )\n  .fn(t => {\n    t.skipIfLanguageFeatureNotSupported('unrestricted_pointer_parameters');\n\n    const code = `\nstruct S {\n  a : i32,\n  b : i32,\n}\n\n${maybeDeclareModuleScopeVar('x', t.params.address_space, 'S')}\n${maybeDeclareModuleScopeVar('y', t.params.address_space, 'S')}\n\nfn callee(pa : ${ptr(t.params.address_space, 'i32')},\n          pb : ${ptr(t.params.address_space, 'i32')}) -> i32 {\n  ${kUses[t.params.a_use].gen(`*pa`)}\n  ${kUses[t.params.b_use].gen(`*pb`)}\n  return 0;\n}\n\nfn access(pa : ${ptr(t.params.address_space, 'S')},\n          pb : ${ptr(t.params.address_space, 'S')}) -> i32 {\n  return callee(&(*pa).${t.params.member}, &(*pb).a);\n}\n\nfn caller() {\n  ${maybeDeclareFunctionScopeVar('x', t.params.address_space, 'S')}\n  ${maybeDeclareFunctionScopeVar('y', t.params.address_space, 'S')}\n  access(&x, ${t.params.aliased ? `&x` : `&y`});\n}\n`;\n    t.expectCompileResult(shouldPass(t.params.aliased, t.params.a_use, t.params.b_use), code);\n  });\n\ng.test('one_pointer_one_module_scope')\n  .desc(`Test aliasing of a pointer with a direct access to a module-scope variable.`)\n  .params(u =>\n    u\n      .combine('address_space', ['private', 'storage', 'workgroup'] as const)\n      .combine('aliased', [true, false])\n      .beginSubcases()\n      .combine('a_use', keysOf(kUses))\n      .combine('b_use', keysOf(kUses))\n  )\n  .fn(t => {\n    if (requiresUnrestrictedPointerParameters(t.params.address_space)) {\n      t.skipIfLanguageFeatureNotSupported('unrestricted_pointer_parameters');\n    }\n\n    const code = `\n${declareModuleScopeVar('x', t.params.address_space, 'i32')}\n${declareModuleScopeVar('y', t.params.address_space, 'i32')}\n\nfn callee(pb : ${ptr(t.params.address_space, 'i32')}) -> i32 {\n  ${kUses[t.params.a_use].gen(`x`)}\n  ${kUses[t.params.b_use].gen(`*pb`)}\n  return 0;\n}\n\nfn caller() {\n  callee(${t.params.aliased ? `&x` : `&y`});\n}\n`;\n    t.expectCompileResult(shouldPass(t.params.aliased, t.params.a_use, t.params.b_use), code);\n  });\n\ng.test('subcalls')\n  .desc(`Test aliasing of two pointers passed to a function, and then passed to other functions.`)\n  .params(u =>\n    u\n      .combine('address_space', ['private', 'storage', 'workgroup'] as const)\n      .combine('aliased', [true, false])\n      .beginSubcases()\n      .combine('a_use', ['no_access', 'assign', 'binary_lhs'] as UseName[])\n      .combine('b_use', ['no_access', 'assign', 'binary_lhs'] as UseName[])\n  )\n  .fn(t => {\n    if (requiresUnrestrictedPointerParameters(t.params.address_space)) {\n      t.skipIfLanguageFeatureNotSupported('unrestricted_pointer_parameters');\n    }\n    const ptr_i32 = ptr(t.params.address_space, 'i32');\n    const code = `\n${declareModuleScopeVar('x', t.params.address_space, 'i32')}\n${declareModuleScopeVar('y', t.params.address_space, 'i32')}\n\nfn subcall_no_access(p : ${ptr_i32}) {\n  let pp = &*p;\n}\n\nfn subcall_binary_lhs(p : ${ptr_i32}) -> i32 {\n  return *p + 1;\n}\n\nfn subcall_assign(p : ${ptr_i32}) {\n  *p = 42;\n}\n\nfn callee(pa : ${ptr_i32}, pb : ${ptr_i32}) -> i32 {\n  let new_pa = &*pa;\n  let new_pb = &*pb;\n  subcall_${t.params.a_use}(new_pa);\n  subcall_${t.params.b_use}(new_pb);\n  return 0;\n}\n\nfn caller() {\n  callee(&x, ${t.params.aliased ? `&x` : `&y`});\n}\n`;\n    t.expectCompileResult(shouldPass(t.params.aliased, t.params.a_use, t.params.b_use), code);\n  });\n\ng.test('member_accessors')\n  .desc(`Test aliasing of two pointers passed to a function and used with member accessors.`)\n  .params(u =>\n    u\n      .combine('address_space', ['private', 'storage', 'workgroup'] as const)\n      .combine('aliased', [true, false])\n      .beginSubcases()\n      .combine('a_use', ['no_access', 'assign', 'binary_lhs'] as UseName[])\n      .combine('b_use', ['no_access', 'assign', 'binary_lhs'] as UseName[])\n  )\n  .fn(t => {\n    if (requiresUnrestrictedPointerParameters(t.params.address_space)) {\n      t.skipIfLanguageFeatureNotSupported('unrestricted_pointer_parameters');\n    }\n\n    const ptr_S = ptr(t.params.address_space, 'S');\n    const code = `\nstruct S { a : i32 }\n\n${declareModuleScopeVar('x', t.params.address_space, 'S')}\n${declareModuleScopeVar('y', t.params.address_space, 'S')}\n\nfn callee(pa : ${ptr_S}, pb : ${ptr_S}) -> i32 {\n  ${kUses[t.params.a_use].gen(`(*pa).a`)}\n  ${kUses[t.params.b_use].gen(`(*pb).a`)}\n  return 0;\n}\n\nfn caller() {\n  callee(&x, ${t.params.aliased ? `&x` : `&y`});\n}\n`;\n    t.expectCompileResult(shouldPass(t.params.aliased, t.params.a_use, t.params.b_use), code);\n  });\n\ng.test('same_pointer_read_and_write')\n  .desc(`Test that we can read from and write to the same pointer.`)\n  .params(u =>\n    u.combine('address_space', ['private', 'storage', 'workgroup'] as const).beginSubcases()\n  )\n  .fn(t => {\n    if (requiresUnrestrictedPointerParameters(t.params.address_space)) {\n      t.skipIfLanguageFeatureNotSupported('unrestricted_pointer_parameters');\n    }\n\n    const code = `\n${declareModuleScopeVar('v', t.params.address_space, 'i32')}\n\nfn callee(p : ${ptr(t.params.address_space, 'i32')}) {\n  *p = *p + 1;\n}\n\nfn caller() {\n  callee(&v);\n}\n`;\n    t.expectCompileResult(true, code);\n  });\n\ng.test('aliasing_inside_function')\n  .desc(`Test that we can alias pointers inside a function.`)\n  .params(u =>\n    u.combine('address_space', ['private', 'storage', 'workgroup'] as const).beginSubcases()\n  )\n  .fn(t => {\n    const code = `\n${declareModuleScopeVar('v', t.params.address_space, 'i32')}\n\nfn foo() {\n  var v : i32;\n  let p1 = &v;\n  let p2 = &v;\n  *p1 = 42;\n  *p2 = 42;\n}\n`;\n    t.expectCompileResult(true, code);\n  });\n\nconst kAtomicBuiltins = [\n  'atomicLoad',\n  'atomicStore',\n  'atomicAdd',\n  'atomicSub',\n  'atomicMax',\n  'atomicMin',\n  'atomicAnd',\n  'atomicOr',\n  'atomicXor',\n  'atomicExchange',\n  'atomicCompareExchangeWeak',\n] as const;\n\ntype AtomicBuiltins = (typeof kAtomicBuiltins)[number];\n\nfunction isWrite(builtin: AtomicBuiltins) {\n  switch (builtin) {\n    case 'atomicLoad':\n      return false;\n    case 'atomicAdd':\n    case 'atomicSub':\n    case 'atomicMax':\n    case 'atomicMin':\n    case 'atomicAnd':\n    case 'atomicOr':\n    case 'atomicXor':\n    case 'atomicExchange':\n    case 'atomicCompareExchangeWeak':\n    case 'atomicStore':\n      return true;\n  }\n}\n\nfunction callAtomicBuiltin(builtin: AtomicBuiltins, ptr: string) {\n  switch (builtin) {\n    case 'atomicLoad':\n      return `i += ${builtin}(${ptr})`;\n    case 'atomicStore':\n      return `${builtin}(${ptr}, 42)`;\n    case 'atomicAdd':\n    case 'atomicSub':\n    case 'atomicMax':\n    case 'atomicMin':\n    case 'atomicAnd':\n    case 'atomicOr':\n    case 'atomicXor':\n    case 'atomicExchange':\n      return `i += ${builtin}(${ptr}, 42)`;\n    case 'atomicCompareExchangeWeak':\n      return `${builtin}(${ptr}, 10, 42)`;\n  }\n}\n\ng.test('two_atomic_pointers')\n  .desc(`Test aliasing of two atomic pointers passed to a function.`)\n  .params(u =>\n    u\n      .combine('builtin_a', kAtomicBuiltins)\n      .combine('builtin_b', ['atomicLoad', 'atomicStore'] as const)\n      .combine('address_space', ['storage', 'workgroup'] as const)\n      .combine('aliased', [true, false])\n      .beginSubcases()\n  )\n  .fn(t => {\n    t.skipIfLanguageFeatureNotSupported('unrestricted_pointer_parameters');\n\n    const ptr_atomic_i32 = ptr(t.params.address_space, 'atomic<i32>');\n    const code = `\n${declareModuleScopeVar('x', t.params.address_space, 'atomic<i32>')}\n${declareModuleScopeVar('y', t.params.address_space, 'atomic<i32>')}\n\nfn callee(pa : ${ptr_atomic_i32}, pb : ${ptr_atomic_i32}) {\n  var i : i32;\n  ${callAtomicBuiltin(t.params.builtin_a, 'pa')};\n  ${callAtomicBuiltin(t.params.builtin_b, 'pb')};\n}\n\nfn caller() {\n  callee(&x, &${t.params.aliased ? 'x' : 'y'});\n}\n`;\n    const shouldFail =\n      t.params.aliased && (isWrite(t.params.builtin_a) || isWrite(t.params.builtin_b));\n    t.expectCompileResult(!shouldFail, code);\n  });\n\ng.test('two_atomic_pointers_to_array_elements')\n  .desc(`Test aliasing of two atomic array element pointers passed to a function.`)\n  .params(u =>\n    u\n      .combine('builtin_a', kAtomicBuiltins)\n      .combine('builtin_b', ['atomicLoad', 'atomicStore'] as const)\n      .combine('address_space', ['storage', 'workgroup'] as const)\n      .combine('index', [0, 1])\n      .combine('aliased', [true, false])\n      .beginSubcases()\n  )\n  .fn(t => {\n    t.skipIfLanguageFeatureNotSupported('unrestricted_pointer_parameters');\n\n    const ptr_atomic_i32 = ptr(t.params.address_space, 'atomic<i32>');\n    const code = `\n${declareModuleScopeVar('x', t.params.address_space, 'array<atomic<i32>, 32>')}\n${declareModuleScopeVar('y', t.params.address_space, 'array<atomic<i32>, 32>')}\n\nfn callee(pa : ${ptr_atomic_i32}, pb : ${ptr_atomic_i32}) {\n  var i : i32;\n  ${callAtomicBuiltin(t.params.builtin_a, 'pa')};\n  ${callAtomicBuiltin(t.params.builtin_b, 'pb')};\n}\n\nfn caller() {\n  callee(&x[${t.params.index}], &${t.params.aliased ? 'x' : 'y'}[0]);\n}\n`;\n    const shouldFail =\n      t.params.aliased && (isWrite(t.params.builtin_a) || isWrite(t.params.builtin_b));\n    t.expectCompileResult(!shouldFail, code);\n  });\n\ng.test('two_atomic_pointers_to_struct_members')\n  .desc(`Test aliasing of two struct member atomic pointers passed to a function.`)\n  .params(u =>\n    u\n      .combine('builtin_a', kAtomicBuiltins)\n      .combine('builtin_b', ['atomicLoad', 'atomicStore'] as const)\n      .combine('address_space', ['storage', 'workgroup'] as const)\n      .combine('member', ['a', 'b'])\n      .combine('aliased', [true, false])\n      .beginSubcases()\n  )\n  .fn(t => {\n    t.skipIfLanguageFeatureNotSupported('unrestricted_pointer_parameters');\n\n    const ptr_atomic_i32 = ptr(t.params.address_space, 'atomic<i32>');\n    const code = `\nstruct S {\n  a : atomic<i32>,\n  b : atomic<i32>,\n}\n\n${declareModuleScopeVar('x', t.params.address_space, 'S')}\n${declareModuleScopeVar('y', t.params.address_space, 'S')}\n\nfn callee(pa : ${ptr_atomic_i32}, pb : ${ptr_atomic_i32}) {\n  var i : i32;\n  ${callAtomicBuiltin(t.params.builtin_a, 'pa')};\n  ${callAtomicBuiltin(t.params.builtin_b, 'pb')};\n}\n\nfn caller() {\n  callee(&x.${t.params.member}, &${t.params.aliased ? 'x' : 'y'}.a);\n}\n`;\n    const shouldFail =\n      t.params.aliased && (isWrite(t.params.builtin_a) || isWrite(t.params.builtin_b));\n    t.expectCompileResult(!shouldFail, code);\n  });\n\ng.test('one_atomic_pointer_one_module_scope')\n  .desc(`Test aliasing of an atomic pointer with a direct access to a module-scope variable.`)\n  .params(u =>\n    u\n      .combine('builtin_a', kAtomicBuiltins)\n      .combine('builtin_b', ['atomicLoad', 'atomicStore'] as const)\n      .combine('address_space', ['storage', 'workgroup'] as const)\n      .combine('aliased', [true, false])\n      .beginSubcases()\n  )\n  .fn(t => {\n    t.skipIfLanguageFeatureNotSupported('unrestricted_pointer_parameters');\n\n    const ptr_atomic_i32 = ptr(t.params.address_space, 'atomic<i32>');\n    const code = `\n${declareModuleScopeVar('x', t.params.address_space, 'atomic<i32>')}\n${declareModuleScopeVar('y', t.params.address_space, 'atomic<i32>')}\n\nfn callee(p : ${ptr_atomic_i32}) {\n  var i : i32;\n  ${callAtomicBuiltin(t.params.builtin_a, 'p')};\n  ${callAtomicBuiltin(t.params.builtin_b, t.params.aliased ? '&x' : '&y')};\n}\n\nfn caller() {\n  callee(&x);\n}\n`;\n    const shouldFail =\n      t.params.aliased && (isWrite(t.params.builtin_a) || isWrite(t.params.builtin_b));\n    t.expectCompileResult(!shouldFail, code);\n  });\n\ng.test('workgroup_uniform_load')\n  .desc(`Test aliasing via workgroupUniformLoad.`)\n  .params(u =>\n    u\n      .combine('use', ['load', 'store', 'workgroupUniformLoad'] as const)\n      .combine('aliased', [true, false])\n      .beginSubcases()\n  )\n  .fn(t => {\n    t.skipIfLanguageFeatureNotSupported('unrestricted_pointer_parameters');\n\n    function emitUse() {\n      switch (t.params.use) {\n        case 'load':\n          return `v = *pa`;\n        case 'store':\n          return `*pa = 1`;\n        case 'workgroupUniformLoad':\n          return `v = workgroupUniformLoad(pa)`;\n      }\n    }\n\n    const code = `\nvar<workgroup> x : i32;\nvar<workgroup> y : i32;\n\nfn callee(pa : ptr<workgroup, i32>, pb : ptr<workgroup, i32>) -> i32 {\n  var v : i32;\n  ${emitUse()};\n  return v + workgroupUniformLoad(pb);\n}\n\nfn caller() {\n  callee(&x, &${t.params.aliased ? 'x' : 'y'});\n}\n`;\n    const shouldFail = t.params.aliased && t.params.use === 'store';\n    t.expectCompileResult(!shouldFail, code);\n  });\n"],"mappings":"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"}