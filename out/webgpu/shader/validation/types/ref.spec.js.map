{"version":3,"file":"ref.spec.js","names":["description","makeTestGroup","ShaderValidationTest","g","kTypes","test","desc","params","u","combine","fn","t","ty","type","ref","code","expectCompileResult","view"],"sources":["../../../../../src/webgpu/shader/validation/types/ref.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for ref types\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kTypes = ['bool', 'i32', 'f32', 'vec2i', 'mat2x2f', 'array<i32, 4>', 'S'];\n\ng.test('not_typeable_var')\n  .desc('Test that `ref` cannot be typed in a shader as an explicit var decl type.')\n  .params(u => u.combine('type', kTypes).combine('ref', [false, true]))\n  .fn(t => {\n    let ty = t.params.type;\n    if (t.params.ref) {\n      ty = `ref<private, ${ty}>`;\n    }\n    const code = `\n    struct S { a : u32 }\n    var<private> foo : ${ty};`;\n    t.expectCompileResult(!t.params.ref, code);\n  });\n\ng.test('not_typeable_let')\n  .desc('Test that `ref` cannot be typed in a shader as a let decl type.')\n  .params(u => u.combine('type', kTypes).combine('view', ['ptr', 'ref']))\n  .fn(t => {\n    const code = `\n      struct S { a : u32 }\n      fn foo() {\n        var a : ${t.params.type};\n        let b : ${t.params.view}<function, ${t.params.type}> = &a;\n      }`;\n    t.expectCompileResult(t.params.view === 'ptr', code);\n  });\n\ng.test('not_typeable_param')\n  .desc('Test that `ref` cannot be typed in a shader as a function parameter type.')\n  .params(u => u.combine('type', kTypes).combine('view', ['ptr', 'ref']))\n  .fn(t => {\n    const code = `\n    struct S { a : u32 }\n    fn foo(a : ${t.params.view}<private, ${t.params.type}>) {}`;\n    t.expectCompileResult(t.params.view === 'ptr', code);\n  });\n\ng.test('not_typeable_alias')\n  .desc('Test that `ref` cannot be typed in a shader as an alias type.')\n  .params(u => u.combine('type', kTypes).combine('view', ['ptr', 'ref']))\n  .fn(t => {\n    const code = `\n    struct S { a : u32 }\n    alias a = ${t.params.view}<private, ${t.params.type}>;`;\n    t.expectCompileResult(t.params.view === 'ptr', code);\n  });\n"],"mappings":"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"}