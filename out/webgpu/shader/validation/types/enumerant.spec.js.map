{"version":3,"file":"enumerant.spec.js","names":["description","makeTestGroup","ShaderValidationTest","g","kEnumerantTypes","test","desc","params","u","combine","fn","t","code","enum","expectCompileResult","kValueDecls","beginSubcases","decl","kEnumerantValues","value"],"sources":["../../../../../src/webgpu/shader/validation/types/enumerant.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for enumerant types.\n\n* Values cannot be declared with the type\n* Enumerant values cannot be used as values\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kEnumerantTypes = ['access_mode', 'address_space', 'texel_format'];\n\ng.test('type_declaration')\n  .desc('Tests that enumerants cannot be used as a type')\n  .params(u => u.combine('enum', kEnumerantTypes))\n  .fn(t => {\n    const code = `alias T = ${t.params.enum};`;\n    t.expectCompileResult(false, code);\n  });\n\nconst kValueDecls = ['var', 'let', 'const', 'override'];\n\ng.test('value_type')\n  .desc('Tests that enumerant types cannot be the type of declaration')\n  .params(u => u.combine('enum', kEnumerantTypes).beginSubcases().combine('decl', kValueDecls))\n  .fn(t => {\n    const decl = `${t.params.decl} x : ${t.params.enum};`;\n    let code = ``;\n    if (t.params.decl === 'override') {\n      code = `${decl}`;\n    } else {\n      code = `fn foo() {\n        ${decl}\n      }`;\n    }\n    t.expectCompileResult(false, code);\n  });\n\nconst kEnumerantValues = [\n  // Access modes\n  'read',\n  'write',\n  'read_write',\n\n  // Address spaces\n  'function',\n  'private',\n  'workgroup',\n  'storage',\n  'uniform',\n  'handle',\n\n  // Texel formats\n  'rgba8unorm',\n  'rgba8snorm',\n  'rgba8uint',\n  'rgba8sint',\n  'rgba16uint',\n  'rgba16sint',\n  'rgba16float',\n  'r32uint',\n  'r32sint',\n  'r32float',\n  'rg32uint',\n  'rg32sint',\n  'rg32float',\n  'rgba32uint',\n  'rgba32sint',\n  'rgba32float',\n  'bgra8unorm',\n];\n\ng.test('decl_value')\n  .desc('Tests that enumerant values cannot be used as declaration value')\n  .params(u => u.combine('value', kEnumerantValues).beginSubcases().combine('decl', kValueDecls))\n  .fn(t => {\n    const decl = `${t.params.decl} x = ${t.params.value};`;\n    let code = ``;\n    if (t.params.decl === 'override') {\n      code = `${decl}`;\n    } else {\n      code = `fn foo() {\n        ${decl}\n      }`;\n    }\n    t.expectCompileResult(false, code);\n  });\n"],"mappings":"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"}