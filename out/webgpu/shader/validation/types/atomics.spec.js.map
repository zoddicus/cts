{"version":3,"file":"atomics.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","test","desc","specURL","params","u","combine","beforeAllSubcases","t","type","selectDeviceOrSkipTestCase","fn","code","expect","expectCompileResult","beginSubcases","moduleVar","functionVar","aspace","kInvalidOperations","add","load","store","deref","equality","abs","address_abs","op"],"sources":["../../../../../src/webgpu/shader/validation/types/atomics.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for atomic types\n\nTests covered:\n* Base type\n* Address spaces\n* Invalid operations (non-exhaustive)\n\nNote: valid operations (e.g. atomic built-in functions) are tested in the builtin tests.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\ng.test('type')\n  .desc('Test of the underlying atomic data type')\n  .specURL('https://gpuweb.github.io/gpuweb/wgsl/#atomic-types')\n  .params(u =>\n    u.combine('type', [\n      'u32',\n      'i32',\n      'f32',\n      'f16',\n      'bool',\n      'vec2u',\n      'vec3i',\n      'vec4f',\n      'mat2x2f',\n      'R',\n      'S',\n      'array<u32, 1>',\n      'array<i32, 4>',\n      'array<u32>',\n      'array<i32>',\n      'atomic<u32>',\n      'atomic<i32>',\n    ] as const)\n  )\n  .beforeAllSubcases(t => {\n    if (t.params.type === 'f16') {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const code = `\nstruct S {\n  x : u32\n}\nstruct T {\n  x : i32\n}\nstruct R {\n  x : f32\n}\n\nstruct Test {\n  x : atomic<${t.params.type}>\n}\n`;\n\n    const expect = t.params.type === 'u32' || t.params.type === 'i32';\n    t.expectCompileResult(expect, code);\n  });\n\ng.test('address_space')\n  .desc('Test allowed address spaces for atomics')\n  .specURL('https://gpuweb.github.io/gpuweb/wgsl/#atomic-types')\n  .params(u =>\n    u\n      .combine('aspace', [\n        'storage',\n        'workgroup',\n        'storage-ro',\n        'uniform',\n        'private',\n        'function',\n        'function-let',\n      ] as const)\n      .beginSubcases()\n      .combine('type', ['i32', 'u32'] as const)\n  )\n  .fn(t => {\n    let moduleVar = ``;\n    let functionVar = '';\n    switch (t.params.aspace) {\n      case 'storage-ro':\n        moduleVar = `@group(0) @binding(0) var<storage> x : atomic<${t.params.type}>;\\n`;\n        break;\n      case 'storage':\n        moduleVar = `@group(0) @binding(0) var<storage, read_write> x : atomic<${t.params.type}>;\\n`;\n        break;\n      case 'uniform':\n        moduleVar = `@group(0) @binding(0) var<uniform> x : atomic<${t.params.type}>;\\n`;\n        break;\n      case 'workgroup':\n      case 'private':\n        moduleVar = `var<${t.params.aspace}> x : atomic<${t.params.type}>;\\n`;\n        break;\n      case 'function':\n        functionVar = `var x : atomic<${t.params.type}>;\\n`;\n        break;\n      case 'function-let':\n        functionVar = `let x : atomic<${t.params.type}>;\\n`;\n        break;\n    }\n    const code = `\n${moduleVar}\n\nfn foo() {\n  ${functionVar}\n}\n`;\n\n    const expect = t.params.aspace === 'storage' || t.params.aspace === 'workgroup';\n    t.expectCompileResult(expect, code);\n  });\n\nconst kInvalidOperations = {\n  add: `a1 + a2`,\n  load: `a1`,\n  store: `a1 = 1u`,\n  deref: `*a1 = 1u`,\n  equality: `a1 == a2`,\n  abs: `abs(a1)`,\n  address_abs: `abs(&a1)`,\n};\n\ng.test('invalid_operations')\n  .desc('Tests that a selection of invalid operations are invalid')\n  .params(u => u.combine('op', keysOf(kInvalidOperations)))\n  .fn(t => {\n    const code = `\nvar<workgroup> a1 : atomic<u32>;\nvar<workgroup> a2 : atomic<u32>;\n\nfn foo() {\n  let x : u32 = ${kInvalidOperations[t.params.op]};\n}\n`;\n\n    t.expectCompileResult(false, code);\n  });\n"],"mappings":"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"}