{"version":3,"file":"bitwise_shift.spec.js","names":["description","makeTestGroup","ShaderValidationTest","g","signed","v","Int32Array","vectorize","size","undefined","kLeftShiftCases","lhs","rhs","pass","test","desc","params","u","combine","fn","t","case","vec_size","code","expectCompileResult","lhs_vec_size","vectorize_lhs","rhs_vec_size","vectorize_rhs","kRightShiftCases"],"sources":["../../../../../../src/webgpu/shader/validation/expression/binary/bitwise_shift.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for the bitwise shift binary expression operations\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { ShaderValidationTest } from '../../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\n// Converts v to signed decimal number.\n// Required because JS binary literals are always interpreted as unsigned numbers.\nfunction signed(v: number): number {\n  return new Int32Array([v])[0];\n}\n\n// Return vector form of size `size` of input value `v`, or `v` if size is undefined.\nfunction vectorize(v: string, size: number | undefined): string {\n  if (size !== undefined) {\n    return `vec${size}(${v})`;\n  }\n  return v;\n}\n\nconst kLeftShiftCases = [\n  // rhs >= bitwidth fails\n  { lhs: `0u`, rhs: `31u`, pass: true },\n  { lhs: `0u`, rhs: `32u`, pass: false },\n  { lhs: `0u`, rhs: `33u`, pass: false },\n  { lhs: `0u`, rhs: `1000u`, pass: false },\n  { lhs: `0u`, rhs: `0xFFFFFFFFu`, pass: false },\n\n  { lhs: `0i`, rhs: `31u`, pass: true },\n  { lhs: `0i`, rhs: `32u`, pass: false },\n  { lhs: `0i`, rhs: `33u`, pass: false },\n  { lhs: `0i`, rhs: `1000u`, pass: false },\n  { lhs: `0i`, rhs: `0xFFFFFFFFu`, pass: false },\n\n  // Signed overflow (sign change)\n  { lhs: `${0b01000000000000000000000000000000}i`, rhs: `1u`, pass: false },\n  { lhs: `${0b01111111111111111111111111111111}i`, rhs: `1u`, pass: false },\n  { lhs: `${0b00000000000000000000000000000001}i`, rhs: `31u`, pass: false },\n  // Same cases should pass if lhs is unsigned\n  { lhs: `${0b01000000000000000000000000000000}u`, rhs: `1u`, pass: true },\n  { lhs: `${0b01111111111111111111111111111111}u`, rhs: `1u`, pass: true },\n  { lhs: `${0b00000000000000000000000000000001}u`, rhs: `31u`, pass: true },\n\n  // Unsigned overflow\n  { lhs: `${0b11000000000000000000000000000000}u`, rhs: `1u`, pass: false },\n  { lhs: `${0b11111111111111111111111111111111}u`, rhs: `1u`, pass: false },\n  { lhs: `${0b11111111111111111111111111111111}u`, rhs: `31u`, pass: false },\n  // Same cases should pass if lhs is signed\n  { lhs: `${signed(0b11000000000000000000000000000000)}i`, rhs: `1u`, pass: true },\n  { lhs: `${signed(0b11111111111111111111111111111111)}i`, rhs: `1u`, pass: true },\n  { lhs: `${signed(0b11111111111111111111111111111111)}i`, rhs: `31u`, pass: true },\n\n  // Shift by negative is an error\n  { lhs: `1`, rhs: `-1`, pass: false },\n  { lhs: `1i`, rhs: `-1`, pass: false },\n  { lhs: `1u`, rhs: `-1`, pass: false },\n];\n\ng.test('shift_left_concrete')\n  .desc('Tests validation of binary left shift of concrete values')\n  .params(u =>\n    u\n      .combine('case', kLeftShiftCases) //\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(t => {\n    const lhs = t.params.case.lhs;\n    const rhs = t.params.case.rhs;\n    const vec_size = t.params.vectorize;\n\n    const code = `\n@compute @workgroup_size(1)\nfn main() {\n    const r = ${vectorize(lhs, vec_size)} << ${vectorize(rhs, vec_size)};\n}\n    `;\n    t.expectCompileResult(t.params.case.pass, code);\n  });\n\ng.test('shift_left_vec_size_mismatch')\n  .desc('Tests validation of binary left shift of vectors with mismatched sizes')\n  .params(u =>\n    u\n      .combine('vectorize_lhs', [2, 3, 4]) //\n      .combine('vectorize_rhs', [2, 3, 4])\n  )\n  .fn(t => {\n    const lhs = `1`;\n    const rhs = `1`;\n    const lhs_vec_size = t.params.vectorize_lhs;\n    const rhs_vec_size = t.params.vectorize_rhs;\n    const code = `\n@compute @workgroup_size(1)\nfn main() {\n    const r = ${vectorize(lhs, lhs_vec_size)} << ${vectorize(rhs, rhs_vec_size)};\n}\n    `;\n    const pass = lhs_vec_size === rhs_vec_size;\n    t.expectCompileResult(pass, code);\n  });\n\nconst kRightShiftCases = [\n  // rhs >= bitwidth fails\n  { lhs: `0u`, rhs: `31u`, pass: true },\n  { lhs: `0u`, rhs: `32u`, pass: false },\n  { lhs: `0u`, rhs: `33u`, pass: false },\n  { lhs: `0u`, rhs: `1000u`, pass: false },\n  { lhs: `0u`, rhs: `0xFFFFFFFFu`, pass: false },\n\n  { lhs: `0i`, rhs: `31u`, pass: true },\n  { lhs: `0i`, rhs: `32u`, pass: false },\n  { lhs: `0i`, rhs: `33u`, pass: false },\n  { lhs: `0i`, rhs: `1000u`, pass: false },\n  { lhs: `0i`, rhs: `0xFFFFFFFFu`, pass: false },\n\n  // Shift by negative is an error\n  { lhs: `1`, rhs: `-1`, pass: false },\n  { lhs: `1i`, rhs: `-1`, pass: false },\n  { lhs: `1u`, rhs: `-1`, pass: false },\n];\n\ng.test('shift_right_concrete')\n  .desc('Tests validation of binary right shift of concrete values')\n  .params(u =>\n    u\n      .combine('case', kRightShiftCases) //\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(t => {\n    const lhs = t.params.case.lhs;\n    const rhs = t.params.case.rhs;\n    const vec_size = t.params.vectorize;\n\n    const code = `\n@compute @workgroup_size(1)\nfn main() {\n    const r = ${vectorize(lhs, vec_size)} >> ${vectorize(rhs, vec_size)};\n}\n    `;\n    t.expectCompileResult(t.params.case.pass, code);\n  });\n\ng.test('shift_right_vec_size_mismatch')\n  .desc('Tests validation of binary right shift of vectors with mismatched sizes')\n  .params(u =>\n    u\n      .combine('vectorize_lhs', [2, 3, 4]) //\n      .combine('vectorize_rhs', [2, 3, 4])\n  )\n  .fn(t => {\n    const lhs = `1`;\n    const rhs = `1`;\n    const lhs_vec_size = t.params.vectorize_lhs;\n    const rhs_vec_size = t.params.vectorize_rhs;\n    const code = `\n@compute @workgroup_size(1)\nfn main() {\n    const r = ${vectorize(lhs, lhs_vec_size)} >> ${vectorize(rhs, rhs_vec_size)};\n}\n    `;\n    const pass = lhs_vec_size === rhs_vec_size;\n    t.expectCompileResult(pass, code);\n  });\n"],"mappings":"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"}