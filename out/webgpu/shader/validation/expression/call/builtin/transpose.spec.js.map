{"version":3,"file":"transpose.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","isConvertible","kAllMatrices","kConcreteFloatScalars","kFloatScalars","scalarTypeOf","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","validateConstOrOverrideBuiltinEval","g","kValidArgumentTypes","test","desc","params","u","combine","beginSubcases","expand","type","beforeAllSubcases","t","f16","selectDeviceOrSkipTestCase","fn","expectedResult","create","value","stage","kArgCases","good","bad_no_parens","bad_0args","bad_2arg","bad_0bool","bad_0array","bad_0struct","bad_0uint","bad_0int","bad_0vec2i","bad_0vec2u","bad_0vec3i","bad_0vec3u","bad_0vec4i","bad_0vec4u","expectCompileResult","arg","kValidArgumentScalarTypes","kValidReturnScalarTypes","input_type","output_type","input_cols","input_rows","input_values","Array","fill","wgsl","join","input_str","output_cols","output_rows","enables","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/transpose.spec.ts"],"sourcesContent":["const builtin = 'transpose';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  isConvertible,\n  kAllMatrices,\n  kConcreteFloatScalars,\n  kFloatScalars,\n  scalarTypeOf,\n} from '../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValidArgumentTypes = objectsToRecord(kAllMatrices);\n\ng.test('values')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() accept valid inputs.\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kValidArgumentTypes))\n      .beginSubcases()\n      .expand('value', u => fullRangeForType(kValidArgumentTypes[u.type]))\n  )\n  .beforeAllSubcases(t => {\n    if (scalarTypeOf(kValidArgumentTypes[t.params.type]) === Type.f16) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const expectedResult = true;\n\n    const type = kValidArgumentTypes[t.params.type];\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [type.create(t.params.value)],\n      t.params.stage\n    );\n  });\n\nconst kArgCases = {\n  good: '(mat2x2(0, 1, 2, 3))',\n  bad_no_parens: '',\n  // Bad number of args\n  bad_0args: '()',\n  bad_2arg: '(1.2, 2.3)',\n  // Bad value for arg 0\n  bad_0bool: '(false)',\n  bad_0array: '(array(1.1,2.2))',\n  bad_0struct: '(modf(2.2))',\n  bad_0uint: '(1u)',\n  bad_0int: '(1i)',\n  bad_0vec2i: '(vec2i())',\n  bad_0vec2u: '(vec2u())',\n  bad_0vec3i: '(vec3i())',\n  bad_0vec3u: '(vec3u())',\n  bad_0vec4i: '(vec4i())',\n  bad_0vec4u: '(vec4u())',\n};\n\ng.test('args')\n  .desc(`Test compilation failure of ${builtin} with variously typed arguments`)\n  .params(u => u.combine('arg', keysOf(kArgCases)))\n  .fn(t => {\n    t.expectCompileResult(\n      t.params.arg === 'good',\n      `const c = ${builtin}${kArgCases[t.params.arg]};`\n    );\n  });\n\nconst kValidArgumentScalarTypes = objectsToRecord(kFloatScalars);\nconst kValidReturnScalarTypes = objectsToRecord(kConcreteFloatScalars);\n\ng.test('return')\n  .desc(`Test compilation pass/failure of ${builtin} with variously shaped inputs and outputs`)\n  .params(u =>\n    u\n      .combine('input_type', keysOf(kValidArgumentScalarTypes))\n      .combine('input_rows', [2, 3, 4] as const)\n      .combine('input_cols', [2, 3, 4] as const)\n      .combine('output_type', keysOf(kValidReturnScalarTypes))\n      .combine('output_rows', [2, 3, 4] as const)\n      .combine('output_cols', [2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    if (t.params.input_type === 'f16' || t.params.output_type === 'f16') {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const input_type = t.params.input_type;\n    const input_cols = t.params.input_cols;\n    const input_rows = t.params.input_rows;\n    const input_values = Array(input_cols * input_rows)\n      .fill(kValidArgumentScalarTypes[t.params.input_type].create(0).wgsl())\n      .join(', ');\n    const input_str = `mat${input_cols}x${input_rows}(${input_values})`;\n\n    const output_type = t.params.output_type;\n    const output_cols = t.params.output_cols;\n    const output_rows = t.params.output_rows;\n\n    const enables = input_type === 'f16' || output_type === 'f16' ? 'enable f16;' : '';\n\n    const expectedResult =\n      input_cols === output_rows &&\n      input_rows === output_cols &&\n      isConvertible(kValidArgumentScalarTypes[input_type], kValidReturnScalarTypes[output_type]);\n    t.expectCompileResult(\n      expectedResult,\n      `${enables}\\nconst c: mat${output_cols}x${output_rows}<${output_type}> = ${builtin}(${input_str});`\n    );\n  });\n\ng.test('must_use')\n  .desc(`Result of ${builtin} must be used`)\n  .params(u => u.combine('use', [true, false]))\n  .fn(t => {\n    const use_it = t.params.use ? '_ = ' : '';\n    t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}${kArgCases['good']}; }`);\n  });\n"],"mappings":"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"}