{"version":3,"file":"tan.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","TypeF16","TypeF32","elementType","kAllFloatScalarsAndVectors","kAllIntegerScalarsAndVectors","fpTraitsFor","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","kMinus3PiTo3Pi","stageSupportsType","unique","validateConstOrOverrideBuiltinEval","g","kValuesTypes","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","beforeAllSubcases","t","selectDeviceOrSkipTestCase","fn","smallestPositive","constants","positive","min","expectedResult","Math","abs","cos","value","create","kIntegerArgumentTypes"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/tan.spec.ts"],"sourcesContent":["const builtin = 'tan';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  TypeF16,\n  TypeF32,\n  elementType,\n  kAllFloatScalarsAndVectors,\n  kAllIntegerScalarsAndVectors,\n} from '../../../../../util/conversion.js';\nimport { fpTraitsFor } from '../../../../../util/floating_point.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  kMinus3PiTo3Pi,\n  stageSupportsType,\n  unique,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValuesTypes = objectsToRecord(kAllFloatScalarsAndVectors);\n\ng.test('values')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() rejects invalid values\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kValuesTypes))\n      .filter(u => stageSupportsType(u.stage, kValuesTypes[u.type]))\n      .beginSubcases()\n      .expand('value', u => unique(kMinus3PiTo3Pi, fullRangeForType(kValuesTypes[u.type])))\n  )\n  .beforeAllSubcases(t => {\n    if (elementType(kValuesTypes[t.params.type]) === TypeF16) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const type = kValuesTypes[t.params.type];\n    const smallestPositive = fpTraitsFor(elementType(type)).constants().positive.min;\n    const expectedResult = Math.abs(Math.cos(t.params.value)) > smallestPositive;\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [type.create(t.params.value)],\n      t.params.stage\n    );\n  });\n\nconst kIntegerArgumentTypes = objectsToRecord([TypeF32, ...kAllIntegerScalarsAndVectors]);\n\ng.test('integer_argument')\n  .desc(\n    `\nValidates that scalar and vector integer arguments are rejected by ${builtin}()\n`\n  )\n  .params(u => u.combine('type', keysOf(kIntegerArgumentTypes)))\n  .fn(t => {\n    const type = kIntegerArgumentTypes[t.params.type];\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      /* expectedResult */ type === TypeF32,\n      [type.create(0)],\n      'constant'\n    );\n  });\n"],"mappings":"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"}