{"version":3,"file":"ldexp.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","scalarTypeOf","kConvertableToFloatScalarsAndVectors","kConcreteSignedIntegerScalarsAndVectors","ShaderValidationTest","ConstantOrOverrideValueChecker","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValidArgumentTypesA","kValidArgumentTypesB","abstractInt","vec","supportedSecondArgTypes","typeAKey","typeA","width","i32","biasForType","type","f16","f32","abstractFloat","Error","biasRange","bias","Math","floor","test","desc","params","u","combine","expand","filter","stage","typeB","beginSubcases","beforeAllSubcases","t","selectDeviceOrSkipTestCase","fn","scalarTypeA","vCheck","validExponent","Number","b","a","checkedResult","pow","allChecksPassed","create","ty","scalar","expandWithParams","p","cases","push","value","requiresF16","tyA","tyB","scalarB","enable","bArg","wgsl","toString","error","shader_error","pipeline_error","expectCompileResult","constants","expectPipelineResult","expectedResult","code","reference","kArgCases","good","bad_no_parens","bad_0args","bad_1arg","bad_3arg","bad_vec_scalar","bad_scalar_vec","bad_vec_sizes","bad_0bool","bad_0array","bad_0struct","bad_0int","bad_0uint","bad_0vec2i","bad_0vec3i","bad_0vec4i","bad_0vec2u","bad_0vec3u","bad_0vec4u","bad_1bool","bad_1array","bad_1struct","bad_1f32","bad_1f16","bad_1uint","bad_1vec2f","bad_1vec3f","bad_1vec4f","bad_1vec2h","bad_1vec3h","bad_1vec4h","bad_1vec2u","bad_1vec3u","bad_1vec4u","arg","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/ldexp.spec.ts"],"sourcesContent":["const builtin = 'ldexp';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  scalarTypeOf,\n  ScalarType,\n  kConvertableToFloatScalarsAndVectors,\n  kConcreteSignedIntegerScalarsAndVectors,\n  VectorType,\n} from '../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  ConstantOrOverrideValueChecker,\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValidArgumentTypesA = objectsToRecord(kConvertableToFloatScalarsAndVectors);\nconst kValidArgumentTypesB = objectsToRecord([\n  Type.abstractInt,\n  Type.vec(2, Type.abstractInt),\n  Type.vec(3, Type.abstractInt),\n  Type.vec(4, Type.abstractInt),\n  ...kConcreteSignedIntegerScalarsAndVectors,\n]);\n\nfunction supportedSecondArgTypes(typeAKey: string) {\n  const typeA = kValidArgumentTypesA[typeAKey];\n\n  switch (typeA.width) {\n    case 1:\n      return objectsToRecord([Type.abstractInt, Type.i32]);\n    default:\n      return objectsToRecord([\n        Type.vec(typeA.width, Type.abstractInt),\n        Type.vec(typeA.width, Type.i32),\n      ]);\n  }\n}\n\nfunction biasForType(type: VectorType | ScalarType) {\n  switch (type) {\n    case Type.f16:\n      return 15;\n    case Type.f32:\n      return 127;\n    case Type.abstractFloat:\n    case Type.abstractInt:\n      return 1023;\n    default:\n      throw new Error(`Invalid bias type ${type}`);\n  }\n}\n\nfunction biasRange(type: VectorType | ScalarType) {\n  const bias = biasForType(scalarTypeOf(type));\n  return [-bias - 2, -bias, Math.floor(-bias * 0.5), 0, Math.floor(bias * 0.5), bias, bias + 2];\n}\n\ng.test('values')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() never errors\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('typeA', keysOf(kValidArgumentTypesA))\n      .expand('typeB', u => keysOf(supportedSecondArgTypes(u.typeA)))\n      .filter(u => stageSupportsType(u.stage, kValidArgumentTypesA[u.typeA]))\n      .filter(u => stageSupportsType(u.stage, kValidArgumentTypesB[u.typeB]))\n      .beginSubcases()\n      .expand('a', u => fullRangeForType(kValidArgumentTypesA[u.typeA], 5))\n      .expand('b', u => biasRange(kValidArgumentTypesA[u.typeA]))\n  )\n  .beforeAllSubcases(t => {\n    if (scalarTypeOf(kValidArgumentTypesA[t.params.typeA]) === Type.f16) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const typeA = kValidArgumentTypesA[t.params.typeA];\n    const bias = biasForType(scalarTypeOf(typeA));\n    const scalarTypeA = scalarTypeOf(typeA);\n    const vCheck = new ConstantOrOverrideValueChecker(t, scalarTypeA);\n\n    const typeB = kValidArgumentTypesB[t.params.typeB];\n\n    const validExponent = Number(t.params.b) <= bias + 1;\n\n    // Should be invalid if the calculations result in values that exceed the\n    // maximum representable float value for the given type.\n    const a = Number(t.params.a);\n    const b = Number(t.params.b);\n    vCheck.checkedResult(a * Math.pow(2, b));\n\n    // Validates ldexp(a, b) or ldexp(vecN(a), vecN(b));\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      validExponent && vCheck.allChecksPassed(),\n      [typeA.create(t.params.a), typeB.create(t.params.b)],\n      t.params.stage\n    );\n  });\n\ng.test('partial_values')\n  .desc('Validates e2 <= bias + 1 when e1 is a runtime value')\n  .params(u =>\n    u\n      .combine('stage', ['constant', 'override', 'runtime'] as const)\n      .combine('typeA', keysOf(kValidArgumentTypesA))\n      .filter(t => {\n        const ty = kValidArgumentTypesA[t.typeA];\n        const scalar = scalarTypeOf(ty);\n        return scalar !== Type.abstractInt && scalar !== Type.abstractFloat;\n      })\n      .expand('typeB', u => keysOf(supportedSecondArgTypes(u.typeA)))\n      .filter(t => {\n        const ty = kValidArgumentTypesB[t.typeB];\n        const scalar = scalarTypeOf(ty);\n        return scalar !== Type.abstractInt && scalar !== Type.abstractFloat;\n      })\n      .beginSubcases()\n      .expandWithParams(p => {\n        const ty = kValidArgumentTypesA[p.typeA];\n        const scalar = scalarTypeOf(ty);\n        const cases = [];\n        const bias = biasForType(scalar);\n        cases.push({ value: bias });\n        cases.push({ value: bias + 1 });\n        cases.push({ value: bias + 2 });\n        return cases;\n      })\n  )\n  .beforeAllSubcases(t => {\n    const ty = kValidArgumentTypesA[t.params.typeA];\n    if (ty.requiresF16()) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const tyA = kValidArgumentTypesA[t.params.typeA];\n    const tyB = kValidArgumentTypesB[t.params.typeB];\n    const scalarB = scalarTypeOf(tyB);\n    const enable = `${tyA.requiresF16() ? 'enable f16;' : ''}`;\n    let bArg = '';\n    switch (t.params.stage) {\n      case 'constant':\n        bArg = `${tyB.create(t.params.value).wgsl()}`;\n        break;\n      case 'override':\n        bArg = `${tyB.toString()}(o_b)`;\n        break;\n      case 'runtime':\n        bArg = 'v_b';\n        break;\n    }\n    const wgsl = `\n${enable}\noverride o_b : ${scalarB.toString()};\nfn foo() {\n  var v_b : ${tyB.toString()};\n  var v : ${tyA.toString()};\n  let tmp = ldexp(v, ${bArg});\n}`;\n\n    const bias = biasForType(scalarTypeOf(tyA));\n    const error = t.params.value > bias + 1;\n    const shader_error = error && t.params.stage === 'constant';\n    const pipeline_error = error && t.params.stage === 'override';\n    t.expectCompileResult(!shader_error, wgsl);\n    if (!shader_error) {\n      const constants: Record<string, number> = {};\n      constants['o_b'] = t.params.value;\n      t.expectPipelineResult({\n        expectedResult: !pipeline_error,\n        code: wgsl,\n        constants,\n        reference: ['o_b'],\n      });\n    }\n  });\n\nconst kArgCases = {\n  good: '(vec3(0), vec3(1))',\n  bad_no_parens: '',\n  // Bad number of args\n  bad_0args: '()',\n  bad_1arg: '(vec3(0))',\n  bad_3arg: '(vec3(0), vec3(1), vec3(2))',\n  // Bad value combinations\n  bad_vec_scalar: '(vec3(0), 1)',\n  bad_scalar_vec: '(0, vec3(1))',\n  bad_vec_sizes: '(vec3(0), vec2(1))',\n  // Bad value for arg 0\n  bad_0bool: '(false, vec3(1))',\n  bad_0array: '(array(1.1,2.2), vec3(1))',\n  bad_0struct: '(modf(2.2), vec3(1))',\n  bad_0int: '(0i, 1i)',\n  bad_0uint: '(0u, 1i)',\n  bad_0vec2i: '(vec2i(0), vec2i(1))',\n  bad_0vec3i: '(vec3i(0), vec3i(1))',\n  bad_0vec4i: '(vec4i(0), vec4i(1))',\n  bad_0vec2u: '(vec2u(0), vec2i(1))',\n  bad_0vec3u: '(vec3u(0), vec3i(1))',\n  bad_0vec4u: '(vec4u(0), vec4i(1))',\n  // Bad value type for arg 1\n  bad_1bool: '(vec3(0), true)',\n  bad_1array: '(vec3(0), array(1.1,2.2))',\n  bad_1struct: '(vec3(0), modf(2.2))',\n  bad_1f32: '(0f, 1f)',\n  bad_1f16: '(0f, 1h)',\n  bad_1uint: '(0f, 1u)',\n  bad_1vec2f: '(vec2f(0), vec2f(1))',\n  bad_1vec3f: '(vec3f(0), vec3f(1))',\n  bad_1vec4f: '(vec4f(0), vec4f(1))',\n  bad_1vec2h: '(vec2f(0), vec2h(1))',\n  bad_1vec3h: '(vec3f(0), vec3h(1))',\n  bad_1vec4h: '(vec4f(0), vec4h(1))',\n  bad_1vec2u: '(vec2f(0), vec2u(1))',\n  bad_1vec3u: '(vec3f(0), vec3u(1))',\n  bad_1vec4u: '(vec4f(0), vec4u(1))',\n};\n\ng.test('args')\n  .desc(`Test compilation failure of ${builtin} with variously shaped and typed arguments`)\n  .params(u => u.combine('arg', keysOf(kArgCases)))\n  .fn(t => {\n    t.expectCompileResult(\n      t.params.arg === 'good',\n      `const c = ${builtin}${kArgCases[t.params.arg]};`\n    );\n  });\n\ng.test('must_use')\n  .desc(`Result of ${builtin} must be used`)\n  .params(u => u.combine('use', [true, false]))\n  .fn(t => {\n    const use_it = t.params.use ? '_ = ' : '';\n    t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}${kArgCases['good']}; }`);\n  });\n"],"mappings":"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"}