{"version":3,"file":"atan2.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","TypeF16","TypeF32","Vector","VectorType","elementType","kAllFloatScalarsAndVectors","kAllConcreteIntegerScalarsAndVectors","isRepresentable","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","sparseMinusThreePiToThreePiRangeForType","stageSupportsType","unique","validateConstOrOverrideBuiltinEval","g","kValuesTypes","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","beforeAllSubcases","t","selectDeviceOrSkipTestCase","fn","expectedResult","Math","abs","atan2","Number","x","y","create","kIntegerArgumentTypes","yTy","xTy","size"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/atan2.spec.ts"],"sourcesContent":["const builtin = 'atan2';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  TypeF16,\n  TypeF32,\n  Vector,\n  VectorType,\n  elementType,\n  kAllFloatScalarsAndVectors,\n  kAllConcreteIntegerScalarsAndVectors,\n} from '../../../../../util/conversion.js';\nimport { isRepresentable } from '../../../../../util/floating_point.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  sparseMinusThreePiToThreePiRangeForType,\n  stageSupportsType,\n  unique,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValuesTypes = objectsToRecord(kAllFloatScalarsAndVectors);\n\ng.test('values')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() rejects invalid values\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kValuesTypes))\n      .filter(u => stageSupportsType(u.stage, kValuesTypes[u.type]))\n      .beginSubcases()\n      .expand('y', u =>\n        unique(\n          sparseMinusThreePiToThreePiRangeForType(kValuesTypes[u.type]),\n          fullRangeForType(kValuesTypes[u.type], 4)\n        )\n      )\n      .expand('x', u =>\n        unique(\n          sparseMinusThreePiToThreePiRangeForType(kValuesTypes[u.type]),\n          fullRangeForType(kValuesTypes[u.type], 4)\n        )\n      )\n  )\n  .beforeAllSubcases(t => {\n    if (elementType(kValuesTypes[t.params.type]) === TypeF16) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const type = kValuesTypes[t.params.type];\n    const expectedResult = isRepresentable(\n      Math.abs(Math.atan2(Number(t.params.x), Number(t.params.y))),\n      elementType(type)\n    );\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [type.create(t.params.y), type.create(t.params.x)],\n      t.params.stage\n    );\n  });\n\nconst kIntegerArgumentTypes = objectsToRecord([TypeF32, ...kAllConcreteIntegerScalarsAndVectors]);\n\ng.test('integer_argument_y')\n  .desc(\n    `\nValidates that scalar and vector integer arguments are rejected by ${builtin}()\n`\n  )\n  .params(u => u.combine('type', keysOf(kIntegerArgumentTypes)))\n  .fn(t => {\n    const yTy = kIntegerArgumentTypes[t.params.type];\n    const xTy = yTy instanceof Vector ? new VectorType(yTy.size, TypeF32) : TypeF32;\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      /* expectedResult */ yTy === TypeF32,\n      [yTy.create(1), xTy.create(1)],\n      'constant'\n    );\n  });\n\ng.test('integer_argument_x')\n  .desc(\n    `\nValidates that scalar and vector integer arguments are rejected by ${builtin}()\n`\n  )\n  .params(u => u.combine('type', keysOf(kIntegerArgumentTypes)))\n  .fn(t => {\n    const xTy = kIntegerArgumentTypes[t.params.type];\n    const yTy = xTy instanceof Vector ? new VectorType(xTy.size, TypeF32) : TypeF32;\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      /* expectedResult */ xTy === TypeF32,\n      [yTy.create(1), xTy.create(1)],\n      'constant'\n    );\n  });\n"],"mappings":"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"}