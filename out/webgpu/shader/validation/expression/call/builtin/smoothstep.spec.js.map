{"version":3,"file":"smoothstep.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","concreteTypeOf","elementTypeOf","isConvertibleToFloatType","kAllScalarsAndVectors","kConvertableToFloatScalarsAndVectors","scalarTypeOf","f32","ShaderValidationTest","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValuesTypes","kArgumentTypes","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","beforeAllSubcases","t","f16","selectDeviceOrSkipTestCase","fn","expectedResult","value1","value2","create","kTests","valid","src","pass","alias","bool","i32","u32","mixed_aint_afloat","mixed_f32_afloat","mixed_f16_afloat","vec_bool","vec_i32","vec_u32","vec_f32","matrix","atomic","array","array_runtime","struct","enumerant","ptr","ptr_deref","sampler","texture","no_args","too_few_args","too_many_args","must_use","includes","enables","code","expectCompileResult","combineWithParams","low","high"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/smoothstep.spec.ts"],"sourcesContent":["const builtin = 'smoothstep';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  concreteTypeOf,\n  elementTypeOf,\n  isConvertibleToFloatType,\n  kAllScalarsAndVectors,\n  kConvertableToFloatScalarsAndVectors,\n  scalarTypeOf,\n  f32,\n} from '../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValuesTypes = objectsToRecord(kConvertableToFloatScalarsAndVectors);\nconst kArgumentTypes = objectsToRecord(kAllScalarsAndVectors);\n\ng.test('values')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() rejects invalid values\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kValuesTypes))\n      .filter(u => stageSupportsType(u.stage, kValuesTypes[u.type]))\n      .beginSubcases()\n      .expand('value1', u => [-1000, -10, 0, 10, 1000])\n      .expand('value2', u => [-1000, -10, 0, 10, 1000])\n  )\n  .beforeAllSubcases(t => {\n    if (scalarTypeOf(kValuesTypes[t.params.type]) === Type.f16) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const type = kValuesTypes[t.params.type];\n\n    // We expect to fail if low == high as it results in a DBZ\n    const expectedResult = t.params.value1 !== t.params.value2;\n\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [type.create(t.params.value1), type.create(t.params.value2), type.create(0)],\n      t.params.stage,\n      /* returnType */ concreteTypeOf(type, [Type.f32])\n    );\n  });\n\ng.test('argument_types')\n  .desc(\n    `\nValidates that scalar and vector arguments are rejected by ${builtin}() if not float type or vecN<float type>\n`\n  )\n  .params(u => u.combine('type', keysOf(kArgumentTypes)))\n  .beforeAllSubcases(t => {\n    if (scalarTypeOf(kArgumentTypes[t.params.type]) === Type.f16) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const type = kArgumentTypes[t.params.type];\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      /* expectedResult */ isConvertibleToFloatType(elementTypeOf(type)),\n      [type.create(0), type.create(1), type.create(2)],\n      'constant',\n      /* returnType */ concreteTypeOf(type, [Type.f32])\n    );\n  });\n\nconst kTests = {\n  valid: {\n    src: `_ = ${builtin}(0.0, 42.0, 0.5);`,\n    pass: true,\n  },\n  alias: {\n    src: `_ = ${builtin}(f32_alias(0), f32_alias(42), f32_alias(0.5));`,\n    pass: true,\n  },\n  bool: {\n    src: `_ = ${builtin}(false, false, false);`,\n    pass: false,\n  },\n  i32: {\n    src: `_ = ${builtin}(1i, 2i, 1i);`,\n    pass: false,\n  },\n  u32: {\n    src: `_ = ${builtin}(1u, 2u, 1u);`,\n    pass: false,\n  },\n  f32: {\n    src: `_ = ${builtin}(1.0f, 2.0f, 1.0f);`,\n    pass: true,\n  },\n  f16: {\n    src: `_ = ${builtin}(1h, 2h, 1h);`,\n    pass: true,\n  },\n  mixed_aint_afloat: {\n    src: `_ = ${builtin}(1.0, 2, 1);`,\n    pass: true,\n  },\n  mixed_f32_afloat: {\n    src: `_ = ${builtin}(1.0f, 2.0, 1.0);`,\n    pass: true,\n  },\n  mixed_f16_afloat: {\n    src: `_ = ${builtin}(1.0h, 2.0, 1.0);`,\n    pass: true,\n  },\n  vec_bool: {\n    src: `_ = ${builtin}(vec2<bool>(false, true), vec2<bool>(false, true), vec2<bool>(false, true));`,\n    pass: false,\n  },\n  vec_i32: {\n    src: `_ = ${builtin}(vec2<i32>(1, 1), vec2<i32>(1, 1), vec2<i32>(1, 1));`,\n    pass: false,\n  },\n  vec_u32: {\n    src: `_ = ${builtin}(vec2<u32>(1, 1), vec2<u32>(1, 1), vec2<u32>(1, 1));`,\n    pass: false,\n  },\n  vec_f32: {\n    src: `_ = ${builtin}(vec2<f32>(0, 0), vec2<f32>(1, 1), vec2<f32>(1, 1));`,\n    pass: true,\n  },\n  matrix: {\n    src: `_ = ${builtin}(mat2x2(1, 1, 1, 1), mat2x2(1, 1, 1, 1), mat2x2(1, 1, 1, 1));`,\n    pass: false,\n  },\n  atomic: {\n    src: ` _ = ${builtin}(a, a, a);`,\n    pass: false,\n  },\n  array: {\n    src: `var a: array<bool, 5>;\n            _ = ${builtin}(a, a, a);`,\n    pass: false,\n  },\n  array_runtime: {\n    src: `_ = ${builtin}(k.arry, k.arry, k.arry);`,\n    pass: false,\n  },\n  struct: {\n    src: `var a: A;\n            _ = ${builtin}(a, a, a);`,\n    pass: false,\n  },\n  enumerant: {\n    src: `_ = ${builtin}(read_write, read_write, read_write);`,\n    pass: false,\n  },\n  ptr: {\n    src: `var<function> a = 1.0;\n            let p: ptr<function, f32> = &a;\n            _ = ${builtin}(p, p, p);`,\n    pass: false,\n  },\n  ptr_deref: {\n    src: `var<function> a = 1.0;\n            let p: ptr<function, f32> = &a;\n            _ = ${builtin}(*p, *p, *p);`,\n    pass: true,\n  },\n  sampler: {\n    src: `_ = ${builtin}(s, s, s);`,\n    pass: false,\n  },\n  texture: {\n    src: `_ = ${builtin}(t, t, t);`,\n    pass: false,\n  },\n  no_args: {\n    src: `_ = ${builtin}();`,\n    pass: false,\n  },\n  too_few_args: {\n    src: `_ = ${builtin}(1.0, 2.0);`,\n    pass: false,\n  },\n  too_many_args: {\n    src: `_ = ${builtin}(1.0, 2.0, 3.0, 4.0);`,\n    pass: false,\n  },\n\n  must_use: {\n    src: `${builtin}(1.0,2.0,3.0);`,\n    pass: false,\n  },\n};\n\ng.test('arguments')\n  .desc(`Test that ${builtin} is validated correctly when called with different arguments.`)\n  .params(u => u.combine('test', keysOf(kTests)))\n  .beforeAllSubcases(t => {\n    if (t.params.test.includes('f16')) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const src = kTests[t.params.test].src;\n    const enables = t.params.test.includes('f16') ? 'enable f16;' : '';\n    const code = `\n  ${enables}\n  alias f32_alias = f32;\n\n  @group(0) @binding(0) var s: sampler;\n  @group(0) @binding(1) var t: texture_2d<f32>;\n\n  var<workgroup> a: atomic<u32>;\n\n  struct A {\n    i: bool,\n  }\n  struct B {\n    arry: array<u32>,\n  }\n  @group(0) @binding(3) var<storage> k: B;\n\n  @vertex\n  fn main() -> @builtin(position) vec4<f32> {\n    ${src}\n    return vec4<f32>(.4, .2, .3, .1);\n  }`;\n    t.expectCompileResult(kTests[t.params.test].pass, code);\n  });\n\ng.test('early_eval_errors')\n  .desc('Validates that high must be greater than low')\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .beginSubcases()\n      .combineWithParams([\n        { low: 1, high: 2 },\n        { low: 2, high: 1 },\n        { low: 1, high: 1 },\n      ] as const)\n  )\n  .fn(t => {\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      /* expectedResult */ t.params.low < t.params.high,\n      [f32(0), f32(t.params.low), f32(t.params.high)],\n      t.params.stage\n    );\n  });\n"],"mappings":"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"}