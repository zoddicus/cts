{"version":3,"file":"abs.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","TypeF16","elementType","kAllFloatAndIntegerScalarsAndVectors","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValuesTypes","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","beforeAllSubcases","t","selectDeviceOrSkipTestCase","fn","expectedResult","create","value"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/abs.spec.ts"],"sourcesContent":["const builtin = 'abs';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  TypeF16,\n  elementType,\n  kAllFloatAndIntegerScalarsAndVectors,\n} from '../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValuesTypes = objectsToRecord(kAllFloatAndIntegerScalarsAndVectors);\n\ng.test('values')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() never errors\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kValuesTypes))\n      .filter(u => stageSupportsType(u.stage, kValuesTypes[u.type]))\n      .beginSubcases()\n      .expand('value', u => fullRangeForType(kValuesTypes[u.type]))\n  )\n  .beforeAllSubcases(t => {\n    if (elementType(kValuesTypes[t.params.type]) === TypeF16) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const expectedResult = true; // abs() should never error\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [kValuesTypes[t.params.type].create(t.params.value)],\n      t.params.stage\n    );\n  });\n"],"mappings":";;GAAA,MAAMA,OAAO,GAAG,KAAK,CACrB,OAAO,MAAMC,WAAW,GAAI;AAC5B,2BAA2BD,OAAQ;AACnC,CAAC;AAED,SAASE,aAAa,QAAQ,kDAAkD;AAChF,SAASC,MAAM,EAAEC,eAAe,QAAQ,8CAA8C;AACtF;EACEC,OAAO;EACPC,WAAW;EACXC,oCAAoC;AAC/B,mCAAmC;AAC1C,SAASC,oBAAoB,QAAQ,oCAAoC;;AAEzE;EACEC,gBAAgB;EAChBC,0BAA0B;EAC1BC,iBAAiB;EACjBC,kCAAkC;AAC7B,gCAAgC;;AAEvC,OAAO,MAAMC,CAAC,GAAGX,aAAa,CAACM,oBAAoB,CAAC;;AAEpD,MAAMM,YAAY,GAAGV,eAAe,CAACG,oCAAoC,CAAC;;AAE1EM,CAAC,CAACE,IAAI,CAAC,QAAQ,CAAC;AACbC,IAAI;EACF;AACL,gEAAgEhB,OAAQ;AACxE;AACE,CAAC;AACAiB,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,OAAO,EAAET,0BAA0B,CAAC;AAC5CS,OAAO,CAAC,MAAM,EAAEhB,MAAM,CAACW,YAAY,CAAC,CAAC;AACrCM,MAAM,CAAC,CAAAF,CAAC,KAAIP,iBAAiB,CAACO,CAAC,CAACG,KAAK,EAAEP,YAAY,CAACI,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;AAC7DC,aAAa,CAAC,CAAC;AACfC,MAAM,CAAC,OAAO,EAAE,CAAAN,CAAC,KAAIT,gBAAgB,CAACK,YAAY,CAACI,CAAC,CAACI,IAAI,CAAC,CAAC;AAChE,CAAC;AACAG,iBAAiB,CAAC,CAAAC,CAAC,KAAI;EACtB,IAAIpB,WAAW,CAACQ,YAAY,CAACY,CAAC,CAACT,MAAM,CAACK,IAAI,CAAC,CAAC,KAAKjB,OAAO,EAAE;IACxDqB,CAAC,CAACC,0BAA0B,CAAC,YAAY,CAAC;EAC5C;AACF,CAAC,CAAC;AACDC,EAAE,CAAC,CAAAF,CAAC,KAAI;EACP,MAAMG,cAAc,GAAG,IAAI,CAAC,CAAC;EAC7BjB,kCAAkC;IAChCc,CAAC;IACD1B,OAAO;IACP6B,cAAc;IACd,CAACf,YAAY,CAACY,CAAC,CAACT,MAAM,CAACK,IAAI,CAAC,CAACQ,MAAM,CAACJ,CAAC,CAACT,MAAM,CAACc,KAAK,CAAC,CAAC;IACpDL,CAAC,CAACT,MAAM,CAACI;EACX,CAAC;AACH,CAAC,CAAC"}