{"version":3,"file":"length.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","TypeF16","TypeF32","elementType","kAllFloatScalars","kAllFloatVector2","kAllFloatVector3","kAllFloatVector4","kAllConcreteIntegerScalarsAndVectors","kAbstractIntegerScalar","kAbstractIntegerVector2","TypeAbstractFloat","kAbstractIntegerVector3","kAbstractIntegerVector4","isRepresentable","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","calculate","vec","type","vec_number","map","e","Number","squareSum","reduce","prev","curr","result","Math","sqrt","isIntermediateRepresentable","kind","isResultRepresentable","kScalarTypes","test","desc","params","u","combine","filter","stage","beginSubcases","expand","beforeAllSubcases","t","selectDeviceOrSkipTestCase","fn","expectedResult","create","value","kVec2Types","x","y","_result","kVec3Types","z","kVec4Types","w","kIntegerArgumentTypes"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/length.spec.ts"],"sourcesContent":["const builtin = 'length';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  ScalarType,\n  TypeF16,\n  TypeF32,\n  elementType,\n  kAllFloatScalars,\n  kAllFloatVector2,\n  kAllFloatVector3,\n  kAllFloatVector4,\n  kAllConcreteIntegerScalarsAndVectors,\n  kAbstractIntegerScalar,\n  kAbstractIntegerVector2,\n  TypeAbstractFloat,\n  kAbstractIntegerVector3,\n  kAbstractIntegerVector4,\n} from '../../../../../util/conversion.js';\nimport { isRepresentable } from '../../../../../util/floating_point.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\n/**\n * Evaluates the result and information about a call to length(), with a vector\n * formed from `vec` of the element type `type`.\n */\nfunction calculate(\n  vec: (number | bigint)[],\n  type: ScalarType\n): {\n  /**\n   * True iff the sum of the squares can be represented by the data type.\n   * @note The specification does not enforce the method or precision of how\n   * length() is calculated. If intermediate is not representable but the result\n   * is representable, then the test case is skipped as it is undefined whether\n   * the evaluation should error or not.\n   */\n  isIntermediateRepresentable: boolean;\n  /** True iff the result of length() can be represented by the data type. */\n  isResultRepresentable: boolean;\n  /** The computed value of length(). */\n  result: number;\n} {\n  const vec_number = vec.map(e => Number(e));\n  const squareSum = vec_number.reduce((prev, curr) => prev + Number(curr) * Number(curr), 0);\n  const result = Math.sqrt(squareSum);\n  return {\n    isIntermediateRepresentable: isRepresentable(\n      squareSum,\n      // AbstractInt is converted to AbstractFloat before calling into the builtin\n      elementType(type).kind === 'abstract-int' ? TypeAbstractFloat : elementType(type)\n    ),\n    isResultRepresentable: isRepresentable(\n      result,\n      // AbstractInt is converted to AbstractFloat before calling into the builtin\n      elementType(type).kind === 'abstract-int' ? TypeAbstractFloat : elementType(type)\n    ),\n    result,\n  };\n}\n\nconst kScalarTypes = objectsToRecord([...kAbstractIntegerScalar, ...kAllFloatScalars]);\n\ng.test('scalar')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() with\nthe input scalar value always compiles without error\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kScalarTypes))\n      .filter(u => stageSupportsType(u.stage, kScalarTypes[u.type]))\n      .beginSubcases()\n      .expand('value', u => fullRangeForType(kScalarTypes[u.type]))\n  )\n  .beforeAllSubcases(t => {\n    if (elementType(kScalarTypes[t.params.type]) === TypeF16) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    // We only validate with numbers known to be representable by the type\n    const expectedResult = true;\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [kScalarTypes[t.params.type].create(t.params.value)],\n      t.params.stage\n    );\n  });\n\nconst kVec2Types = objectsToRecord([...kAbstractIntegerVector2, ...kAllFloatVector2]);\n\ng.test('vec2')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() with a vec2 compiles with valid values\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kVec2Types))\n      .filter(u => stageSupportsType(u.stage, kVec2Types[u.type]))\n      .beginSubcases()\n      .expand('x', u => fullRangeForType(kVec2Types[u.type], 5))\n      .expand('y', u => fullRangeForType(kVec2Types[u.type], 5))\n      .expand('_result', u => [calculate([u.x, u.y], elementType(kVec2Types[u.type]))])\n      .filter(u => u._result.isResultRepresentable === u._result.isIntermediateRepresentable)\n  )\n  .beforeAllSubcases(t => {\n    if (elementType(kVec2Types[t.params.type]) === TypeF16) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const expectedResult = t.params._result.isResultRepresentable;\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [kVec2Types[t.params.type].create([t.params.x, t.params.y])],\n      t.params.stage\n    );\n  });\n\nconst kVec3Types = objectsToRecord([...kAbstractIntegerVector3, ...kAllFloatVector3]);\n\ng.test('vec3')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() with a vec3 compiles with valid values\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kVec3Types))\n      .filter(u => stageSupportsType(u.stage, kVec3Types[u.type]))\n      .beginSubcases()\n      .expand('x', u => fullRangeForType(kVec3Types[u.type], 4))\n      .expand('y', u => fullRangeForType(kVec3Types[u.type], 4))\n      .expand('z', u => fullRangeForType(kVec3Types[u.type], 4))\n      .expand('_result', u => [calculate([u.x, u.y, u.z], elementType(kVec3Types[u.type]))])\n      .filter(u => u._result.isResultRepresentable === u._result.isIntermediateRepresentable)\n  )\n  .beforeAllSubcases(t => {\n    if (elementType(kVec3Types[t.params.type]) === TypeF16) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const expectedResult = t.params._result.isResultRepresentable;\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [kVec3Types[t.params.type].create([t.params.x, t.params.y, t.params.z])],\n      t.params.stage\n    );\n  });\n\nconst kVec4Types = objectsToRecord([...kAbstractIntegerVector4, ...kAllFloatVector4]);\n\ng.test('vec4')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() with a vec4 compiles with valid values\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kVec4Types))\n      .filter(u => stageSupportsType(u.stage, kVec4Types[u.type]))\n      .beginSubcases()\n      .expand('x', u => fullRangeForType(kVec4Types[u.type], 3))\n      .expand('y', u => fullRangeForType(kVec4Types[u.type], 3))\n      .expand('z', u => fullRangeForType(kVec4Types[u.type], 3))\n      .expand('w', u => fullRangeForType(kVec4Types[u.type], 3))\n      .expand('_result', u => [calculate([u.x, u.y, u.z, u.w], elementType(kVec4Types[u.type]))])\n      .filter(u => u._result.isResultRepresentable === u._result.isIntermediateRepresentable)\n  )\n  .beforeAllSubcases(t => {\n    if (elementType(kVec4Types[t.params.type]) === TypeF16) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const expectedResult = t.params._result.isResultRepresentable;\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [kVec4Types[t.params.type].create([t.params.x, t.params.y, t.params.z, t.params.w])],\n      t.params.stage\n    );\n  });\n\nconst kIntegerArgumentTypes = objectsToRecord([TypeF32, ...kAllConcreteIntegerScalarsAndVectors]);\n\ng.test('integer_argument')\n  .desc(\n    `\nValidates that scalar and vector integer arguments are rejected by ${builtin}()\n`\n  )\n  .params(u => u.combine('type', keysOf(kIntegerArgumentTypes)))\n  .fn(t => {\n    const type = kIntegerArgumentTypes[t.params.type];\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      /* expectedResult */ type === TypeF32,\n      [type.create(1)],\n      'constant'\n    );\n  });\n"],"mappings":"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"}