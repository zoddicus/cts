{"version":3,"file":"value_constructor.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kScalarTypes","test","desc","params","u","combine","beforeAllSubcases","t","type","selectDeviceOrSkipTestCase","fn","enable","code","expectCompileResult","value_type","includes","beginSubcases","abstract","param","decl","size","comparison","i","unimplemented","cols","rows","c","r","kArrayCases","i32","element","valid","values","f32","u32","valid_array","invalid_rta","invalid_override_array","valid_struct","invalid_struct","invalid_atomic","testcase","case","kStructCases","name","decls","f32x2","vec3u","runtime_array","atomic","struct","many_members"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/value_constructor.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for constructor built-in functions.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kScalarTypes = ['bool', 'i32', 'u32', 'f32', 'f16'];\n\ng.test('scalar_zero_value')\n  .desc('Tests zero value scalar constructors')\n  .params(u => u.combine('type', kScalarTypes))\n  .beforeAllSubcases(t => {\n    if (t.params.type === 'f16') {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const enable = t.params.type === 'f16' ? 'enable f16;' : '';\n    const code = `${enable}\n    const x : ${t.params.type} = ${t.params.type}();\n    const_assert x == ${t.params.type}(0);`;\n    t.expectCompileResult(true, code);\n  });\n\ng.test('scalar_value')\n  .desc('Tests scalar value constructors')\n  .params(u =>\n    u\n      .combine('type', kScalarTypes)\n      .combine('value_type', [...kScalarTypes, 'vec2u', 'S', 'array<u32, 2>'])\n  )\n  .beforeAllSubcases(t => {\n    if (t.params.type === 'f16' || t.params.value_type === 'f16') {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const enable = t.params.type === 'f16' || t.params.value_type === 'f16' ? 'enable f16;' : '';\n    const code = `${enable}\n    const x : ${t.params.type} = ${t.params.type}(${t.params.value_type}());`;\n    t.expectCompileResult(kScalarTypes.includes(t.params.value_type), code);\n  });\n\ng.test('vector_zero_value')\n  .desc('Tests zero value vector constructors')\n  .params(u =>\n    u\n      .combine('type', [...kScalarTypes, 'abstract-int', 'abstract-float'] as const)\n      .beginSubcases()\n      .combine('size', [2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    if (t.params.type === 'f16') {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const abstract = t.params.type === 'abstract-int' || t.params.type === 'abstract-float';\n    const param = abstract ? '' : `<${t.params.type}>`;\n    const decl = `vec${t.params.size}${param}`;\n    const enable = t.params.type === 'f16' ? 'enable f16;' : '';\n    const comparison = abstract ? '0' : `${t.params.type}(0)`;\n    let code = `${enable}\n    const x ${abstract ? '' : `: ${decl}`} = ${decl}();\\n`;\n    for (let i = 0; i < t.params.size; i++) {\n      code += `const_assert x[${i}] == ${comparison};\\n`;\n    }\n    t.expectCompileResult(true, code);\n  });\n\ng.test('vector_splat').unimplemented();\n\ng.test('vector_copy').unimplemented();\n\ng.test('vector_elementwise').unimplemented();\n\ng.test('matrix_zero_value')\n  .desc('Tests zero value matrix constructors')\n  .params(u =>\n    u\n      .combine('type', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .combine('rows', [2, 3, 4] as const)\n      .combine('cols', [2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    if (t.params.type === 'f16') {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const decl = `mat${t.params.cols}x${t.params.rows}<${t.params.type}>`;\n    const enable = t.params.type === 'f16' ? 'enable f16;' : '';\n    let code = `${enable}\n    const x : ${decl} = ${decl}();\\n`;\n    for (let c = 0; c < t.params.cols; c++) {\n      for (let r = 0; r < t.params.rows; r++) {\n        code += `const_assert x[${c}][${r}] == ${t.params.type}(0);\\n`;\n      }\n    }\n    t.expectCompileResult(true, code);\n  });\n\ng.test('matrix_copy').unimplemented();\n\ng.test('matrix_column').unimplemented();\n\ng.test('matrix_elementwise').unimplemented();\n\ninterface ArrayCase {\n  element: string;\n  size: number | string;\n  valid: boolean;\n  values: string;\n}\n\nconst kArrayCases: Record<string, ArrayCase> = {\n  i32: {\n    element: 'i32',\n    size: 4,\n    valid: true,\n    values: '1,2,3,4',\n  },\n  f32: {\n    element: 'f32',\n    size: 1,\n    valid: true,\n    values: '0',\n  },\n  u32: {\n    element: 'u32',\n    size: 2,\n    valid: true,\n    values: '2,4',\n  },\n  valid_array: {\n    element: 'array<u32, 2>',\n    size: 2,\n    valid: true,\n    values: 'array(0,1), array(2,3)',\n  },\n  invalid_rta: {\n    element: 'u32',\n    size: '',\n    valid: false,\n    values: '0',\n  },\n  invalid_override_array: {\n    element: 'u32',\n    size: 'o',\n    valid: false,\n    values: '1',\n  },\n  valid_struct: {\n    element: 'valid_S',\n    size: 1,\n    valid: true,\n    values: 'valid_S(0)',\n  },\n  invalid_struct: {\n    element: 'invalid_S',\n    size: 1,\n    valid: false,\n    values: 'array(0)',\n  },\n  invalid_atomic: {\n    element: 'atomic<u32>',\n    size: 1,\n    valid: false,\n    values: '0',\n  },\n};\n\ng.test('array_zero_value')\n  .desc('Tests zero value array constructors')\n  .params(u => u.combine('case', keysOf(kArrayCases)))\n  .fn(t => {\n    const testcase = kArrayCases[t.params.case];\n    const decl = `array<${testcase.element}, ${testcase.size}>`;\n    const code = `override o : i32 = 1;\n    struct valid_S {\n      x : u32\n    }\n    struct invalid_S {\n      x : array<u32>\n    }\n    const x : ${decl} = ${decl}();`;\n    t.expectCompileResult(testcase.valid, code);\n  });\n\ng.test('array_value')\n  .desc('Tests array value constructor')\n  .params(u => u.combine('case', keysOf(kArrayCases)))\n  .fn(t => {\n    const testcase = kArrayCases[t.params.case];\n    const decl = `array<${testcase.element}, ${testcase.size}>`;\n    const code = `override o : i32 = 1;\n    struct valid_S {\n      x : u32\n    }\n    struct invalid_S {\n      x : array<u32>\n    }\n    const x : ${decl} = ${decl}(${testcase.values});`;\n    t.expectCompileResult(testcase.valid, code);\n  });\n\nconst kStructCases = {\n  i32: {\n    name: 'S',\n    decls: `struct S { x : u32 }`,\n    valid: true,\n    values: '0',\n  },\n  f32x2: {\n    name: 'S',\n    decls: `struct S { x : f32, y : f32 }`,\n    valid: true,\n    values: '0,1',\n  },\n  vec3u: {\n    name: 'S',\n    decls: `struct S { x : vec3u }`,\n    valid: true,\n    values: 'vec3()',\n  },\n  valid_array: {\n    name: 'S',\n    decls: `struct S { x : array<u32, 2> }`,\n    valid: true,\n    values: 'array(1,2)',\n  },\n  runtime_array: {\n    name: 'S',\n    decls: `struct S { x : array<u32> }`,\n    valid: false,\n    values: 'array(0)',\n  },\n  atomic: {\n    name: 'S',\n    decls: `struct S { x : atomic<u32> }`,\n    valid: false,\n    values: '0',\n  },\n  struct: {\n    name: 'S',\n    decls: `struct S {\n      x : T\n    }\n    struct T {\n      x : u32\n    }`,\n    valid: true,\n    values: 'T(0)',\n  },\n  many_members: {\n    name: 'S',\n    decls: `struct S {\n      a : bool,\n      b : u32,\n      c : i32,\n      d : vec4f,\n    }`,\n    valid: true,\n    values: 'false, 1u, 32i, vec4f(1.0f)',\n  },\n};\n\ng.test('struct_zero_value')\n  .desc('Tests zero value struct constructors')\n  .params(u => u.combine('case', keysOf(kStructCases)))\n  .fn(t => {\n    const testcase = kStructCases[t.params.case];\n    const code = `\n    ${testcase.decls}\n    const x : ${testcase.name} = ${testcase.name}();`;\n    t.expectCompileResult(testcase.valid, code);\n  });\n\ng.test('struct_value')\n  .desc('Tests struct value constructors')\n  .params(u => u.combine('case', keysOf(kStructCases)))\n  .fn(t => {\n    const testcase = kStructCases[t.params.case];\n    const code = `\n    ${testcase.decls}\n    const x : ${testcase.name} = ${testcase.name}(${testcase.values});`;\n    t.expectCompileResult(testcase.valid, code);\n  });\n"],"mappings":"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"}