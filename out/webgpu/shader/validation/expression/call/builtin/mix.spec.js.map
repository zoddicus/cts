{"version":3,"file":"mix.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","kConvertableToFloatVectors","scalarTypeOf","ShaderValidationTest","ConstantOrOverrideValueChecker","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValidArgumentTypes","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","beforeAllSubcases","t","f16","selectDeviceOrSkipTestCase","fn","scalarType","vCheck","a","Number","b","c","c1","checkedResult","ac1","bc","allChecksPassed","create","kArgCases","good","bad_no_parens","bad_0args","bad_1arg","bad_2arg","bad_4arg","bad_0bool","bad_0array","bad_0struct","bad_0int","bad_0uint","bad_0vec2i","bad_0vec3i","bad_0vec4i","bad_0vec2u","bad_0vec3u","bad_0vec4u","bad_1bool","bad_1array","bad_1struct","bad_1int","bad_1uint","bad_1vec2i","bad_1vec3i","bad_1vec4i","bad_1vec2u","bad_1vec3u","bad_1vec4u","bad_2bool","bad_2array","bad_2struct","bad_2int","bad_2uint","bad_2vec2i","bad_2vec3i","bad_2vec4i","bad_2vec2u","bad_2vec3u","bad_2vec4u","expectCompileResult","arg","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/mix.spec.ts"],"sourcesContent":["const builtin = 'mix';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport { Type, kConvertableToFloatVectors, scalarTypeOf } from '../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  ConstantOrOverrideValueChecker,\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValidArgumentTypes = objectsToRecord(kConvertableToFloatVectors);\n\ng.test('values')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() never errors\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kValidArgumentTypes))\n      .filter(u => stageSupportsType(u.stage, kValidArgumentTypes[u.type]))\n      .beginSubcases()\n      .expand('a', u => fullRangeForType(kValidArgumentTypes[u.type], 5))\n      .expand('b', u => fullRangeForType(kValidArgumentTypes[u.type], 5))\n      .expand('c', u => fullRangeForType(kValidArgumentTypes[u.type], 5))\n  )\n  .beforeAllSubcases(t => {\n    if (scalarTypeOf(kValidArgumentTypes[t.params.type]) === Type.f16) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const scalarType = scalarTypeOf(kValidArgumentTypes[t.params.type]);\n    const vCheck = new ConstantOrOverrideValueChecker(t, scalarType);\n\n    // Mix equation: a * (1 - c) + b * c\n    // Should be invalid if the mix calculations result in intermediate\n    // values that exceed the maximum representable float value for the given type.\n    const a = Number(t.params.a);\n    const b = Number(t.params.b);\n    const c = Number(t.params.c);\n    const c1 = vCheck.checkedResult(1 - c);\n    const ac1 = vCheck.checkedResult(a * c1);\n    const bc = vCheck.checkedResult(b * c);\n    vCheck.checkedResult(ac1 + bc);\n\n    const type = kValidArgumentTypes[t.params.type];\n\n    // Validates mix(vecN(a), vecN(b), vecN(c));\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      vCheck.allChecksPassed(),\n      [type.create(t.params.a), type.create(t.params.b), type.create(t.params.c)],\n      t.params.stage\n    );\n\n    // Validates mix(vecN(a), vecN(b), c));\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      vCheck.allChecksPassed(),\n      [type.create(t.params.a), type.create(t.params.b), scalarType.create(t.params.c)],\n      t.params.stage\n    );\n  });\n\nconst kArgCases = {\n  good: '(vec3(0), vec3(1), vec3(0.5))',\n  bad_no_parens: '',\n  // Bad number of args\n  bad_0args: '()',\n  bad_1arg: '(vec3(0))',\n  bad_2arg: '(vec3(0), vec3(1))',\n  bad_4arg: '(vec3(0), vec3(1), vec3(0.5), vec3(3))',\n  // Bad value for arg 0\n  bad_0bool: '(false, vec3(1), vec3(0.5))',\n  bad_0array: '(array(1.1,2.2), vec3(1), vec3(0.5))',\n  bad_0struct: '(modf(2.2), vec3(1), vec3(0.5))',\n  bad_0int: '(1i, vec3(1), vec3(0.5))',\n  bad_0uint: '(1u, vec3(1), vec3(0.5))',\n  bad_0vec2i: '(vec2i(0), vec2(1), vec2(0.5))',\n  bad_0vec3i: '(vec3i(0), vec3(1), vec3(0.5))',\n  bad_0vec4i: '(vec4i(0), vec4(1), vec4(0.5))',\n  bad_0vec2u: '(vec2u(0), vec2(1), vec2(0.5))',\n  bad_0vec3u: '(vec3u(0), vec3(1), vec3(0.5))',\n  bad_0vec4u: '(vec4u(0), vec4(1), vec4(0.5))',\n  // Bad value type for arg 1\n  bad_1bool: '(vec3(0), true, vec3(0.5))',\n  bad_1array: '(vec3(0), array(1.1,2.2), vec3(0.5))',\n  bad_1struct: '(vec3(0), modf(2.2), vec3(0.5))',\n  bad_1int: '(vec3(0), 1i, vec3(0.5))',\n  bad_1uint: '(vec3(0), 1u, vec3(0.5))',\n  bad_1vec2i: '(vec2(1), vec2i(1), vec2(0.5))',\n  bad_1vec3i: '(vec3(1), vec3i(1), vec3(0.5))',\n  bad_1vec4i: '(vec4(1), vec4i(1), vec4(0.5))',\n  bad_1vec2u: '(vec2(1), vec2u(1), vec2(0.5))',\n  bad_1vec3u: '(vec3(1), vec3u(1), vec3(0.5))',\n  bad_1vec4u: '(vec4(1), vec4u(1), vec4(0.5))',\n  // Bad value type for arg 2\n  bad_2bool: '(vec3(0), vec3(1), true)',\n  bad_2array: '(vec3(0), vec3(1), array(1.1,2.2))',\n  bad_2struct: '(vec3(0), vec3(1), modf(2.2))',\n  bad_2int: '(vec3(0), vec3(1), 1i)',\n  bad_2uint: '(vec3(0), vec3(1), 1u)',\n  bad_2vec2i: '(vec2(1), vec2(1), vec2i(1))',\n  bad_2vec3i: '(vec3(1), vec3(1), vec3i(1))',\n  bad_2vec4i: '(vec4(1), vec4(1), vec4i(1))',\n  bad_2vec2u: '(vec2(1), vec2(1), vec2u(1))',\n  bad_2vec3u: '(vec3(1), vec3(1), vec3u(1))',\n  bad_2vec4u: '(vec4(1), vec4(1), vec4u(1))',\n};\n\ng.test('args')\n  .desc(`Test compilation failure of ${builtin} with variously shaped and typed arguments`)\n  .params(u => u.combine('arg', keysOf(kArgCases)))\n  .fn(t => {\n    t.expectCompileResult(\n      t.params.arg === 'good',\n      `const c = ${builtin}${kArgCases[t.params.arg]};`\n    );\n  });\n\ng.test('must_use')\n  .desc(`Result of ${builtin} must be used`)\n  .params(u => u.combine('use', [true, false]))\n  .fn(t => {\n    const use_it = t.params.use ? '_ = ' : '';\n    t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}${kArgCases['good']}; }`);\n  });\n"],"mappings":"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"}