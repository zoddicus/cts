{"version":3,"file":"quadSwap.spec.js","names":["description","makeTestGroup","keysOf","objectsToRecord","Type","elementTypeOf","kAllScalarsAndVectors","isConvertible","ShaderValidationTest","g","kOps","test","desc","params","u","combine","beforeAllSubcases","t","selectDeviceOrSkipTestCase","fn","wgsl","enable","op","expectCompileResult","kStages","constant","override","runtime","code","stage","must_use","kTypes","features","type","requiresF16","push","enables","create","eleType","bool","filter","retType","abstractInt","abstractFloat","paramType","toString","eleParamType","eleRetType","expect","i32","f32","compute","fragment","vertex","entry"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/quadSwap.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for quadSwapX, quadSwapY, and quadSwapDiagonal.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  elementTypeOf,\n  kAllScalarsAndVectors,\n  isConvertible,\n} from '../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kOps = ['quadSwapX', 'quadSwapY', 'quadSwapDiagonal'] as const;\n\ng.test('requires_subgroups')\n  .desc('Validates that the subgroups feature is required')\n  .params(u => u.combine('enable', [false, true] as const).combine('op', kOps))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('subgroups' as GPUFeatureName);\n  })\n  .fn(t => {\n    const wgsl = `\n${t.params.enable ? 'enable subgroups;' : ''}\nfn foo() {\n  _ = ${t.params.op}(0);\n}`;\n\n    t.expectCompileResult(t.params.enable, wgsl);\n  });\n\nconst kStages: Record<string, (op: string) => string> = {\n  constant: (op: string) => {\n    return `\nenable subgroups;\n@compute @workgroup_size(16)\nfn main() {\n  const x = ${op}(0);\n}`;\n  },\n  override: (op: string) => {\n    return `\nenable subgroups\noverride o = ${op}(0);`;\n  },\n  runtime: (op: string) => {\n    return `\nenable subgroups;\n@compute @workgroup_size(16)\nfn main() {\n  let x = ${op}(0);\n}`;\n  },\n};\n\ng.test('early_eval')\n  .desc('Ensures the builtin is not able to be compile time evaluated')\n  .params(u => u.combine('stage', keysOf(kStages)).combine('op', kOps))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('subgroups' as GPUFeatureName);\n  })\n  .fn(t => {\n    const code = kStages[t.params.stage](t.params.op);\n    t.expectCompileResult(t.params.stage === 'runtime', code);\n  });\n\ng.test('must_use')\n  .desc('Tests that the builtin has the @must_use attribute')\n  .params(u => u.combine('must_use', [true, false] as const).combine('op', kOps))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('subgroups' as GPUFeatureName);\n  })\n  .fn(t => {\n    const wgsl = `\nenable subgroups;\n@compute @workgroup_size(16)\nfn main() {\n  ${t.params.must_use ? '_ = ' : ''}${t.params.op}(0);\n}`;\n\n    t.expectCompileResult(t.params.must_use, wgsl);\n  });\n\nconst kTypes = objectsToRecord(kAllScalarsAndVectors);\n\ng.test('data_type')\n  .desc('Validates data parameter type')\n  .params(u => u.combine('type', keysOf(kTypes)).combine('op', kOps))\n  .beforeAllSubcases(t => {\n    const features = ['subgroups' as GPUFeatureName];\n    const type = kTypes[t.params.type];\n    if (type.requiresF16()) {\n      features.push('shader-f16');\n    }\n    t.selectDeviceOrSkipTestCase(features);\n  })\n  .fn(t => {\n    const type = kTypes[t.params.type];\n    let enables = `enable subgroups;\\n`;\n    if (type.requiresF16()) {\n      enables += `enable f16;`;\n    }\n    const wgsl = `\n${enables}\n@compute @workgroup_size(1)\nfn main() {\n  _ = ${t.params.op}(${type.create(0).wgsl()});\n}`;\n\n    const eleType = elementTypeOf(type);\n    t.expectCompileResult(eleType !== Type.bool, wgsl);\n  });\n\ng.test('return_type')\n  .desc('Validates return type')\n  .params(u =>\n    u\n      .combine('retType', keysOf(kTypes))\n      .filter(t => {\n        const type = kTypes[t.retType];\n        const eleType = elementTypeOf(type);\n        return eleType !== Type.abstractInt && eleType !== Type.abstractFloat;\n      })\n      .combine('op', kOps)\n      .combine('paramType', keysOf(kTypes))\n  )\n  .beforeAllSubcases(t => {\n    const features = ['subgroups' as GPUFeatureName];\n    const retType = kTypes[t.params.retType];\n    const paramType = kTypes[t.params.paramType];\n    if (retType.requiresF16() || paramType.requiresF16()) {\n      features.push('shader-f16');\n    }\n    t.selectDeviceOrSkipTestCase(features);\n  })\n  .fn(t => {\n    const retType = kTypes[t.params.retType];\n    const paramType = kTypes[t.params.paramType];\n    let enables = `enable subgroups;\\n`;\n    if (retType.requiresF16() || paramType.requiresF16()) {\n      enables += `enable f16;`;\n    }\n    const wgsl = `\n${enables}\n@compute @workgroup_size(1)\nfn main() {\n  let res : ${retType.toString()} = ${t.params.op}(${paramType.create(0).wgsl()});\n}`;\n\n    // Can't just use isConvertible since functions must concretize the parameter\n    // type before examining the whole statement.\n    const eleParamType = elementTypeOf(paramType);\n    const eleRetType = elementTypeOf(retType);\n    let expect = paramType === retType && eleRetType !== Type.bool;\n    if (eleParamType === Type.abstractInt) {\n      expect = eleRetType === Type.i32 && isConvertible(paramType, retType);\n    } else if (eleParamType === Type.abstractFloat) {\n      expect = eleRetType === Type.f32 && isConvertible(paramType, retType);\n    }\n    t.expectCompileResult(expect, wgsl);\n  });\n\ng.test('stage')\n  .desc('validates builtin is only usable in the correct stages')\n  .params(u => u.combine('stage', ['compute', 'fragment', 'vertex'] as const).combine('op', kOps))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('subgroups' as GPUFeatureName);\n  })\n  .fn(t => {\n    const compute = `\n@compute @workgroup_size(1)\nfn main() {\n  foo();\n}`;\n\n    const fragment = `\n@fragment\nfn main() {\n  foo();\n}`;\n\n    const vertex = `\n@vertex\nfn main() -> @builtin(position) vec4f {\n  foo();\n  return vec4f();\n}`;\n\n    const entry = { compute, fragment, vertex }[t.params.stage];\n    const wgsl = `\nenable subgroups;\nfn foo() {\n  _ = ${t.params.op}(0);\n}\n\n${entry}\n`;\n\n    t.expectCompileResult(t.params.stage !== 'vertex', wgsl);\n  });\n"],"mappings":"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"}