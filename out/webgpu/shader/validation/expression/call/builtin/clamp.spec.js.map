{"version":3,"file":"clamp.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","kConvertableToFloatScalarsAndVectors","kConcreteIntegerScalarsAndVectors","scalarTypeOf","f32","isConvertible","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValuesTypes","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","beforeAllSubcases","t","f16","selectDeviceOrSkipTestCase","fn","expectedResult","low","high","create","e","skipIf","combineWithParams","typesToArguments","types","pass","reduce","res","toString","arg","wgsl","kInputArgTypes","bool","mat2x2f","alias","vec_bool","atomic","array","preamble","array_runtime","struct","enumerant","ptr","ptr_deref","sampler","texture","expectCompileResult","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/clamp.spec.ts"],"sourcesContent":["const builtin = 'clamp';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  kConvertableToFloatScalarsAndVectors,\n  kConcreteIntegerScalarsAndVectors,\n  scalarTypeOf,\n  f32,\n  isConvertible,\n} from '../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValuesTypes = objectsToRecord([\n  ...kConvertableToFloatScalarsAndVectors,\n  ...kConcreteIntegerScalarsAndVectors,\n]);\n\ng.test('values')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() rejects invalid values\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kValuesTypes))\n      .filter(u => stageSupportsType(u.stage, kValuesTypes[u.type]))\n      .beginSubcases()\n      .expand('e', u => fullRangeForType(kValuesTypes[u.type], 3))\n      .expand('low', u => fullRangeForType(kValuesTypes[u.type], 4))\n      .expand('high', u => fullRangeForType(kValuesTypes[u.type], 4))\n  )\n  .beforeAllSubcases(t => {\n    if (scalarTypeOf(kValuesTypes[t.params.type]) === Type.f16) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const type = kValuesTypes[t.params.type];\n    const expectedResult = t.params.low <= t.params.high;\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [type.create(t.params.e), type.create(t.params.low), type.create(t.params.high)],\n      t.params.stage\n    );\n  });\n\ng.test('mismatched')\n  .desc(\n    `\nValidates that even with valid types, if types do not match, ${builtin}() errors\n`\n  )\n  .params(u =>\n    u\n      .combine('e', keysOf(kValuesTypes))\n      .beginSubcases()\n      .combine('low', keysOf(kValuesTypes))\n      .combine('high', keysOf(kValuesTypes))\n  )\n  .beforeAllSubcases(t => {\n    if (scalarTypeOf(kValuesTypes[t.params.e]) === Type.f16) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const e = kValuesTypes[t.params.e];\n    const low = kValuesTypes[t.params.low];\n    const high = kValuesTypes[t.params.high];\n\n    // Skip if shader-16 isn't available.\n    t.skipIf(scalarTypeOf(low) === Type.f16 || scalarTypeOf(high) === Type.f16);\n\n    // If there exists 1 type of the 3 args that the other 2 can be converted into, then the args\n    // are valid.\n    const expectedResult =\n      (isConvertible(low, e) && isConvertible(high, e)) ||\n      (isConvertible(e, low) && isConvertible(high, low)) ||\n      (isConvertible(e, high) && isConvertible(low, high));\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [e.create(1), low.create(0), high.create(2)],\n      'constant'\n    );\n  });\n\ng.test('low_high')\n  .desc(\n    `\nValidates that low <= high.\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .beginSubcases()\n      .combineWithParams([\n        { low: 0, high: 1 },\n        { low: 1, high: 1 },\n        { low: 1, high: 0 },\n      ] as const)\n  )\n  .fn(t => {\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      /* expectedResult */ t.params.low <= t.params.high,\n      [f32(1), f32(t.params.low), f32(t.params.high)],\n      t.params.stage\n    );\n  });\n\ninterface Argument {\n  /** Argument as a string. */\n  readonly arg: string;\n  /** Is this a valid argument type. Note that all args must be valid for the call to be valid. */\n  readonly pass: boolean;\n  /** Additional setup code necessary for this arg in the function scope. */\n  readonly preamble?: string;\n}\n\nfunction typesToArguments(types: readonly Type[], pass: boolean): Record<string, Argument> {\n  return types.reduce(\n    (res, type) => ({\n      ...res,\n      [type.toString()]: { arg: type.create(0).wgsl(), pass },\n    }),\n    {}\n  );\n}\n\n// f32 is included here to confirm that validation is failing due to a type issue and not something else.\nconst kInputArgTypes: { readonly [name: string]: Argument } = {\n  ...typesToArguments([Type.f32], true),\n  ...typesToArguments([Type.bool, Type.mat2x2f], false),\n  alias: { arg: 'f32_alias(1.f)', pass: true },\n  vec_bool: { arg: 'vec2<bool>(false,true)', pass: false },\n  atomic: { arg: 'a', pass: false },\n  array: {\n    preamble: 'var arry: array<f32, 5>;',\n    arg: 'arry',\n    pass: false,\n  },\n  array_runtime: { arg: 'k.arry', pass: false },\n  struct: {\n    preamble: 'var x: A;',\n    arg: 'x',\n    pass: false,\n  },\n  enumerant: { arg: 'read_write', pass: false },\n  ptr: {\n    preamble: `var<function> f = 1.f;\n               let p: ptr<function, f32> = &f;`,\n    arg: 'p',\n    pass: false,\n  },\n  ptr_deref: {\n    preamble: `var<function> f = 1.f;\n               let p: ptr<function, f32> = &f;`,\n    arg: '*p',\n    pass: true,\n  },\n  sampler: { arg: 's', pass: false },\n  texture: { arg: 't', pass: false },\n};\n\ng.test('arguments')\n  .desc(\n    `\nTest compilation validation of ${builtin} with variously typed arguments\n  - Note that this passes the same type for all args. Mismatching types are tested separately above.\n`\n  )\n  .params(u => u.combine('type', keysOf(kInputArgTypes)))\n  .fn(t => {\n    const type = kInputArgTypes[t.params.type];\n    t.expectCompileResult(\n      type.pass,\n      `alias f32_alias = f32;\n\n      @group(0) @binding(0) var s: sampler;\n      @group(0) @binding(1) var t: texture_2d<f32>;\n\n      var<workgroup> a: atomic<u32>;\n\n      struct A {\n        i: u32,\n      }\n      struct B {\n        arry: array<u32>,\n      }\n      @group(0) @binding(3) var<storage> k: B;\n\n\n      @vertex\n      fn main() -> @builtin(position) vec4<f32> {\n        ${type.preamble ? type.preamble : ''}\n        _ = ${builtin}(${type.arg},${type.arg},${type.arg});\n        return vec4<f32>(.4, .2, .3, .1);\n      }`\n    );\n  });\n\ng.test('must_use')\n  .desc(`Result of ${builtin} must be used`)\n  .params(u => u.combine('use', [true, false]))\n  .fn(t => {\n    const use_it = t.params.use ? '_ = ' : '';\n    t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}(1.f,0.f,1.f); }`);\n  });\n"],"mappings":";;GAAA,MAAMA,OAAO,GAAG,OAAO,CACvB,OAAO,MAAMC,WAAW,GAAI;AAC5B,2BAA2BD,OAAQ;AACnC,CAAC;AAED,SAASE,aAAa,QAAQ,kDAAkD;AAChF,SAASC,MAAM,EAAEC,eAAe,QAAQ,8CAA8C;AACtF;EACEC,IAAI;EACJC,oCAAoC;EACpCC,iCAAiC;EACjCC,YAAY;EACZC,GAAG;EACHC,aAAa;AACR,mCAAmC;AAC1C,SAASC,oBAAoB,QAAQ,oCAAoC;;AAEzE;EACEC,gBAAgB;EAChBC,0BAA0B;EAC1BC,iBAAiB;EACjBC,kCAAkC;AAC7B,gCAAgC;;AAEvC,OAAO,MAAMC,CAAC,GAAGd,aAAa,CAACS,oBAAoB,CAAC;;AAEpD,MAAMM,YAAY,GAAGb,eAAe,CAAC;AACnC,GAAGE,oCAAoC;AACvC,GAAGC,iCAAiC;AACrC,CAAC;;AAEFS,CAAC,CAACE,IAAI,CAAC,QAAQ,CAAC;AACbC,IAAI;EACF;AACL,gEAAgEnB,OAAQ;AACxE;AACE,CAAC;AACAoB,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,OAAO,EAAET,0BAA0B,CAAC;AAC5CS,OAAO,CAAC,MAAM,EAAEnB,MAAM,CAACc,YAAY,CAAC,CAAC;AACrCM,MAAM,CAAC,CAAAF,CAAC,KAAIP,iBAAiB,CAACO,CAAC,CAACG,KAAK,EAAEP,YAAY,CAACI,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;AAC7DC,aAAa,CAAC,CAAC;AACfC,MAAM,CAAC,GAAG,EAAE,CAAAN,CAAC,KAAIT,gBAAgB,CAACK,YAAY,CAACI,CAAC,CAACI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3DE,MAAM,CAAC,KAAK,EAAE,CAAAN,CAAC,KAAIT,gBAAgB,CAACK,YAAY,CAACI,CAAC,CAACI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7DE,MAAM,CAAC,MAAM,EAAE,CAAAN,CAAC,KAAIT,gBAAgB,CAACK,YAAY,CAACI,CAAC,CAACI,IAAI,CAAC,EAAE,CAAC,CAAC;AAClE,CAAC;AACAG,iBAAiB,CAAC,CAAAC,CAAC,KAAI;EACtB,IAAIrB,YAAY,CAACS,YAAY,CAACY,CAAC,CAACT,MAAM,CAACK,IAAI,CAAC,CAAC,KAAKpB,IAAI,CAACyB,GAAG,EAAE;IAC1DD,CAAC,CAACE,0BAA0B,CAAC,YAAY,CAAC;EAC5C;AACF,CAAC,CAAC;AACDC,EAAE,CAAC,CAAAH,CAAC,KAAI;EACP,MAAMJ,IAAI,GAAGR,YAAY,CAACY,CAAC,CAACT,MAAM,CAACK,IAAI,CAAC;EACxC,MAAMQ,cAAc,GAAGJ,CAAC,CAACT,MAAM,CAACc,GAAG,IAAIL,CAAC,CAACT,MAAM,CAACe,IAAI;EACpDpB,kCAAkC;IAChCc,CAAC;IACD7B,OAAO;IACPiC,cAAc;IACd,CAACR,IAAI,CAACW,MAAM,CAACP,CAAC,CAACT,MAAM,CAACiB,CAAC,CAAC,EAAEZ,IAAI,CAACW,MAAM,CAACP,CAAC,CAACT,MAAM,CAACc,GAAG,CAAC,EAAET,IAAI,CAACW,MAAM,CAACP,CAAC,CAACT,MAAM,CAACe,IAAI,CAAC,CAAC;IAChFN,CAAC,CAACT,MAAM,CAACI;EACX,CAAC;AACH,CAAC,CAAC;;AAEJR,CAAC,CAACE,IAAI,CAAC,YAAY,CAAC;AACjBC,IAAI;EACF;AACL,+DAA+DnB,OAAQ;AACvE;AACE,CAAC;AACAoB,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,GAAG,EAAEnB,MAAM,CAACc,YAAY,CAAC,CAAC;AAClCS,aAAa,CAAC,CAAC;AACfJ,OAAO,CAAC,KAAK,EAAEnB,MAAM,CAACc,YAAY,CAAC,CAAC;AACpCK,OAAO,CAAC,MAAM,EAAEnB,MAAM,CAACc,YAAY,CAAC;AACzC,CAAC;AACAW,iBAAiB,CAAC,CAAAC,CAAC,KAAI;EACtB,IAAIrB,YAAY,CAACS,YAAY,CAACY,CAAC,CAACT,MAAM,CAACiB,CAAC,CAAC,CAAC,KAAKhC,IAAI,CAACyB,GAAG,EAAE;IACvDD,CAAC,CAACE,0BAA0B,CAAC,YAAY,CAAC;EAC5C;AACF,CAAC,CAAC;AACDC,EAAE,CAAC,CAAAH,CAAC,KAAI;EACP,MAAMQ,CAAC,GAAGpB,YAAY,CAACY,CAAC,CAACT,MAAM,CAACiB,CAAC,CAAC;EAClC,MAAMH,GAAG,GAAGjB,YAAY,CAACY,CAAC,CAACT,MAAM,CAACc,GAAG,CAAC;EACtC,MAAMC,IAAI,GAAGlB,YAAY,CAACY,CAAC,CAACT,MAAM,CAACe,IAAI,CAAC;;EAExC;EACAN,CAAC,CAACS,MAAM,CAAC9B,YAAY,CAAC0B,GAAG,CAAC,KAAK7B,IAAI,CAACyB,GAAG,IAAItB,YAAY,CAAC2B,IAAI,CAAC,KAAK9B,IAAI,CAACyB,GAAG,CAAC;;EAE3E;EACA;EACA,MAAMG,cAAc;EACjBvB,aAAa,CAACwB,GAAG,EAAEG,CAAC,CAAC,IAAI3B,aAAa,CAACyB,IAAI,EAAEE,CAAC,CAAC;EAC/C3B,aAAa,CAAC2B,CAAC,EAAEH,GAAG,CAAC,IAAIxB,aAAa,CAACyB,IAAI,EAAED,GAAG,CAAE;EAClDxB,aAAa,CAAC2B,CAAC,EAAEF,IAAI,CAAC,IAAIzB,aAAa,CAACwB,GAAG,EAAEC,IAAI,CAAE;EACtDpB,kCAAkC;IAChCc,CAAC;IACD7B,OAAO;IACPiC,cAAc;IACd,CAACI,CAAC,CAACD,MAAM,CAAC,CAAC,CAAC,EAAEF,GAAG,CAACE,MAAM,CAAC,CAAC,CAAC,EAAED,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5C;EACF,CAAC;AACH,CAAC,CAAC;;AAEJpB,CAAC,CAACE,IAAI,CAAC,UAAU,CAAC;AACfC,IAAI;EACF;AACL;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,OAAO,EAAET,0BAA0B,CAAC;AAC5Ca,aAAa,CAAC,CAAC;AACfa,iBAAiB,CAAC;AACjB,EAAEL,GAAG,EAAE,CAAC,EAAEC,IAAI,EAAE,CAAC,CAAC,CAAC;AACnB,EAAED,GAAG,EAAE,CAAC,EAAEC,IAAI,EAAE,CAAC,CAAC,CAAC;AACnB,EAAED,GAAG,EAAE,CAAC,EAAEC,IAAI,EAAE,CAAC,CAAC,CAAC;AACX;AACd,CAAC;AACAH,EAAE,CAAC,CAAAH,CAAC,KAAI;EACPd,kCAAkC;IAChCc,CAAC;IACD7B,OAAO;IACP,oBAAqB6B,CAAC,CAACT,MAAM,CAACc,GAAG,IAAIL,CAAC,CAACT,MAAM,CAACe,IAAI;IAClD,CAAC1B,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAACoB,CAAC,CAACT,MAAM,CAACc,GAAG,CAAC,EAAEzB,GAAG,CAACoB,CAAC,CAACT,MAAM,CAACe,IAAI,CAAC,CAAC;IAC/CN,CAAC,CAACT,MAAM,CAACI;EACX,CAAC;AACH,CAAC,CAAC;;;;;;;;;;;AAWJ,SAASgB,gBAAgBA,CAACC,KAAsB,EAAEC,IAAa,EAA4B;EACzF,OAAOD,KAAK,CAACE,MAAM;IACjB,CAACC,GAAG,EAAEnB,IAAI,MAAM;MACd,GAAGmB,GAAG;MACN,CAACnB,IAAI,CAACoB,QAAQ,CAAC,CAAC,GAAG,EAAEC,GAAG,EAAErB,IAAI,CAACW,MAAM,CAAC,CAAC,CAAC,CAACW,IAAI,CAAC,CAAC,EAAEL,IAAI,CAAC;IACxD,CAAC,CAAC;IACF,CAAC;EACH,CAAC;AACH;;AAEA;AACA,MAAMM,cAAqD,GAAG;EAC5D,GAAGR,gBAAgB,CAAC,CAACnC,IAAI,CAACI,GAAG,CAAC,EAAE,IAAI,CAAC;EACrC,GAAG+B,gBAAgB,CAAC,CAACnC,IAAI,CAAC4C,IAAI,EAAE5C,IAAI,CAAC6C,OAAO,CAAC,EAAE,KAAK,CAAC;EACrDC,KAAK,EAAE,EAAEL,GAAG,EAAE,gBAAgB,EAAEJ,IAAI,EAAE,IAAI,CAAC,CAAC;EAC5CU,QAAQ,EAAE,EAAEN,GAAG,EAAE,wBAAwB,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;EACxDW,MAAM,EAAE,EAAEP,GAAG,EAAE,GAAG,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;EACjCY,KAAK,EAAE;IACLC,QAAQ,EAAE,0BAA0B;IACpCT,GAAG,EAAE,MAAM;IACXJ,IAAI,EAAE;EACR,CAAC;EACDc,aAAa,EAAE,EAAEV,GAAG,EAAE,QAAQ,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;EAC7Ce,MAAM,EAAE;IACNF,QAAQ,EAAE,WAAW;IACrBT,GAAG,EAAE,GAAG;IACRJ,IAAI,EAAE;EACR,CAAC;EACDgB,SAAS,EAAE,EAAEZ,GAAG,EAAE,YAAY,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;EAC7CiB,GAAG,EAAE;IACHJ,QAAQ,EAAG;AACf,+CAA+C;IAC3CT,GAAG,EAAE,GAAG;IACRJ,IAAI,EAAE;EACR,CAAC;EACDkB,SAAS,EAAE;IACTL,QAAQ,EAAG;AACf,+CAA+C;IAC3CT,GAAG,EAAE,IAAI;IACTJ,IAAI,EAAE;EACR,CAAC;EACDmB,OAAO,EAAE,EAAEf,GAAG,EAAE,GAAG,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;EAClCoB,OAAO,EAAE,EAAEhB,GAAG,EAAE,GAAG,EAAEJ,IAAI,EAAE,KAAK,CAAC;AACnC,CAAC;;AAED1B,CAAC,CAACE,IAAI,CAAC,WAAW,CAAC;AAChBC,IAAI;EACF;AACL,iCAAiCnB,OAAQ;AACzC;AACA;AACE,CAAC;AACAoB,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,MAAM,EAAEnB,MAAM,CAAC6C,cAAc,CAAC,CAAC,CAAC;AACtDhB,EAAE,CAAC,CAAAH,CAAC,KAAI;EACP,MAAMJ,IAAI,GAAGuB,cAAc,CAACnB,CAAC,CAACT,MAAM,CAACK,IAAI,CAAC;EAC1CI,CAAC,CAACkC,mBAAmB;IACnBtC,IAAI,CAACiB,IAAI;IACR;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAUjB,IAAI,CAAC8B,QAAQ,GAAG9B,IAAI,CAAC8B,QAAQ,GAAG,EAAG;AAC7C,cAAcvD,OAAQ,IAAGyB,IAAI,CAACqB,GAAI,IAAGrB,IAAI,CAACqB,GAAI,IAAGrB,IAAI,CAACqB,GAAI;AAC1D;AACA;EACI,CAAC;AACH,CAAC,CAAC;;AAEJ9B,CAAC,CAACE,IAAI,CAAC,UAAU,CAAC;AACfC,IAAI,CAAE,aAAYnB,OAAQ,eAAc,CAAC;AACzCoB,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5CU,EAAE,CAAC,CAAAH,CAAC,KAAI;EACP,MAAMmC,MAAM,GAAGnC,CAAC,CAACT,MAAM,CAAC6C,GAAG,GAAG,MAAM,GAAG,EAAE;EACzCpC,CAAC,CAACkC,mBAAmB,CAAClC,CAAC,CAACT,MAAM,CAAC6C,GAAG,EAAG,YAAWD,MAAO,GAAEhE,OAAQ,kBAAiB,CAAC;AACrF,CAAC,CAAC"}