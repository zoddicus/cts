{"version":3,"file":"exp.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","kValue","Type","kConcreteIntegerScalarsAndVectors","kConvertableToFloatScalarsAndVectors","scalarTypeOf","isRepresentable","ShaderValidationTest","kConstantAndOverrideStages","rangeForType","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValuesTypes","valueForType","Math","log2","f16","positive","max","f32","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","beforeAllSubcases","t","selectDeviceOrSkipTestCase","fn","expectedResult","exp","Number","value","kind","abstractFloat","create","kIntegerArgumentTypes"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/exp.spec.ts"],"sourcesContent":["const builtin = 'exp';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport { kValue } from '../../../../../util/constants.js';\nimport {\n  Type,\n  kConcreteIntegerScalarsAndVectors,\n  kConvertableToFloatScalarsAndVectors,\n  scalarTypeOf,\n} from '../../../../../util/conversion.js';\nimport { isRepresentable } from '../../../../../util/floating_point.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  kConstantAndOverrideStages,\n  rangeForType,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValuesTypes = objectsToRecord(kConvertableToFloatScalarsAndVectors);\n\nconst valueForType = rangeForType(\n  [\n    -1e2,\n    -1e3,\n    -4,\n    -3,\n    -2,\n    -1,\n    -1e-1,\n    -1e-2,\n    -1e-3,\n    0,\n    1e-3,\n    1e-2,\n    1e-1,\n    1,\n    2,\n    3,\n    4,\n    1e2,\n    1e3,\n    Math.log2(kValue.f16.positive.max) - 0.1,\n    Math.log2(kValue.f16.positive.max) + 0.1,\n    Math.log2(kValue.f32.positive.max) - 0.1,\n    Math.log2(kValue.f32.positive.max) + 0.1,\n  ],\n  [-100n, -1000n, -4n, -3n, -2n, -1n, 0n, 1n, 2n, 3n, 4n, 100n, 1000n]\n);\n\ng.test('values')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() rejects invalid values\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kValuesTypes))\n      .filter(u => stageSupportsType(u.stage, kValuesTypes[u.type]))\n      .beginSubcases()\n      .expand('value', u => valueForType(kValuesTypes[u.type]))\n  )\n  .beforeAllSubcases(t => {\n    if (scalarTypeOf(kValuesTypes[t.params.type]) === Type.f16) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const type = kValuesTypes[t.params.type];\n    const expectedResult = isRepresentable(\n      Math.exp(Number(t.params.value)),\n      // AbstractInt is converted to AbstractFloat before calling into the builtin\n      scalarTypeOf(type).kind === 'abstract-int' ? Type.abstractFloat : scalarTypeOf(type)\n    );\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [type.create(t.params.value)],\n      t.params.stage\n    );\n  });\n\nconst kIntegerArgumentTypes = objectsToRecord([Type.f32, ...kConcreteIntegerScalarsAndVectors]);\n\ng.test('integer_argument')\n  .desc(\n    `\nValidates that scalar and vector integer arguments are rejected by ${builtin}()\n`\n  )\n  .params(u => u.combine('type', keysOf(kIntegerArgumentTypes)))\n  .fn(t => {\n    const type = kIntegerArgumentTypes[t.params.type];\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      /* expectedResult */ type === Type.f32,\n      [type.create(0)],\n      'constant'\n    );\n  });\n"],"mappings":"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"}