{"version":3,"file":"fma.spec.js","names":["description","makeTestGroup","GPUTest","TypeF32","TypeF16","TypeAbstractFloat","FP","sparseF32Range","sparseF16Range","sparseF64Range","makeCaseCache","allInputSources","onlyConstInputSource","run","abstractBuiltin","builtin","g","d","f32_const","f32","generateScalarTripleToIntervalCases","fmaInterval","f32_non_const","f16_const","f16","f16_non_const","abstract","test","specURL","desc","params","u","combine","undefined","fn","t","cases","get","inputSource","beforeAllSubcases","selectDeviceOrSkipTestCase","requiredFeatures"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/fma.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'fma' builtin function\n\nS is AbstractFloat, f32, f16\nT is S or vecN<S>\n@const fn fma(e1: T ,e2: T ,e3: T ) -> T\nReturns e1 * e2 + e3. Component-wise when T is a vector.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeF32, TypeF16, TypeAbstractFloat } from '../../../../../util/conversion.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport { sparseF32Range, sparseF16Range, sparseF64Range } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, onlyConstInputSource, run } from '../../expression.js';\n\nimport { abstractBuiltin, builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('fma', {\n  f32_const: () => {\n    return FP.f32.generateScalarTripleToIntervalCases(\n      sparseF32Range(),\n      sparseF32Range(),\n      sparseF32Range(),\n      'finite',\n      FP.f32.fmaInterval\n    );\n  },\n  f32_non_const: () => {\n    return FP.f32.generateScalarTripleToIntervalCases(\n      sparseF32Range(),\n      sparseF32Range(),\n      sparseF32Range(),\n      'unfiltered',\n      FP.f32.fmaInterval\n    );\n  },\n  f16_const: () => {\n    return FP.f16.generateScalarTripleToIntervalCases(\n      sparseF16Range(),\n      sparseF16Range(),\n      sparseF16Range(),\n      'finite',\n      FP.f16.fmaInterval\n    );\n  },\n  f16_non_const: () => {\n    return FP.f16.generateScalarTripleToIntervalCases(\n      sparseF16Range(),\n      sparseF16Range(),\n      sparseF16Range(),\n      'unfiltered',\n      FP.f16.fmaInterval\n    );\n  },\n  abstract: () => {\n    return FP.abstract.generateScalarTripleToIntervalCases(\n      sparseF64Range(),\n      sparseF64Range(),\n      sparseF64Range(),\n      'finite',\n      FP.abstract.fmaInterval\n    );\n  },\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u\n      .combine('inputSource', onlyConstInputSource)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('abstract');\n    await run(\n      t,\n      abstractBuiltin('fma'),\n      [TypeAbstractFloat, TypeAbstractFloat, TypeAbstractFloat],\n      TypeAbstractFloat,\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f32_const' : 'f32_non_const');\n    await run(t, builtin('fma'), [TypeF32, TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f16_const' : 'f16_non_const');\n    await run(t, builtin('fma'), [TypeF16, TypeF16, TypeF16], TypeF16, t.params, cases);\n  });\n"],"mappings":"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"}