{"version":3,"file":"atan.spec.js","names":["description","makeTestGroup","GPUTest","TypeF32","TypeF16","FP","makeCaseCache","allInputSources","run","builtin","g","known_values","Math","sqrt","cases","flatMap","trait","map","nonConst","generateScalarToIntervalCases","scalarRange","atanInterval","reduce","a","b","d","test","specURL","desc","params","u","combine","undefined","unimplemented","fn","t","get","inputSource","beforeAllSubcases","selectDeviceOrSkipTestCase"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/atan.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'atan' builtin function\n\nS is AbstractFloat, f32, f16\nT is S or vecN<S>\n@const fn atan(e: T ) -> T\nReturns the arc tangent of e. Component-wise when T is a vector.\n\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeF32, TypeF16 } from '../../../../../util/conversion.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nconst known_values = [-Math.sqrt(3), -1, -1 / Math.sqrt(3), 0, 1, 1 / Math.sqrt(3), Math.sqrt(3)];\n\n// Cases: [f32|f16]_[non_]const\nconst cases = (['f32', 'f16'] as const)\n  .flatMap(trait =>\n    ([true, false] as const).map(nonConst => ({\n      [`${trait}_${nonConst ? 'non_const' : 'const'}`]: () => {\n        return FP[trait].generateScalarToIntervalCases(\n          [...known_values, ...FP[trait].scalarRange()],\n          nonConst ? 'unfiltered' : 'finite',\n          FP[trait].atanInterval\n        );\n      },\n    }))\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('atan', cases);\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nf32 tests\n\nTODO(#792): Decide what the ground-truth is for these tests. [1]\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f32_const' : 'f32_non_const');\n    await run(t, builtin('atan'), [TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f16_const' : 'f16_non_const');\n    await run(t, builtin('atan'), [TypeF16], TypeF16, t.params, cases);\n  });\n"],"mappings":"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"}