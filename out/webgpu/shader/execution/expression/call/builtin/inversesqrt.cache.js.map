{"version":3,"file":"inversesqrt.cache.js","names":["kValue","FP","biasedRange","linearRange","makeCaseCache","d","f32","generateScalarToIntervalCases","positive","min","inverseSqrtInterval","f16","abstract","f64"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/inversesqrt.cache.ts"],"sourcesContent":["import { kValue } from '../../../../../util/constants.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport { biasedRange, linearRange } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\n\nexport const d = makeCaseCache('inverseSqrt', {\n  f32: () => {\n    return FP.f32.generateScalarToIntervalCases(\n      [\n        // 0 < x <= 1 linearly spread\n        ...linearRange(kValue.f32.positive.min, 1, 100),\n        // 1 <= x < 2^32, biased towards 1\n        ...biasedRange(1, 2 ** 32, 1000),\n      ],\n      'unfiltered',\n      FP.f32.inverseSqrtInterval\n    );\n  },\n  f16: () => {\n    return FP.f16.generateScalarToIntervalCases(\n      [\n        // 0 < x <= 1 linearly spread\n        ...linearRange(kValue.f16.positive.min, 1, 100),\n        // 1 <= x < 2^15, biased towards 1\n        ...biasedRange(1, 2 ** 15, 1000),\n      ],\n      'unfiltered',\n      FP.f16.inverseSqrtInterval\n    );\n  },\n  abstract: () => {\n    return FP.abstract.generateScalarToIntervalCases(\n      [\n        // 0 < x <= 1 linearly spread\n        ...linearRange(kValue.f64.positive.min, 1, 100),\n        // 1 <= x < 2^64, biased towards 1, only using 100 steps, because af tests are more expensive per case\n        ...biasedRange(1, 2 ** 64, 100),\n      ],\n      'finite',\n      // inverseSqrt has an ulp accuracy, so is only expected to be as accurate as f32\n      FP.f32.inverseSqrtInterval\n    );\n  },\n});\n"],"mappings":";;GAAA,SAASA,MAAM,QAAQ,kCAAkC,CACzD,SAASC,EAAE,QAAQ,uCAAuC,CAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,6BAA6B;AACtE,SAASC,aAAa,QAAQ,qBAAqB;;AAEnD,OAAO,MAAMC,CAAC,GAAGD,aAAa,CAAC,aAAa,EAAE;EAC5CE,GAAG,EAAEA,CAAA,KAAM;IACT,OAAOL,EAAE,CAACK,GAAG,CAACC,6BAA6B;MACzC;MACE;MACA,GAAGJ,WAAW,CAACH,MAAM,CAACM,GAAG,CAACE,QAAQ,CAACC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;MAC/C;MACA,GAAGP,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,CACjC;;MACD,YAAY;MACZD,EAAE,CAACK,GAAG,CAACI;IACT,CAAC;EACH,CAAC;EACDC,GAAG,EAAEA,CAAA,KAAM;IACT,OAAOV,EAAE,CAACU,GAAG,CAACJ,6BAA6B;MACzC;MACE;MACA,GAAGJ,WAAW,CAACH,MAAM,CAACW,GAAG,CAACH,QAAQ,CAACC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;MAC/C;MACA,GAAGP,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,CACjC;;MACD,YAAY;MACZD,EAAE,CAACU,GAAG,CAACD;IACT,CAAC;EACH,CAAC;EACDE,QAAQ,EAAEA,CAAA,KAAM;IACd,OAAOX,EAAE,CAACW,QAAQ,CAACL,6BAA6B;MAC9C;MACE;MACA,GAAGJ,WAAW,CAACH,MAAM,CAACa,GAAG,CAACL,QAAQ,CAACC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;MAC/C;MACA,GAAGP,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,GAAG,CAAC,CAChC;;MACD,QAAQ;MACR;MACAD,EAAE,CAACK,GAAG,CAACI;IACT,CAAC;EACH;AACF,CAAC,CAAC"}