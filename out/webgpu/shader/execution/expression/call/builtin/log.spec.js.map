{"version":3,"file":"log.spec.js","names":["description","makeTestGroup","GPUTest","kValue","TypeF32","TypeF16","FP","biasedRange","fullF32Range","fullF16Range","linearRange","makeCaseCache","allInputSources","run","builtin","g","f32_inputs","f32","positive","min","f16_inputs","f16","d","f32_const","generateScalarToIntervalCases","logInterval","f32_non_const","f16_const","f16_non_const","test","specURL","desc","params","u","combine","undefined","unimplemented","fn","t","cases","get","inputSource","beforeAllSubcases","selectDeviceOrSkipTestCase"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/log.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'log' builtin function\n\nS is AbstractFloat, f32, f16\nT is S or vecN<S>\n@const fn log(e: T ) -> T\nReturns the natural logarithm of e. Component-wise when T is a vector.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { kValue } from '../../../../../util/constants.js';\nimport { TypeF32, TypeF16 } from '../../../../../util/conversion.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport { biasedRange, fullF32Range, fullF16Range, linearRange } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n// log's accuracy is defined in three regions { [0, 0.5), [0.5, 2.0], (2.0, +âˆž] }\nconst f32_inputs = [\n  ...linearRange(kValue.f32.positive.min, 0.5, 20),\n  ...linearRange(0.5, 2.0, 20),\n  ...biasedRange(2.0, 2 ** 32, 1000),\n  ...fullF32Range(),\n];\nconst f16_inputs = [\n  ...linearRange(kValue.f16.positive.min, 0.5, 20),\n  ...linearRange(0.5, 2.0, 20),\n  ...biasedRange(2.0, 2 ** 32, 1000),\n  ...fullF16Range(),\n];\n\nexport const d = makeCaseCache('log', {\n  f32_const: () => {\n    return FP.f32.generateScalarToIntervalCases(f32_inputs, 'finite', FP.f32.logInterval);\n  },\n  f32_non_const: () => {\n    return FP.f32.generateScalarToIntervalCases(f32_inputs, 'unfiltered', FP.f32.logInterval);\n  },\n  f16_const: () => {\n    return FP.f16.generateScalarToIntervalCases(f16_inputs, 'finite', FP.f16.logInterval);\n  },\n  f16_non_const: () => {\n    return FP.f16.generateScalarToIntervalCases(f16_inputs, 'unfiltered', FP.f16.logInterval);\n  },\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nf32 tests\n\nTODO(#792): Decide what the ground-truth is for these tests. [1]\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f32_const' : 'f32_non_const');\n    await run(t, builtin('log'), [TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f16_const' : 'f16_non_const');\n    await run(t, builtin('log'), [TypeF16], TypeF16, t.params, cases);\n  });\n"],"mappings":"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"}