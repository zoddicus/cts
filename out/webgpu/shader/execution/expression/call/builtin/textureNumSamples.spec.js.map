{"version":3,"file":"textureNumSamples.spec.js","names":["description","makeTestGroup","kSampleTypeInfo","WGSLTextureQueryTest","g","test","specURL","desc","params","u","beginSubcases","combine","fn","t","sampled_type","format","sampleCount","texture","createTextureTracked","usage","GPUTextureUsage","TEXTURE_BINDING","RENDER_ATTACHMENT","size","code","expected","view","createView","executeAndExpectResult"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/textureNumSamples.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'textureNumSamples' builtin function\n\nReturns the number samples per texel in a multisampled texture.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\n\nimport { kSampleTypeInfo, WGSLTextureQueryTest } from './texture_utils.js';\n\nexport const g = makeTestGroup(WGSLTextureQueryTest);\n\ng.test('sampled')\n  .specURL('https://www.w3.org/TR/WGSL/#texturenumsamples')\n  .desc(\n    `\nT, a sampled type.\n\nfn textureNumSamples(t: texture_multisampled_2d<T>) -> u32\n\nParameters\n * t The multisampled texture.\n`\n  )\n  .params(u => u.beginSubcases().combine('sampled_type', ['f32', 'i32', 'u32'] as const))\n  .fn(t => {\n    const { sampled_type } = t.params;\n    const { format } = kSampleTypeInfo[sampled_type];\n\n    const sampleCount = 4;\n    const texture = t.createTextureTracked({\n      format,\n      usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT,\n      size: [1, 1, 1],\n      sampleCount,\n    });\n\n    const code = `\n@group(0) @binding(0) var t: texture_multisampled_2d<${sampled_type}>;\n@group(0) @binding(1) var<storage, read_write> result: u32;\n@compute @workgroup_size(1) fn cs() {\n  result = textureNumSamples(t);\n}\n    `;\n\n    const expected = [sampleCount];\n    const view = texture.createView({});\n\n    t.executeAndExpectResult(code, view, expected);\n  });\n\ng.test('depth')\n  .specURL('https://www.w3.org/TR/WGSL/#texturenumsamples')\n  .desc(\n    `\nfn textureNumSamples(t: texture_depth_multisampled_2d) -> u32\n\nParameters\n * t The multisampled texture.\n`\n  )\n  .fn(t => {\n    const sampleCount = 4;\n    const texture = t.createTextureTracked({\n      format: 'depth32float',\n      usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT,\n      size: [1, 1, 1],\n      sampleCount,\n    });\n\n    const code = `\n@group(0) @binding(0) var t: texture_depth_multisampled_2d;\n@group(0) @binding(1) var<storage, read_write> result: u32;\n@compute @workgroup_size(1) fn cs() {\n  result = textureNumSamples(t);\n}\n    `;\n\n    const expected = [sampleCount];\n    const view = texture.createView({});\n\n    t.executeAndExpectResult(code, view, expected);\n  });\n"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,kDAAkD;;AAEhF,SAASC,eAAe,EAAEC,oBAAoB,QAAQ,oBAAoB;;AAE1E,OAAO,MAAMC,CAAC,GAAGH,aAAa,CAACE,oBAAoB,CAAC;;AAEpDC,CAAC,CAACC,IAAI,CAAC,SAAS,CAAC;AACdC,OAAO,CAAC,+CAA+C,CAAC;AACxDC,IAAI;EACF;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,aAAa,CAAC,CAAC,CAACC,OAAO,CAAC,cAAc,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAU,CAAC,CAAC;AACtFC,EAAE,CAAC,CAAAC,CAAC,KAAI;EACP,MAAM,EAAEC,YAAY,CAAC,CAAC,GAAGD,CAAC,CAACL,MAAM;EACjC,MAAM,EAAEO,MAAM,CAAC,CAAC,GAAGb,eAAe,CAACY,YAAY,CAAC;;EAEhD,MAAME,WAAW,GAAG,CAAC;EACrB,MAAMC,OAAO,GAAGJ,CAAC,CAACK,oBAAoB,CAAC;IACrCH,MAAM;IACNI,KAAK,EAAEC,eAAe,CAACC,eAAe,GAAGD,eAAe,CAACE,iBAAiB;IAC1EC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACfP;EACF,CAAC,CAAC;;EAEF,MAAMQ,IAAI,GAAI;AAClB,uDAAuDV,YAAa;AACpE;AACA;AACA;AACA;AACA,KAAK;;EAED,MAAMW,QAAQ,GAAG,CAACT,WAAW,CAAC;EAC9B,MAAMU,IAAI,GAAGT,OAAO,CAACU,UAAU,CAAC,CAAC,CAAC,CAAC;;EAEnCd,CAAC,CAACe,sBAAsB,CAACJ,IAAI,EAAEE,IAAI,EAAED,QAAQ,CAAC;AAChD,CAAC,CAAC;;AAEJrB,CAAC,CAACC,IAAI,CAAC,OAAO,CAAC;AACZC,OAAO,CAAC,+CAA+C,CAAC;AACxDC,IAAI;EACF;AACL;AACA;AACA;AACA;AACA;AACE,CAAC;AACAK,EAAE,CAAC,CAAAC,CAAC,KAAI;EACP,MAAMG,WAAW,GAAG,CAAC;EACrB,MAAMC,OAAO,GAAGJ,CAAC,CAACK,oBAAoB,CAAC;IACrCH,MAAM,EAAE,cAAc;IACtBI,KAAK,EAAEC,eAAe,CAACC,eAAe,GAAGD,eAAe,CAACE,iBAAiB;IAC1EC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACfP;EACF,CAAC,CAAC;;EAEF,MAAMQ,IAAI,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA,KAAK;;EAED,MAAMC,QAAQ,GAAG,CAACT,WAAW,CAAC;EAC9B,MAAMU,IAAI,GAAGT,OAAO,CAACU,UAAU,CAAC,CAAC,CAAC,CAAC;;EAEnCd,CAAC,CAACe,sBAAsB,CAACJ,IAAI,EAAEE,IAAI,EAAED,QAAQ,CAAC;AAChD,CAAC,CAAC"}