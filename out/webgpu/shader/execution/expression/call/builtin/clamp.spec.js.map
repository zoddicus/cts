{"version":3,"file":"clamp.spec.js","names":["description","makeTestGroup","GPUTest","kValue","TypeF32","TypeF16","TypeI32","TypeU32","TypeAbstractFloat","FP","sparseF32Range","sparseF16Range","sparseF64Range","makeCaseCache","allInputSources","onlyConstInputSource","run","abstractBuiltin","builtin","g","u32Values","u32","max","i32Values","i32","negative","min","positive","d","u32_non_const","generateIntegerTestCases","u32_const","i32_non_const","i32_const","f32_const","generateFloatTestCases","f32_non_const","f16_const","f16_non_const","abstract","test_values","type","stage","flatMap","low","high","map","e","input","create","expected","Math","trait","c","makeScalarTripleToIntervalCase","clampIntervals","undefined","test","specURL","desc","params","u","combine","unimplemented","fn","t","cases","get","inputSource","beforeAllSubcases","selectDeviceOrSkipTestCase"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/clamp.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'clamp' builtin function\n\nS is AbstractInt, i32, or u32\nT is S or vecN<S>\n@const fn clamp(e: T , low: T, high: T) -> T\nReturns min(max(e,low),high). Component-wise when T is a vector.\n\nS is AbstractFloat, f32, f16\nT is S or vecN<S>\n@const clamp(e: T , low: T , high: T) -> T\nReturns either min(max(e,low),high), or the median of the three values e, low, high.\nComponent-wise when T is a vector.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { kValue } from '../../../../../util/constants.js';\nimport {\n  ScalarType,\n  TypeF32,\n  TypeF16,\n  TypeI32,\n  TypeU32,\n  TypeAbstractFloat,\n} from '../../../../../util/conversion.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport { sparseF32Range, sparseF16Range, sparseF64Range } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, Case, onlyConstInputSource, run } from '../../expression.js';\n\nimport { abstractBuiltin, builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nconst u32Values = [0, 1, 2, 3, 0x70000000, 0x80000000, kValue.u32.max];\n\nconst i32Values = [\n  kValue.i32.negative.min,\n  -3,\n  -2,\n  -1,\n  0,\n  1,\n  2,\n  3,\n  0x70000000,\n  kValue.i32.positive.max,\n];\n\nexport const d = makeCaseCache('clamp', {\n  u32_non_const: () => {\n    return generateIntegerTestCases(u32Values, TypeU32, 'non-const');\n  },\n  u32_const: () => {\n    return generateIntegerTestCases(u32Values, TypeU32, 'const');\n  },\n  i32_non_const: () => {\n    return generateIntegerTestCases(i32Values, TypeI32, 'non-const');\n  },\n  i32_const: () => {\n    return generateIntegerTestCases(i32Values, TypeI32, 'const');\n  },\n  f32_const: () => {\n    return generateFloatTestCases(sparseF32Range(), 'f32', 'const');\n  },\n  f32_non_const: () => {\n    return generateFloatTestCases(sparseF32Range(), 'f32', 'non-const');\n  },\n  f16_const: () => {\n    return generateFloatTestCases(sparseF16Range(), 'f16', 'const');\n  },\n  f16_non_const: () => {\n    return generateFloatTestCases(sparseF16Range(), 'f16', 'non-const');\n  },\n  abstract: () => {\n    return generateFloatTestCases(sparseF64Range(), 'abstract', 'const');\n  },\n});\n\n/** @returns a set of clamp test cases from an ascending list of integer values */\nfunction generateIntegerTestCases(\n  test_values: Array<number>,\n  type: ScalarType,\n  stage: 'const' | 'non-const'\n): Array<Case> {\n  return test_values.flatMap(low =>\n    test_values.flatMap(high =>\n      stage === 'const' && low > high\n        ? []\n        : test_values.map(e => ({\n            input: [type.create(e), type.create(low), type.create(high)],\n            expected: type.create(Math.min(Math.max(e, low), high)),\n          }))\n    )\n  );\n}\n\nfunction generateFloatTestCases(\n  test_values: readonly number[],\n  trait: 'f32' | 'f16' | 'abstract',\n  stage: 'const' | 'non-const'\n): Array<Case> {\n  return test_values.flatMap(low =>\n    test_values.flatMap(high =>\n      stage === 'const' && low > high\n        ? []\n        : test_values.flatMap(e => {\n            const c = FP[trait].makeScalarTripleToIntervalCase(\n              e,\n              low,\n              high,\n              stage === 'const' ? 'finite' : 'unfiltered',\n              ...FP[trait].clampIntervals\n            );\n            return c === undefined ? [] : [c];\n          })\n    )\n  );\n}\n\ng.test('abstract_int')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`abstract int tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('u32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`u32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'u32_const' : 'u32_non_const');\n    await run(t, builtin('clamp'), [TypeU32, TypeU32, TypeU32], TypeU32, t.params, cases);\n  });\n\ng.test('i32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`i32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'i32_const' : 'i32_non_const');\n    await run(t, builtin('clamp'), [TypeI32, TypeI32, TypeI32], TypeI32, t.params, cases);\n  });\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u\n      .combine('inputSource', onlyConstInputSource)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('abstract');\n    await run(\n      t,\n      abstractBuiltin('clamp'),\n      [TypeAbstractFloat, TypeAbstractFloat, TypeAbstractFloat],\n      TypeAbstractFloat,\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f32_const' : 'f32_non_const');\n    await run(t, builtin('clamp'), [TypeF32, TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f16_const' : 'f16_non_const');\n    await run(t, builtin('clamp'), [TypeF16, TypeF16, TypeF16], TypeF16, t.params, cases);\n  });\n"],"mappings":"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"}