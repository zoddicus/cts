{"version":3,"file":"clamp.spec.js","names":["description","makeTestGroup","GPUTest","kValue","TypeF32","TypeF16","TypeI32","TypeU32","TypeAbstractFloat","FP","makeCaseCache","allInputSources","onlyConstInputSource","run","abstractBuiltin","builtin","g","u32Values","u32","max","i32Values","i32","negative","min","positive","generateIntegerTestCases","test_values","type","stage","flatMap","low","high","map","e","input","create","expected","Math","generateFloatTestCases","trait","c","makeScalarTripleToIntervalCase","clampIntervals","undefined","fp_cases","nonConst","sparseScalarRange","reduce","a","b","d","u32_non_const","u32_const","i32_non_const","i32_const","test","specURL","desc","params","u","combine","unimplemented","fn","t","cases","get","inputSource","beforeAllSubcases","selectDeviceOrSkipTestCase"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/clamp.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'clamp' builtin function\n\nS is AbstractInt, i32, or u32\nT is S or vecN<S>\n@const fn clamp(e: T , low: T, high: T) -> T\nReturns min(max(e,low),high). Component-wise when T is a vector.\n\nS is AbstractFloat, f32, f16\nT is S or vecN<S>\n@const clamp(e: T , low: T , high: T) -> T\nReturns either min(max(e,low),high), or the median of the three values e, low, high.\nComponent-wise when T is a vector.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { kValue } from '../../../../../util/constants.js';\nimport {\n  ScalarType,\n  TypeF32,\n  TypeF16,\n  TypeI32,\n  TypeU32,\n  TypeAbstractFloat,\n} from '../../../../../util/conversion.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, Case, onlyConstInputSource, run } from '../../expression.js';\n\nimport { abstractBuiltin, builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nconst u32Values = [0, 1, 2, 3, 0x70000000, 0x80000000, kValue.u32.max];\n\nconst i32Values = [\n  kValue.i32.negative.min,\n  -3,\n  -2,\n  -1,\n  0,\n  1,\n  2,\n  3,\n  0x70000000,\n  kValue.i32.positive.max,\n];\n\n/** @returns a set of clamp test cases from an ascending list of integer values */\nfunction generateIntegerTestCases(\n  test_values: Array<number>,\n  type: ScalarType,\n  stage: 'const' | 'non_const'\n): Array<Case> {\n  return test_values.flatMap(low =>\n    test_values.flatMap(high =>\n      stage === 'const' && low > high\n        ? []\n        : test_values.map(e => ({\n            input: [type.create(e), type.create(low), type.create(high)],\n            expected: type.create(Math.min(Math.max(e, low), high)),\n          }))\n    )\n  );\n}\n\nfunction generateFloatTestCases(\n  test_values: readonly number[],\n  trait: 'f32' | 'f16' | 'abstract',\n  stage: 'const' | 'non_const'\n): Array<Case> {\n  return test_values.flatMap(low =>\n    test_values.flatMap(high =>\n      stage === 'const' && low > high\n        ? []\n        : test_values.flatMap(e => {\n            const c = FP[trait].makeScalarTripleToIntervalCase(\n              e,\n              low,\n              high,\n              stage === 'const' ? 'finite' : 'unfiltered',\n              ...FP[trait].clampIntervals\n            );\n            return c === undefined ? [] : [c];\n          })\n    )\n  );\n}\n\n// Cases: [f32|f16|abstract]_[non_]const\n// abstract_non_const is empty and unused\nconst fp_cases = (['f32', 'f16', 'abstract'] as const)\n  .flatMap(trait =>\n    ([true, false] as const).map(nonConst => ({\n      [`${trait}_${nonConst ? 'non_const' : 'const'}`]: () => {\n        if (trait === 'abstract' && nonConst) {\n          return [];\n        }\n        return generateFloatTestCases(\n          FP[trait].sparseScalarRange(),\n          trait,\n          nonConst ? 'non_const' : 'const'\n        );\n      },\n    }))\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('clamp', {\n  u32_non_const: () => {\n    return generateIntegerTestCases(u32Values, TypeU32, 'non_const');\n  },\n  u32_const: () => {\n    return generateIntegerTestCases(u32Values, TypeU32, 'const');\n  },\n  i32_non_const: () => {\n    return generateIntegerTestCases(i32Values, TypeI32, 'non_const');\n  },\n  i32_const: () => {\n    return generateIntegerTestCases(i32Values, TypeI32, 'const');\n  },\n  ...fp_cases,\n});\n\ng.test('abstract_int')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`abstract int tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('u32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`u32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'u32_const' : 'u32_non_const');\n    await run(t, builtin('clamp'), [TypeU32, TypeU32, TypeU32], TypeU32, t.params, cases);\n  });\n\ng.test('i32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`i32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'i32_const' : 'i32_non_const');\n    await run(t, builtin('clamp'), [TypeI32, TypeI32, TypeI32], TypeI32, t.params, cases);\n  });\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u\n      .combine('inputSource', onlyConstInputSource)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('abstract_const');\n    await run(\n      t,\n      abstractBuiltin('clamp'),\n      [TypeAbstractFloat, TypeAbstractFloat, TypeAbstractFloat],\n      TypeAbstractFloat,\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f32_const' : 'f32_non_const');\n    await run(t, builtin('clamp'), [TypeF32, TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f16_const' : 'f16_non_const');\n    await run(t, builtin('clamp'), [TypeF16, TypeF16, TypeF16], TypeF16, t.params, cases);\n  });\n"],"mappings":"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"}