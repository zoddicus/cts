{"version":3,"file":"clamp.spec.js","names":["description","makeTestGroup","GPUTest","TypeAbstractFloat","TypeAbstractInt","TypeF16","TypeF32","TypeI32","TypeU32","allInputSources","onlyConstInputSource","run","abstractFloatBuiltin","abstractIntBuiltin","builtin","d","g","test","specURL","desc","params","u","combine","undefined","fn","t","cases","get","inputSource","beforeAllSubcases","selectDeviceOrSkipTestCase"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/clamp.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'clamp' builtin function\n\nS is AbstractInt, i32, or u32\nT is S or vecN<S>\n@const fn clamp(e: T , low: T, high: T) -> T\nReturns min(max(e,low),high). Component-wise when T is a vector.\n\nS is AbstractFloat, f32, f16\nT is S or vecN<S>\n@const clamp(e: T , low: T , high: T) -> T\nReturns either min(max(e,low),high), or the median of the three values e, low, high.\nComponent-wise when T is a vector.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport {\n  TypeAbstractFloat,\n  TypeAbstractInt,\n  TypeF16,\n  TypeF32,\n  TypeI32,\n  TypeU32,\n} from '../../../../../util/conversion.js';\nimport { allInputSources, onlyConstInputSource, run } from '../../expression.js';\n\nimport { abstractFloatBuiltin, abstractIntBuiltin, builtin } from './builtin.js';\nimport { d } from './clamp.cache.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('abstract_int')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`abstract int tests`)\n  .params(u =>\n    u\n      .combine('inputSource', onlyConstInputSource)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('abstract_int');\n    await run(\n      t,\n      abstractIntBuiltin('clamp'),\n      [TypeAbstractInt, TypeAbstractInt, TypeAbstractInt],\n      TypeAbstractInt,\n      t.params,\n      cases\n    );\n  });\n\ng.test('u32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`u32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'u32_const' : 'u32_non_const');\n    await run(t, builtin('clamp'), [TypeU32, TypeU32, TypeU32], TypeU32, t.params, cases);\n  });\n\ng.test('i32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`i32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'i32_const' : 'i32_non_const');\n    await run(t, builtin('clamp'), [TypeI32, TypeI32, TypeI32], TypeI32, t.params, cases);\n  });\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u\n      .combine('inputSource', onlyConstInputSource)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('abstract_const');\n    await run(\n      t,\n      abstractFloatBuiltin('clamp'),\n      [TypeAbstractFloat, TypeAbstractFloat, TypeAbstractFloat],\n      TypeAbstractFloat,\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f32_const' : 'f32_non_const');\n    await run(t, builtin('clamp'), [TypeF32, TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f16_const' : 'f16_non_const');\n    await run(t, builtin('clamp'), [TypeF16, TypeF16, TypeF16], TypeF16, t.params, cases);\n  });\n"],"mappings":"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"}