{"version":3,"file":"refract.spec.js","names":["description","makeTestGroup","GPUTest","toVector","TypeF32","TypeF16","TypeVec","FP","sparseF32Range","sparseF16Range","makeCaseCache","allInputSources","run","builtin","g","makeCase","kind","i","s","r","check","fp","map","quantize","vectors","refractInterval","some","e","isFinite","undefined","input","scalarBuilder","expected","generateCases","param_is","param_ss","param_rs","flatMap","filter","c","cases","trait","dim","nonConst","sparseVectorRange","reduce","a","b","d","test","specURL","desc","params","u","combine","unimplemented","fn","t","get","inputSource","beforeAllSubcases","selectDeviceOrSkipTestCase"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/refract.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'refract' builtin function\n\nT is vecN<I>\nI is AbstractFloat, f32, or f16\n@const fn refract(e1: T ,e2: T ,e3: I ) -> T\nFor the incident vector e1 and surface normal e2, and the ratio of indices of\nrefraction e3, let k = 1.0 -e3*e3* (1.0 - dot(e2,e1) * dot(e2,e1)).\nIf k < 0.0, returns the refraction vector 0.0, otherwise return the refraction\nvector e3*e1- (e3* dot(e2,e1) + sqrt(k)) *e2.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { ROArrayArray } from '../../../../../../common/util/types.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { toVector, TypeF32, TypeF16, TypeVec } from '../../../../../util/conversion.js';\nimport { FP, FPKind } from '../../../../../util/floating_point.js';\nimport { sparseF32Range, sparseF16Range } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, Case, IntervalFilter, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n// Using a bespoke implementation of make*Case and generate*Cases here\n// since refract is the only builtin with the API signature\n// (vec, vec, scalar) -> vec\n\n/**\n * @returns a Case for `refract`\n * @param kind what type of floating point numbers to operate on\n * @param i the `i` param for the case\n * @param s the `s` param for the case\n * @param r the `r` param for the case\n * @param check what interval checking to apply\n * */\nfunction makeCase(\n  kind: FPKind,\n  i: readonly number[],\n  s: readonly number[],\n  r: number,\n  check: IntervalFilter\n): Case | undefined {\n  const fp = FP[kind];\n  i = i.map(fp.quantize);\n  s = s.map(fp.quantize);\n  r = fp.quantize(r);\n\n  const vectors = fp.refractInterval(i, s, r);\n  if (check === 'finite' && vectors.some(e => !e.isFinite())) {\n    return undefined;\n  }\n\n  return {\n    input: [toVector(i, fp.scalarBuilder), toVector(s, fp.scalarBuilder), fp.scalarBuilder(r)],\n    expected: fp.refractInterval(i, s, r),\n  };\n}\n\n/**\n * @returns an array of Cases for `refract`\n * @param kind what type of floating point numbers to operate on\n * @param param_is array of inputs to try for the `i` param\n * @param param_ss array of inputs to try for the `s` param\n * @param param_rs array of inputs to try for the `r` param\n * @param check what interval checking to apply\n */\nfunction generateCases(\n  kind: FPKind,\n  param_is: ROArrayArray<number>,\n  param_ss: ROArrayArray<number>,\n  param_rs: readonly number[],\n  check: IntervalFilter\n): Case[] {\n  // Cannot use `cartesianProduct` here due to heterogeneous param types\n  return param_is\n    .flatMap(i => {\n      return param_ss.flatMap(s => {\n        return param_rs.map(r => {\n          return makeCase(kind, i, s, r, check);\n        });\n      });\n    })\n    .filter((c): c is Case => c !== undefined);\n}\n\n// Cases: [f32|f16]_vecN_[non_]const\nconst cases = (['f32', 'f16'] as const)\n  .flatMap(trait =>\n    ([2, 3, 4] as const).flatMap(dim =>\n      ([true, false] as const).map(nonConst => ({\n        [`${trait}_vec${dim}_${nonConst ? 'non_const' : 'const'}`]: () => {\n          return generateCases(\n            trait,\n            FP[trait].sparseVectorRange(dim),\n            FP[trait].sparseVectorRange(dim),\n            // NB: Refactor this when adding scalar ranges to FPTrait API\n            trait === 'f32' ? sparseF32Range() : sparseF16Range(),\n            nonConst ? 'unfiltered' : 'finite'\n          );\n        },\n      }))\n    )\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('refract', cases);\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u => u.combine('inputSource', allInputSources).combine('vectorize', [2, 3, 4] as const))\n  .unimplemented();\n\ng.test('f32_vec2')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec2s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f32_vec2_const' : 'f32_vec2_non_const'\n    );\n    await run(\n      t,\n      builtin('refract'),\n      [TypeVec(2, TypeF32), TypeVec(2, TypeF32), TypeF32],\n      TypeVec(2, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32_vec3')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec3s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f32_vec3_const' : 'f32_vec3_non_const'\n    );\n    await run(\n      t,\n      builtin('refract'),\n      [TypeVec(3, TypeF32), TypeVec(3, TypeF32), TypeF32],\n      TypeVec(3, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32_vec4')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec4s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f32_vec4_const' : 'f32_vec4_non_const'\n    );\n    await run(\n      t,\n      builtin('refract'),\n      [TypeVec(4, TypeF32), TypeVec(4, TypeF32), TypeF32],\n      TypeVec(4, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f16_vec2')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f16 tests using vec2s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f16_vec2_const' : 'f16_vec2_non_const'\n    );\n    await run(\n      t,\n      builtin('refract'),\n      [TypeVec(2, TypeF16), TypeVec(2, TypeF16), TypeF16],\n      TypeVec(2, TypeF16),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f16_vec3')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f16 tests using vec3s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f16_vec3_const' : 'f16_vec3_non_const'\n    );\n    await run(\n      t,\n      builtin('refract'),\n      [TypeVec(3, TypeF16), TypeVec(3, TypeF16), TypeF16],\n      TypeVec(3, TypeF16),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f16_vec4')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f16 tests using vec4s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f16_vec4_const' : 'f16_vec4_non_const'\n    );\n    await run(\n      t,\n      builtin('refract'),\n      [TypeVec(4, TypeF16), TypeVec(4, TypeF16), TypeF16],\n      TypeVec(4, TypeF16),\n      t.params,\n      cases\n    );\n  });\n"],"mappings":"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"}