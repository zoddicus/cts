{"version":3,"file":"transpose.spec.js","names":["description","makeTestGroup","GPUTest","TypeAbstractFloat","TypeF16","TypeF32","TypeMat","allInputSources","onlyConstInputSource","run","abstractBuiltin","builtin","d","g","test","specURL","desc","params","u","combine","fn","t","cols","rows","cases","get","inputSource","beforeAllSubcases","selectDeviceOrSkipTestCase"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/transpose.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'transpose' builtin function\n\nT is AbstractFloat, f32, or f16\n@const transpose(e: matRxC<T> ) -> matCxR<T>\nReturns the transpose of e.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeAbstractFloat, TypeF16, TypeF32, TypeMat } from '../../../../../util/conversion.js';\nimport { allInputSources, onlyConstInputSource, run } from '../../expression.js';\n\nimport { abstractBuiltin, builtin } from './builtin.js';\nimport { d } from './transpose.cache.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#matrix-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u\n      .combine('inputSource', onlyConstInputSource)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(`abstract_mat${cols}x${rows}_const`);\n    await run(\n      t,\n      abstractBuiltin('transpose'),\n      [TypeMat(cols, rows, TypeAbstractFloat)],\n      TypeMat(rows, cols, TypeAbstractFloat),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#matrix-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `f32_mat${cols}x${rows}_const`\n        : `f32_mat${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      builtin('transpose'),\n      [TypeMat(cols, rows, TypeF32)],\n      TypeMat(rows, cols, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#matrix-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `f16_mat${cols}x${rows}_const`\n        : `f16_mat${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      builtin('transpose'),\n      [TypeMat(cols, rows, TypeF16)],\n      TypeMat(rows, cols, TypeF16),\n      t.params,\n      cases\n    );\n  });\n"],"mappings":"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"}