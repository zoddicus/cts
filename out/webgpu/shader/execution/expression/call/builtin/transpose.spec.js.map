{"version":3,"file":"transpose.spec.js","names":["description","makeTestGroup","GPUTest","TypeAbstractFloat","TypeF16","TypeF32","TypeMat","FP","makeCaseCache","allInputSources","onlyConstInputSource","run","abstractBuiltin","builtin","g","cases","flatMap","trait","cols","rows","map","nonConst","generateMatrixToMatrixCases","sparseMatrixRange","transposeInterval","reduce","a","b","d","test","specURL","desc","params","u","combine","fn","t","get","inputSource","beforeAllSubcases","selectDeviceOrSkipTestCase"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/transpose.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'transpose' builtin function\n\nT is AbstractFloat, f32, or f16\n@const transpose(e: matRxC<T> ) -> matCxR<T>\nReturns the transpose of e.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeAbstractFloat, TypeF16, TypeF32, TypeMat } from '../../../../../util/conversion.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, onlyConstInputSource, run } from '../../expression.js';\n\nimport { abstractBuiltin, builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n// Cases: [f32|f16|abstract]_matCxR_[non_]const\n// abstract_matCxR_non_const is empty and not used\nconst cases = (['f32', 'f16', 'abstract'] as const)\n  .flatMap(trait =>\n    ([2, 3, 4] as const).flatMap(cols =>\n      ([2, 3, 4] as const).flatMap(rows =>\n        ([true, false] as const).map(nonConst => ({\n          [`${trait}_mat${cols}x${rows}_${nonConst ? 'non_const' : 'const'}`]: () => {\n            if (trait === 'abstract' && nonConst) {\n              return [];\n            }\n            return FP[trait].generateMatrixToMatrixCases(\n              FP[trait].sparseMatrixRange(cols, rows),\n              nonConst ? 'unfiltered' : 'finite',\n              FP[trait].transposeInterval\n            );\n          },\n        }))\n      )\n    )\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('transpose', cases);\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#matrix-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u\n      .combine('inputSource', onlyConstInputSource)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(`abstract_mat${cols}x${rows}_const`);\n    await run(\n      t,\n      abstractBuiltin('transpose'),\n      [TypeMat(cols, rows, TypeAbstractFloat)],\n      TypeMat(rows, cols, TypeAbstractFloat),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#matrix-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `f32_mat${cols}x${rows}_const`\n        : `f32_mat${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      builtin('transpose'),\n      [TypeMat(cols, rows, TypeF32)],\n      TypeMat(rows, cols, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#matrix-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `f16_mat${cols}x${rows}_const`\n        : `f16_mat${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      builtin('transpose'),\n      [TypeMat(cols, rows, TypeF16)],\n      TypeMat(rows, cols, TypeF16),\n      t.params,\n      cases\n    );\n  });\n"],"mappings":"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"}