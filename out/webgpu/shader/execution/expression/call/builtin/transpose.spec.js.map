{"version":3,"file":"transpose.spec.js","names":["description","makeTestGroup","GPUTest","TypeAbstractFloat","TypeF16","TypeF32","TypeMat","FP","sparseMatrixF16Range","sparseMatrixF32Range","sparseMatrixF64Range","makeCaseCache","allInputSources","onlyConstInputSource","run","abstractBuiltin","builtin","g","f32_cases","flatMap","cols","rows","map","nonConst","f32","generateMatrixToMatrixCases","transposeInterval","reduce","a","b","f16_cases","f16","abstract_cases","abstract","d","test","specURL","desc","params","u","combine","fn","t","cases","get","inputSource","beforeAllSubcases","selectDeviceOrSkipTestCase"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/transpose.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'transpose' builtin function\n\nT is AbstractFloat, f32, or f16\n@const transpose(e: matRxC<T> ) -> matCxR<T>\nReturns the transpose of e.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeAbstractFloat, TypeF16, TypeF32, TypeMat } from '../../../../../util/conversion.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport {\n  sparseMatrixF16Range,\n  sparseMatrixF32Range,\n  sparseMatrixF64Range,\n} from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, onlyConstInputSource, run } from '../../expression.js';\n\nimport { abstractBuiltin, builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n// Cases: f32_matCxR_[non_]const\nconst f32_cases = ([2, 3, 4] as const)\n  .flatMap(cols =>\n    ([2, 3, 4] as const).flatMap(rows =>\n      ([true, false] as const).map(nonConst => ({\n        [`f32_mat${cols}x${rows}_${nonConst ? 'non_const' : 'const'}`]: () => {\n          return FP.f32.generateMatrixToMatrixCases(\n            sparseMatrixF32Range(cols, rows),\n            nonConst ? 'unfiltered' : 'finite',\n            FP.f32.transposeInterval\n          );\n        },\n      }))\n    )\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\n// Cases: f16_matCxR_[non_]const\nconst f16_cases = ([2, 3, 4] as const)\n  .flatMap(cols =>\n    ([2, 3, 4] as const).flatMap(rows =>\n      ([true, false] as const).map(nonConst => ({\n        [`f16_mat${cols}x${rows}_${nonConst ? 'non_const' : 'const'}`]: () => {\n          return FP.f16.generateMatrixToMatrixCases(\n            sparseMatrixF16Range(cols, rows),\n            nonConst ? 'unfiltered' : 'finite',\n            FP.f16.transposeInterval\n          );\n        },\n      }))\n    )\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\n// Cases: abstract_matCxR\nconst abstract_cases = ([2, 3, 4] as const)\n  .flatMap(cols =>\n    ([2, 3, 4] as const).map(rows => ({\n      [`abstract_mat${cols}x${rows}`]: () => {\n        return FP.abstract.generateMatrixToMatrixCases(\n          sparseMatrixF64Range(cols, rows),\n          'finite',\n          FP.abstract.transposeInterval\n        );\n      },\n    }))\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('transpose', {\n  ...f32_cases,\n  ...f16_cases,\n  ...abstract_cases,\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#matrix-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u\n      .combine('inputSource', onlyConstInputSource)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(`abstract_mat${cols}x${rows}`);\n    await run(\n      t,\n      abstractBuiltin('transpose'),\n      [TypeMat(cols, rows, TypeAbstractFloat)],\n      TypeMat(rows, cols, TypeAbstractFloat),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#matrix-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `f32_mat${cols}x${rows}_const`\n        : `f32_mat${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      builtin('transpose'),\n      [TypeMat(cols, rows, TypeF32)],\n      TypeMat(rows, cols, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#matrix-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `f16_mat${cols}x${rows}_const`\n        : `f16_mat${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      builtin('transpose'),\n      [TypeMat(cols, rows, TypeF16)],\n      TypeMat(rows, cols, TypeF16),\n      t.params,\n      cases\n    );\n  });\n"],"mappings":";AAAA;AAAA,GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,kDAAkD;AAChF,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,iBAAiB,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,QAAQ,mCAAmC;AAChG,SAASC,EAAE,QAAQ,uCAAuC;AAC1D;AACEC,oBAAoB;AACpBC,oBAAoB;AACpBC,oBAAoB;AACf,6BAA6B;AACpC,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,eAAe,EAAEC,oBAAoB,EAAEC,GAAG,QAAQ,qBAAqB;;AAEhF,SAASC,eAAe,EAAEC,OAAO,QAAQ,cAAc;;AAEvD,OAAO,MAAMC,CAAC,GAAGhB,aAAa,CAACC,OAAO,CAAC;;AAEvC;AACA,MAAMgB,SAAS,GAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACzBC,OAAO,CAAC,CAAAC,IAAI;AACV,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAWD,OAAO,CAAC,CAAAE,IAAI;AAC9B,CAAC,IAAI,EAAE,KAAK,CAAC,CAAWC,GAAG,CAAC,CAAAC,QAAQ,MAAK;EACxC,CAAE,UAASH,IAAK,IAAGC,IAAK,IAAGE,QAAQ,GAAG,WAAW,GAAG,OAAQ,EAAC,GAAG,MAAM;IACpE,OAAOhB,EAAE,CAACiB,GAAG,CAACC,2BAA2B;IACvChB,oBAAoB,CAACW,IAAI,EAAEC,IAAI,CAAC;IAChCE,QAAQ,GAAG,YAAY,GAAG,QAAQ;IAClChB,EAAE,CAACiB,GAAG,CAACE,iBAAiB,CACzB;;EACH;AACF,CAAC,CAAC,CAAC,CACJ,CACF;;;AACAC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM,EAAE,GAAGD,CAAC,EAAE,GAAGC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEzC;AACA,MAAMC,SAAS,GAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACzBX,OAAO,CAAC,CAAAC,IAAI;AACV,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAWD,OAAO,CAAC,CAAAE,IAAI;AAC9B,CAAC,IAAI,EAAE,KAAK,CAAC,CAAWC,GAAG,CAAC,CAAAC,QAAQ,MAAK;EACxC,CAAE,UAASH,IAAK,IAAGC,IAAK,IAAGE,QAAQ,GAAG,WAAW,GAAG,OAAQ,EAAC,GAAG,MAAM;IACpE,OAAOhB,EAAE,CAACwB,GAAG,CAACN,2BAA2B;IACvCjB,oBAAoB,CAACY,IAAI,EAAEC,IAAI,CAAC;IAChCE,QAAQ,GAAG,YAAY,GAAG,QAAQ;IAClChB,EAAE,CAACwB,GAAG,CAACL,iBAAiB,CACzB;;EACH;AACF,CAAC,CAAC,CAAC,CACJ,CACF;;;AACAC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM,EAAE,GAAGD,CAAC,EAAE,GAAGC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEzC;AACA,MAAMG,cAAc,GAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC9Bb,OAAO,CAAC,CAAAC,IAAI;AACV,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAWE,GAAG,CAAC,CAAAD,IAAI,MAAK;EAChC,CAAE,eAAcD,IAAK,IAAGC,IAAK,EAAC,GAAG,MAAM;IACrC,OAAOd,EAAE,CAAC0B,QAAQ,CAACR,2BAA2B;IAC5Cf,oBAAoB,CAACU,IAAI,EAAEC,IAAI,CAAC;IAChC,QAAQ;IACRd,EAAE,CAAC0B,QAAQ,CAACP,iBAAiB,CAC9B;;EACH;AACF,CAAC,CAAC,CAAC,CACJ;;AACAC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM,EAAE,GAAGD,CAAC,EAAE,GAAGC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEzC,OAAO,MAAMK,CAAC,GAAGvB,aAAa,CAAC,WAAW,EAAE;EAC1C,GAAGO,SAAS;EACZ,GAAGY,SAAS;EACZ,GAAGE;AACL,CAAC,CAAC;;AAEFf,CAAC,CAACkB,IAAI,CAAC,gBAAgB,CAAC;AACrBC,OAAO,CAAC,sDAAsD,CAAC;AAC/DC,IAAI,CAAE,sBAAqB,CAAC;AAC5BC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,aAAa,EAAE3B,oBAAoB,CAAC;AAC5C2B,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAU;AACnCA,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAU,CACvC;;AACAC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMtB,IAAI,GAAGsB,CAAC,CAACJ,MAAM,CAAClB,IAAI;EAC1B,MAAMC,IAAI,GAAGqB,CAAC,CAACJ,MAAM,CAACjB,IAAI;EAC1B,MAAMsB,KAAK,GAAG,MAAMT,CAAC,CAACU,GAAG,CAAE,eAAcxB,IAAK,IAAGC,IAAK,EAAC,CAAC;EACxD,MAAMP,GAAG;EACP4B,CAAC;EACD3B,eAAe,CAAC,WAAW,CAAC;EAC5B,CAACT,OAAO,CAACc,IAAI,EAAEC,IAAI,EAAElB,iBAAiB,CAAC,CAAC;EACxCG,OAAO,CAACe,IAAI,EAAED,IAAI,EAAEjB,iBAAiB,CAAC;EACtCuC,CAAC,CAACJ,MAAM;EACRK,KAAK,CACN;;AACH,CAAC,CAAC;;AAEJ1B,CAAC,CAACkB,IAAI,CAAC,KAAK,CAAC;AACVC,OAAO,CAAC,sDAAsD,CAAC;AAC/DC,IAAI,CAAE,WAAU,CAAC;AACjBC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,aAAa,EAAE5B,eAAe,CAAC;AACvC4B,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAU;AACnCA,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAU,CACvC;;AACAC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMtB,IAAI,GAAGsB,CAAC,CAACJ,MAAM,CAAClB,IAAI;EAC1B,MAAMC,IAAI,GAAGqB,CAAC,CAACJ,MAAM,CAACjB,IAAI;EAC1B,MAAMsB,KAAK,GAAG,MAAMT,CAAC,CAACU,GAAG;EACvBF,CAAC,CAACJ,MAAM,CAACO,WAAW,KAAK,OAAO;EAC3B,UAASzB,IAAK,IAAGC,IAAK,QAAO;EAC7B,UAASD,IAAK,IAAGC,IAAK,YAAW,CACvC;;EACD,MAAMP,GAAG;EACP4B,CAAC;EACD1B,OAAO,CAAC,WAAW,CAAC;EACpB,CAACV,OAAO,CAACc,IAAI,EAAEC,IAAI,EAAEhB,OAAO,CAAC,CAAC;EAC9BC,OAAO,CAACe,IAAI,EAAED,IAAI,EAAEf,OAAO,CAAC;EAC5BqC,CAAC,CAACJ,MAAM;EACRK,KAAK,CACN;;AACH,CAAC,CAAC;;AAEJ1B,CAAC,CAACkB,IAAI,CAAC,KAAK,CAAC;AACVC,OAAO,CAAC,sDAAsD,CAAC;AAC/DC,IAAI,CAAE,WAAU,CAAC;AACjBC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,aAAa,EAAE5B,eAAe,CAAC;AACvC4B,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAU;AACnCA,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAU,CACvC;;AACAM,iBAAiB,CAAC,CAAAJ,CAAC,KAAI;EACtBA,CAAC,CAACK,0BAA0B,CAAC,YAAY,CAAC;AAC5C,CAAC,CAAC;AACDN,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMtB,IAAI,GAAGsB,CAAC,CAACJ,MAAM,CAAClB,IAAI;EAC1B,MAAMC,IAAI,GAAGqB,CAAC,CAACJ,MAAM,CAACjB,IAAI;EAC1B,MAAMsB,KAAK,GAAG,MAAMT,CAAC,CAACU,GAAG;EACvBF,CAAC,CAACJ,MAAM,CAACO,WAAW,KAAK,OAAO;EAC3B,UAASzB,IAAK,IAAGC,IAAK,QAAO;EAC7B,UAASD,IAAK,IAAGC,IAAK,YAAW,CACvC;;EACD,MAAMP,GAAG;EACP4B,CAAC;EACD1B,OAAO,CAAC,WAAW,CAAC;EACpB,CAACV,OAAO,CAACc,IAAI,EAAEC,IAAI,EAAEjB,OAAO,CAAC,CAAC;EAC9BE,OAAO,CAACe,IAAI,EAAED,IAAI,EAAEhB,OAAO,CAAC;EAC5BsC,CAAC,CAACJ,MAAM;EACRK,KAAK,CACN;;AACH,CAAC,CAAC"}