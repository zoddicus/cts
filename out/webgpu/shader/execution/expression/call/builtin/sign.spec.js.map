{"version":3,"file":"sign.spec.js","names":["description","makeTestGroup","GPUTest","i32","TypeF32","TypeF16","TypeI32","TypeAbstractFloat","FP","fullF32Range","fullF16Range","fullI32Range","fullF64Range","makeCaseCache","allInputSources","onlyConstInputSource","run","abstractBuiltin","builtin","g","d","f32","generateScalarToIntervalCases","signInterval","f16","abstract_float","abstract","map","i","signFunc","input","expected","test","specURL","desc","params","u","combine","undefined","fn","t","cases","get","unimplemented","beforeAllSubcases","selectDeviceOrSkipTestCase"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/sign.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'sign' builtin function\n\nS is AbstractFloat, AbstractInt, i32, f32, f16\nT is S or vecN<S>\n@const fn sign(e: T ) -> T\nReturns the sign of e. Component-wise when T is a vector.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport {\n  i32,\n  TypeF32,\n  TypeF16,\n  TypeI32,\n  TypeAbstractFloat,\n} from '../../../../../util/conversion.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport {\n  fullF32Range,\n  fullF16Range,\n  fullI32Range,\n  fullF64Range,\n} from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, onlyConstInputSource, run } from '../../expression.js';\n\nimport { abstractBuiltin, builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('sign', {\n  f32: () => {\n    return FP.f32.generateScalarToIntervalCases(fullF32Range(), 'unfiltered', FP.f32.signInterval);\n  },\n  f16: () => {\n    return FP.f16.generateScalarToIntervalCases(fullF16Range(), 'unfiltered', FP.f16.signInterval);\n  },\n  abstract_float: () => {\n    return FP.abstract.generateScalarToIntervalCases(\n      fullF64Range(),\n      'unfiltered',\n      FP.abstract.signInterval\n    );\n  },\n  i32: () =>\n    fullI32Range().map(i => {\n      const signFunc = (i: number): number => (i < 0 ? -1 : i > 0 ? 1 : 0);\n      return { input: [i32(i)], expected: i32(signFunc(i)) };\n    }),\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#sign-builtin')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u\n      .combine('inputSource', onlyConstInputSource)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('abstract_float');\n    await run(t, abstractBuiltin('sign'), [TypeAbstractFloat], TypeAbstractFloat, t.params, cases);\n  });\n\ng.test('abstract_int')\n  .specURL('https://www.w3.org/TR/WGSL/#sign-builtin')\n  .desc(`abstract int tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('i32')\n  .specURL('https://www.w3.org/TR/WGSL/#sign-builtin')\n  .desc(`i32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('i32');\n    await run(t, builtin('sign'), [TypeI32], TypeI32, t.params, cases);\n  });\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#sign-builtin')\n  .desc(`f32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('f32');\n    await run(t, builtin('sign'), [TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#sign-builtin')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16');\n    await run(t, builtin('sign'), [TypeF16], TypeF16, t.params, cases);\n  });\n"],"mappings":"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"}