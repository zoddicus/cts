{"version":3,"file":"reflect.cache.js","names":["FP","makeCaseCache","cases","flatMap","trait","dim","map","nonConst","generateVectorPairToVectorCases","sparseVectorRange","reflectInterval","reduce","a","b","d"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/reflect.cache.ts"],"sourcesContent":["import { FP } from '../../../../../util/floating_point.js';\nimport { makeCaseCache } from '../../case_cache.js';\n\n// Cases: [f32|f16]_vecN_[non_]const\nconst cases = (['f32', 'f16'] as const)\n  .flatMap(trait =>\n    ([2, 3, 4] as const).flatMap(dim =>\n      ([true, false] as const).map(nonConst => ({\n        [`${trait}_vec${dim}_${nonConst ? 'non_const' : 'const'}`]: () => {\n          return FP[trait].generateVectorPairToVectorCases(\n            FP[trait].sparseVectorRange(dim),\n            FP[trait].sparseVectorRange(dim),\n            nonConst ? 'unfiltered' : 'finite',\n            FP[trait].reflectInterval\n          );\n        },\n      }))\n    )\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('reflect', cases);\n"],"mappings":";;GAAA,SAASA,EAAE,QAAQ,uCAAuC,CAC1D,SAASC,aAAa,QAAQ,qBAAqB;AAEnD;AACA,MAAMC,KAAK,GAAI,CAAC,KAAK,EAAE,KAAK,CAAC;AAC1BC,OAAO,CAAC,CAAAC,KAAK;AACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAWD,OAAO,CAAC,CAAAE,GAAG;AAC7B,CAAC,IAAI,EAAE,KAAK,CAAC,CAAWC,GAAG,CAAC,CAAAC,QAAQ,MAAK;EACxC,CAAE,GAAEH,KAAM,OAAMC,GAAI,IAAGE,QAAQ,GAAG,WAAW,GAAG,OAAQ,EAAC,GAAG,MAAM;IAChE,OAAOP,EAAE,CAACI,KAAK,CAAC,CAACI,+BAA+B;MAC9CR,EAAE,CAACI,KAAK,CAAC,CAACK,iBAAiB,CAACJ,GAAG,CAAC;MAChCL,EAAE,CAACI,KAAK,CAAC,CAACK,iBAAiB,CAACJ,GAAG,CAAC;MAChCE,QAAQ,GAAG,YAAY,GAAG,QAAQ;MAClCP,EAAE,CAACI,KAAK,CAAC,CAACM;IACZ,CAAC;EACH;AACF,CAAC,CAAC;AACJ;AACF,CAAC;AACAC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM,EAAE,GAAGD,CAAC,EAAE,GAAGC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEzC,OAAO,MAAMC,CAAC,GAAGb,aAAa,CAAC,SAAS,EAAEC,KAAK,CAAC"}