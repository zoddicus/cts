{"version":3,"file":"fract.spec.js","names":["description","makeTestGroup","GPUTest","TypeF32","TypeF16","FP","makeCaseCache","allInputSources","run","builtin","g","kCommonValues","kTraitSpecificValues","f32","f16","cases","map","trait","generateScalarToIntervalCases","scalarRange","fractInterval","reduce","a","b","d","test","specURL","desc","params","u","combine","undefined","unimplemented","fn","t","get","beforeAllSubcases","selectDeviceOrSkipTestCase"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/fract.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'fract' builtin function\n\nS is AbstractFloat, f32, f16\nT is S or vecN<S>\n@const fn fract(e: T ) -> T\nReturns the fractional part of e, computed as e - floor(e).\nComponent-wise when T is a vector.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeF32, TypeF16 } from '../../../../../util/conversion.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nconst kCommonValues = [\n  0.5, // 0.5 -> 0.5\n  0.9, // ~0.9 -> ~0.9\n  1, // 1 -> 0\n  2, // 2 -> 0\n  1.11, // ~1.11 -> ~0.11\n  -0.1, // ~-0.1 -> ~0.9\n  -0.5, // -0.5 -> 0.5\n  -0.9, // ~-0.9 -> ~0.1\n  -1, // -1 -> 0\n  -2, // -2 -> 0\n  -1.11, // ~-1.11 -> ~0.89\n];\n\nconst kTraitSpecificValues = {\n  f32: [\n    10.0001, // ~10.0001 -> ~0.0001\n    -10.0001, // -10.0001 -> ~0.9999\n    0x8000_0000, // https://github.com/gpuweb/cts/issues/2766\n  ],\n  f16: [\n    10.0078125, // 10.0078125 -> 0.0078125\n    -10.0078125, // -10.0078125 -> 0.9921875\n    658.5, // 658.5 -> 0.5\n    0x8000, // https://github.com/gpuweb/cts/issues/2766\n  ],\n};\n\n// Cases: [f32|f16]\nconst cases = (['f32', 'f16'] as const)\n  .map(trait => ({\n    [`${trait}`]: () => {\n      return FP[trait].generateScalarToIntervalCases(\n        [...kCommonValues, ...kTraitSpecificValues[trait], ...FP[trait].scalarRange()],\n        'unfiltered',\n        FP[trait].fractInterval\n      );\n    },\n  }))\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('fract', cases);\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('f32');\n    await run(t, builtin('fract'), [TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16');\n    await run(t, builtin('fract'), [TypeF16], TypeF16, t.params, cases);\n  });\n"],"mappings":"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"}