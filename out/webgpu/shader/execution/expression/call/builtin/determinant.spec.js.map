{"version":3,"file":"determinant.spec.js","names":["description","makeTestGroup","GPUTest","TypeF32","TypeMat","FP","makeCaseCache","allInputSources","run","builtin","g","kDeterminantValues","kDeterminantMatrixF32Values","map","f","idx","d","f32_mat2x2_const","f32","generateMatrixToScalarCases","determinantInterval","f32_mat2x2_non_const","f32_mat3x3_const","f32_mat3x3_non_const","f32_mat4x4_const","f32_mat4x4_non_const","test","specURL","desc","params","u","combine","unimplemented","fn","t","dim","cases","get","inputSource"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/determinant.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'determinant' builtin function\n\nT is AbstractFloat, f32, or f16\n@const determinant(e: matCxC<T> ) -> T\nReturns the determinant of e.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeF32, TypeMat } from '../../../../../util/conversion.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n// Accuracy for determinant is only defined for e, where e is an integer and\n// |e| < quadroot(2**21) [~38],\n// due to computational complexity of calculating the general solution for 4x4,\n// so custom matrices are used.\n//\n// Note: For 2x2 and 3x3 the limits are squareroot and cuberoot instead of\n// quadroot, but using the tighter 4x4 limits for all cases for simplicity.\nconst kDeterminantValues = [-38, -10, -5, -1, 0, 1, 5, 10, 38];\n\nconst kDeterminantMatrixF32Values = {\n  2: kDeterminantValues.map((f, idx) => [\n    [idx % 4 === 0 ? f : idx, idx % 4 === 1 ? f : -idx],\n    [idx % 4 === 2 ? f : -idx, idx % 4 === 3 ? f : idx],\n  ]),\n  3: kDeterminantValues.map((f, idx) => [\n    [idx % 9 === 0 ? f : idx, idx % 9 === 1 ? f : -idx, idx % 9 === 2 ? f : idx],\n    [idx % 9 === 3 ? f : -idx, idx % 9 === 4 ? f : idx, idx % 9 === 5 ? f : -idx],\n    [idx % 9 === 6 ? f : idx, idx % 9 === 7 ? f : -idx, idx % 9 === 8 ? f : idx],\n  ]),\n  4: kDeterminantValues.map((f, idx) => [\n    [\n      idx % 16 === 0 ? f : idx,\n      idx % 16 === 1 ? f : -idx,\n      idx % 16 === 2 ? f : idx,\n      idx % 16 === 3 ? f : -idx,\n    ],\n    [\n      idx % 16 === 4 ? f : -idx,\n      idx % 16 === 5 ? f : idx,\n      idx % 16 === 6 ? f : -idx,\n      idx % 16 === 7 ? f : idx,\n    ],\n    [\n      idx % 16 === 8 ? f : idx,\n      idx % 16 === 9 ? f : -idx,\n      idx % 16 === 10 ? f : idx,\n      idx % 16 === 11 ? f : -idx,\n    ],\n    [\n      idx % 16 === 12 ? f : -idx,\n      idx % 16 === 13 ? f : idx,\n      idx % 16 === 14 ? f : -idx,\n      idx % 16 === 15 ? f : idx,\n    ],\n  ]),\n};\n\nexport const d = makeCaseCache('determinant', {\n  f32_mat2x2_const: () => {\n    return FP.f32.generateMatrixToScalarCases(\n      kDeterminantMatrixF32Values[2],\n      'finite',\n      FP.f32.determinantInterval\n    );\n  },\n  f32_mat2x2_non_const: () => {\n    return FP.f32.generateMatrixToScalarCases(\n      kDeterminantMatrixF32Values[2],\n      'unfiltered',\n      FP.f32.determinantInterval\n    );\n  },\n  f32_mat3x3_const: () => {\n    return FP.f32.generateMatrixToScalarCases(\n      kDeterminantMatrixF32Values[3],\n      'finite',\n      FP.f32.determinantInterval\n    );\n  },\n  f32_mat3x3_non_const: () => {\n    return FP.f32.generateMatrixToScalarCases(\n      kDeterminantMatrixF32Values[3],\n      'unfiltered',\n      FP.f32.determinantInterval\n    );\n  },\n  f32_mat4x4_const: () => {\n    return FP.f32.generateMatrixToScalarCases(\n      kDeterminantMatrixF32Values[4],\n      'finite',\n      FP.f32.determinantInterval\n    );\n  },\n  f32_mat4x4_non_const: () => {\n    return FP.f32.generateMatrixToScalarCases(\n      kDeterminantMatrixF32Values[4],\n      'unfiltered',\n      FP.f32.determinantInterval\n    );\n  },\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#matrix-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u => u.combine('inputSource', allInputSources).combine('dimension', [2, 3, 4] as const))\n  .unimplemented();\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#matrix-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `f32_mat${dim}x${dim}_const`\n        : `f32_mat${dim}x${dim}_non_const`\n    );\n    await run(t, builtin('determinant'), [TypeMat(dim, dim, TypeF32)], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#matrix-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u => u.combine('inputSource', allInputSources).combine('dimension', [2, 3, 4] as const))\n  .unimplemented();\n"],"mappings":"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"}