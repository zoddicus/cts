{"version":3,"file":"max.spec.js","names":["description","makeTestGroup","GPUTest","TypeAbstractFloat","TypeF16","TypeF32","TypeI32","TypeU32","i32","u32","abstractInt","TypeAbstractInt","maxBigInt","allInputSources","onlyConstInputSource","run","abstractFloatBuiltin","abstractIntBuiltin","builtin","d","generateTestCases","values","makeCase","flatMap","e","map","f","g","test","specURL","desc","params","u","combine","undefined","fn","t","x","y","input","expected","test_values","cases","Math","max","get","beforeAllSubcases","selectDeviceOrSkipTestCase","requiredFeatures"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/max.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'max' builtin function\n\nS is AbstractInt, i32, or u32\nT is S or vecN<S>\n@const fn max(e1: T ,e2: T) -> T\nReturns e2 if e1 is less than e2, and e1 otherwise. Component-wise when T is a vector.\n\nS is AbstractFloat, f32, f16\nT is vecN<S>\n@const fn max(e1: T ,e2: T) -> T\nReturns e2 if e1 is less than e2, and e1 otherwise.\nIf one operand is a NaN, the other is returned.\nIf both operands are NaNs, a NaN is returned.\nComponent-wise when T is a vector.\n\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport {\n  TypeAbstractFloat,\n  TypeF16,\n  TypeF32,\n  TypeI32,\n  TypeU32,\n  i32,\n  u32,\n  abstractInt,\n  TypeAbstractInt,\n} from '../../../../../util/conversion.js';\nimport { maxBigInt } from '../../../../../util/math.js';\nimport { Case } from '../../case.js';\nimport { allInputSources, onlyConstInputSource, run } from '../../expression.js';\n\nimport { abstractFloatBuiltin, abstractIntBuiltin, builtin } from './builtin.js';\nimport { d } from './max.cache.js';\n\n/** Generate set of max test cases from list of interesting values */\nfunction generateTestCases<Type>(values: Type[], makeCase: (x: Type, y: Type) => Case): Case[] {\n  return values.flatMap(e => {\n    return values.map(f => {\n      return makeCase(e, f);\n    });\n  });\n}\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('abstract_int')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`abstract int tests`)\n  .params(u =>\n    u\n      .combine('inputSource', onlyConstInputSource)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const makeCase = (x: bigint, y: bigint): Case => {\n      return { input: [abstractInt(x), abstractInt(y)], expected: abstractInt(maxBigInt(x, y)) };\n    };\n\n    const test_values = [-0x70000000n, -2n, -1n, 0n, 1n, 2n, 0x70000000n];\n    const cases = generateTestCases(test_values, makeCase);\n\n    await run(\n      t,\n      abstractIntBuiltin('max'),\n      [TypeAbstractInt, TypeAbstractInt],\n      TypeAbstractInt,\n      t.params,\n      cases\n    );\n  });\n\ng.test('u32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`u32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const makeCase = (x: number, y: number): Case => {\n      return { input: [u32(x), u32(y)], expected: u32(Math.max(x, y)) };\n    };\n\n    const test_values: number[] = [0, 1, 2, 0x70000000, 0x80000000, 0xffffffff];\n    const cases = generateTestCases(test_values, makeCase);\n\n    await run(t, builtin('max'), [TypeU32, TypeU32], TypeU32, t.params, cases);\n  });\n\ng.test('i32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`i32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const makeCase = (x: number, y: number): Case => {\n      return { input: [i32(x), i32(y)], expected: i32(Math.max(x, y)) };\n    };\n\n    const test_values: number[] = [-0x70000000, -2, -1, 0, 1, 2, 0x70000000];\n    const cases = generateTestCases(test_values, makeCase);\n\n    await run(t, builtin('max'), [TypeI32, TypeI32], TypeI32, t.params, cases);\n  });\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u\n      .combine('inputSource', onlyConstInputSource)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('abstract');\n    await run(\n      t,\n      abstractFloatBuiltin('max'),\n      [TypeAbstractFloat, TypeAbstractFloat],\n      TypeAbstractFloat,\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('f32');\n    await run(t, builtin('max'), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cases = await d.get('f16');\n    await run(t, builtin('max'), [TypeF16, TypeF16], TypeF16, t.params, cases);\n  });\n"],"mappings":"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"}