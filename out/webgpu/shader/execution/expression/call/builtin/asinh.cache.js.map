{"version":3,"file":"asinh.cache.js","names":["FP","makeCaseCache","cases","map","trait","generateScalarToIntervalCases","scalarRange","asinhInterval","reduce","a","b","d"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/asinh.cache.ts"],"sourcesContent":["import { FP } from '../../../../../util/floating_point.js';\nimport { makeCaseCache } from '../../case_cache.js';\n\n// Cases: [f32|f16|abstract]\nconst cases = (['f32', 'f16', 'abstract'] as const)\n  .map(trait => ({\n    [`${trait}`]: () => {\n      return FP[trait].generateScalarToIntervalCases(\n        FP[trait].scalarRange(),\n        'unfiltered',\n        // asinh has an inherited accuracy, so is only expected to be as accurate as f32\n        FP[trait !== 'abstract' ? trait : 'f32'].asinhInterval\n      );\n    },\n  }))\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('asinh', cases);\n"],"mappings":";;GAAA,SAASA,EAAE,QAAQ,uCAAuC,CAC1D,SAASC,aAAa,QAAQ,qBAAqB;AAEnD;AACA,MAAMC,KAAK,GAAI,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC;AACtCC,GAAG,CAAC,CAAAC,KAAK,MAAK;EACb,CAAE,GAAEA,KAAM,EAAC,GAAG,MAAM;IAClB,OAAOJ,EAAE,CAACI,KAAK,CAAC,CAACC,6BAA6B;MAC5CL,EAAE,CAACI,KAAK,CAAC,CAACE,WAAW,CAAC,CAAC;MACvB,YAAY;MACZ;MACAN,EAAE,CAACI,KAAK,KAAK,UAAU,GAAGA,KAAK,GAAG,KAAK,CAAC,CAACG;IAC3C,CAAC;EACH;AACF,CAAC,CAAC,CAAC;AACFC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM,EAAE,GAAGD,CAAC,EAAE,GAAGC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEzC,OAAO,MAAMC,CAAC,GAAGV,aAAa,CAAC,OAAO,EAAEC,KAAK,CAAC"}