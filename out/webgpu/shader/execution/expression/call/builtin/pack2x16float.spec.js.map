{"version":3,"file":"pack2x16float.spec.js","names":["description","makeTestGroup","GPUTest","anyOf","skipUndefined","f32","pack2x16float","TypeF32","TypeU32","TypeVec","u32","vec2","cartesianProduct","fullF32Range","quantizeToF32","makeCaseCache","allInputSources","run","builtin","g","makeCase","param0","param1","filter_undefined","results","some","r","undefined","input","expected","map","generateCases","param0s","param1s","e","filter","c","d","f32_const","f32_non_const","test","specURL","desc","params","u","combine","fn","t","cases","get","inputSource"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/pack2x16float.spec.ts"],"sourcesContent":["export const description = `\nConverts two floating point values to half-precision floating point numbers, and then combines them into one u32 value.\nComponent e[i] of the input is converted to a IEEE-754 binary16 value,\nwhich is then placed in bits 16 × i through 16 × i + 15 of the result.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { anyOf, skipUndefined } from '../../../../../util/compare.js';\nimport {\n  f32,\n  pack2x16float,\n  TypeF32,\n  TypeU32,\n  TypeVec,\n  u32,\n  vec2,\n} from '../../../../../util/conversion.js';\nimport { cartesianProduct, fullF32Range, quantizeToF32 } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, Case, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n// pack2x16float has somewhat unusual behaviour, specifically around how it is\n// supposed to behave when values go OOB and when they are considered to have\n// gone OOB, so has its own bespoke implementation.\n\n/**\n * @returns a Case for `pack2x16float`\n * @param param0 first param for the case\n * @param param1 second param for the case\n * @param filter_undefined should inputs that cause an undefined expectation be\n *                         filtered out, needed for const-eval\n */\nfunction makeCase(param0: number, param1: number, filter_undefined: boolean): Case | undefined {\n  param0 = quantizeToF32(param0);\n  param1 = quantizeToF32(param1);\n\n  const results = pack2x16float(param0, param1);\n  if (filter_undefined && results.some(r => r === undefined)) {\n    return undefined;\n  }\n\n  return {\n    input: [vec2(f32(param0), f32(param1))],\n    expected: anyOf(\n      ...results.map(r => (r === undefined ? skipUndefined(undefined) : skipUndefined(u32(r))))\n    ),\n  };\n}\n\n/**\n * @returns an array of Cases for `pack2x16float`\n * @param param0s array of inputs to try for the first param\n * @param param1s array of inputs to try for the second param\n * @param filter_undefined should inputs that cause an undefined expectation be\n *                         filtered out, needed for const-eval\n */\nfunction generateCases(param0s: number[], param1s: number[], filter_undefined: boolean): Case[] {\n  return cartesianProduct(param0s, param1s)\n    .map(e => makeCase(e[0], e[1], filter_undefined))\n    .filter((c): c is Case => c !== undefined);\n}\n\nexport const d = makeCaseCache('pack2x16float', {\n  f32_const: () => {\n    return generateCases(fullF32Range(), fullF32Range(), true);\n  },\n  f32_non_const: () => {\n    return generateCases(fullF32Range(), fullF32Range(), false);\n  },\n});\n\ng.test('pack')\n  .specURL('https://www.w3.org/TR/WGSL/#pack-builtin-functions')\n  .desc(\n    `\n@const fn pack2x16float(e: vec2<f32>) -> u32\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f32_const' : 'f32_non_const');\n    await run(t, builtin('pack2x16float'), [TypeVec(2, TypeF32)], TypeU32, t.params, cases);\n  });\n"],"mappings":"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"}