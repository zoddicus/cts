{"version":3,"file":"cross.spec.js","names":["description","makeTestGroup","GPUTest","TypeAbstractFloat","TypeF16","TypeF32","TypeVec","FP","sparseVectorF64Range","vectorF16Range","vectorF32Range","makeCaseCache","allInputSources","onlyConstInputSource","run","abstractBuiltin","builtin","g","d","f32_const","f32","generateVectorPairToVectorCases","crossInterval","f32_non_const","f16_const","f16","f16_non_const","abstract","test","specURL","desc","params","u","combine","fn","t","cases","get","inputSource","beforeAllSubcases","selectDeviceOrSkipTestCase","requiredFeatures"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/cross.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'cross' builtin function\n\nT is AbstractFloat, f32, or f16\n@const fn cross(e1: vec3<T> ,e2: vec3<T>) -> vec3<T>\nReturns the cross product of e1 and e2.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeAbstractFloat, TypeF16, TypeF32, TypeVec } from '../../../../../util/conversion.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport { sparseVectorF64Range, vectorF16Range, vectorF32Range } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, onlyConstInputSource, run } from '../../expression.js';\n\nimport { abstractBuiltin, builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('cross', {\n  f32_const: () => {\n    return FP.f32.generateVectorPairToVectorCases(\n      vectorF32Range(3),\n      vectorF32Range(3),\n      'finite',\n      FP.f32.crossInterval\n    );\n  },\n  f32_non_const: () => {\n    return FP.f32.generateVectorPairToVectorCases(\n      vectorF32Range(3),\n      vectorF32Range(3),\n      'unfiltered',\n      FP.f32.crossInterval\n    );\n  },\n  f16_const: () => {\n    return FP.f16.generateVectorPairToVectorCases(\n      vectorF16Range(3),\n      vectorF16Range(3),\n      'finite',\n      FP.f16.crossInterval\n    );\n  },\n  f16_non_const: () => {\n    return FP.f16.generateVectorPairToVectorCases(\n      vectorF16Range(3),\n      vectorF16Range(3),\n      'unfiltered',\n      FP.f16.crossInterval\n    );\n  },\n  abstract: () => {\n    return FP.abstract.generateVectorPairToVectorCases(\n      sparseVectorF64Range(3),\n      sparseVectorF64Range(3),\n      'finite',\n      FP.abstract.crossInterval\n    );\n  },\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u => u.combine('inputSource', onlyConstInputSource))\n  .fn(async t => {\n    const cases = await d.get('abstract');\n    await run(\n      t,\n      abstractBuiltin('cross'),\n      [TypeVec(3, TypeAbstractFloat), TypeVec(3, TypeAbstractFloat)],\n      TypeVec(3, TypeAbstractFloat),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f32_const' : 'f32_non_const');\n    await run(\n      t,\n      builtin('cross'),\n      [TypeVec(3, TypeF32), TypeVec(3, TypeF32)],\n      TypeVec(3, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f16_const' : 'f16_non_const');\n    await run(\n      t,\n      builtin('cross'),\n      [TypeVec(3, TypeF16), TypeVec(3, TypeF16)],\n      TypeVec(3, TypeF16),\n      t.params,\n      cases\n    );\n  });\n"],"mappings":";AAAA;AAAA,GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,kDAAkD;AAChF,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,iBAAiB,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,QAAQ,mCAAmC;AAChG,SAASC,EAAE,QAAQ,uCAAuC;AAC1D,SAASC,oBAAoB,EAAEC,cAAc,EAAEC,cAAc,QAAQ,6BAA6B;AAClG,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,eAAe,EAAEC,oBAAoB,EAAEC,GAAG,QAAQ,qBAAqB;;AAEhF,SAASC,eAAe,EAAEC,OAAO,QAAQ,cAAc;;AAEvD,OAAO,MAAMC,CAAC,GAAGhB,aAAa,CAACC,OAAO,CAAC;;AAEvC,OAAO,MAAMgB,CAAC,GAAGP,aAAa,CAAC,OAAO,EAAE;EACtCQ,SAAS,EAAE,MAAM;IACf,OAAOZ,EAAE,CAACa,GAAG,CAACC,+BAA+B;IAC3CX,cAAc,CAAC,CAAC,CAAC;IACjBA,cAAc,CAAC,CAAC,CAAC;IACjB,QAAQ;IACRH,EAAE,CAACa,GAAG,CAACE,aAAa,CACrB;;EACH,CAAC;EACDC,aAAa,EAAE,MAAM;IACnB,OAAOhB,EAAE,CAACa,GAAG,CAACC,+BAA+B;IAC3CX,cAAc,CAAC,CAAC,CAAC;IACjBA,cAAc,CAAC,CAAC,CAAC;IACjB,YAAY;IACZH,EAAE,CAACa,GAAG,CAACE,aAAa,CACrB;;EACH,CAAC;EACDE,SAAS,EAAE,MAAM;IACf,OAAOjB,EAAE,CAACkB,GAAG,CAACJ,+BAA+B;IAC3CZ,cAAc,CAAC,CAAC,CAAC;IACjBA,cAAc,CAAC,CAAC,CAAC;IACjB,QAAQ;IACRF,EAAE,CAACkB,GAAG,CAACH,aAAa,CACrB;;EACH,CAAC;EACDI,aAAa,EAAE,MAAM;IACnB,OAAOnB,EAAE,CAACkB,GAAG,CAACJ,+BAA+B;IAC3CZ,cAAc,CAAC,CAAC,CAAC;IACjBA,cAAc,CAAC,CAAC,CAAC;IACjB,YAAY;IACZF,EAAE,CAACkB,GAAG,CAACH,aAAa,CACrB;;EACH,CAAC;EACDK,QAAQ,EAAE,MAAM;IACd,OAAOpB,EAAE,CAACoB,QAAQ,CAACN,+BAA+B;IAChDb,oBAAoB,CAAC,CAAC,CAAC;IACvBA,oBAAoB,CAAC,CAAC,CAAC;IACvB,QAAQ;IACRD,EAAE,CAACoB,QAAQ,CAACL,aAAa,CAC1B;;EACH;AACF,CAAC,CAAC;;AAEFL,CAAC,CAACW,IAAI,CAAC,gBAAgB,CAAC;AACrBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI,CAAE,sBAAqB,CAAC;AAC5BC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEpB,oBAAoB,CAAC,CAAC;AAC3DqB,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,KAAK,GAAG,MAAMlB,CAAC,CAACmB,GAAG,CAAC,UAAU,CAAC;EACrC,MAAMvB,GAAG;EACPqB,CAAC;EACDpB,eAAe,CAAC,OAAO,CAAC;EACxB,CAACT,OAAO,CAAC,CAAC,EAAEH,iBAAiB,CAAC,EAAEG,OAAO,CAAC,CAAC,EAAEH,iBAAiB,CAAC,CAAC;EAC9DG,OAAO,CAAC,CAAC,EAAEH,iBAAiB,CAAC;EAC7BgC,CAAC,CAACJ,MAAM;EACRK,KAAK,CACN;;AACH,CAAC,CAAC;;AAEJnB,CAAC,CAACW,IAAI,CAAC,KAAK,CAAC;AACVC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI,CAAE,WAAU,CAAC;AACjBC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErB,eAAe,CAAC,CAAC;AACtDsB,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,KAAK,GAAG,MAAMlB,CAAC,CAACmB,GAAG,CAACF,CAAC,CAACJ,MAAM,CAACO,WAAW,KAAK,OAAO,GAAG,WAAW,GAAG,eAAe,CAAC;EAC3F,MAAMxB,GAAG;EACPqB,CAAC;EACDnB,OAAO,CAAC,OAAO,CAAC;EAChB,CAACV,OAAO,CAAC,CAAC,EAAED,OAAO,CAAC,EAAEC,OAAO,CAAC,CAAC,EAAED,OAAO,CAAC,CAAC;EAC1CC,OAAO,CAAC,CAAC,EAAED,OAAO,CAAC;EACnB8B,CAAC,CAACJ,MAAM;EACRK,KAAK,CACN;;AACH,CAAC,CAAC;;AAEJnB,CAAC,CAACW,IAAI,CAAC,KAAK,CAAC;AACVC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI,CAAE,WAAU,CAAC;AACjBC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErB,eAAe,CAAC,CAAC;AACtD2B,iBAAiB,CAAC,CAAAJ,CAAC,KAAI;EACtBA,CAAC,CAACK,0BAA0B,CAAC,EAAEC,gBAAgB,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC;AACDP,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,KAAK,GAAG,MAAMlB,CAAC,CAACmB,GAAG,CAACF,CAAC,CAACJ,MAAM,CAACO,WAAW,KAAK,OAAO,GAAG,WAAW,GAAG,eAAe,CAAC;EAC3F,MAAMxB,GAAG;EACPqB,CAAC;EACDnB,OAAO,CAAC,OAAO,CAAC;EAChB,CAACV,OAAO,CAAC,CAAC,EAAEF,OAAO,CAAC,EAAEE,OAAO,CAAC,CAAC,EAAEF,OAAO,CAAC,CAAC;EAC1CE,OAAO,CAAC,CAAC,EAAEF,OAAO,CAAC;EACnB+B,CAAC,CAACJ,MAAM;EACRK,KAAK,CACN;;AACH,CAAC,CAAC"}