{"version":3,"file":"inversesqrt.spec.js","names":["description","makeTestGroup","GPUTest","kValue","TypeF32","TypeF16","FP","biasedRange","linearRange","makeCaseCache","allInputSources","run","builtin","g","d","f32","generateScalarToIntervalCases","positive","min","inverseSqrtInterval","f16","test","specURL","desc","params","u","combine","undefined","unimplemented","fn","t","cases","get","beforeAllSubcases","selectDeviceOrSkipTestCase"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/inversesqrt.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'inverseSqrt' builtin function\n\nS is AbstractFloat, f32, f16\nT is S or vecN<S>\n@const fn inverseSqrt(e: T ) -> T\nReturns the reciprocal of sqrt(e). Component-wise when T is a vector.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { kValue } from '../../../../../util/constants.js';\nimport { TypeF32, TypeF16 } from '../../../../../util/conversion.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport { biasedRange, linearRange } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('inverseSqrt', {\n  f32: () => {\n    return FP.f32.generateScalarToIntervalCases(\n      [\n        // 0 < x <= 1 linearly spread\n        ...linearRange(kValue.f32.positive.min, 1, 100),\n        // 1 <= x < 2^32, biased towards 1\n        ...biasedRange(1, 2 ** 32, 1000),\n      ],\n      'unfiltered',\n      FP.f32.inverseSqrtInterval\n    );\n  },\n  f16: () => {\n    return FP.f16.generateScalarToIntervalCases(\n      [\n        // 0 < x <= 1 linearly spread\n        ...linearRange(kValue.f16.positive.min, 1, 100),\n        // 1 <= x < 2^15, biased towards 1\n        ...biasedRange(1, 2 ** 15, 1000),\n      ],\n      'unfiltered',\n      FP.f16.inverseSqrtInterval\n    );\n  },\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('f32');\n    await run(t, builtin('inverseSqrt'), [TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16');\n    await run(t, builtin('inverseSqrt'), [TypeF16], TypeF16, t.params, cases);\n  });\n"],"mappings":"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"}