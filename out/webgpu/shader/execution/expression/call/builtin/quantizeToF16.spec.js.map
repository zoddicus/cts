{"version":3,"file":"quantizeToF16.spec.js","names":["description","makeTestGroup","GPUTest","kValue","TypeF32","FP","fullF16Range","fullF32Range","makeCaseCache","allInputSources","run","builtin","g","d","f32_const","f32","generateScalarToIntervalCases","f16","negative","min","max","subnormal","positive","quantizeToF16Interval","f32_non_const","test","specURL","desc","params","u","combine","undefined","fn","t","cases","get","inputSource"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/quantizeToF16.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'quantizeToF16' builtin function\n\nT is f32 or vecN<f32>\n@const fn quantizeToF16(e: T ) -> T\nQuantizes a 32-bit floating point value e as if e were converted to a IEEE 754\nbinary16 value, and then converted back to a IEEE 754 binary32 value.\nComponent-wise when T is a vector.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { kValue } from '../../../../../util/constants.js';\nimport { TypeF32 } from '../../../../../util/conversion.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport { fullF16Range, fullF32Range } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('quantizeToF16', {\n  f32_const: () => {\n    return FP.f32.generateScalarToIntervalCases(\n      [\n        kValue.f16.negative.min,\n        kValue.f16.negative.max,\n        kValue.f16.subnormal.negative.min,\n        kValue.f16.subnormal.negative.max,\n        kValue.f16.subnormal.positive.min,\n        kValue.f16.subnormal.positive.max,\n        kValue.f16.positive.min,\n        kValue.f16.positive.max,\n        ...fullF16Range(),\n      ],\n      'finite',\n      FP.f32.quantizeToF16Interval\n    );\n  },\n  f32_non_const: () => {\n    return FP.f32.generateScalarToIntervalCases(\n      [\n        kValue.f16.negative.min,\n        kValue.f16.negative.max,\n        kValue.f16.subnormal.negative.min,\n        kValue.f16.subnormal.negative.max,\n        kValue.f16.subnormal.positive.min,\n        kValue.f16.subnormal.positive.max,\n        kValue.f16.positive.min,\n        kValue.f16.positive.max,\n        ...fullF32Range(),\n      ],\n      'unfiltered',\n      FP.f32.quantizeToF16Interval\n    );\n  },\n});\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f32_const' : 'f32_non_const');\n    await run(t, builtin('quantizeToF16'), [TypeF32], TypeF32, t.params, cases);\n  });\n"],"mappings":"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"}