{"version":3,"file":"textureSampleCompare.spec.js","names":["description","makeTestGroup","GPUTest","generateCoordBoundaries","generateOffsets","g","test","specURL","desc","params","u","combine","unimplemented","paramsSubcasesOnly"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/textureSampleCompare.spec.ts"],"sourcesContent":["export const description = `\nSamples a depth texture and compares the sampled depth values against a reference value.\n\nMust only be used in a fragment shader stage.\nMust only be invoked in uniform control flow.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\n\nimport { generateCoordBoundaries, generateOffsets } from './utils.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('stage')\n  .specURL('https://www.w3.org/TR/WGSL/#texturesamplecompare')\n  .desc(\n    `\nTests that 'textureSampleCompare' can only be called in 'fragment' shaders.\n`\n  )\n  .params(u => u.combine('stage', ['fragment', 'vertex', 'compute'] as const))\n  .unimplemented();\n\ng.test('control_flow')\n  .specURL('https://www.w3.org/TR/WGSL/#texturesamplecompare')\n  .desc(\n    `\nTests that 'textureSampleCompare' can only be called in uniform control flow.\n`\n  )\n  .params(u => u.combine('stage', ['fragment', 'vertex', 'compute'] as const))\n  .unimplemented();\n\ng.test('2d_coords')\n  .specURL('https://www.w3.org/TR/WGSL/#texturesamplecompare')\n  .desc(\n    `\nfn textureSampleCompare(t: texture_depth_2d, s: sampler_comparison, coords: vec2<f32>, depth_ref: f32) -> f32\nfn textureSampleCompare(t: texture_depth_2d, s: sampler_comparison, coords: vec2<f32>, depth_ref: f32, offset: vec2<i32>) -> f32\n\nParameters:\n * t  The depth texture to sample.\n * s  The sampler_comparision type.\n * coords The texture coordinates used for sampling.\n * depth_ref The reference value to compare the sampled depth value against.\n * offset\n    * The optional texel offset applied to the unnormalized texture coordinate before sampling the texture.\n    * This offset is applied before applying any texture wrapping modes.\n    * The offset expression must be a creation-time expression (e.g. vec2<i32>(1, 2)).\n    * Each offset component must be at least -8 and at most 7.\n      Values outside of this range will result in a shader-creation error.\n`\n  )\n  .paramsSubcasesOnly(u =>\n    u\n      .combine('S', ['clamp-to-edge', 'repeat', 'mirror-repeat'])\n      .combine('coords', generateCoordBoundaries(2))\n      .combine('depth_ref', [-1 /* smaller ref */, 0 /* equal ref */, 1 /* larger ref */] as const)\n      .combine('offset', generateOffsets(2))\n  )\n  .unimplemented();\n\ng.test('3d_coords')\n  .specURL('https://www.w3.org/TR/WGSL/#texturesamplecompare')\n  .desc(\n    `\nfn textureSampleCompare(t: texture_depth_cube, s: sampler_comparison, coords: vec3<f32>, depth_ref: f32) -> f32\n\nParameters:\n * t  The depth texture to sample.\n * s  The sampler_comparision type.\n * coords The texture coordinates used for sampling.\n * depth_ref The reference value to compare the sampled depth value against.\n`\n  )\n  .paramsSubcasesOnly(u =>\n    u\n      .combine('S', ['clamp-to-edge', 'repeat', 'mirror-repeat'])\n      .combine('coords', generateCoordBoundaries(3))\n      .combine('depth_ref', [-1 /* smaller ref */, 0 /* equal ref */, 1 /* larger ref */] as const)\n  )\n  .unimplemented();\n\ng.test('arrayed_2d_coords')\n  .specURL('https://www.w3.org/TR/WGSL/#texturesamplecompare')\n  .desc(\n    `\nC is i32 or u32\n\nfn textureSampleCompare(t: texture_depth_2d_array, s: sampler_comparison, coords: vec2<f32>, array_index: C, depth_ref: f32) -> f32\nfn textureSampleCompare(t: texture_depth_2d_array, s: sampler_comparison, coords: vec2<f32>, array_index: C, depth_ref: f32, offset: vec2<i32>) -> f32\n\nParameters:\n * t  The depth texture to sample.\n * s  The sampler_comparision type.\n * coords The texture coordinates used for sampling.\n * array_index: The 0-based texture array index to sample.\n * depth_ref The reference value to compare the sampled depth value against.\n * offset\n    * The optional texel offset applied to the unnormalized texture coordinate before sampling the texture.\n    * This offset is applied before applying any texture wrapping modes.\n    * The offset expression must be a creation-time expression (e.g. vec2<i32>(1, 2)).\n    * Each offset component must be at least -8 and at most 7.\n      Values outside of this range will result in a shader-creation error.\n`\n  )\n  .paramsSubcasesOnly(u =>\n    u\n      .combine('S', ['clamp-to-edge', 'repeat', 'mirror-repeat'])\n      .combine('coords', generateCoordBoundaries(2))\n      .combine('C', ['i32', 'u32'] as const)\n      .combine('C_value', [-1, 0, 1, 2, 3, 4] as const)\n      /* array_index not param'd as out-of-bounds is implementation specific */\n      .combine('depth_ref', [-1 /* smaller ref */, 0 /* equal ref */, 1 /* larger ref */] as const)\n      .combine('offset', generateOffsets(2))\n  )\n  .unimplemented();\n\ng.test('arrayed_3d_coords')\n  .specURL('https://www.w3.org/TR/WGSL/#texturesamplecompare')\n  .desc(\n    `\nC is i32 or u32\n\nfn textureSampleCompare(t: texture_depth_cube_array, s: sampler_comparison, coords: vec3<f32>, array_index: C, depth_ref: f32) -> f32\n\nParameters:\n * t  The depth texture to sample.\n * s  The sampler_comparision type.\n * coords The texture coordinates used for sampling.\n * array_index: The 0-based texture array index to sample.\n * depth_ref The reference value to compare the sampled depth value against.\n`\n  )\n  .paramsSubcasesOnly(u =>\n    u\n      .combine('S', ['clamp-to-edge', 'repeat', 'mirror-repeat'])\n      .combine('coords', generateCoordBoundaries(3))\n      .combine('C', ['i32', 'u32'] as const)\n      .combine('C_value', [-1, 0, 1, 2, 3, 4] as const)\n      /* array_index not param'd as out-of-bounds is implementation specific */\n      .combine('depth_ref', [-1 /* smaller ref */, 0 /* equal ref */, 1 /* larger ref */] as const)\n  )\n  .unimplemented();\n"],"mappings":"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"}