{"version":3,"file":"ldexp.spec.js","names":["description","makeTestGroup","assert","GPUTest","anyOf","i32","TypeF32","TypeF16","TypeI32","FP","biasedRange","quantizeToI32","sparseI32Range","makeCaseCache","allInputSources","run","builtin","g","bias","f32","f16","makeCase","trait","e1","e2","FPTrait","quantize","expected","ldexpInterval","input","scalarBuilder","constants","zeroInterval","cases","flatMap","map","nonConst","sparseScalarRange","isFinite","reduce","a","b","d","test","specURL","desc","params","u","combine","undefined","unimplemented","fn","t","get","inputSource","beforeAllSubcases","selectDeviceOrSkipTestCase"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/ldexp.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'ldexp' builtin function\n\nS is AbstractFloat, f32, f16\nT is S or vecN<S>\n\nK is AbstractInt, i32\nI is K or vecN<K>, where\n  I is a scalar if T is a scalar, or a vector when T is a vector\n\n@const fn ldexp(e1: T ,e2: I ) -> T\nReturns e1 * 2^e2. Component-wise when T is a vector.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { assert } from '../../../../../../common/util/util.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { anyOf } from '../../../../../util/compare.js';\nimport { i32, TypeF32, TypeF16, TypeI32 } from '../../../../../util/conversion.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport { biasedRange, quantizeToI32, sparseI32Range } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, Case, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nconst bias = {\n  f32: 127,\n  f16: 15,\n} as const;\n\n// ldexpInterval's return interval doesn't cover the flush-to-zero cases when e2 + bias <= 0, thus\n// special examination is required.\n// See the comment block on ldexpInterval for more details\n// e2 is an integer (i32) while e1 is float.\nconst makeCase = (trait: 'f32' | 'f16', e1: number, e2: number): Case => {\n  const FPTrait = FP[trait];\n  e1 = FPTrait.quantize(e1);\n  // e2 should be in i32 range for the convinience.\n  assert(-2147483648 <= e2 && e2 <= 2147483647, 'e2 should be in i32 range');\n  e2 = quantizeToI32(e2);\n\n  const expected = FPTrait.ldexpInterval(e1, e2);\n\n  // Result may be zero if e2 + bias <= 0\n  if (e2 + bias[trait] <= 0) {\n    return {\n      input: [FPTrait.scalarBuilder(e1), i32(e2)],\n      expected: anyOf(expected, FPTrait.constants().zeroInterval),\n    };\n  }\n\n  return { input: [FPTrait.scalarBuilder(e1), i32(e2)], expected };\n};\n\n// Cases: [f32|f16]_[non_]const\nconst cases = (['f32', 'f16'] as const)\n  .flatMap(trait =>\n    ([true, false] as const).map(nonConst => ({\n      [`${trait}_${nonConst ? 'non_const' : 'const'}`]: () => {\n        if (nonConst) {\n          return FP[trait]\n            .sparseScalarRange()\n            .flatMap(e1 => sparseI32Range().map(e2 => makeCase(trait, e1, e2)));\n        }\n        // const\n        return FP[trait]\n          .sparseScalarRange()\n          .flatMap(e1 =>\n            biasedRange(-bias[trait] - 10, bias[trait] + 1, 10).flatMap(e2 =>\n              FP[trait].isFinite(e1 * 2 ** quantizeToI32(e2)) ? makeCase(trait, e1, e2) : []\n            )\n          );\n      },\n    }))\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('ldexp', cases);\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f32_const' : 'f32_non_const');\n    await run(t, builtin('ldexp'), [TypeF32, TypeI32], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f16_const' : 'f16_non_const');\n    await run(t, builtin('ldexp'), [TypeF16, TypeI32], TypeF16, t.params, cases);\n  });\n"],"mappings":"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"}