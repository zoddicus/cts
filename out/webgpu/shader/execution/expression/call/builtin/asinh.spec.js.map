{"version":3,"file":"asinh.spec.js","names":["description","makeTestGroup","GPUTest","TypeF32","FP","fullF32Range","makeCaseCache","allInputSources","run","builtin","g","d","f32","generateScalarToIntervalCases","asinhInterval","test","specURL","desc","params","u","combine","undefined","unimplemented","fn","t","cases","get"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/asinh.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'sinh' builtin function\n\nS is AbstractFloat, f32, f16\nT is S or vecN<S>\n@const fn asinh(e: T ) -> T\nReturns the hyperbolic arc sine of e.\nComputes the functional inverse of sinh.\nComponent-wise when T is a vector.\n\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeF32 } from '../../../../../util/conversion.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport { fullF32Range } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('asinh', {\n  f32: () => {\n    return FP.f32.generateScalarToIntervalCases(fullF32Range(), 'unfiltered', FP.f32.asinhInterval);\n  },\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float test`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('f32');\n    await run(t, builtin('asinh'), [TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n"],"mappings":";AAAA;AAAA,GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,kDAAkD;AAChF,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,OAAO,QAAQ,mCAAmC;AAC3D,SAASC,EAAE,QAAQ,uCAAuC;AAC1D,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,eAAe,EAAEC,GAAG,QAAQ,qBAAqB;;AAE1D,SAASC,OAAO,QAAQ,cAAc;;AAEtC,OAAO,MAAMC,CAAC,GAAGT,aAAa,CAACC,OAAO,CAAC;;AAEvC,OAAO,MAAMS,CAAC,GAAGL,aAAa,CAAC,OAAO,EAAE;EACtCM,GAAG,EAAE,MAAM;IACT,OAAOR,EAAE,CAACQ,GAAG,CAACC,6BAA6B,CAACR,YAAY,EAAE,EAAE,YAAY,EAAED,EAAE,CAACQ,GAAG,CAACE,aAAa,CAAC;EACjG;AACF,CAAC,CAAC;;AAEFJ,CAAC,CAACK,IAAI,CAAC,gBAAgB,CAAC;AACrBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI,CAAE,qBAAoB,CAAC;AAC3BC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEb,eAAe,CAAC,CAACa,OAAO,CAAC,WAAW,EAAE,CAACC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAU,CAC9F;;AACAC,aAAa,EAAE;;AAElBZ,CAAC,CAACK,IAAI,CAAC,KAAK,CAAC;AACVC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI,CAAE,WAAU,CAAC;AACjBC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEb,eAAe,CAAC,CAACa,OAAO,CAAC,WAAW,EAAE,CAACC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAU,CAC9F;;AACAE,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,KAAK,GAAG,MAAMd,CAAC,CAACe,GAAG,CAAC,KAAK,CAAC;EAChC,MAAMlB,GAAG,CAACgB,CAAC,EAAEf,OAAO,CAAC,OAAO,CAAC,EAAE,CAACN,OAAO,CAAC,EAAEA,OAAO,EAAEqB,CAAC,CAACN,MAAM,EAAEO,KAAK,CAAC;AACrE,CAAC,CAAC;;AAEJf,CAAC,CAACK,IAAI,CAAC,KAAK,CAAC;AACVC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI,CAAE,WAAU,CAAC;AACjBC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEb,eAAe,CAAC,CAACa,OAAO,CAAC,WAAW,EAAE,CAACC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAU,CAC9F;;AACAC,aAAa,EAAE"}