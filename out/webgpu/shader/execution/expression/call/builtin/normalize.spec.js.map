{"version":3,"file":"normalize.spec.js","names":["description","makeTestGroup","GPUTest","TypeF32","TypeVec","FP","vectorF32Range","makeCaseCache","allInputSources","run","builtin","g","d","f32_vec2_const","f32","generateVectorToVectorCases","normalizeInterval","f32_vec2_non_const","f32_vec3_const","f32_vec3_non_const","f32_vec4_const","f32_vec4_non_const","test","specURL","desc","params","u","combine","undefined","unimplemented","fn","t","cases","get","inputSource"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/normalize.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'normalize' builtin function\n\nT is AbstractFloat, f32, or f16\n@const fn normalize(e: vecN<T> ) -> vecN<T>\nReturns a unit vector in the same direction as e.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeF32, TypeVec } from '../../../../../util/conversion.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport { vectorF32Range } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('normalize', {\n  f32_vec2_const: () => {\n    return FP.f32.generateVectorToVectorCases(\n      vectorF32Range(2),\n      'finite',\n      FP.f32.normalizeInterval\n    );\n  },\n  f32_vec2_non_const: () => {\n    return FP.f32.generateVectorToVectorCases(\n      vectorF32Range(2),\n      'unfiltered',\n      FP.f32.normalizeInterval\n    );\n  },\n  f32_vec3_const: () => {\n    return FP.f32.generateVectorToVectorCases(\n      vectorF32Range(3),\n      'finite',\n      FP.f32.normalizeInterval\n    );\n  },\n  f32_vec3_non_const: () => {\n    return FP.f32.generateVectorToVectorCases(\n      vectorF32Range(3),\n      'unfiltered',\n      FP.f32.normalizeInterval\n    );\n  },\n  f32_vec4_const: () => {\n    return FP.f32.generateVectorToVectorCases(\n      vectorF32Range(4),\n      'finite',\n      FP.f32.normalizeInterval\n    );\n  },\n  f32_vec4_non_const: () => {\n    return FP.f32.generateVectorToVectorCases(\n      vectorF32Range(4),\n      'unfiltered',\n      FP.f32.normalizeInterval\n    );\n  },\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('f32_vec2')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec2s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f32_vec2_const' : 'f32_vec2_non_const'\n    );\n    await run(t, builtin('normalize'), [TypeVec(2, TypeF32)], TypeVec(2, TypeF32), t.params, cases);\n  });\n\ng.test('f32_vec3')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec3s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f32_vec3_const' : 'f32_vec3_non_const'\n    );\n    await run(t, builtin('normalize'), [TypeVec(3, TypeF32)], TypeVec(3, TypeF32), t.params, cases);\n  });\n\ng.test('f32_vec4')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec4s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f32_vec4_const' : 'f32_vec4_non_const'\n    );\n    await run(t, builtin('normalize'), [TypeVec(4, TypeF32)], TypeVec(4, TypeF32), t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n"],"mappings":"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"}