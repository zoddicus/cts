{"version":3,"file":"faceForward.cache.js","names":["anyOf","toVector","FP","cartesianProduct","makeCaseCache","makeCase","kind","x","y","z","check","fp","map","quantize","results","faceForwardIntervals","some","r","undefined","define_results","filter","input","scalarBuilder","expected","generateCases","xs","ys","zs","e","c","cases","flatMap","trait","dim","nonConst","sparseVectorRange","reduce","a","b","d"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/faceForward.cache.ts"],"sourcesContent":["import { ROArrayArray } from '../../../../../../common/util/types.js';\nimport { anyOf } from '../../../../../util/compare.js';\nimport { toVector } from '../../../../../util/conversion.js';\nimport { FP, FPKind, FPVector } from '../../../../../util/floating_point.js';\nimport { cartesianProduct } from '../../../../../util/math.js';\nimport { Case } from '../../case.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { IntervalFilter } from '../../interval_filter.js';\n\n// Using a bespoke implementation of make*Case and generate*Cases here\n// since faceForwardIntervals is the only builtin with the API signature\n// (vec, vec, vec) -> vec\n//\n// Additionally faceForward has significant complexities around it due to the\n// fact that `dot` is calculated in it s operation, but the result of dot isn't\n// used to calculate the builtin's result.\n\n/**\n * @returns a Case for `faceForward`\n * @param kind what kind of floating point numbers being operated on\n * @param x the `x` param for the case\n * @param y the `y` param for the case\n * @param z the `z` param for the case\n * @param check what interval checking to apply\n * */\nfunction makeCase(\n  kind: FPKind,\n  x: readonly number[],\n  y: readonly number[],\n  z: readonly number[],\n  check: IntervalFilter\n): Case | undefined {\n  const fp = FP[kind];\n  x = x.map(fp.quantize);\n  y = y.map(fp.quantize);\n  z = z.map(fp.quantize);\n\n  const results = FP[kind].faceForwardIntervals(x, y, z);\n  if (check === 'finite' && results.some(r => r === undefined)) {\n    return undefined;\n  }\n\n  // Stripping the undefined results, since undefined is used to signal that an OOB\n  // could occur within the calculation that isn't reflected in the result\n  // intervals.\n  const define_results = results.filter((r): r is FPVector => r !== undefined);\n\n  return {\n    input: [\n      toVector(x, fp.scalarBuilder),\n      toVector(y, fp.scalarBuilder),\n      toVector(z, fp.scalarBuilder),\n    ],\n    expected: anyOf(...define_results),\n  };\n}\n\n/**\n * @returns an array of Cases for `faceForward`\n * @param kind what kind of floating point numbers being operated on\n * @param xs array of inputs to try for the `x` param\n * @param ys array of inputs to try for the `y` param\n * @param zs array of inputs to try for the `z` param\n * @param check what interval checking to apply\n */\nfunction generateCases(\n  kind: FPKind,\n  xs: ROArrayArray<number>,\n  ys: ROArrayArray<number>,\n  zs: ROArrayArray<number>,\n  check: IntervalFilter\n): Case[] {\n  // Cannot use `cartesianProduct` here due to heterogeneous param types\n  return cartesianProduct(xs, ys, zs)\n    .map(e => makeCase(kind, e[0], e[1], e[2], check))\n    .filter((c): c is Case => c !== undefined);\n}\n\n// Cases: [f32|f16]_vecN_[non_]const\nconst cases = (['f32', 'f16'] as const)\n  .flatMap(trait =>\n    ([2, 3, 4] as const).flatMap(dim =>\n      ([true, false] as const).map(nonConst => ({\n        [`${trait}_vec${dim}_${nonConst ? 'non_const' : 'const'}`]: () => {\n          return generateCases(\n            trait,\n            FP[trait].sparseVectorRange(dim),\n            FP[trait].sparseVectorRange(dim),\n            FP[trait].sparseVectorRange(dim),\n            nonConst ? 'unfiltered' : 'finite'\n          );\n        },\n      }))\n    )\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('faceForward', cases);\n"],"mappings":"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"}