{"version":3,"file":"modf.spec.js","names":["description","makeTestGroup","GPUTest","toVector","TypeAbstractFloat","TypeF16","TypeF32","TypeVec","FP","makeCaseCache","abstractFloatShaderBuilder","allInputSources","basicExpressionBuilder","onlyConstInputSource","run","g","wholeBuilder","value","fractBuilder","abstractWholeBuilder","abstractFractBuilder","makeScalarCaseFract","kind","n","fp","quantize","result","modfInterval","fract","input","scalarBuilder","expected","makeScalarCaseWhole","whole","makeVectorCaseFract","v","map","fs","e","makeVectorCaseWhole","ws","scalar_cases","flatMap","portion","makeCase","scalarRange","bind","reduce","a","b","vec_cases","vectorRange","d","test","specURL","desc","params","u","combine","fn","t","cases","get","beforeAllSubcases","selectDeviceOrSkipTestCase","requiredFeatures"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/modf.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'modf' builtin function\n\nT is f32 or f16 or AbstractFloat\n@const fn modf(e:T) -> result_struct\nSplits |e| into fractional and whole number parts.\nThe whole part is (|e| % 1.0), and the fractional part is |e| minus the whole part.\nReturns the result_struct for the given type.\n\nS is f32 or f16 or AbstractFloat\nT is vecN<S>\n@const fn modf(e:T) -> result_struct\nSplits the components of |e| into fractional and whole number parts.\nThe |i|'th component of the whole and fractional parts equal the whole and fractional parts of modf(e[i]).\nReturns the result_struct for the given type.\n\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport {\n  toVector,\n  TypeAbstractFloat,\n  TypeF16,\n  TypeF32,\n  TypeVec,\n} from '../../../../../util/conversion.js';\nimport { FP, FPKind } from '../../../../../util/floating_point.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport {\n  abstractFloatShaderBuilder,\n  allInputSources,\n  basicExpressionBuilder,\n  Case,\n  onlyConstInputSource,\n  run,\n  ShaderBuilder,\n} from '../../expression.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n/** @returns an ShaderBuilder that evaluates modf and returns .whole from the result structure */\nfunction wholeBuilder(): ShaderBuilder {\n  return basicExpressionBuilder(value => `modf(${value}).whole`);\n}\n\n/** @returns an ShaderBuilder that evaluates modf and returns .fract from the result structure */\nfunction fractBuilder(): ShaderBuilder {\n  return basicExpressionBuilder(value => `modf(${value}).fract`);\n}\n\n/** @returns an ShaderBuilder that evaluates modf and returns .whole from the result structure for AbstractFloats */\nfunction abstractWholeBuilder(): ShaderBuilder {\n  return abstractFloatShaderBuilder(value => `modf(${value}).whole`);\n}\n\n/** @returns an ShaderBuilder that evaluates modf and returns .fract from the result structure for AbstractFloats */\nfunction abstractFractBuilder(): ShaderBuilder {\n  return abstractFloatShaderBuilder(value => `modf(${value}).fract`);\n}\n\n/** @returns a fract Case for a scalar vector input */\nfunction makeScalarCaseFract(kind: FPKind, n: number): Case {\n  const fp = FP[kind];\n  n = fp.quantize(n);\n  const result = fp.modfInterval(n).fract;\n\n  return { input: fp.scalarBuilder(n), expected: result };\n}\n\n/** @returns a whole Case for a scalar vector input */\nfunction makeScalarCaseWhole(kind: FPKind, n: number): Case {\n  const fp = FP[kind];\n  n = fp.quantize(n);\n  const result = fp.modfInterval(n).whole;\n\n  return { input: fp.scalarBuilder(n), expected: result };\n}\n\n/** @returns a fract Case for a given vector input */\nfunction makeVectorCaseFract(kind: FPKind, v: readonly number[]): Case {\n  const fp = FP[kind];\n  v = v.map(fp.quantize);\n  const fs = v.map(e => {\n    return fp.modfInterval(e).fract;\n  });\n\n  return { input: toVector(v, fp.scalarBuilder), expected: fs };\n}\n\n/** @returns a whole Case for a given vector input */\nfunction makeVectorCaseWhole(kind: FPKind, v: readonly number[]): Case {\n  const fp = FP[kind];\n  v = v.map(fp.quantize);\n  const ws = v.map(e => {\n    return fp.modfInterval(e).whole;\n  });\n\n  return { input: toVector(v, fp.scalarBuilder), expected: ws };\n}\n\n// Cases: [f32|f16|abstract]_[fract|whole]\nconst scalar_cases = (['f32', 'f16', 'abstract'] as const)\n  .flatMap(kind =>\n    (['whole', 'fract'] as const).map(portion => ({\n      [`${kind}_${portion}`]: () => {\n        const makeCase = portion === 'whole' ? makeScalarCaseWhole : makeScalarCaseFract;\n        return FP[kind].scalarRange().map(makeCase.bind(null, kind));\n      },\n    }))\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\n// Cases: [f32|f16|abstract]_vecN_[fract|whole]\nconst vec_cases = (['f32', 'f16', 'abstract'] as const)\n  .flatMap(kind =>\n    ([2, 3, 4] as const).flatMap(n =>\n      (['whole', 'fract'] as const).map(portion => ({\n        [`${kind}_vec${n}_${portion}`]: () => {\n          const makeCase = portion === 'whole' ? makeVectorCaseWhole : makeVectorCaseFract;\n          return FP[kind].vectorRange(n).map(makeCase.bind(null, kind));\n        },\n      }))\n    )\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('modf', {\n  ...scalar_cases,\n  ...vec_cases,\n});\n\ng.test('f32_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f32\n\nstruct __modf_result_f32 {\n  fract : f32, // fractional part\n  whole : f32  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_fract');\n    await run(t, fractBuilder(), [TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f32_whole')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f32\n\nstruct __modf_result_f32 {\n  fract : f32, // fractional part\n  whole : f32  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_whole');\n    await run(t, wholeBuilder(), [TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f32_vec2_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f32>\n\nstruct __modf_result_vec2_f32 {\n  fract : vec2<f32>, // fractional part\n  whole : vec2<f32>  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec2_fract');\n    await run(t, fractBuilder(), [TypeVec(2, TypeF32)], TypeVec(2, TypeF32), t.params, cases);\n  });\n\ng.test('f32_vec2_whole')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f32>\n\nstruct __modf_result_vec2_f32 {\n  fract : vec2<f32>, // fractional part\n  whole : vec2<f32>  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec2_whole');\n    await run(t, wholeBuilder(), [TypeVec(2, TypeF32)], TypeVec(2, TypeF32), t.params, cases);\n  });\n\ng.test('f32_vec3_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f32>\n\nstruct __modf_result_vec3_f32 {\n  fract : vec3<f32>, // fractional part\n  whole : vec3<f32>  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec3_fract');\n    await run(t, fractBuilder(), [TypeVec(3, TypeF32)], TypeVec(3, TypeF32), t.params, cases);\n  });\n\ng.test('f32_vec3_whole')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f32>\n\nstruct __modf_result_vec3_f32 {\n  fract : vec3<f32>, // fractional part\n  whole : vec3<f32>  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec3_whole');\n    await run(t, wholeBuilder(), [TypeVec(3, TypeF32)], TypeVec(3, TypeF32), t.params, cases);\n  });\n\ng.test('f32_vec4_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f32>\n\nstruct __modf_result_vec4_f32 {\n  fract : vec4<f32>, // fractional part\n  whole : vec4<f32>  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec4_fract');\n    await run(t, fractBuilder(), [TypeVec(4, TypeF32)], TypeVec(4, TypeF32), t.params, cases);\n  });\n\ng.test('f32_vec4_whole')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f32>\n\nstruct __modf_result_vec4_f32 {\n  fract : vec4<f32>, // fractional part\n  whole : vec4<f32>  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec4_whole');\n    await run(t, wholeBuilder(), [TypeVec(4, TypeF32)], TypeVec(4, TypeF32), t.params, cases);\n  });\n\ng.test('f16_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f16\n\nstruct __modf_result_f16 {\n  fract : f16, // fractional part\n  whole : f16  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_fract');\n    await run(t, fractBuilder(), [TypeF16], TypeF16, t.params, cases);\n  });\n\ng.test('f16_whole')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f16\n\nstruct __modf_result_f16 {\n  fract : f16, // fractional part\n  whole : f16  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_whole');\n    await run(t, wholeBuilder(), [TypeF16], TypeF16, t.params, cases);\n  });\n\ng.test('f16_vec2_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f16>\n\nstruct __modf_result_vec2_f16 {\n  fract : vec2<f16>, // fractional part\n  whole : vec2<f16>  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_vec2_fract');\n    await run(t, fractBuilder(), [TypeVec(2, TypeF16)], TypeVec(2, TypeF16), t.params, cases);\n  });\n\ng.test('f16_vec2_whole')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f16>\n\nstruct __modf_result_vec2_f16 {\n  fract : vec2<f16>, // fractional part\n  whole : vec2<f16>  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_vec2_whole');\n    await run(t, wholeBuilder(), [TypeVec(2, TypeF16)], TypeVec(2, TypeF16), t.params, cases);\n  });\n\ng.test('f16_vec3_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f16>\n\nstruct __modf_result_vec3_f16 {\n  fract : vec3<f16>, // fractional part\n  whole : vec3<f16>  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_vec3_fract');\n    await run(t, fractBuilder(), [TypeVec(3, TypeF16)], TypeVec(3, TypeF16), t.params, cases);\n  });\n\ng.test('f16_vec3_whole')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f16>\n\nstruct __modf_result_vec3_f16 {\n  fract : vec3<f16>, // fractional part\n  whole : vec3<f16>  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_vec3_whole');\n    await run(t, wholeBuilder(), [TypeVec(3, TypeF16)], TypeVec(3, TypeF16), t.params, cases);\n  });\n\ng.test('f16_vec4_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f16>\n\nstruct __modf_result_vec4_f16 {\n  fract : vec4<f16>, // fractional part\n  whole : vec4<f16>  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_vec4_fract');\n    await run(t, fractBuilder(), [TypeVec(4, TypeF16)], TypeVec(4, TypeF16), t.params, cases);\n  });\n\ng.test('f16_vec4_whole')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f16>\n\nstruct __modf_result_vec4_f16 {\n  fract : vec4<f16>, // fractional part\n  whole : vec4<f16>  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_vec4_whole');\n    await run(t, wholeBuilder(), [TypeVec(4, TypeF16)], TypeVec(4, TypeF16), t.params, cases);\n  });\n\ng.test('abstract_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is AbstractFloat\n\nstruct __modf_result_abstract {\n  fract : AbstractFloat, // fractional part\n  whole : AbstractFloat  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', onlyConstInputSource))\n  .fn(async t => {\n    const cases = await d.get('abstract_fract');\n    await run(t, abstractFractBuilder(), [TypeAbstractFloat], TypeAbstractFloat, t.params, cases);\n  });\n\ng.test('abstract_whole')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is AbstractFloat\n\nstruct __modf_result_abstract {\n  fract : AbstractFloat, // fractional part\n  whole : AbstractFloat  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', onlyConstInputSource))\n  .fn(async t => {\n    const cases = await d.get('abstract_whole');\n    await run(t, abstractWholeBuilder(), [TypeAbstractFloat], TypeAbstractFloat, t.params, cases);\n  });\n\ng.test('abstract_vec2_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<abstract>\n\nstruct __modf_result_vec2_abstract {\n  fract : vec2<abstract>, // fractional part\n  whole : vec2<abstract>  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', onlyConstInputSource))\n  .fn(async t => {\n    const cases = await d.get('abstract_vec2_fract');\n    await run(\n      t,\n      abstractFractBuilder(),\n      [TypeVec(2, TypeAbstractFloat)],\n      TypeVec(2, TypeAbstractFloat),\n      t.params,\n      cases\n    );\n  });\n\ng.test('abstract_vec2_whole')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<abstract>\n\nstruct __modf_result_vec2_abstract {\n  fract : vec2<abstract>, // fractional part\n  whole : vec2<abstract>  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', onlyConstInputSource))\n  .fn(async t => {\n    const cases = await d.get('abstract_vec2_whole');\n    await run(\n      t,\n      abstractWholeBuilder(),\n      [TypeVec(2, TypeAbstractFloat)],\n      TypeVec(2, TypeAbstractFloat),\n      t.params,\n      cases\n    );\n  });\n\ng.test('abstract_vec3_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<abstract>\n\nstruct __modf_result_vec3_abstract {\n  fract : vec3<abstract>, // fractional part\n  whole : vec3<abstract>  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', onlyConstInputSource))\n  .fn(async t => {\n    const cases = await d.get('abstract_vec3_fract');\n    await run(\n      t,\n      abstractFractBuilder(),\n      [TypeVec(3, TypeAbstractFloat)],\n      TypeVec(3, TypeAbstractFloat),\n      t.params,\n      cases\n    );\n  });\n\ng.test('abstract_vec3_whole')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<abstract>\n\nstruct __modf_result_vec3_abstract {\n  fract : vec3<abstract>, // fractional part\n  whole : vec3<abstract>  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', onlyConstInputSource))\n  .fn(async t => {\n    const cases = await d.get('abstract_vec3_whole');\n    await run(\n      t,\n      abstractWholeBuilder(),\n      [TypeVec(3, TypeAbstractFloat)],\n      TypeVec(3, TypeAbstractFloat),\n      t.params,\n      cases\n    );\n  });\n\ng.test('abstract_vec4_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<abstract>\n\nstruct __modf_result_vec4_abstract {\n  fract : vec4<abstract>, // fractional part\n  whole : vec4<abstract>  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', onlyConstInputSource))\n  .fn(async t => {\n    const cases = await d.get('abstract_vec4_fract');\n    await run(\n      t,\n      abstractFractBuilder(),\n      [TypeVec(4, TypeAbstractFloat)],\n      TypeVec(4, TypeAbstractFloat),\n      t.params,\n      cases\n    );\n  });\n\ng.test('abstract_vec4_whole')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<abstract>\n\nstruct __modf_result_vec4_abstract {\n  fract : vec4<abstract>, // fractional part\n  whole : vec4<abstract>  // whole part\n}\n`\n  )\n  .params(u => u.combine('inputSource', onlyConstInputSource))\n  .fn(async t => {\n    const cases = await d.get('abstract_vec4_whole');\n    await run(\n      t,\n      abstractWholeBuilder(),\n      [TypeVec(4, TypeAbstractFloat)],\n      TypeVec(4, TypeAbstractFloat),\n      t.params,\n      cases\n    );\n  });\n"],"mappings":"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"}