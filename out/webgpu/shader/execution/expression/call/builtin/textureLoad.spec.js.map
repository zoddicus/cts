{"version":3,"file":"textureLoad.spec.js","names":["description","makeTestGroup","unreachable","iterRange","GPUTest","kFloat32Format","kFloat16Format","numberToFloatBits","pack4x8unorm","pack4x8snorm","TexelFormats","generateCoordBoundaries","g","test","specURL","desc","params","u","combine","unimplemented","beginSubcases","paramsSubcasesOnly","shaderValues","format","type","r","b","a","combineWithParams","_shaderType","beforeAllSubcases","t","skipIf","hasLanguageFeature","selectDeviceOrSkipTestCase","skipIfTextureFormatNotUsableAsStorageTexture","fn","values","useType","assignValue","wgsl","length","bytesPerRow","bytesPerTexel","textureSize","width","height","depthOrArrayLayers","texture","createTextureTracked","dimension","size","mipLevelCount","usage","GPUTextureUsage","STORAGE_BINDING","COPY_DST","outputBuffer","makeBufferWithContents","Uint32Array","x","GPUBufferUsage","COPY_SRC","STORAGE","trackForCleanup","transformed","flatMap","texelBuffer","pipeline","device","createComputePipeline","layout","compute","module","createShaderModule","code","entryPoint","bg","createBindGroup","getBindGroupLayout","entries","binding","resource","createView","buffer","encoder","createCommandEncoder","copyBufferToTexture","offset","rowsPerImage","pass","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","end","queue","submit","finish","expected","expectGPUBufferValuesEqual"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/textureLoad.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'textureLoad' builtin function\n\nReads a single texel from a texture without sampling or filtering.\n\nReturns the unfiltered texel data.\n\nAn out of bounds access occurs if:\n * any element of coords is outside the range [0, textureDimensions(t, level)) for the corresponding element, or\n * array_index is outside the range [0, textureNumLayers(t)), or\n * level is outside the range [0, textureNumLevels(t))\n\nIf an out of bounds access occurs, the built-in function returns one of:\n * The data for some texel within bounds of the texture\n * A vector (0,0,0,0) or (0,0,0,1) of the appropriate type for non-depth textures\n * 0.0 for depth textures\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { unreachable, iterRange } from '../../../../../../common/util/util.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport {\n  kFloat32Format,\n  kFloat16Format,\n  numberToFloatBits,\n  pack4x8unorm,\n  pack4x8snorm,\n} from '../../../../../util/conversion.js';\nimport { TexelFormats } from '../../../../types.js';\n\nimport { generateCoordBoundaries } from './utils.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('sampled_1d')\n  .specURL('https://www.w3.org/TR/WGSL/#textureload')\n  .desc(\n    `\nC is i32 or u32\n\nfn textureLoad(t: texture_1d<T>, coords: C, level: C) -> vec4<T>\n\nParameters:\n * t: The sampled texture to read from\n * coords: The 0-based texel coordinate\n * level: The mip level, with level 0 containing a full size version of the texture\n`\n  )\n  .params(u =>\n    u\n      .combine('C', ['i32', 'u32'] as const)\n      .combine('coords', generateCoordBoundaries(1))\n      .combine('level', [-1, 0, `numlevels-1`, `numlevels`] as const)\n  )\n  .unimplemented();\n\ng.test('sampled_2d')\n  .specURL('https://www.w3.org/TR/WGSL/#textureload')\n  .desc(\n    `\nC is i32 or u32\n\nfn textureLoad(t: texture_2d<T>, coords: vec2<C>, level: C) -> vec4<T>\n\nParameters:\n * t: The sampled texture to read from\n * coords: The 0-based texel coordinate\n * level: The mip level, with level 0 containing a full size version of the texture\n`\n  )\n  .params(u =>\n    u\n      .combine('C', ['i32', 'u32'] as const)\n      .combine('coords', generateCoordBoundaries(2))\n      .combine('level', [-1, 0, `numlevels-1`, `numlevels`] as const)\n  )\n  .unimplemented();\n\ng.test('sampled_3d')\n  .specURL('https://www.w3.org/TR/WGSL/#textureload')\n  .desc(\n    `\nC is i32 or u32\n\nfn textureLoad(t: texture_3d<T>, coords: vec3<C>, level: C) -> vec4<T>\n\nParameters:\n * t: The sampled texture to read from\n * coords: The 0-based texel coordinate\n * level: The mip level, with level 0 containing a full size version of the texture\n`\n  )\n  .params(u =>\n    u\n      .combine('C', ['i32', 'u32'] as const)\n      .combine('coords', generateCoordBoundaries(3))\n      .combine('level', [-1, 0, `numlevels-1`, `numlevels`] as const)\n  )\n  .unimplemented();\n\ng.test('multisampled')\n  .specURL('https://www.w3.org/TR/WGSL/#textureload')\n  .desc(\n    `\nC is i32 or u32\n\nfn textureLoad(t: texture_multisampled_2d<T>, coords: vec2<C>, sample_index: C)-> vec4<T>\nfn textureLoad(t: texture_depth_multisampled_2d, coords: vec2<C>, sample_index: C)-> f32\n\nParameters:\n * t: The sampled texture to read from\n * coords: The 0-based texel coordinate\n * sample_index: The 0-based sample index of the multisampled texture\n`\n  )\n  .params(u =>\n    u\n      .combine('texture_type', [\n        'texture_multisampled_2d',\n        'texture_depth_multisampled_2d',\n      ] as const)\n      .beginSubcases()\n      .combine('C', ['i32', 'u32'] as const)\n      .combine('coords', generateCoordBoundaries(2))\n      .combine('sample_index', [-1, 0, `sampleCount-1`, `sampleCount`] as const)\n  )\n  .unimplemented();\n\ng.test('depth')\n  .specURL('https://www.w3.org/TR/WGSL/#textureload')\n  .desc(\n    `\nC is i32 or u32\n\nfn textureLoad(t: texture_depth_2d, coords: vec2<C>, level: C) -> f32\n\nParameters:\n * t: The sampled texture to read from\n * coords: The 0-based texel coordinate\n * level: The mip level, with level 0 containing a full size version of the texture\n`\n  )\n  .paramsSubcasesOnly(u =>\n    u\n      .combine('C', ['i32', 'u32'] as const)\n      .combine('coords', generateCoordBoundaries(2))\n      .combine('level', [-1, 0, `numlevels-1`, `numlevels`] as const)\n  )\n  .unimplemented();\n\ng.test('external')\n  .specURL('https://www.w3.org/TR/WGSL/#textureload')\n  .desc(\n    `\nC is i32 or u32\n\nfn textureLoad(t: texture_external, coords: vec2<C>) -> vec4<f32>\n\nParameters:\n * t: The sampled texture to read from\n * coords: The 0-based texel coordinate\n`\n  )\n  .paramsSubcasesOnly(u =>\n    u.combine('C', ['i32', 'u32'] as const).combine('coords', generateCoordBoundaries(2))\n  )\n  .unimplemented();\n\ng.test('arrayed')\n  .specURL('https://www.w3.org/TR/WGSL/#textureload')\n  .desc(\n    `\nC is i32 or u32\n\nfn textureLoad(t: texture_2d_array<T>, coords: vec2<C>, array_index: C, level: C) -> vec4<T>\nfn textureLoad(t: texture_depth_2d_array, coords: vec2<C>, array_index: C, level: C) -> f32\n\nParameters:\n * t: The sampled texture to read from\n * coords: The 0-based texel coordinate\n * array_index: The 0-based texture array index\n * level: The mip level, with level 0 containing a full size version of the texture\n`\n  )\n  .params(u =>\n    u\n      .combine('texture_type', ['texture_2d_array', 'texture_depth_2d_array'] as const)\n      .beginSubcases()\n      .combine('C', ['i32', 'u32'] as const)\n      .combine('coords', generateCoordBoundaries(2))\n      .combine('array_index', [-1, 0, `numlayers-1`, `numlayers`] as const)\n      .combine('level', [-1, 0, `numlevels-1`, `numlevels`] as const)\n  )\n  .unimplemented();\n\n// Returns texel values to use as inputs for textureLoad.\n// Values are kept simple to avoid rounding issues.\nfunction shaderValues(format: string, type: string) {\n  switch (type) {\n    case 'f32': {\n      switch (format) {\n        case 'rbga8snorm':\n          // prettier-ignore\n          return [\n            { r:  0.0, g:  0.0, b:  0.0, a:  0.0, },\n            { r:  0.2, g:  0.4, b:  0.6, a:  0.8, },\n            { r: -0.2, g: -0.4, b: -0.6, a: -0.8, },\n            { r:  0.2, g: -0.4, b:  0.6, a: -0.8, },\n            { r: -0.2, g:  0.4, b: -0.6, a:  0.8, },\n            { r:  0.2, g:  0.2, b:  0.2, a:  0.2, },\n            { r: -0.2, g: -0.2, b: -0.2, a: -0.2, },\n            { r:  0.4, g:  0.4, b:  0.4, a:  0.4, },\n            { r: -0.4, g: -0.4, b: -0.4, a: -0.4, },\n            { r:  0.6, g:  0.6, b:  0.6, a:  0.6, },\n            { r: -0.6, g: -0.6, b: -0.6, a: -0.6, },\n            { r:  0.8, g:  0.8, b:  0.8, a:  0.8, },\n            { r: -0.8, g: -0.8, b: -0.8, a: -0.8, },\n          ];\n        case 'rgba8unorm':\n        case 'bgra8unorm':\n          // prettier-ignore\n          return [\n            { r: 0.0, g: 0.0, b: 0.0, a: 0.0, },\n            { r: 0.2, g: 0.4, b: 0.6, a: 0.8, },\n            { r: 0.9, g: 0.4, b: 0.6, a: 0.8, },\n            { r: 0.2, g: 0.9, b: 0.6, a: 0.8, },\n            { r: 0.2, g: 0.4, b: 0.9, a: 0.8, },\n            { r: 0.2, g: 0.4, b: 0.6, a: 0.9, },\n            { r: 0.2, g: 0.2, b: 0.2, a: 0.2, },\n            { r: 0.4, g: 0.4, b: 0.4, a: 0.4, },\n            { r: 0.6, g: 0.6, b: 0.6, a: 0.6, },\n            { r: 0.8, g: 0.8, b: 0.8, a: 0.8, },\n          ];\n        default:\n          // Stick within 16-bit ranges.\n          // prettier-ignore\n          return [\n            { r:  100, g:  128, b:  100, a:  128, },\n            { r:   64, g:   32, b:   32, a:   64, },\n            { r:    8, g:    0, b:    8, a:    0, },\n            { r:    0, g:    0, b:    0, a:    0, },\n            { r: -100, g:  128, b:  100, a:  128, },\n            { r:  -64, g:   32, b:   32, a:   64, },\n            { r:   -8, g:    0, b:    8, a:    0, },\n            { r:  100, g: -128, b:  100, a:  128, },\n            { r:   64, g:  -32, b:   32, a:   64, },\n            { r:    8, g:    0, b:    8, a:    0, },\n            { r:  100, g:  128, b: -100, a:  128, },\n            { r:   64, g:   32, b:  -32, a:   64, },\n            { r:    8, g:    0, b:   -8, a:    0, },\n            { r:  100, g:  128, b:  100, a: -128, },\n            { r:   64, g:   32, b:   32, a:  -64, },\n            { r:    8, g:    0, b:    8, a:    0, },\n          ];\n      }\n      break;\n    }\n    case 'u32':\n      // Keep all ranges within u8.\n      // prettier-ignore\n      return [\n        { r:   0, g:   0, b:   0, a:   0, },\n        { r:   0, g:   8, b:  16, a: 128, },\n        { r:   8, g:  16, b:  32, a:  64, },\n        { r:  16, g:  32, b:  64, a: 128, },\n        { r: 255, g: 254, b: 253, a: 252, },\n        { r: 255, g: 255, b: 255, a: 255, },\n        { r: 128, g:  64, b:  32, a:  16, },\n        { r:  64, g:  32, b:  16, a:   8, },\n        { r:  32, g:  16, b:   8, a:   0, },\n      ];\n    case 'i32':\n      // Keep all ranges i8\n      // prettier-ignore\n      return [\n        { r:    0, g:    0, b:    0, a:    0, },\n        { r:    0, g:   -8, b:   16, a:  127, },\n        { r:    8, g:   16, b:  -32, a:   64, },\n        { r:  -16, g:   32, b:   64, a: -128, },\n        { r:  127, g:  126, b:  125, a:  124, },\n        { r: -128, g: -127, b: -126, a: -125, },\n        { r:  127, g:  127, b:  127, a:  127, },\n        { r: -128, g: -128, b: -128, a: -128, },\n      ];\n    default:\n      unreachable(`unhandled shader type ${type}`);\n      break;\n  }\n  return [];\n}\n\ng.test('storage_texel_formats')\n  .desc('Test loading of texel formats')\n  .params(u => u.combineWithParams([...TexelFormats, { format: 'bgra8unorm', _shaderType: 'f32' }]))\n  .beforeAllSubcases(t => {\n    t.skipIf(!t.hasLanguageFeature('readonly_and_readwrite_storage_textures'));\n    if (t.params.format === 'bgra8unorm') {\n      t.selectDeviceOrSkipTestCase('bgra8unorm-storage');\n    } else {\n      t.skipIfTextureFormatNotUsableAsStorageTexture(t.params.format as GPUTextureFormat);\n    }\n  })\n  .fn(t => {\n    const { format, _shaderType } = t.params;\n    const values = shaderValues(format, _shaderType);\n\n    // To avoid rounding issues, unorm and snorm values are repacked in the shader.\n    let useType = _shaderType;\n    let assignValue = `v`;\n    if (format === 'bgra8unorm' || format === 'rgba8unorm') {\n      useType = 'u32';\n      assignValue = `vec4u(pack4x8unorm(v),0,0,0)`;\n    } else if (format === 'rgba8snorm') {\n      useType = 'u32';\n      assignValue = `vec4u(pack4x8snorm(v),0,0,0)`;\n    }\n    const wgsl = `\nrequires readonly_and_readwrite_storage_textures;\n\n@group(0) @binding(0)\nvar tex : texture_storage_1d<${format}, read>;\n\n@group(0) @binding(1)\nvar<storage, read_write> out : array<vec4<${useType}>>;\n\n@compute @workgroup_size(${values.length})\nfn main(@builtin(global_invocation_id) gid : vec3u) {\n  let v = textureLoad(tex, gid.x);\n  out[gid.x] = ${assignValue};\n}`;\n\n    const bytesPerRow = 256;\n    let bytesPerTexel = 4;\n    switch (format) {\n      case 'rgba16uint':\n      case 'rgba16sint':\n      case 'rgba16float':\n      case 'rg32uint':\n      case 'rg32sint':\n      case 'rg32float':\n        bytesPerTexel = 8;\n        break;\n      case 'rgba32uint':\n      case 'rgba32sint':\n      case 'rgba32float':\n        bytesPerTexel = 16;\n        break;\n      default:\n        break;\n    }\n\n    const textureSize: GPUExtent3D = {\n      width: bytesPerRow / bytesPerTexel,\n      height: 1,\n      depthOrArrayLayers: 1,\n    };\n    const texture = t.createTextureTracked({\n      format: format as GPUTextureFormat,\n      dimension: '1d',\n      size: textureSize,\n      mipLevelCount: 1,\n      usage: GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.COPY_DST,\n    });\n    const outputBuffer = t.makeBufferWithContents(\n      new Uint32Array([...iterRange(values.length * 4, x => 0)]),\n      GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST | GPUBufferUsage.STORAGE\n    );\n    t.trackForCleanup(outputBuffer);\n\n    const transformed = values.flatMap(x => {\n      switch (format) {\n        case 'rgba8unorm':\n          return pack4x8unorm(x.r, x.g, x.b, x.a);\n        case 'bgra8unorm':\n          return pack4x8unorm(x.b, x.g, x.r, x.a);\n        case 'rgba8snorm':\n          return pack4x8snorm(x.r, x.g, x.b, x.a);\n        case 'r32uint':\n        case 'r32sint':\n          return x.r;\n        case 'rg32uint':\n        case 'rg32sint':\n          return [x.r, x.g];\n        case 'rgba32uint':\n        case 'rgba32sint':\n          return [x.r, x.g, x.b, x.a];\n        case 'rgba8uint':\n        case 'rgba8sint':\n          return (x.r & 0xff) | ((x.g & 0xff) << 8) | ((x.b & 0xff) << 16) | ((x.a & 0xff) << 24);\n        case 'rgba16uint':\n        case 'rgba16sint':\n          return [(x.r & 0xffff) | ((x.g & 0xffff) << 16), (x.b & 0xffff) | ((x.a & 0xffff) << 16)];\n        case 'r32float':\n          return numberToFloatBits(x.r, kFloat32Format);\n        case 'rg32float':\n          return [numberToFloatBits(x.r, kFloat32Format), numberToFloatBits(x.g, kFloat32Format)];\n        case 'rgba32float':\n          return [\n            numberToFloatBits(x.r, kFloat32Format),\n            numberToFloatBits(x.g, kFloat32Format),\n            numberToFloatBits(x.b, kFloat32Format),\n            numberToFloatBits(x.a, kFloat32Format),\n          ];\n        case 'rgba16float':\n          return [\n            (numberToFloatBits(x.r, kFloat16Format) & 0xffff) |\n              ((numberToFloatBits(x.g, kFloat16Format) & 0xffff) << 16),\n            (numberToFloatBits(x.b, kFloat16Format) & 0xffff) |\n              ((numberToFloatBits(x.a, kFloat16Format) & 0xffff) << 16),\n          ];\n        default:\n          unreachable(`unhandled format ${format}`);\n          break;\n      }\n      return 0;\n    });\n\n    const texelBuffer = t.makeBufferWithContents(\n      new Uint32Array([\n        ...iterRange(bytesPerRow, x => {\n          if (x < transformed.length) {\n            return transformed[x];\n          } else {\n            return 0;\n          }\n        }),\n      ]),\n      GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST | GPUBufferUsage.STORAGE\n    );\n    t.trackForCleanup(texelBuffer);\n\n    const pipeline = t.device.createComputePipeline({\n      layout: 'auto',\n      compute: {\n        module: t.device.createShaderModule({\n          code: wgsl,\n        }),\n        entryPoint: 'main',\n      },\n    });\n    const bg = t.device.createBindGroup({\n      layout: pipeline.getBindGroupLayout(0),\n      entries: [\n        {\n          binding: 0,\n          resource: texture.createView({\n            format: format as GPUTextureFormat,\n            dimension: '1d',\n          }),\n        },\n        {\n          binding: 1,\n          resource: {\n            buffer: outputBuffer,\n          },\n        },\n      ],\n    });\n\n    const encoder = t.device.createCommandEncoder();\n    encoder.copyBufferToTexture(\n      {\n        buffer: texelBuffer,\n        offset: 0,\n        bytesPerRow,\n        rowsPerImage: 1,\n      },\n      { texture },\n      textureSize\n    );\n\n    const pass = encoder.beginComputePass();\n    pass.setPipeline(pipeline);\n    pass.setBindGroup(0, bg);\n    pass.dispatchWorkgroups(1, 1, 1);\n    pass.end();\n    t.queue.submit([encoder.finish()]);\n\n    const expected = new Uint32Array(\n      values.flatMap(x => {\n        switch (format) {\n          case 'r32uint':\n          case 'r32sint':\n            return [x.r, 0, 0, 1];\n          case 'rg32uint':\n          case 'rg32sint':\n            return [x.r, x.g, 0, 1];\n          case 'r32float':\n            return [\n              numberToFloatBits(x.r, kFloat32Format),\n              0,\n              0,\n              numberToFloatBits(1, kFloat32Format),\n            ];\n          case 'rg32float':\n            return [\n              numberToFloatBits(x.r, kFloat32Format),\n              numberToFloatBits(x.g, kFloat32Format),\n              0,\n              numberToFloatBits(1, kFloat32Format),\n            ];\n          case 'rgba32float':\n          case 'rgba16float':\n            return [\n              numberToFloatBits(x.r, kFloat32Format),\n              numberToFloatBits(x.g, kFloat32Format),\n              numberToFloatBits(x.b, kFloat32Format),\n              numberToFloatBits(x.a, kFloat32Format),\n            ];\n          case 'rgba8unorm':\n          case 'bgra8unorm':\n            return [pack4x8unorm(x.r, x.g, x.b, x.a), 0, 0, 0];\n          case 'rgba8snorm':\n            return [pack4x8snorm(x.r, x.g, x.b, x.a), 0, 0, 0];\n          default:\n            break;\n        }\n        return [x.r, x.g, x.b, x.a];\n      })\n    );\n    t.expectGPUBufferValuesEqual(outputBuffer, expected);\n  });\n"],"mappings":"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"}