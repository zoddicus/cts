{"version":3,"file":"frexp.spec.js","names":["description","makeTestGroup","GPUTest","skipUndefined","f32","i32","toVector","TypeF32","TypeI32","TypeVec","frexp","fullF32Range","isSubnormalNumberF32","quantizeToF32","vectorF32Range","makeCaseCache","allInputSources","basicExpressionBuilder","run","g","fractBuilder","value","expBuilder","makeVectorCaseFract","v","map","some","e","input","expected","undefined","fs","fract","makeVectorCaseExp","exp","d","f32_fract","makeCase","n","f32_exp","f32_vec2_fract","f32_vec2_exp","f32_vec3_fract","f32_vec3_exp","f32_vec4_fract","f32_vec4_exp","test","specURL","desc","params","u","combine","fn","t","cases","get","unimplemented"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/frexp.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'frexp' builtin function\n\nS is f32 or f16\nT is S or vecN<S>\n\n@const fn frexp(e: T) -> result_struct\n\nSplits e into a significand and exponent of the form significand * 2^exponent.\nReturns the result_struct for the appropriate overload.\n\n\nThe magnitude of the significand is in the range of [0.5, 1.0) or 0.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { skipUndefined } from '../../../../../util/compare.js';\nimport { f32, i32, toVector, TypeF32, TypeI32, TypeVec } from '../../../../../util/conversion.js';\nimport {\n  frexp,\n  fullF32Range,\n  isSubnormalNumberF32,\n  quantizeToF32,\n  vectorF32Range,\n} from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport {\n  allInputSources,\n  basicExpressionBuilder,\n  Case,\n  run,\n  ShaderBuilder,\n} from '../../expression.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n/* @returns an ShaderBuilder that evaluates frexp and returns .fract from the result structure */\nfunction fractBuilder(): ShaderBuilder {\n  return basicExpressionBuilder(value => `frexp(${value}).fract`);\n}\n\n/* @returns an ShaderBuilder that evaluates frexp and returns .exp from the result structure */\nfunction expBuilder(): ShaderBuilder {\n  return basicExpressionBuilder(value => `frexp(${value}).exp`);\n}\n\n/* @returns a fract Case for a given vector input */\nfunction makeVectorCaseFract(v: number[]): Case {\n  v = v.map(quantizeToF32);\n  if (v.some(e => e !== 0 && isSubnormalNumberF32(e))) {\n    return { input: toVector(v, f32), expected: skipUndefined(undefined) };\n  }\n\n  const fs = v.map(e => {\n    return frexp(e).fract;\n  });\n\n  return { input: toVector(v, f32), expected: toVector(fs, f32) };\n}\n\n/* @returns an exp Case for a given vector input */\nfunction makeVectorCaseExp(v: number[]): Case {\n  v = v.map(quantizeToF32);\n  if (v.some(e => e !== 0 && isSubnormalNumberF32(e))) {\n    return { input: toVector(v, f32), expected: skipUndefined(undefined) };\n  }\n\n  const fs = v.map(e => {\n    return frexp(e).exp;\n  });\n\n  return { input: toVector(v, f32), expected: toVector(fs, i32) };\n}\n\nexport const d = makeCaseCache('frexp', {\n  f32_fract: () => {\n    const makeCase = (n: number): Case => {\n      n = quantizeToF32(n);\n      if (n !== 0 && isSubnormalNumberF32(n)) {\n        return { input: f32(n), expected: skipUndefined(undefined) };\n      }\n      return { input: f32(n), expected: f32(frexp(n).fract) };\n    };\n    return fullF32Range().map(makeCase);\n  },\n  f32_exp: () => {\n    const makeCase = (n: number): Case => {\n      n = quantizeToF32(n);\n      if (n !== 0 && isSubnormalNumberF32(n)) {\n        return { input: f32(n), expected: skipUndefined(undefined) };\n      }\n      return { input: f32(n), expected: i32(frexp(n).exp) };\n    };\n    return fullF32Range().map(makeCase);\n  },\n  f32_vec2_fract: () => {\n    return vectorF32Range(2).map(makeVectorCaseFract);\n  },\n  f32_vec2_exp: () => {\n    return vectorF32Range(2).map(makeVectorCaseExp);\n  },\n  f32_vec3_fract: () => {\n    return vectorF32Range(3).map(makeVectorCaseFract);\n  },\n  f32_vec3_exp: () => {\n    return vectorF32Range(3).map(makeVectorCaseExp);\n  },\n  f32_vec4_fract: () => {\n    return vectorF32Range(4).map(makeVectorCaseFract);\n  },\n  f32_vec4_exp: () => {\n    return vectorF32Range(4).map(makeVectorCaseExp);\n  },\n});\n\ng.test('f32_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f32\n\nstruct __frexp_result {\n  fract : f32, // fract part\n  exp : i32  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_fract');\n    await run(t, fractBuilder(), [TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f32_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f32\n\nstruct __frexp_result {\n  fract : f32, // fract part\n  exp : i32  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_exp');\n    await run(t, expBuilder(), [TypeF32], TypeI32, t.params, cases);\n  });\n\ng.test('f32_vec2_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f32>\n\nstruct __frexp_result {\n  fract : vec2<f32>, // fract part\n  exp : vec2<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec2_fract');\n    await run(t, fractBuilder(), [TypeVec(2, TypeF32)], TypeVec(2, TypeF32), t.params, cases);\n  });\n\ng.test('f32_vec2_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f32>\n\nstruct __frexp_result_vec2_f32 {\n  fract : vec2<f32>, // fractional part\n  exp : vec2<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec2_exp');\n    await run(t, expBuilder(), [TypeVec(2, TypeF32)], TypeVec(2, TypeI32), t.params, cases);\n  });\n\ng.test('f32_vec3_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f32>\n\nstruct __frexp_result_vec3_f32 {\n  fract : vec3<f32>, // fractional part\n  exp : vec3<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec3_fract');\n    await run(t, fractBuilder(), [TypeVec(3, TypeF32)], TypeVec(3, TypeF32), t.params, cases);\n  });\n\ng.test('f32_vec3_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f32>\n\nstruct __frexp_result_vec3_f32 {\n  fract : vec3<f32>, // fractional part\n  exp : vec3<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec3_exp');\n    await run(t, expBuilder(), [TypeVec(3, TypeF32)], TypeVec(3, TypeI32), t.params, cases);\n  });\n\ng.test('f32_vec4_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f32>\n\nstruct __frexp_result_vec4_f32 {\n  fract : vec4<f32>, // fractional part\n  exp : vec4<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec4_fract');\n    await run(t, fractBuilder(), [TypeVec(4, TypeF32)], TypeVec(4, TypeF32), t.params, cases);\n  });\n\ng.test('f32_vec4_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f32>\n\nstruct __frexp_result_vec4_f32 {\n  fract : vec4<f32>, // fractional part\n  exp : vec4<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec4_exp');\n    await run(t, expBuilder(), [TypeVec(4, TypeF32)], TypeVec(4, TypeI32), t.params, cases);\n  });\n\ng.test('f16_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f16\n\nstruct __frexp_result {\n  fract : f16, // fract part\n  exp : i32  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('f16_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f16\n\nstruct __frexp_result {\n  fract : f16, // fract part\n  exp : i32  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('f16_vec2_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f16>\n\nstruct __frexp_result {\n  fract : vec2<f16>, // fract part\n  exp : vec2<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('f16_vec2_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f16>\n\nstruct __frexp_result_vec2_f16 {\n  fract : vec2<f16>, // fractional part\n  exp : vec2<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('f16_vec3_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f16>\n\nstruct __frexp_result_vec3_f16 {\n  fract : vec3<f16>, // fractional part\n  exp : vec3<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('f16_vec3_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f16>\n\nstruct __frexp_result_vec3_f16 {\n  fract : vec3<f16>, // fractional part\n  exp : vec3<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('f16_vec4_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f16>\n\nstruct __frexp_result_vec4_f16 {\n  fract : vec4<f16>, // fractional part\n  exp : vec4<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('f16_vec4_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f16>\n\nstruct __frexp_result_vec4_f16 {\n  fract : vec4<f16>, // fractional part\n  exp : vec4<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n"],"mappings":"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"}