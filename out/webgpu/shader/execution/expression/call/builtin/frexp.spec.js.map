{"version":3,"file":"frexp.spec.js","names":["description","makeTestGroup","GPUTest","skipUndefined","i32","toVector","TypeF32","TypeF16","TypeI32","TypeVec","FP","frexp","makeCaseCache","allInputSources","basicExpressionBuilder","run","g","fractBuilder","value","expBuilder","makeCaseFract","v","trait","fp","toInput","toOutput","Array","n","scalarBuilder","map","quantize","some","e","isSubnormal","input","expected","undefined","fs","fract","makeCaseExp","exp","vec_cases","flatMap","dim","portion","vectorRange","reduce","a","b","scalar_cases","scalarRange","d","test","specURL","desc","params","u","combine","fn","t","cases","get","beforeAllSubcases","selectDeviceOrSkipTestCase"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/frexp.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'frexp' builtin function\n\nS is f32 or f16\nT is S or vecN<S>\n\n@const fn frexp(e: T) -> result_struct\n\nSplits e into a significand and exponent of the form significand * 2^exponent.\nReturns the result_struct for the appropriate overload.\n\n\nThe magnitude of the significand is in the range of [0.5, 1.0) or 0.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { skipUndefined } from '../../../../../util/compare.js';\nimport {\n  i32,\n  Scalar,\n  toVector,\n  TypeF32,\n  TypeF16,\n  TypeI32,\n  TypeVec,\n  Vector,\n} from '../../../../../util/conversion.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport { frexp } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport {\n  allInputSources,\n  basicExpressionBuilder,\n  Case,\n  run,\n  ShaderBuilder,\n} from '../../expression.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n/* @returns an ShaderBuilder that evaluates frexp and returns .fract from the result structure */\nfunction fractBuilder(): ShaderBuilder {\n  return basicExpressionBuilder(value => `frexp(${value}).fract`);\n}\n\n/* @returns an ShaderBuilder that evaluates frexp and returns .exp from the result structure */\nfunction expBuilder(): ShaderBuilder {\n  return basicExpressionBuilder(value => `frexp(${value}).exp`);\n}\n\n/* @returns a fract Case for a given scalar or vector input */\nfunction makeCaseFract(v: number | readonly number[], trait: 'f32' | 'f16'): Case {\n  const fp = FP[trait];\n  let toInput: (n: readonly number[]) => Scalar | Vector;\n  let toOutput: (n: readonly number[]) => Scalar | Vector;\n  if (v instanceof Array) {\n    // Input is vector\n    toInput = (n: readonly number[]) => toVector(n, fp.scalarBuilder);\n    toOutput = (n: readonly number[]) => toVector(n, fp.scalarBuilder);\n  } else {\n    // Input is scalar, also wrap it in an array.\n    v = [v];\n    toInput = (n: readonly number[]) => fp.scalarBuilder(n[0]);\n    toOutput = (n: readonly number[]) => fp.scalarBuilder(n[0]);\n  }\n\n  v = v.map(fp.quantize);\n  if (v.some(e => e !== 0 && fp.isSubnormal(e))) {\n    return { input: toInput(v), expected: skipUndefined(undefined) };\n  }\n\n  const fs = v.map(e => {\n    return frexp(e, trait).fract;\n  });\n\n  return { input: toInput(v), expected: toOutput(fs) };\n}\n\n/* @returns an exp Case for a given scalar or vector input */\nfunction makeCaseExp(v: number | readonly number[], trait: 'f32' | 'f16'): Case {\n  const fp = FP[trait];\n  let toInput: (n: readonly number[]) => Scalar | Vector;\n  let toOutput: (n: readonly number[]) => Scalar | Vector;\n  if (v instanceof Array) {\n    // Input is vector\n    toInput = (n: readonly number[]) => toVector(n, fp.scalarBuilder);\n    toOutput = (n: readonly number[]) => toVector(n, i32);\n  } else {\n    // Input is scalar, also wrap it in an array.\n    v = [v];\n    toInput = (n: readonly number[]) => fp.scalarBuilder(n[0]);\n    toOutput = (n: readonly number[]) => i32(n[0]);\n  }\n\n  v = v.map(fp.quantize);\n  if (v.some(e => e !== 0 && fp.isSubnormal(e))) {\n    return { input: toInput(v), expected: skipUndefined(undefined) };\n  }\n\n  const fs = v.map(e => {\n    return frexp(e, trait).exp;\n  });\n\n  return { input: toInput(v), expected: toOutput(fs) };\n}\n\n// Cases: [f32|f16]_vecN_[exp|whole]\nconst vec_cases = (['f32', 'f16'] as const)\n  .flatMap(trait =>\n    ([2, 3, 4] as const).flatMap(dim =>\n      (['exp', 'fract'] as const).map(portion => ({\n        [`${trait}_vec${dim}_${portion}`]: () => {\n          return FP[trait]\n            .vectorRange(dim)\n            .map(v => (portion === 'exp' ? makeCaseExp(v, trait) : makeCaseFract(v, trait)));\n        },\n      }))\n    )\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\n// Cases: [f32|f16]_[exp|whole]\nconst scalar_cases = (['f32', 'f16'] as const)\n  .flatMap(trait =>\n    (['exp', 'fract'] as const).map(portion => ({\n      [`${trait}_${portion}`]: () => {\n        return FP[trait]\n          .scalarRange()\n          .map(v => (portion === 'exp' ? makeCaseExp(v, trait) : makeCaseFract(v, trait)));\n      },\n    }))\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('frexp', {\n  ...scalar_cases,\n  ...vec_cases,\n});\n\ng.test('f32_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f32\n\nstruct __frexp_result_f32 {\n  fract : f32, // fract part\n  exp : i32  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_fract');\n    await run(t, fractBuilder(), [TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f32_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f32\n\nstruct __frexp_result_f32 {\n  fract : f32, // fract part\n  exp : i32  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_exp');\n    await run(t, expBuilder(), [TypeF32], TypeI32, t.params, cases);\n  });\n\ng.test('f32_vec2_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f32>\n\nstruct __frexp_result_vec2_f32 {\n  fract : vec2<f32>, // fract part\n  exp : vec2<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec2_fract');\n    await run(t, fractBuilder(), [TypeVec(2, TypeF32)], TypeVec(2, TypeF32), t.params, cases);\n  });\n\ng.test('f32_vec2_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f32>\n\nstruct __frexp_result_vec2_f32 {\n  fract : vec2<f32>, // fractional part\n  exp : vec2<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec2_exp');\n    await run(t, expBuilder(), [TypeVec(2, TypeF32)], TypeVec(2, TypeI32), t.params, cases);\n  });\n\ng.test('f32_vec3_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f32>\n\nstruct __frexp_result_vec3_f32 {\n  fract : vec3<f32>, // fractional part\n  exp : vec3<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec3_fract');\n    await run(t, fractBuilder(), [TypeVec(3, TypeF32)], TypeVec(3, TypeF32), t.params, cases);\n  });\n\ng.test('f32_vec3_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f32>\n\nstruct __frexp_result_vec3_f32 {\n  fract : vec3<f32>, // fractional part\n  exp : vec3<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec3_exp');\n    await run(t, expBuilder(), [TypeVec(3, TypeF32)], TypeVec(3, TypeI32), t.params, cases);\n  });\n\ng.test('f32_vec4_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f32>\n\nstruct __frexp_result_vec4_f32 {\n  fract : vec4<f32>, // fractional part\n  exp : vec4<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec4_fract');\n    await run(t, fractBuilder(), [TypeVec(4, TypeF32)], TypeVec(4, TypeF32), t.params, cases);\n  });\n\ng.test('f32_vec4_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f32>\n\nstruct __frexp_result_vec4_f32 {\n  fract : vec4<f32>, // fractional part\n  exp : vec4<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec4_exp');\n    await run(t, expBuilder(), [TypeVec(4, TypeF32)], TypeVec(4, TypeI32), t.params, cases);\n  });\n\ng.test('f16_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f16\n\nstruct __frexp_result_f16 {\n  fract : f16, // fract part\n  exp : i32  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_fract');\n    await run(t, fractBuilder(), [TypeF16], TypeF16, t.params, cases);\n  });\n\ng.test('f16_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f16\n\nstruct __frexp_result_f16 {\n  fract : f16, // fract part\n  exp : i32  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_exp');\n    await run(t, expBuilder(), [TypeF16], TypeI32, t.params, cases);\n  });\n\ng.test('f16_vec2_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f16>\n\nstruct __frexp_result_vec2_f16 {\n  fract : vec2<f16>, // fract part\n  exp : vec2<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_vec2_fract');\n    await run(t, fractBuilder(), [TypeVec(2, TypeF16)], TypeVec(2, TypeF16), t.params, cases);\n  });\n\ng.test('f16_vec2_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f16>\n\nstruct __frexp_result_vec2_f16 {\n  fract : vec2<f16>, // fractional part\n  exp : vec2<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_vec2_exp');\n    await run(t, expBuilder(), [TypeVec(2, TypeF16)], TypeVec(2, TypeI32), t.params, cases);\n  });\n\ng.test('f16_vec3_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f16>\n\nstruct __frexp_result_vec3_f16 {\n  fract : vec3<f16>, // fractional part\n  exp : vec3<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_vec3_fract');\n    await run(t, fractBuilder(), [TypeVec(3, TypeF16)], TypeVec(3, TypeF16), t.params, cases);\n  });\n\ng.test('f16_vec3_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f16>\n\nstruct __frexp_result_vec3_f16 {\n  fract : vec3<f16>, // fractional part\n  exp : vec3<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_vec3_exp');\n    await run(t, expBuilder(), [TypeVec(3, TypeF16)], TypeVec(3, TypeI32), t.params, cases);\n  });\n\ng.test('f16_vec4_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f16>\n\nstruct __frexp_result_vec4_f16 {\n  fract : vec4<f16>, // fractional part\n  exp : vec4<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_vec4_fract');\n    await run(t, fractBuilder(), [TypeVec(4, TypeF16)], TypeVec(4, TypeF16), t.params, cases);\n  });\n\ng.test('f16_vec4_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f16>\n\nstruct __frexp_result_vec4_f16 {\n  fract : vec4<f16>, // fractional part\n  exp : vec4<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_vec4_exp');\n    await run(t, expBuilder(), [TypeVec(4, TypeF16)], TypeVec(4, TypeI32), t.params, cases);\n  });\n"],"mappings":"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"}