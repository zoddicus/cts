{"version":3,"file":"frexp.spec.js","names":["description","makeTestGroup","GPUTest","skipUndefined","i32","toVector","TypeF32","TypeF16","TypeI32","TypeVec","FP","frexp","fullF16Range","fullF32Range","vectorF16Range","vectorF32Range","makeCaseCache","allInputSources","basicExpressionBuilder","run","g","fractBuilder","value","expBuilder","makeVectorCaseFract","v","trait","fp","toInput","toOutput","Array","n","scalarBuilder","map","quantize","some","e","isSubnormal","input","expected","undefined","fs","fract","makeVectorCaseExp","exp","d","f32_fract","f32_exp","f32_vec2_fract","f32_vec2_exp","f32_vec3_fract","f32_vec3_exp","f32_vec4_fract","f32_vec4_exp","f16_fract","f16_exp","f16_vec2_fract","f16_vec2_exp","f16_vec3_fract","f16_vec3_exp","f16_vec4_fract","f16_vec4_exp","test","specURL","desc","params","u","combine","fn","t","cases","get","beforeAllSubcases","selectDeviceOrSkipTestCase"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/frexp.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'frexp' builtin function\n\nS is f32 or f16\nT is S or vecN<S>\n\n@const fn frexp(e: T) -> result_struct\n\nSplits e into a significand and exponent of the form significand * 2^exponent.\nReturns the result_struct for the appropriate overload.\n\n\nThe magnitude of the significand is in the range of [0.5, 1.0) or 0.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { skipUndefined } from '../../../../../util/compare.js';\nimport {\n  i32,\n  Scalar,\n  toVector,\n  TypeF32,\n  TypeF16,\n  TypeI32,\n  TypeVec,\n  Vector,\n} from '../../../../../util/conversion.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport {\n  frexp,\n  fullF16Range,\n  fullF32Range,\n  vectorF16Range,\n  vectorF32Range,\n} from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport {\n  allInputSources,\n  basicExpressionBuilder,\n  Case,\n  run,\n  ShaderBuilder,\n} from '../../expression.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n/* @returns an ShaderBuilder that evaluates frexp and returns .fract from the result structure */\nfunction fractBuilder(): ShaderBuilder {\n  return basicExpressionBuilder(value => `frexp(${value}).fract`);\n}\n\n/* @returns an ShaderBuilder that evaluates frexp and returns .exp from the result structure */\nfunction expBuilder(): ShaderBuilder {\n  return basicExpressionBuilder(value => `frexp(${value}).exp`);\n}\n\n/* @returns a fract Case for a given scalar or vector input */\nfunction makeVectorCaseFract(v: number | number[], trait: 'f32' | 'f16'): Case {\n  const fp = FP[trait];\n  let toInput: (n: number[]) => Scalar | Vector;\n  let toOutput: (n: number[]) => Scalar | Vector;\n  if (v instanceof Array) {\n    // Input is vector\n    toInput = (n: number[]) => toVector(n, fp.scalarBuilder);\n    toOutput = (n: number[]) => toVector(n, fp.scalarBuilder);\n  } else {\n    // Input is scalar, also wrap it in an array.\n    v = [v];\n    toInput = (n: number[]) => fp.scalarBuilder(n[0]);\n    toOutput = (n: number[]) => fp.scalarBuilder(n[0]);\n  }\n\n  v = v.map(fp.quantize);\n  if (v.some(e => e !== 0 && fp.isSubnormal(e))) {\n    return { input: toInput(v), expected: skipUndefined(undefined) };\n  }\n\n  const fs = v.map(e => {\n    return frexp(e, trait).fract;\n  });\n\n  return { input: toInput(v), expected: toOutput(fs) };\n}\n\n/* @returns an exp Case for a given scalar or vector input */\nfunction makeVectorCaseExp(v: number | number[], trait: 'f32' | 'f16'): Case {\n  const fp = FP[trait];\n  let toInput: (n: number[]) => Scalar | Vector;\n  let toOutput: (n: number[]) => Scalar | Vector;\n  if (v instanceof Array) {\n    // Input is vector\n    toInput = (n: number[]) => toVector(n, fp.scalarBuilder);\n    toOutput = (n: number[]) => toVector(n, i32);\n  } else {\n    // Input is scalar, also wrap it in an array.\n    v = [v];\n    toInput = (n: number[]) => fp.scalarBuilder(n[0]);\n    toOutput = (n: number[]) => i32(n[0]);\n  }\n\n  v = v.map(fp.quantize);\n  if (v.some(e => e !== 0 && fp.isSubnormal(e))) {\n    return { input: toInput(v), expected: skipUndefined(undefined) };\n  }\n\n  const fs = v.map(e => {\n    return frexp(e, trait).exp;\n  });\n\n  return { input: toInput(v), expected: toOutput(fs) };\n}\n\nexport const d = makeCaseCache('frexp', {\n  f32_fract: () => {\n    return fullF32Range().map(v => makeVectorCaseFract(v, 'f32'));\n  },\n  f32_exp: () => {\n    return fullF32Range().map(v => makeVectorCaseExp(v, 'f32'));\n  },\n  f32_vec2_fract: () => {\n    return vectorF32Range(2).map(v => makeVectorCaseFract(v, 'f32'));\n  },\n  f32_vec2_exp: () => {\n    return vectorF32Range(2).map(v => makeVectorCaseExp(v, 'f32'));\n  },\n  f32_vec3_fract: () => {\n    return vectorF32Range(3).map(v => makeVectorCaseFract(v, 'f32'));\n  },\n  f32_vec3_exp: () => {\n    return vectorF32Range(3).map(v => makeVectorCaseExp(v, 'f32'));\n  },\n  f32_vec4_fract: () => {\n    return vectorF32Range(4).map(v => makeVectorCaseFract(v, 'f32'));\n  },\n  f32_vec4_exp: () => {\n    return vectorF32Range(4).map(v => makeVectorCaseExp(v, 'f32'));\n  },\n  f16_fract: () => {\n    return fullF16Range().map(v => makeVectorCaseFract(v, 'f16'));\n  },\n  f16_exp: () => {\n    return fullF16Range().map(v => makeVectorCaseExp(v, 'f16'));\n  },\n  f16_vec2_fract: () => {\n    return vectorF16Range(2).map(v => makeVectorCaseFract(v, 'f16'));\n  },\n  f16_vec2_exp: () => {\n    return vectorF16Range(2).map(v => makeVectorCaseExp(v, 'f16'));\n  },\n  f16_vec3_fract: () => {\n    return vectorF16Range(3).map(v => makeVectorCaseFract(v, 'f16'));\n  },\n  f16_vec3_exp: () => {\n    return vectorF16Range(3).map(v => makeVectorCaseExp(v, 'f16'));\n  },\n  f16_vec4_fract: () => {\n    return vectorF16Range(4).map(v => makeVectorCaseFract(v, 'f16'));\n  },\n  f16_vec4_exp: () => {\n    return vectorF16Range(4).map(v => makeVectorCaseExp(v, 'f16'));\n  },\n});\n\ng.test('f32_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f32\n\nstruct __frexp_result_f32 {\n  fract : f32, // fract part\n  exp : i32  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_fract');\n    await run(t, fractBuilder(), [TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f32_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f32\n\nstruct __frexp_result_f32 {\n  fract : f32, // fract part\n  exp : i32  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_exp');\n    await run(t, expBuilder(), [TypeF32], TypeI32, t.params, cases);\n  });\n\ng.test('f32_vec2_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f32>\n\nstruct __frexp_result_vec2_f32 {\n  fract : vec2<f32>, // fract part\n  exp : vec2<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec2_fract');\n    await run(t, fractBuilder(), [TypeVec(2, TypeF32)], TypeVec(2, TypeF32), t.params, cases);\n  });\n\ng.test('f32_vec2_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f32>\n\nstruct __frexp_result_vec2_f32 {\n  fract : vec2<f32>, // fractional part\n  exp : vec2<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec2_exp');\n    await run(t, expBuilder(), [TypeVec(2, TypeF32)], TypeVec(2, TypeI32), t.params, cases);\n  });\n\ng.test('f32_vec3_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f32>\n\nstruct __frexp_result_vec3_f32 {\n  fract : vec3<f32>, // fractional part\n  exp : vec3<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec3_fract');\n    await run(t, fractBuilder(), [TypeVec(3, TypeF32)], TypeVec(3, TypeF32), t.params, cases);\n  });\n\ng.test('f32_vec3_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f32>\n\nstruct __frexp_result_vec3_f32 {\n  fract : vec3<f32>, // fractional part\n  exp : vec3<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec3_exp');\n    await run(t, expBuilder(), [TypeVec(3, TypeF32)], TypeVec(3, TypeI32), t.params, cases);\n  });\n\ng.test('f32_vec4_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f32>\n\nstruct __frexp_result_vec4_f32 {\n  fract : vec4<f32>, // fractional part\n  exp : vec4<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec4_fract');\n    await run(t, fractBuilder(), [TypeVec(4, TypeF32)], TypeVec(4, TypeF32), t.params, cases);\n  });\n\ng.test('f32_vec4_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f32>\n\nstruct __frexp_result_vec4_f32 {\n  fract : vec4<f32>, // fractional part\n  exp : vec4<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec4_exp');\n    await run(t, expBuilder(), [TypeVec(4, TypeF32)], TypeVec(4, TypeI32), t.params, cases);\n  });\n\ng.test('f16_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f16\n\nstruct __frexp_result_f16 {\n  fract : f16, // fract part\n  exp : i32  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_fract');\n    await run(t, fractBuilder(), [TypeF16], TypeF16, t.params, cases);\n  });\n\ng.test('f16_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f16\n\nstruct __frexp_result_f16 {\n  fract : f16, // fract part\n  exp : i32  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_exp');\n    await run(t, expBuilder(), [TypeF16], TypeI32, t.params, cases);\n  });\n\ng.test('f16_vec2_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f16>\n\nstruct __frexp_result_vec2_f16 {\n  fract : vec2<f16>, // fract part\n  exp : vec2<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_vec2_fract');\n    await run(t, fractBuilder(), [TypeVec(2, TypeF16)], TypeVec(2, TypeF16), t.params, cases);\n  });\n\ng.test('f16_vec2_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f16>\n\nstruct __frexp_result_vec2_f16 {\n  fract : vec2<f16>, // fractional part\n  exp : vec2<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_vec2_exp');\n    await run(t, expBuilder(), [TypeVec(2, TypeF16)], TypeVec(2, TypeI32), t.params, cases);\n  });\n\ng.test('f16_vec3_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f16>\n\nstruct __frexp_result_vec3_f16 {\n  fract : vec3<f16>, // fractional part\n  exp : vec3<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_vec3_fract');\n    await run(t, fractBuilder(), [TypeVec(3, TypeF16)], TypeVec(3, TypeF16), t.params, cases);\n  });\n\ng.test('f16_vec3_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f16>\n\nstruct __frexp_result_vec3_f16 {\n  fract : vec3<f16>, // fractional part\n  exp : vec3<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_vec3_exp');\n    await run(t, expBuilder(), [TypeVec(3, TypeF16)], TypeVec(3, TypeI32), t.params, cases);\n  });\n\ng.test('f16_vec4_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f16>\n\nstruct __frexp_result_vec4_f16 {\n  fract : vec4<f16>, // fractional part\n  exp : vec4<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_vec4_fract');\n    await run(t, fractBuilder(), [TypeVec(4, TypeF16)], TypeVec(4, TypeF16), t.params, cases);\n  });\n\ng.test('f16_vec4_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f16>\n\nstruct __frexp_result_vec4_f16 {\n  fract : vec4<f16>, // fractional part\n  exp : vec4<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16_vec4_exp');\n    await run(t, expBuilder(), [TypeVec(4, TypeF16)], TypeVec(4, TypeI32), t.params, cases);\n  });\n"],"mappings":"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"}