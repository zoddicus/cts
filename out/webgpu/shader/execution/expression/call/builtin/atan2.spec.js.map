{"version":3,"file":"atan2.spec.js","names":["description","makeTestGroup","GPUTest","kValue","TypeF32","TypeF16","FP","linearRange","sparseF32Range","sparseF16Range","makeCaseCache","allInputSources","run","builtin","g","d","f32","numeric_range","negative","max","positive","min","generateScalarPairToIntervalCases","atan2Interval","f16","test","specURL","desc","params","u","combine","undefined","unimplemented","fn","t","cases","get","beforeAllSubcases","selectDeviceOrSkipTestCase"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/atan2.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'atan2' builtin function\n\nS is AbstractFloat, f32, f16\nT is S or vecN<S>\n@const fn atan2(e1: T ,e2: T ) -> T\nReturns the arc tangent of e1 over e2. Component-wise when T is a vector.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { kValue } from '../../../../../util/constants.js';\nimport { TypeF32, TypeF16 } from '../../../../../util/conversion.js';\nimport { FP } from '../../../../../util/floating_point.js';\nimport { linearRange, sparseF32Range, sparseF16Range } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('atan2', {\n  f32: () => {\n    // Using sparse range since there are N^2 cases being generated, and also including extra values\n    // around 0, where there is a discontinuity that implementations may behave badly at.\n    const numeric_range = [\n      ...sparseF32Range(),\n      ...linearRange(kValue.f32.negative.max, kValue.f32.positive.min, 10),\n    ];\n    return FP.f32.generateScalarPairToIntervalCases(\n      numeric_range,\n      numeric_range,\n      'unfiltered',\n      FP.f32.atan2Interval\n    );\n  },\n  f16: () => {\n    // Using sparse range since there are N^2 cases being generated, and also including extra values\n    // around 0, where there is a discontinuity that implementations may behave badly at.\n    const numeric_range = [\n      ...sparseF16Range(),\n      ...linearRange(kValue.f16.negative.max, kValue.f16.positive.min, 10),\n    ];\n    return FP.f16.generateScalarPairToIntervalCases(\n      numeric_range,\n      numeric_range,\n      'unfiltered',\n      FP.f16.atan2Interval\n    );\n  },\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nf32 tests\n\nTODO(#792): Decide what the ground-truth is for these tests. [1]\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('f32');\n    await run(t, builtin('atan2'), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16');\n    await run(t, builtin('atan2'), [TypeF16, TypeF16], TypeF16, t.params, cases);\n  });\n"],"mappings":"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"}