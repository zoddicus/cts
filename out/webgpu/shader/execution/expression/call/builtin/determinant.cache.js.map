{"version":3,"file":"determinant.cache.js","names":["FP","makeCaseCache","kDeterminantValues","kDeterminantMatrixValues","map","f","idx","f32_cases","flatMap","dim","nonConst","f32","generateMatrixToScalarCases","determinantInterval","reduce","a","b","f16_cases","f16","abstract_cases","abstract","d"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/determinant.cache.ts"],"sourcesContent":["import { FP } from '../../../../../util/floating_point.js';\nimport { makeCaseCache } from '../../case_cache.js';\n\n// Accuracy for determinant is only defined for e, where e is an integer and\n// |e| < quadroot(2**21) [~38],\n// due to computational complexity of calculating the general solution for 4x4,\n// so custom matrices are used.\n//\n// Note: For 2x2 and 3x3 the limits are squareroot and cuberoot instead of\n// quadroot, but using the tighter 4x4 limits for all cases for simplicity.\nconst kDeterminantValues = [-38, -10, -5, -1, 0, 1, 5, 10, 38];\n\nconst kDeterminantMatrixValues = {\n  2: kDeterminantValues.map((f, idx) => [\n    [idx % 4 === 0 ? f : idx, idx % 4 === 1 ? f : -idx],\n    [idx % 4 === 2 ? f : -idx, idx % 4 === 3 ? f : idx],\n  ]),\n  3: kDeterminantValues.map((f, idx) => [\n    [idx % 9 === 0 ? f : idx, idx % 9 === 1 ? f : -idx, idx % 9 === 2 ? f : idx],\n    [idx % 9 === 3 ? f : -idx, idx % 9 === 4 ? f : idx, idx % 9 === 5 ? f : -idx],\n    [idx % 9 === 6 ? f : idx, idx % 9 === 7 ? f : -idx, idx % 9 === 8 ? f : idx],\n  ]),\n  4: kDeterminantValues.map((f, idx) => [\n    [\n      idx % 16 === 0 ? f : idx,\n      idx % 16 === 1 ? f : -idx,\n      idx % 16 === 2 ? f : idx,\n      idx % 16 === 3 ? f : -idx,\n    ],\n    [\n      idx % 16 === 4 ? f : -idx,\n      idx % 16 === 5 ? f : idx,\n      idx % 16 === 6 ? f : -idx,\n      idx % 16 === 7 ? f : idx,\n    ],\n    [\n      idx % 16 === 8 ? f : idx,\n      idx % 16 === 9 ? f : -idx,\n      idx % 16 === 10 ? f : idx,\n      idx % 16 === 11 ? f : -idx,\n    ],\n    [\n      idx % 16 === 12 ? f : -idx,\n      idx % 16 === 13 ? f : idx,\n      idx % 16 === 14 ? f : -idx,\n      idx % 16 === 15 ? f : idx,\n    ],\n  ]),\n};\n\n// Cases: f32_matDxD_[non_]const\nconst f32_cases = ([2, 3, 4] as const)\n  .flatMap(dim =>\n    ([true, false] as const).map(nonConst => ({\n      [`f32_mat${dim}x${dim}_${nonConst ? 'non_const' : 'const'}`]: () => {\n        return FP.f32.generateMatrixToScalarCases(\n          kDeterminantMatrixValues[dim],\n          nonConst ? 'unfiltered' : 'finite',\n          FP.f32.determinantInterval\n        );\n      },\n    }))\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\n// Cases: f16_matDxD_[non_]const\nconst f16_cases = ([2, 3, 4] as const)\n  .flatMap(dim =>\n    ([true, false] as const).map(nonConst => ({\n      [`f16_mat${dim}x${dim}_${nonConst ? 'non_const' : 'const'}`]: () => {\n        return FP.f16.generateMatrixToScalarCases(\n          kDeterminantMatrixValues[dim],\n          nonConst ? 'unfiltered' : 'finite',\n          FP.f16.determinantInterval\n        );\n      },\n    }))\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\n// Cases: abstract_matDxD\nconst abstract_cases = ([2, 3, 4] as const)\n  .map(dim => ({\n    [`abstract_mat${dim}x${dim}`]: () => {\n      return FP.abstract.generateMatrixToScalarCases(\n        kDeterminantMatrixValues[dim],\n        'finite',\n        // determinant has an inherited accuracy, so abstract is only expected to be as accurate as f32\n        FP.f32.determinantInterval\n      );\n    },\n  }))\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('determinant', {\n  ...f32_cases,\n  ...f16_cases,\n  ...abstract_cases,\n});\n"],"mappings":"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"}