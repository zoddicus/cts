{"version":3,"file":"faceForward.spec.js","names":["description","makeTestGroup","GPUTest","anyOf","toVector","TypeF32","TypeVec","FP","cartesianProduct","sparseVectorF32Range","makeCaseCache","allInputSources","run","builtin","g","makeCase","kind","x","y","z","check","fp","map","quantize","results","f32","faceForwardIntervals","some","r","undefined","define_results","filter","input","scalarBuilder","expected","generateCases","xs","ys","zs","e","c","d","f32_vec2_const","f32_vec2_non_const","f32_vec3_const","f32_vec3_non_const","f32_vec4_const","f32_vec4_non_const","test","specURL","desc","params","u","combine","unimplemented","fn","t","cases","get","inputSource"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/faceForward.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'faceForward' builtin function\n\nT is vecN<AbstractFloat>, vecN<f32>, or vecN<f16>\n@const fn faceForward(e1: T ,e2: T ,e3: T ) -> T\nReturns e1 if dot(e2,e3) is negative, and -e1 otherwise.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { anyOf } from '../../../../../util/compare.js';\nimport { toVector, TypeF32, TypeVec } from '../../../../../util/conversion.js';\nimport { FP, FPKind, FPVector } from '../../../../../util/floating_point.js';\nimport { cartesianProduct, sparseVectorF32Range } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, Case, IntervalFilter, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n// Using a bespoke implementation of make*Case and generate*Cases here\n// since faceForwardIntervals is the only builtin with the API signature\n// (vec, vec, vec) -> vec\n//\n// Additionally faceForward has significant complexities around it due to the\n// fact that `dot` is calculated in it s operation, but the result of dot isn't\n// used to calculate the builtin's result.\n\n/**\n * @returns a Case for `faceForward`\n * @param kind what kind of floating point numbers being operated on\n * @param x the `x` param for the case\n * @param y the `y` param for the case\n * @param z the `z` param for the case\n * @param check what interval checking to apply\n * */\nfunction makeCase(\n  kind: FPKind,\n  x: number[],\n  y: number[],\n  z: number[],\n  check: IntervalFilter\n): Case | undefined {\n  const fp = FP[kind];\n  x = x.map(fp.quantize);\n  y = y.map(fp.quantize);\n  z = z.map(fp.quantize);\n\n  const results = FP.f32.faceForwardIntervals(x, y, z);\n  if (check === 'finite' && results.some(r => r === undefined)) {\n    return undefined;\n  }\n\n  // Stripping the undefined results, since undefined is used to signal that an OOB\n  // could occur within the calculation that isn't reflected in the result\n  // intervals.\n  const define_results = results.filter((r): r is FPVector => r !== undefined);\n\n  return {\n    input: [\n      toVector(x, fp.scalarBuilder),\n      toVector(y, fp.scalarBuilder),\n      toVector(z, fp.scalarBuilder),\n    ],\n    expected: anyOf(...define_results),\n  };\n}\n\n/**\n * @returns an array of Cases for `faceForward`\n * @param kind what kind of floating point numbers being operated on\n * @param xs array of inputs to try for the `x` param\n * @param ys array of inputs to try for the `y` param\n * @param zs array of inputs to try for the `z` param\n * @param check what interval checking to apply\n */\nfunction generateCases(\n  kind: FPKind,\n  xs: number[][],\n  ys: number[][],\n  zs: number[][],\n  check: IntervalFilter\n): Case[] {\n  // Cannot use `cartesianProduct` here due to heterogeneous param types\n  return cartesianProduct(xs, ys, zs)\n    .map(e => makeCase('f32', e[0], e[1], e[2], check))\n    .filter((c): c is Case => c !== undefined);\n}\n\nexport const d = makeCaseCache('faceForward', {\n  f32_vec2_const: () => {\n    return generateCases(\n      'f32',\n      sparseVectorF32Range(2),\n      sparseVectorF32Range(2),\n      sparseVectorF32Range(2),\n      'finite'\n    );\n  },\n  f32_vec2_non_const: () => {\n    return generateCases(\n      'f32',\n      sparseVectorF32Range(2),\n      sparseVectorF32Range(2),\n      sparseVectorF32Range(2),\n      'unfiltered'\n    );\n  },\n  f32_vec3_const: () => {\n    return generateCases(\n      'f32',\n      sparseVectorF32Range(3),\n      sparseVectorF32Range(3),\n      sparseVectorF32Range(3),\n      'finite'\n    );\n  },\n  f32_vec3_non_const: () => {\n    return generateCases(\n      'f32',\n      sparseVectorF32Range(3),\n      sparseVectorF32Range(3),\n      sparseVectorF32Range(3),\n      'unfiltered'\n    );\n  },\n  f32_vec4_const: () => {\n    return generateCases(\n      'f32',\n      sparseVectorF32Range(4),\n      sparseVectorF32Range(4),\n      sparseVectorF32Range(4),\n      'finite'\n    );\n  },\n  f32_vec4_non_const: () => {\n    return generateCases(\n      'f32',\n      sparseVectorF32Range(4),\n      sparseVectorF32Range(4),\n      sparseVectorF32Range(4),\n      'unfiltered'\n    );\n  },\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u => u.combine('inputSource', allInputSources).combine('vectorize', [2, 3, 4] as const))\n  .unimplemented();\n\ng.test('f32_vec2')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec2s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f32_vec2_const' : 'f32_vec2_non_const'\n    );\n    await run(\n      t,\n      builtin('faceForward'),\n      [TypeVec(2, TypeF32), TypeVec(2, TypeF32), TypeVec(2, TypeF32)],\n      TypeVec(2, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32_vec3')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec3s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f32_vec3_const' : 'f32_vec3_non_const'\n    );\n    await run(\n      t,\n      builtin('faceForward'),\n      [TypeVec(3, TypeF32), TypeVec(3, TypeF32), TypeVec(3, TypeF32)],\n      TypeVec(3, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32_vec4')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec4s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f32_vec4_const' : 'f32_vec4_non_const'\n    );\n    await run(\n      t,\n      builtin('faceForward'),\n      [TypeVec(4, TypeF32), TypeVec(4, TypeF32), TypeVec(4, TypeF32)],\n      TypeVec(4, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u => u.combine('inputSource', allInputSources).combine('vectorize', [2, 3, 4] as const))\n  .unimplemented();\n"],"mappings":"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"}