{"version":3,"file":"subgroupBallot.spec.js","names":["description","makeTestGroup","keysOf","iterRange","GPUTest","g","kInvocations","getMask","size","BigInt","checkBallots","data","subgroupSize","filter","expect","allActive","i","idx","actual","j","expectedResult","subgroupId","Error","toString","undefined","runTest","t","wgsl","sizeBuffer","makeBufferWithContents","Uint32Array","GPUBufferUsage","COPY_SRC","COPY_DST","STORAGE","trackForCleanup","outputNumInts","outputBuffer","x","pipeline","device","createComputePipeline","layout","compute","module","createShaderModule","code","entryPoint","bg","createBindGroup","getBindGroupLayout","entries","binding","resource","buffer","encoder","createCommandEncoder","pass","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","end","queue","submit","finish","sizeReadback","readGPUBufferRangeTyped","srcByteOffset","type","typedLength","method","outputReadback","output","expectOK","kCases","every_even","cond","id","base","mask","every_odd","lower_half","Math","floor","upper_half","first_two","test","desc","params","u","combine","beforeAllSubcases","selectDeviceOrSkipTestCase","fn","testcase","case","unimplemented","kBothCases","empty","pred","full","one_in_four","middle_half","middle_half_every_other"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/subgroupBallot.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for subgroupBallot\n\nNote: There is a lack of portability for non-uniform execution so these tests\nrestrict themselves to uniform control flow or returning early.\nNote: There is no guaranteed mapping between subgroup_invocation_id and\nlocal_invocation_index. Tests should avoid assuming there is.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../../../common/util/data_tables.js';\nimport { iterRange } from '../../../../../../common/util/util.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n// 128 is the maximum possible subgroup size.\nconst kInvocations = 128;\n\nfunction getMask(size: number): bigint {\n  return (1n << BigInt(size)) - 1n;\n}\n\nfunction checkBallots(\n  data: Uint32Array,\n  subgroupSize: number,\n  filter: (id: number, s: number) => boolean,\n  expect: (s: number) => bigint,\n  allActive: boolean\n): Error | undefined {\n  for (let i = 0; i < kInvocations; i++) {\n    const idx = i * 4;\n    let actual = 0n;\n    for (let j = 0; j < 4; j++) {\n      actual |= BigInt(data[idx + j]) << BigInt(32 * j);\n    }\n    let expectedResult = expect(subgroupSize);\n    const subgroupId = i % subgroupSize;\n    if (!allActive && !filter(subgroupId, subgroupSize)) {\n      expectedResult = 0n;\n    }\n    if (expectedResult !== actual) {\n      return new Error(\n        `Invocation ${i}, subgroup inv id ${i % subgroupSize}, size ${subgroupSize}\n- expected: ${expectedResult.toString(16)}\n-      got: ${actual.toString(16)}`\n      );\n    }\n  }\n\n  return undefined;\n}\n\nasync function runTest(\n  t: GPUTest,\n  wgsl: string,\n  filter: (id: number, s: number) => boolean,\n  expect: (s: number) => bigint,\n  allActive: boolean\n) {\n  const sizeBuffer = t.makeBufferWithContents(\n    new Uint32Array([0]),\n    GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST | GPUBufferUsage.STORAGE\n  );\n  t.trackForCleanup(sizeBuffer);\n\n  const outputNumInts = kInvocations * 4;\n  const outputBuffer = t.makeBufferWithContents(\n    new Uint32Array([...iterRange(outputNumInts, x => 0)]),\n    GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST | GPUBufferUsage.STORAGE\n  );\n  t.trackForCleanup(outputBuffer);\n\n  const pipeline = t.device.createComputePipeline({\n    layout: 'auto',\n    compute: {\n      module: t.device.createShaderModule({\n        code: wgsl,\n      }),\n      entryPoint: 'main',\n    },\n  });\n  const bg = t.device.createBindGroup({\n    layout: pipeline.getBindGroupLayout(0),\n    entries: [\n      {\n        binding: 0,\n        resource: {\n          buffer: sizeBuffer,\n        },\n      },\n      {\n        binding: 1,\n        resource: {\n          buffer: outputBuffer,\n        },\n      },\n    ],\n  });\n\n  const encoder = t.device.createCommandEncoder();\n  const pass = encoder.beginComputePass();\n  pass.setPipeline(pipeline);\n  pass.setBindGroup(0, bg);\n  pass.dispatchWorkgroups(1, 1, 1);\n  pass.end();\n  t.queue.submit([encoder.finish()]);\n\n  const sizeReadback = await t.readGPUBufferRangeTyped(sizeBuffer, {\n    srcByteOffset: 0,\n    type: Uint32Array,\n    typedLength: 1,\n    method: 'copy',\n  });\n  const subgroupSize = sizeReadback.data[0];\n\n  const outputReadback = await t.readGPUBufferRangeTyped(outputBuffer, {\n    srcByteOffset: 0,\n    type: Uint32Array,\n    typedLength: outputNumInts,\n    method: 'copy',\n  });\n  const output = outputReadback.data;\n\n  t.expectOK(checkBallots(output, subgroupSize, filter, expect, allActive));\n}\n\nconst kCases = {\n  every_even: {\n    cond: `id % 2 == 0`,\n    filter: (id: number, size: number) => {\n      return id % 2 === 0;\n    },\n    expect: (subgroupSize: number) => {\n      const base = BigInt('0x55555555555555555555555555555555');\n      const mask = getMask(subgroupSize);\n      return base & mask;\n    },\n  },\n  every_odd: {\n    cond: `id % 2 == 1`,\n    filter: (id: number, size: number) => {\n      return id % 2 === 1;\n    },\n    expect: (subgroupSize: number) => {\n      const base = BigInt('0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA');\n      const mask = getMask(subgroupSize);\n      return base & mask;\n    },\n  },\n  lower_half: {\n    cond: `id < subgroupSize / 2`,\n    filter: (id: number, size: number) => {\n      return id < Math.floor(size / 2);\n    },\n    expect: (size: number) => {\n      return getMask(Math.floor(size / 2));\n    },\n  },\n  upper_half: {\n    cond: `id >= subgroupSize / 2`,\n    filter: (id: number, size: number) => {\n      return id >= Math.floor(size / 2);\n    },\n    expect: (size: number) => {\n      return getMask(Math.floor(size / 2)) << BigInt(Math.floor(size / 2));\n    },\n  },\n  first_two: {\n    cond: `id == 0 || id == 1`,\n    filter: (id: number) => {\n      return id === 0 || id === 1;\n    },\n    expect: (size: number) => {\n      return getMask(2);\n    },\n  },\n};\n\ng.test('compute,split')\n  .desc('Tests ballot in a split subgroup')\n  .params(u => u.combine('case', keysOf(kCases)))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('subgroups' as GPUFeatureName);\n  })\n  .fn(async t => {\n    const testcase = kCases[t.params.case];\n    const wgsl = `\nenable subgroups;\n\n@group(0) @binding(0)\nvar<storage, read_write> size : u32;\n\n@group(0) @binding(1)\nvar<storage, read_write> output : array<vec4u>;\n\n@compute @workgroup_size(${kInvocations})\nfn main(@builtin(subgroup_size) subgroupSize : u32,\n        @builtin(subgroup_invocation_id) id : u32,\n        @builtin(local_invocation_index) lid : u32) {\n  if (lid == 0) {\n    size = subgroupSize;\n  }\n  if ${testcase.cond} {\n    output[lid] = subgroupBallot(true);\n  } else {\n    return;\n  }\n}`;\n\n    await runTest(t, wgsl, testcase.filter, testcase.expect, false);\n  });\n\ng.test('fragment,split').unimplemented();\n\ng.test('predicate')\n  .desc('Tests the predicate parameter')\n  .params(u => u.combine('case', keysOf(kCases)))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('subgroups' as GPUFeatureName);\n  })\n  .fn(async t => {\n    const testcase = kCases[t.params.case];\n    const wgsl = `\nenable subgroups;\n\n@group(0) @binding(0)\nvar<storage, read_write> size : u32;\n\n@group(0) @binding(1)\nvar<storage, read_write> output : array<vec4u>;\n\n@compute @workgroup_size(${kInvocations})\nfn main(@builtin(subgroup_size) subgroupSize : u32,\n        @builtin(subgroup_invocation_id) id : u32,\n        @builtin(local_invocation_index) lid : u32) {\n  if (lid == 0) {\n    size = subgroupSize;\n  }\n  let cond = ${testcase.cond};\n  let b = subgroupBallot(cond);\n  output[lid] = b;\n}`;\n\n    await runTest(t, wgsl, testcase.filter, testcase.expect, true);\n  });\n\nconst kBothCases = {\n  empty: {\n    cond: `id < subgroupSize / 2`,\n    pred: `id >= subgroupSize / 2`,\n    filter: (id: number, size: number) => {\n      return id < Math.floor(size / 2);\n    },\n    expect: (size: number) => {\n      return 0n;\n    },\n  },\n  full: {\n    cond: `id < 128`,\n    pred: `lid < 128`,\n    filter: (id: number, size: number) => {\n      return true;\n    },\n    expect: (size: number) => {\n      return getMask(size);\n    },\n  },\n  one_in_four: {\n    cond: `id % 2 == 0`,\n    pred: `id % 4 == 0`,\n    filter: (id: number, size: number) => {\n      return id % 2 === 0;\n    },\n    expect: (size: number) => {\n      const base = BigInt('0x11111111111111111111111111111111');\n      const mask = getMask(size);\n      return base & mask;\n    },\n  },\n  middle_half: {\n    cond: `id >= subgroupSize / 4`,\n    pred: `id < 3 * (subgroupSize / 4)`,\n    filter: (id: number, size: number) => {\n      return id >= Math.floor(size / 4);\n    },\n    expect: (size: number) => {\n      return getMask(Math.floor(size / 2)) << BigInt(Math.floor(size / 4));\n    },\n  },\n  middle_half_every_other: {\n    cond: `(id >= subgroupSize / 4) && (id < 3 * (subgroupSize / 4))`,\n    pred: `id % 2 == 0`,\n    filter: (id: number, size: number) => {\n      return id >= Math.floor(size / 4) && id < 3 * Math.floor(size / 4);\n    },\n    expect: (size: number) => {\n      const base = BigInt('0x55555555555555555555555555555555');\n      const mask = getMask(Math.floor(size / 2)) << BigInt(Math.floor(size / 4));\n      return base & mask;\n    },\n  },\n};\n\ng.test('predicate_and_control_flow')\n  .desc('Test dynamic predicate and control flow together')\n  .params(u => u.combine('case', keysOf(kBothCases)))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('subgroups' as GPUFeatureName);\n  })\n  .fn(async t => {\n    const testcase = kBothCases[t.params.case];\n    const wgsl = `\nenable subgroups;\n\n@group(0) @binding(0)\nvar<storage, read_write> size : u32;\n\n@group(0) @binding(1)\nvar<storage, read_write> output : array<vec4u>;\n\n@compute @workgroup_size(${kInvocations})\nfn main(@builtin(subgroup_size) subgroupSize : u32,\n        @builtin(subgroup_invocation_id) id : u32,\n        @builtin(local_invocation_index) lid : u32) {\n  if (lid == 0) {\n    size = subgroupSize;\n  }\n  if ${testcase.cond} {\n    output[lid] = subgroupBallot(${testcase.pred});\n  } else {\n    return;\n  }\n}`;\n\n    await runTest(t, wgsl, testcase.filter, testcase.expect, false);\n  });\n\ng.test('fragment').unimplemented();\n"],"mappings":"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"}