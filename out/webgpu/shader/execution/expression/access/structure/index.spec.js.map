{"version":3,"file":"index.spec.js","names":["description","makeTestGroup","GPUTest","Type","u32","align","toComparator","structLayout","structStride","g","kMemberTypes","kMemberTypesNoBool","filter","tys","includes","run","t","wgsl","expected","input","inputSource","outputBufferSize","map","v","type","outputBuffer","device","createBuffer","size","usage","GPUBufferUsage","COPY_SRC","COPY_DST","STORAGE","bindGroupEntries","binding","resource","buffer","inputData","Array","inputTypes","inputBufferSize","Uint8Array","m","index","copyTo","offset","inputBuffer","makeBufferWithContents","UNIFORM","push","module","createShaderModule","code","pipeline","createComputePipelineAsync","layout","compute","entryPoint","group","createBindGroup","getBindGroupLayout","entries","encoder","createCommandEncoder","pass","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","end","queue","submit","finish","checkExpectation","outputData","errs","i","length","alignment","got","read","cmp","compare","matched","Error","join","undefined","expectGPUBufferValuesPassCheck","typedLength","test","specURL","desc","params","u","combine","beginSubcases","expand","member_types","_","beforeAllSubcases","selectDeviceOrSkipTestCase","fn","values","ty","create","member_index","memberTypes","alignments","sizes","memberType","bool","value"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/access/structure/index.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for structure member accessing expressions\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { ScalarKind, Type, Value, u32 } from '../../../../../util/conversion.js';\nimport { align } from '../../../../../util/math.js';\nimport { toComparator } from '../../expectation.js';\nimport { InputSource, structLayout, structStride } from '../../expression.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nconst kMemberTypes = [\n  ['bool'],\n  ['u32'],\n  ['vec3f'],\n  ['i32', 'u32'],\n  ['i32', 'f16', 'vec4i', 'mat3x2f'],\n  ['bool', 'u32', 'f16', 'vec3f', 'vec2i'],\n  ['i32', 'u32', 'f32', 'f16', 'vec3f', 'vec4i'],\n] as readonly ScalarKind[][];\n\nconst kMemberTypesNoBool = kMemberTypes.filter(tys => !tys.includes('bool'));\n\nasync function run(\n  t: GPUTest,\n  wgsl: string,\n  expected: Value[],\n  input: Value[] | ArrayBufferLike | null,\n  inputSource: InputSource\n) {\n  const outputBufferSize = structStride(\n    expected.map(v => v.type),\n    'storage_rw'\n  );\n\n  const outputBuffer = t.device.createBuffer({\n    size: outputBufferSize,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST | GPUBufferUsage.STORAGE,\n  });\n\n  const bindGroupEntries: GPUBindGroupEntry[] = [\n    {\n      binding: 0,\n      resource: { buffer: outputBuffer },\n    },\n  ];\n\n  if (input !== null) {\n    let inputData: Uint8Array;\n    if (input instanceof Array) {\n      const inputTypes = input.map(v => v.type);\n      const inputBufferSize = structStride(inputTypes, inputSource);\n      inputData = new Uint8Array(inputBufferSize);\n      structLayout(inputTypes, inputSource, m => {\n        input[m.index].copyTo(inputData, m.offset);\n      });\n    } else {\n      inputData = new Uint8Array(input);\n    }\n\n    const inputBuffer = t.makeBufferWithContents(\n      inputData,\n      GPUBufferUsage.COPY_SRC |\n        (inputSource === 'uniform' ? GPUBufferUsage.UNIFORM : GPUBufferUsage.STORAGE)\n    );\n\n    bindGroupEntries.push({\n      binding: 1,\n      resource: { buffer: inputBuffer },\n    });\n  }\n\n  // build the shader module\n  const module = t.device.createShaderModule({ code: wgsl });\n\n  // build the pipeline\n  const pipeline = await t.device.createComputePipelineAsync({\n    layout: 'auto',\n    compute: { module, entryPoint: 'main' },\n  });\n\n  // build the bind group\n  const group = t.device.createBindGroup({\n    layout: pipeline.getBindGroupLayout(0),\n    entries: bindGroupEntries,\n  });\n\n  const encoder = t.device.createCommandEncoder();\n  const pass = encoder.beginComputePass();\n  pass.setPipeline(pipeline);\n  pass.setBindGroup(0, group);\n  pass.dispatchWorkgroups(1);\n  pass.end();\n\n  t.queue.submit([encoder.finish()]);\n\n  const checkExpectation = (outputData: Uint8Array) => {\n    // The list of expectation failures\n    const errs: string[] = [];\n\n    let offset = 0;\n    for (let i = 0; i < expected.length; i++) {\n      offset = align(offset, expected[i].type.alignment);\n      const got = expected[i].type.read(outputData, offset);\n      const cmp = toComparator(expected[i]).compare(got);\n      if (!cmp.matched) {\n        errs.push(`result ${i}:)\n  returned: ${cmp.got}\n  expected: ${cmp.expected}`);\n      }\n      offset += expected[i].type.size;\n    }\n\n    return errs.length > 0 ? new Error(errs.join('\\n\\n')) : undefined;\n  };\n\n  t.expectGPUBufferValuesPassCheck(outputBuffer, checkExpectation, {\n    type: Uint8Array,\n    typedLength: outputBufferSize,\n  });\n}\n\ng.test('buffer')\n  .specURL('https://www.w3.org/TR/WGSL/#struct-access-expr')\n  .desc(`Test accessing of a value structure in a storage or uniform buffer`)\n  .params(u =>\n    u\n      .combine('member_types', kMemberTypesNoBool)\n      .combine('inputSource', ['uniform', 'storage'] as const)\n      .beginSubcases()\n      .expand('member_index', t => t.member_types.map((_, i) => i))\n  )\n  .beforeAllSubcases(t => {\n    if (t.params.member_types.includes('f16')) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(async t => {\n    const values = t.params.member_types.map((ty, i) => Type[ty].create(i));\n    const expected = values[t.params.member_index];\n\n    await run(\n      t,\n      `\n${t.params.member_types.includes('f16') ? 'enable f16;' : ''}\n\n@group(0) @binding(0) var<storage, read_write> output : ${expected.type};\n@group(0) @binding(1) var<${t.params.inputSource}> input : MyStruct;\n\nstruct MyStruct {\n  ${t.params.member_types.map((ty, i) => `  member_${i} : ${ty},`).join('\\n')}\n};\n\n@workgroup_size(1) @compute\nfn main() {\n  output = input.member_${t.params.member_index};\n}\n`,\n      /* expected */ [expected],\n      /* input */ values,\n      /* inputSource */ t.params.inputSource === 'uniform' ? 'uniform' : 'storage_r'\n    );\n  });\n\ng.test('buffer_align')\n  .specURL('https://www.w3.org/TR/WGSL/#struct-access-expr')\n  .desc(\n    `Test accessing of a value structure in a storage buffer that has members using the @align attribute`\n  )\n  .params(u =>\n    u\n      .beginSubcases()\n      .combine('member_index', [0, 1, 2] as const)\n      .combine('alignments', [\n        [1, 1, 1],\n        [4, 4, 4],\n        [4, 8, 16],\n        [8, 4, 16],\n        [8, 16, 4],\n      ] as const)\n  )\n  .fn(async t => {\n    const memberTypes = ['i32', 'u32', 'f32'] as const;\n    const values = memberTypes.map((ty, i) => Type[ty].create(i));\n    const expected = values[t.params.member_index];\n    const input = new Uint8Array(64);\n    let offset = 4; // pre : i32\n    for (let i = 0; i < 3; i++) {\n      offset = align(offset, t.params.alignments[i]);\n      values[i].copyTo(input, offset);\n      offset += values[i].type.size;\n    }\n    await run(\n      t,\n      `\n@group(0) @binding(0) var<storage, read_write> output : ${expected.type};\n@group(0) @binding(1) var<storage> input : MyStruct;\n\nstruct MyStruct {\n  pre : i32,\n  @align(${t.params.alignments[0]}) member_0 : ${memberTypes[0]},\n  @align(${t.params.alignments[1]}) member_1 : ${memberTypes[1]},\n  @align(${t.params.alignments[2]}) member_2 : ${memberTypes[2]},\n  post : i32,\n};\n\n@workgroup_size(1) @compute\nfn main() {\noutput = input.member_${t.params.member_index};\n}\n`,\n      /* expected */ [expected],\n      /* input */ input,\n      /* inputSource */ 'storage_r'\n    );\n  });\n\ng.test('buffer_size')\n  .specURL('https://www.w3.org/TR/WGSL/#struct-access-expr')\n  .desc(\n    `Test accessing of a value structure in a storage buffer that has members using the @size attribute`\n  )\n  .params(u =>\n    u\n      .beginSubcases()\n      .combine('member_index', [0, 1, 2] as const)\n      .combine('sizes', [\n        [4, 4, 4],\n        [4, 8, 16],\n        [8, 4, 16],\n        [8, 16, 4],\n      ] as const)\n  )\n  .fn(async t => {\n    const memberTypes = ['i32', 'u32', 'f32'] as const;\n    const values = memberTypes.map((ty, i) => Type[ty].create(i));\n    const expected = values[t.params.member_index];\n    const input = new Uint8Array(64);\n    let offset = 4; // pre : i32\n    for (let i = 0; i < 3; i++) {\n      offset = align(offset, values[i].type.alignment);\n      values[i].copyTo(input, offset);\n      offset += t.params.sizes[i];\n    }\n    await run(\n      t,\n      `\n@group(0) @binding(0) var<storage, read_write> output : ${expected.type};\n@group(0) @binding(1) var<storage> input : MyStruct;\n\nstruct MyStruct {\n  pre : i32,\n  @size(${t.params.sizes[0]}) member_0 : ${memberTypes[0]},\n  @size(${t.params.sizes[1]}) member_1 : ${memberTypes[1]},\n  @size(${t.params.sizes[2]}) member_2 : ${memberTypes[2]},\n  post : i32,\n};\n\n@workgroup_size(1) @compute\nfn main() {\noutput = input.member_${t.params.member_index};\n}\n`,\n      /* expected */ [expected],\n      /* input */ input,\n      /* inputSource */ 'storage_r'\n    );\n  });\n\ng.test('buffer_pointer')\n  .specURL('https://www.w3.org/TR/WGSL/#struct-access-expr')\n  .desc(`Test accessing of a value structure via a pointer to a storage or uniform buffer`)\n  .params(u =>\n    u\n      .combine('member_types', kMemberTypesNoBool)\n      .combine('inputSource', ['uniform', 'storage'] as const)\n      .beginSubcases()\n      .expand('member_index', t => t.member_types.map((_, i) => i))\n  )\n  .beforeAllSubcases(t => {\n    if (t.params.member_types.includes('f16')) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(async t => {\n    const values = t.params.member_types.map((ty, i) => Type[ty].create(i));\n    const expected = values[t.params.member_index];\n\n    await run(\n      t,\n      `\n${t.params.member_types.includes('f16') ? 'enable f16;' : ''}\n\n@group(0) @binding(0) var<storage, read_write> output : ${expected.type};\n@group(0) @binding(1) var<${t.params.inputSource}> input : MyStruct;\n\nstruct MyStruct {\n  ${t.params.member_types.map((ty, i) => `  member_${i} : ${ty},`).join('\\n')}\n};\n\n@workgroup_size(1) @compute\nfn main() {\n  let ptr = &input;\n  output = (*ptr).member_${t.params.member_index};\n}\n`,\n      /* expected */ [expected],\n      /* input */ values,\n      /* inputSource */ t.params.inputSource === 'uniform' ? 'uniform' : 'storage_r'\n    );\n  });\n\ng.test('let')\n  .specURL('https://www.w3.org/TR/WGSL/#struct-access-expr')\n  .desc(`Test accessing of a let structure`)\n  .params(u =>\n    u\n      .combine('member_types', kMemberTypes)\n      .beginSubcases()\n      .expand('member_index', t => t.member_types.map((_, i) => i))\n  )\n  .beforeAllSubcases(t => {\n    if (t.params.member_types.includes('f16')) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(async t => {\n    const memberType = Type[t.params.member_types[t.params.member_index]];\n    const values = t.params.member_types.map((ty, i) => Type[ty].create(i));\n    const expected =\n      memberType === Type.bool\n        ? u32(values[t.params.member_index].value === true ? 1 : 0)\n        : values[t.params.member_index];\n\n    await run(\n      t,\n      `\n${t.params.member_types.includes('f16') ? 'enable f16;' : ''}\n\n@group(0) @binding(0) var<storage, read_write> output : ${expected.type};\n\nstruct MyStruct {\n  ${t.params.member_types.map((ty, i) => `  member_${i} : ${ty},`).join('\\n')}\n};\n\n@workgroup_size(1) @compute\nfn main() {\n  let s = MyStruct(${values.map(v => v.wgsl()).join(', ')});\n  let v = s.member_${t.params.member_index};\n  output = ${memberType === Type.bool ? `select(0u, 1u, v)` : 'v'};\n}\n`,\n      /* expected */ [expected],\n      /* input */ null,\n      /* inputSource */ 'const'\n    );\n  });\n\ng.test('param')\n  .specURL('https://www.w3.org/TR/WGSL/#struct-access-expr')\n  .desc(`Test accessing of a parameter structure`)\n  .params(u =>\n    u\n      .combine('member_types', kMemberTypes)\n      .beginSubcases()\n      .expand('member_index', t => t.member_types.map((_, i) => i))\n  )\n  .beforeAllSubcases(t => {\n    if (t.params.member_types.includes('f16')) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(async t => {\n    const memberType = Type[t.params.member_types[t.params.member_index]];\n    const values = t.params.member_types.map((ty, i) => Type[ty].create(i));\n    const expected =\n      memberType === Type.bool\n        ? u32(values[t.params.member_index].value === true ? 1 : 0)\n        : values[t.params.member_index];\n\n    await run(\n      t,\n      `\n${t.params.member_types.includes('f16') ? 'enable f16;' : ''}\n\n@group(0) @binding(0) var<storage, read_write> output : ${expected.type};\n\nstruct MyStruct {\n  ${t.params.member_types.map((ty, i) => `  member_${i} : ${ty},`).join('\\n')}\n};\n\nfn f(s : MyStruct) -> ${t.params.member_types[t.params.member_index]} {\n  return s.member_${t.params.member_index};\n}\n\n@workgroup_size(1) @compute\nfn main() {\n  let v = f(MyStruct(${values.map(v => v.wgsl()).join(', ')}));\n  output = ${memberType === Type.bool ? `select(0u, 1u, v)` : 'v'};\n}\n`,\n      /* expected */ [expected],\n      /* input */ null,\n      /* inputSource */ 'const'\n    );\n  });\n\ng.test('const')\n  .specURL('https://www.w3.org/TR/WGSL/#struct-access-expr')\n  .desc(`Test accessing of a const value structure`)\n  .params(u =>\n    u\n      .combine('member_types', kMemberTypes)\n      .beginSubcases()\n      .expand('member_index', t => t.member_types.map((_, i) => i))\n  )\n  .beforeAllSubcases(t => {\n    if (t.params.member_types.includes('f16')) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(async t => {\n    const memberType = Type[t.params.member_types[t.params.member_index]];\n    const values = t.params.member_types.map((ty, i) => Type[ty].create(i));\n    const expected =\n      memberType === Type.bool\n        ? u32(values[t.params.member_index].value === true ? 1 : 0)\n        : values[t.params.member_index];\n\n    await run(\n      t,\n      `\n${t.params.member_types.includes('f16') ? 'enable f16;' : ''}\n\n@group(0) @binding(0) var<storage, read_write> output : ${expected.type};\n\nstruct MyStruct {\n  ${t.params.member_types.map((ty, i) => `  member_${i} : ${ty},`).join('\\n')}\n};\n\nconst S = MyStruct(${values.map(v => v.wgsl()).join(', ')});\n\n@workgroup_size(1) @compute\nfn main() {\n  let v = S.member_${t.params.member_index};\n  output = ${memberType === Type.bool ? `select(0u, 1u, v)` : 'v'};\n}\n`,\n      /* expected */ [expected],\n      /* input */ null,\n      /* inputSource */ 'const'\n    );\n  });\n\ng.test('const_nested')\n  .specURL('https://www.w3.org/TR/WGSL/#struct-access-expr')\n  .desc(`Test accessing of a const value structure nested in another structure`)\n  .params(u =>\n    u\n      .combine('member_types', kMemberTypes)\n      .beginSubcases()\n      .expand('member_index', t => t.member_types.map((_, i) => i))\n  )\n  .beforeAllSubcases(t => {\n    if (t.params.member_types.includes('f16')) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(async t => {\n    const memberType = Type[t.params.member_types[t.params.member_index]];\n    const values = t.params.member_types.map((ty, i) => Type[ty].create(i));\n    const expected =\n      memberType === Type.bool\n        ? u32(values[t.params.member_index].value === true ? 1 : 0)\n        : values[t.params.member_index];\n\n    await run(\n      t,\n      `\n${t.params.member_types.includes('f16') ? 'enable f16;' : ''}\n\n@group(0) @binding(0) var<storage, read_write> output : ${expected.type};\n\nstruct MyStruct {\n  ${t.params.member_types.map((ty, i) => `  member_${i} : ${ty},`).join('\\n')}\n};\n\nstruct Outer {\n  pre : i32,\n  inner : MyStruct,\n  post : i32,\n}\n\nconst S = Outer(10, MyStruct(${values.map(v => v.wgsl()).join(', ')}), 20);\n\n@workgroup_size(1) @compute\nfn main() {\n  let v = S.inner.member_${t.params.member_index};\n  output = ${memberType === Type.bool ? `select(0u, 1u, v)` : 'v'};\n}\n`,\n      /* expected */ [expected],\n      /* input */ null,\n      /* inputSource */ 'const'\n    );\n  });\n"],"mappings":"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"}