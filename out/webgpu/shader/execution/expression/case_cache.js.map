{"version":3,"file":"case_cache.js","names":["dataCache","unreachable","BinaryStream","deserializeComparator","serializeComparator","Matrix","Scalar","Vector","deserializeValue","serializeValue","FPInterval","deserializeFPInterval","serializeFPInterval","flatten2DArray","unflatten2DArray","isComparator","SerializedExpectationKind","serializeExpectation","s","e","writeU8","Value","Interval","Array","cols","length","rows","Interval2DArray","writeU16","writeArray","Interval1DArray","Comparator","deserializeExpectation","kind","readU8","readArray","readU16","serializeCase","c","writeCond","input","if_true","if_false","expected","deserializeCase","readCond","CaseCache","constructor","name","builders","path","get","data","fetch","build","built","cases","Promise","resolve","serialize","maxSize","stream","ArrayBuffer","writeU32","Object","keys","writeString","buffer","deserialize","array","casesByName","numRecords","readU32","i","readString","makeCaseCache"],"sources":["../../../../../src/webgpu/shader/execution/expression/case_cache.ts"],"sourcesContent":["import { Cacheable, dataCache } from '../../../../common/framework/data_cache.js';\nimport { unreachable } from '../../../../common/util/util.js';\nimport BinaryStream from '../../../util/binary_stream.js';\nimport { deserializeComparator, serializeComparator } from '../../../util/compare.js';\nimport {\n  Matrix,\n  Scalar,\n  Value,\n  Vector,\n  deserializeValue,\n  serializeValue,\n} from '../../../util/conversion.js';\nimport {\n  FPInterval,\n  deserializeFPInterval,\n  serializeFPInterval,\n} from '../../../util/floating_point.js';\nimport { flatten2DArray, unflatten2DArray } from '../../../util/math.js';\n\nimport { Case, CaseList } from './case.js';\nimport { Expectation, isComparator } from './expectation.js';\n\nenum SerializedExpectationKind {\n  Value,\n  Interval,\n  Interval1DArray,\n  Interval2DArray,\n  Array,\n  Comparator,\n}\n\n/** serializeExpectation() serializes an Expectation to a BinaryStream */\nexport function serializeExpectation(s: BinaryStream, e: Expectation) {\n  if (e instanceof Scalar || e instanceof Vector || e instanceof Matrix) {\n    s.writeU8(SerializedExpectationKind.Value);\n    serializeValue(s, e);\n    return;\n  }\n  if (e instanceof FPInterval) {\n    s.writeU8(SerializedExpectationKind.Interval);\n    serializeFPInterval(s, e);\n    return;\n  }\n  if (e instanceof Array) {\n    if (e[0] instanceof Array) {\n      e = e as FPInterval[][];\n      const cols = e.length;\n      const rows = e[0].length;\n      s.writeU8(SerializedExpectationKind.Interval2DArray);\n      s.writeU16(cols);\n      s.writeU16(rows);\n      s.writeArray(flatten2DArray(e), serializeFPInterval);\n    } else {\n      e = e as FPInterval[];\n      s.writeU8(SerializedExpectationKind.Interval1DArray);\n      s.writeArray(e, serializeFPInterval);\n    }\n    return;\n  }\n  if (isComparator(e)) {\n    s.writeU8(SerializedExpectationKind.Comparator);\n    serializeComparator(s, e);\n    return;\n  }\n  unreachable(`cannot serialize Expectation ${e}`);\n}\n\n/** deserializeExpectation() deserializes an Expectation from a BinaryStream */\nexport function deserializeExpectation(s: BinaryStream): Expectation {\n  const kind = s.readU8();\n  switch (kind) {\n    case SerializedExpectationKind.Value: {\n      return deserializeValue(s);\n    }\n    case SerializedExpectationKind.Interval: {\n      return deserializeFPInterval(s);\n    }\n    case SerializedExpectationKind.Interval1DArray: {\n      return s.readArray(deserializeFPInterval);\n    }\n    case SerializedExpectationKind.Interval2DArray: {\n      const cols = s.readU16();\n      const rows = s.readU16();\n      return unflatten2DArray(s.readArray(deserializeFPInterval), cols, rows);\n    }\n    case SerializedExpectationKind.Comparator: {\n      return deserializeComparator(s);\n    }\n    default: {\n      unreachable(`invalid serialized expectation kind: ${kind}`);\n    }\n  }\n}\n\n/** serializeCase() serializes a Case to a BinaryStream */\nexport function serializeCase(s: BinaryStream, c: Case) {\n  s.writeCond(c.input instanceof Array, {\n    if_true: () => {\n      // c.input is array\n      s.writeArray(c.input as Value[], serializeValue);\n    },\n    if_false: () => {\n      // c.input is not array\n      serializeValue(s, c.input as Value);\n    },\n  });\n  serializeExpectation(s, c.expected);\n}\n\n/** deserializeCase() deserializes a Case from a BinaryStream */\nexport function deserializeCase(s: BinaryStream): Case {\n  const input = s.readCond({\n    if_true: () => {\n      // c.input is array\n      return s.readArray(deserializeValue);\n    },\n    if_false: () => {\n      // c.input is not array\n      return deserializeValue(s);\n    },\n  });\n  const expected = deserializeExpectation(s);\n  return { input, expected };\n}\n\n/** CaseListBuilder is a function that builds a CaseList */\nexport type CaseListBuilder = () => CaseList;\n\n/**\n * CaseCache is a cache of CaseList.\n * CaseCache implements the Cacheable interface, so the cases can be pre-built\n * and stored in the data cache, reducing computation costs at CTS runtime.\n */\nexport class CaseCache implements Cacheable<Record<string, CaseList>> {\n  /**\n   * Constructor\n   * @param name the name of the cache. This must be globally unique.\n   * @param builders a Record of case-list name to case-list builder.\n   */\n  constructor(name: string, builders: Record<string, CaseListBuilder>) {\n    this.path = `webgpu/shader/execution/${name}.bin`;\n    this.builders = builders;\n  }\n\n  /** get() returns the list of cases with the given name */\n  public async get(name: string): Promise<CaseList> {\n    const data = await dataCache.fetch(this);\n    return data[name];\n  }\n\n  /**\n   * build() implements the Cacheable.build interface.\n   * @returns the data.\n   */\n  build(): Promise<Record<string, CaseList>> {\n    const built: Record<string, CaseList> = {};\n    for (const name in this.builders) {\n      const cases = this.builders[name]();\n      built[name] = cases;\n    }\n    return Promise.resolve(built);\n  }\n\n  /**\n   * serialize() implements the Cacheable.serialize interface.\n   * @returns the serialized data.\n   */\n  serialize(data: Record<string, CaseList>): Uint8Array {\n    const maxSize = 32 << 20; // 32MB - max size for a file\n    const stream = new BinaryStream(new ArrayBuffer(maxSize));\n    stream.writeU32(Object.keys(data).length);\n    for (const name in data) {\n      stream.writeString(name);\n      stream.writeArray(data[name], serializeCase);\n    }\n    return stream.buffer();\n  }\n\n  /**\n   * deserialize() implements the Cacheable.deserialize interface.\n   * @returns the deserialize data.\n   */\n  deserialize(array: Uint8Array): Record<string, CaseList> {\n    const s = new BinaryStream(array.buffer);\n    const casesByName: Record<string, CaseList> = {};\n    const numRecords = s.readU32();\n    for (let i = 0; i < numRecords; i++) {\n      const name = s.readString();\n      const cases = s.readArray(deserializeCase);\n      casesByName[name] = cases;\n    }\n    return casesByName;\n  }\n\n  public readonly path: string;\n  private readonly builders: Record<string, CaseListBuilder>;\n}\n\nexport function makeCaseCache(name: string, builders: Record<string, CaseListBuilder>): CaseCache {\n  return new CaseCache(name, builders);\n}\n"],"mappings":"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"}