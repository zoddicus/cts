{"version":3,"file":"f16_conversion.spec.js","names":["description","makeTestGroup","GPUTest","bool","f16","i32","TypeBool","TypeF32","TypeF16","TypeI32","TypeMat","TypeU32","u32","FP","FPInterval","fullF32Range","fullF16Range","fullI32Range","fullU32Range","sparseMatrixF32Range","sparseMatrixF16Range","makeCaseCache","allInputSources","run","unary","g","f16FiniteRangeInterval","constants","negative","min","positive","max","f32_mat_cases","flatMap","cols","rows","map","nonConst","f32","generateMatrixToMatrixCases","correctlyRoundedMatrix","reduce","a","b","f16_mat_cases","d","input","expected","u32_non_const","u","correctlyRoundedInterval","u32_const","filter","v","contains","i32_non_const","i","i32_const","f32_non_const","generateScalarToIntervalCases","f32_const","f","vectorizeToExpression","vectorize","undefined","matrixExperession","test","specURL","desc","params","combine","beforeAllSubcases","t","selectDeviceOrSkipTestCase","requiredFeatures","fn","cases","get","inputSource"],"sources":["../../../../../../src/webgpu/shader/execution/expression/unary/f16_conversion.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for the f32 conversion operations\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport {\n  bool,\n  f16,\n  i32,\n  TypeBool,\n  TypeF32,\n  TypeF16,\n  TypeI32,\n  TypeMat,\n  TypeU32,\n  u32,\n} from '../../../../util/conversion.js';\nimport { FP, FPInterval } from '../../../../util/floating_point.js';\nimport {\n  fullF32Range,\n  fullF16Range,\n  fullI32Range,\n  fullU32Range,\n  sparseMatrixF32Range,\n  sparseMatrixF16Range,\n} from '../../../../util/math.js';\nimport { makeCaseCache } from '../case_cache.js';\nimport { allInputSources, run, ShaderBuilder } from '../expression.js';\n\nimport { unary } from './unary.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nconst f16FiniteRangeInterval = new FPInterval(\n  'f32',\n  FP.f16.constants().negative.min,\n  FP.f16.constants().positive.max\n);\n\n// Cases: f32_matCxR_[non_]const\n// Note that f32 values may be not exactly representable in f16 and/or out of range.\nconst f32_mat_cases = ([2, 3, 4] as const)\n  .flatMap(cols =>\n    ([2, 3, 4] as const).flatMap(rows =>\n      ([true, false] as const).map(nonConst => ({\n        [`f32_mat${cols}x${rows}_${nonConst ? 'non_const' : 'const'}`]: () => {\n          return FP.f32.generateMatrixToMatrixCases(\n            sparseMatrixF32Range(cols, rows),\n            nonConst ? 'unfiltered' : 'finite',\n            FP.f16.correctlyRoundedMatrix\n          );\n        },\n      }))\n    )\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\n// Cases: f16_matCxR_[non_]const\nconst f16_mat_cases = ([2, 3, 4] as const)\n  .flatMap(cols =>\n    ([2, 3, 4] as const).flatMap(rows =>\n      ([true, false] as const).map(nonConst => ({\n        [`f16_mat${cols}x${rows}_${nonConst ? 'non_const' : 'const'}`]: () => {\n          // Input matrix is of f16 types, use f16.generateMatrixToMatrixCases.\n          return FP.f16.generateMatrixToMatrixCases(\n            sparseMatrixF16Range(cols, rows),\n            nonConst ? 'unfiltered' : 'finite',\n            FP.f16.correctlyRoundedMatrix\n          );\n        },\n      }))\n    )\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('unary/f16_conversion', {\n  bool: () => {\n    return [\n      { input: bool(true), expected: f16(1.0) },\n      { input: bool(false), expected: f16(0.0) },\n    ];\n  },\n  u32_non_const: () => {\n    return [...fullU32Range(), 65504].map(u => {\n      return { input: u32(u), expected: FP.f16.correctlyRoundedInterval(u) };\n    });\n  },\n  u32_const: () => {\n    return [...fullU32Range(), 65504]\n      .filter(v => f16FiniteRangeInterval.contains(v))\n      .map(u => {\n        return { input: u32(u), expected: FP.f16.correctlyRoundedInterval(u) };\n      });\n  },\n  i32_non_const: () => {\n    return [...fullI32Range(), 65504, -65504].map(i => {\n      return { input: i32(i), expected: FP.f16.correctlyRoundedInterval(i) };\n    });\n  },\n  i32_const: () => {\n    return [...fullI32Range(), 65504, -65504]\n      .filter(v => f16FiniteRangeInterval.contains(v))\n      .map(i => {\n        return { input: i32(i), expected: FP.f16.correctlyRoundedInterval(i) };\n      });\n  },\n  // Note that f32 values may be not exactly representable in f16 and/or out of range.\n  f32_non_const: () => {\n    return FP.f32.generateScalarToIntervalCases(\n      [...fullF32Range(), 65535.996, -65535.996],\n      'unfiltered',\n      FP.f16.correctlyRoundedInterval\n    );\n  },\n  f32_const: () => {\n    return FP.f32.generateScalarToIntervalCases(\n      [...fullF32Range(), 65535.996, -65535.996],\n      'finite',\n      FP.f16.correctlyRoundedInterval\n    );\n  },\n  // All f16 values are exactly representable in f16.\n  f16: () => {\n    return fullF16Range().map(f => {\n      return { input: f16(f), expected: FP.f16.correctlyRoundedInterval(f) };\n    });\n  },\n  ...f32_mat_cases,\n  ...f16_mat_cases,\n});\n\n/** Generate a ShaderBuilder based on how the test case is to be vectorized */\nfunction vectorizeToExpression(vectorize: undefined | 2 | 3 | 4): ShaderBuilder {\n  return vectorize === undefined ? unary('f16') : unary(`vec${vectorize}<f16>`);\n}\n\n/** Generate a ShaderBuilder for a matrix of the provided dimensions */\nfunction matrixExperession(cols: number, rows: number): ShaderBuilder {\n  return unary(`mat${cols}x${rows}<f16>`);\n}\n\ng.test('bool')\n  .specURL('https://www.w3.org/TR/WGSL/#value-constructor-builtin-function')\n  .desc(\n    `\nf16(e), where e is a bool\n\nThe result is 1.0 if e is true and 0.0 otherwise\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cases = await d.get('bool');\n    await run(t, vectorizeToExpression(t.params.vectorize), [TypeBool], TypeF16, t.params, cases);\n  });\n\ng.test('u32')\n  .specURL('https://www.w3.org/TR/WGSL/#bool-builtin')\n  .desc(\n    `\nf16(e), where e is a u32\n\nConverted to f16, +/-Inf if out of range\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'u32_const' : 'u32_non_const');\n    await run(t, vectorizeToExpression(t.params.vectorize), [TypeU32], TypeF16, t.params, cases);\n  });\n\ng.test('i32')\n  .specURL('https://www.w3.org/TR/WGSL/#value-constructor-builtin-function')\n  .desc(\n    `\nf16(e), where e is a i32\n\nConverted to f16, +/-Inf if out of range\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'i32_const' : 'i32_non_const');\n    await run(t, vectorizeToExpression(t.params.vectorize), [TypeI32], TypeF16, t.params, cases);\n  });\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#value-constructor-builtin-function')\n  .desc(\n    `\nf16(e), where e is a f32\n\nCorrectly rounded to f16\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f32_const' : 'f32_non_const');\n    await run(t, vectorizeToExpression(t.params.vectorize), [TypeF32], TypeF16, t.params, cases);\n  });\n\ng.test('f32_mat')\n  .specURL('https://www.w3.org/TR/WGSL/#matrix-builtin-functions')\n  .desc(`f32 matrix to f16 matrix tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `f32_mat${cols}x${rows}_const`\n        : `f32_mat${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      matrixExperession(cols, rows),\n      [TypeMat(cols, rows, TypeF32)],\n      TypeMat(cols, rows, TypeF16),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#value-constructor-builtin-function')\n  .desc(\n    `\n  f16(e), where e is a f16\n\n  Identical.\n  `\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cases = await d.get('f16');\n    await run(t, vectorizeToExpression(t.params.vectorize), [TypeF16], TypeF16, t.params, cases);\n  });\n\ng.test('f16_mat')\n  .specURL('https://www.w3.org/TR/WGSL/#matrix-builtin-functions')\n  .desc(`f16 matrix to f16 matrix tests, expected identical`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `f16_mat${cols}x${rows}_const`\n        : `f16_mat${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      matrixExperession(cols, rows),\n      [TypeMat(cols, rows, TypeF16)],\n      TypeMat(cols, rows, TypeF16),\n      t.params,\n      cases\n    );\n  });\n"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,+CAA+C;AAC7E,SAASC,OAAO,QAAQ,yBAAyB;AACjD;EACEC,IAAI;EACJC,GAAG;EACHC,GAAG;EACHC,QAAQ;EACRC,OAAO;EACPC,OAAO;EACPC,OAAO;EACPC,OAAO;EACPC,OAAO;EACPC,GAAG;AACE,gCAAgC;AACvC,SAASC,EAAE,EAAEC,UAAU,QAAQ,oCAAoC;AACnE;EACEC,YAAY;EACZC,YAAY;EACZC,YAAY;EACZC,YAAY;EACZC,oBAAoB;EACpBC,oBAAoB;AACf,0BAA0B;AACjC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,eAAe,EAAEC,GAAG,QAAuB,kBAAkB;;AAEtE,SAASC,KAAK,QAAQ,YAAY;;AAElC,OAAO,MAAMC,CAAC,GAAGxB,aAAa,CAACC,OAAO,CAAC;;AAEvC,MAAMwB,sBAAsB,GAAG,IAAIZ,UAAU;EAC3C,KAAK;EACLD,EAAE,CAACT,GAAG,CAACuB,SAAS,CAAC,CAAC,CAACC,QAAQ,CAACC,GAAG;EAC/BhB,EAAE,CAACT,GAAG,CAACuB,SAAS,CAAC,CAAC,CAACG,QAAQ,CAACC;AAC9B,CAAC;;AAED;AACA;AACA,MAAMC,aAAa,GAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC7BC,OAAO,CAAC,CAAAC,IAAI;AACV,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAWD,OAAO,CAAC,CAAAE,IAAI;AAC9B,CAAC,IAAI,EAAE,KAAK,CAAC,CAAWC,GAAG,CAAC,CAAAC,QAAQ,MAAK;EACxC,CAAE,UAASH,IAAK,IAAGC,IAAK,IAAGE,QAAQ,GAAG,WAAW,GAAG,OAAQ,EAAC,GAAG,MAAM;IACpE,OAAOxB,EAAE,CAACyB,GAAG,CAACC,2BAA2B;MACvCpB,oBAAoB,CAACe,IAAI,EAAEC,IAAI,CAAC;MAChCE,QAAQ,GAAG,YAAY,GAAG,QAAQ;MAClCxB,EAAE,CAACT,GAAG,CAACoC;IACT,CAAC;EACH;AACF,CAAC,CAAC;AACJ;AACF,CAAC;AACAC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM,EAAE,GAAGD,CAAC,EAAE,GAAGC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEzC;AACA,MAAMC,aAAa,GAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC7BX,OAAO,CAAC,CAAAC,IAAI;AACV,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAWD,OAAO,CAAC,CAAAE,IAAI;AAC9B,CAAC,IAAI,EAAE,KAAK,CAAC,CAAWC,GAAG,CAAC,CAAAC,QAAQ,MAAK;EACxC,CAAE,UAASH,IAAK,IAAGC,IAAK,IAAGE,QAAQ,GAAG,WAAW,GAAG,OAAQ,EAAC,GAAG,MAAM;IACpE;IACA,OAAOxB,EAAE,CAACT,GAAG,CAACmC,2BAA2B;MACvCnB,oBAAoB,CAACc,IAAI,EAAEC,IAAI,CAAC;MAChCE,QAAQ,GAAG,YAAY,GAAG,QAAQ;MAClCxB,EAAE,CAACT,GAAG,CAACoC;IACT,CAAC;EACH;AACF,CAAC,CAAC;AACJ;AACF,CAAC;AACAC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM,EAAE,GAAGD,CAAC,EAAE,GAAGC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEzC,OAAO,MAAME,CAAC,GAAGxB,aAAa,CAAC,sBAAsB,EAAE;EACrDlB,IAAI,EAAEA,CAAA,KAAM;IACV,OAAO;IACL,EAAE2C,KAAK,EAAE3C,IAAI,CAAC,IAAI,CAAC,EAAE4C,QAAQ,EAAE3C,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACzC,EAAE0C,KAAK,EAAE3C,IAAI,CAAC,KAAK,CAAC,EAAE4C,QAAQ,EAAE3C,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAC3C;;EACH,CAAC;EACD4C,aAAa,EAAEA,CAAA,KAAM;IACnB,OAAO,CAAC,GAAG9B,YAAY,CAAC,CAAC,EAAE,KAAK,CAAC,CAACkB,GAAG,CAAC,CAAAa,CAAC,KAAI;MACzC,OAAO,EAAEH,KAAK,EAAElC,GAAG,CAACqC,CAAC,CAAC,EAAEF,QAAQ,EAAElC,EAAE,CAACT,GAAG,CAAC8C,wBAAwB,CAACD,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC;EACJ,CAAC;EACDE,SAAS,EAAEA,CAAA,KAAM;IACf,OAAO,CAAC,GAAGjC,YAAY,CAAC,CAAC,EAAE,KAAK,CAAC;IAC9BkC,MAAM,CAAC,CAAAC,CAAC,KAAI3B,sBAAsB,CAAC4B,QAAQ,CAACD,CAAC,CAAC,CAAC;IAC/CjB,GAAG,CAAC,CAAAa,CAAC,KAAI;MACR,OAAO,EAAEH,KAAK,EAAElC,GAAG,CAACqC,CAAC,CAAC,EAAEF,QAAQ,EAAElC,EAAE,CAACT,GAAG,CAAC8C,wBAAwB,CAACD,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC;EACN,CAAC;EACDM,aAAa,EAAEA,CAAA,KAAM;IACnB,OAAO,CAAC,GAAGtC,YAAY,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,CAACmB,GAAG,CAAC,CAAAoB,CAAC,KAAI;MACjD,OAAO,EAAEV,KAAK,EAAEzC,GAAG,CAACmD,CAAC,CAAC,EAAET,QAAQ,EAAElC,EAAE,CAACT,GAAG,CAAC8C,wBAAwB,CAACM,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC;EACJ,CAAC;EACDC,SAAS,EAAEA,CAAA,KAAM;IACf,OAAO,CAAC,GAAGxC,YAAY,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC;IACtCmC,MAAM,CAAC,CAAAC,CAAC,KAAI3B,sBAAsB,CAAC4B,QAAQ,CAACD,CAAC,CAAC,CAAC;IAC/CjB,GAAG,CAAC,CAAAoB,CAAC,KAAI;MACR,OAAO,EAAEV,KAAK,EAAEzC,GAAG,CAACmD,CAAC,CAAC,EAAET,QAAQ,EAAElC,EAAE,CAACT,GAAG,CAAC8C,wBAAwB,CAACM,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC;EACN,CAAC;EACD;EACAE,aAAa,EAAEA,CAAA,KAAM;IACnB,OAAO7C,EAAE,CAACyB,GAAG,CAACqB,6BAA6B;MACzC,CAAC,GAAG5C,YAAY,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,SAAS,CAAC;MAC1C,YAAY;MACZF,EAAE,CAACT,GAAG,CAAC8C;IACT,CAAC;EACH,CAAC;EACDU,SAAS,EAAEA,CAAA,KAAM;IACf,OAAO/C,EAAE,CAACyB,GAAG,CAACqB,6BAA6B;MACzC,CAAC,GAAG5C,YAAY,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,SAAS,CAAC;MAC1C,QAAQ;MACRF,EAAE,CAACT,GAAG,CAAC8C;IACT,CAAC;EACH,CAAC;EACD;EACA9C,GAAG,EAAEA,CAAA,KAAM;IACT,OAAOY,YAAY,CAAC,CAAC,CAACoB,GAAG,CAAC,CAAAyB,CAAC,KAAI;MAC7B,OAAO,EAAEf,KAAK,EAAE1C,GAAG,CAACyD,CAAC,CAAC,EAAEd,QAAQ,EAAElC,EAAE,CAACT,GAAG,CAAC8C,wBAAwB,CAACW,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC;EACJ,CAAC;EACD,GAAG7B,aAAa;EAChB,GAAGY;AACL,CAAC,CAAC;;AAEF;AACA,SAASkB,qBAAqBA,CAACC,SAAgC,EAAiB;EAC9E,OAAOA,SAAS,KAAKC,SAAS,GAAGxC,KAAK,CAAC,KAAK,CAAC,GAAGA,KAAK,CAAE,MAAKuC,SAAU,OAAM,CAAC;AAC/E;;AAEA;AACA,SAASE,iBAAiBA,CAAC/B,IAAY,EAAEC,IAAY,EAAiB;EACpE,OAAOX,KAAK,CAAE,MAAKU,IAAK,IAAGC,IAAK,OAAM,CAAC;AACzC;;AAEAV,CAAC,CAACyC,IAAI,CAAC,MAAM,CAAC;AACXC,OAAO,CAAC,gEAAgE,CAAC;AACzEC,IAAI;EACF;AACL;AACA;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAApB,CAAC;AACPA,CAAC,CAACqB,OAAO,CAAC,aAAa,EAAEhD,eAAe,CAAC,CAACgD,OAAO,CAAC,WAAW,EAAE,CAACN,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAU;AAC9F,CAAC;AACAO,iBAAiB,CAAC,CAAAC,CAAC,KAAI;EACtBA,CAAC,CAACC,0BAA0B,CAAC,EAAEC,gBAAgB,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC;AACDC,EAAE,CAAC,OAAMH,CAAC,KAAI;EACb,MAAMI,KAAK,GAAG,MAAM/B,CAAC,CAACgC,GAAG,CAAC,MAAM,CAAC;EACjC,MAAMtD,GAAG,CAACiD,CAAC,EAAEV,qBAAqB,CAACU,CAAC,CAACH,MAAM,CAACN,SAAS,CAAC,EAAE,CAACzD,QAAQ,CAAC,EAAEE,OAAO,EAAEgE,CAAC,CAACH,MAAM,EAAEO,KAAK,CAAC;AAC/F,CAAC,CAAC;;AAEJnD,CAAC,CAACyC,IAAI,CAAC,KAAK,CAAC;AACVC,OAAO,CAAC,0CAA0C,CAAC;AACnDC,IAAI;EACF;AACL;AACA;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAApB,CAAC;AACPA,CAAC,CAACqB,OAAO,CAAC,aAAa,EAAEhD,eAAe,CAAC,CAACgD,OAAO,CAAC,WAAW,EAAE,CAACN,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAU;AAC9F,CAAC;AACAO,iBAAiB,CAAC,CAAAC,CAAC,KAAI;EACtBA,CAAC,CAACC,0BAA0B,CAAC,EAAEC,gBAAgB,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC;AACDC,EAAE,CAAC,OAAMH,CAAC,KAAI;EACb,MAAMI,KAAK,GAAG,MAAM/B,CAAC,CAACgC,GAAG,CAACL,CAAC,CAACH,MAAM,CAACS,WAAW,KAAK,OAAO,GAAG,WAAW,GAAG,eAAe,CAAC;EAC3F,MAAMvD,GAAG,CAACiD,CAAC,EAAEV,qBAAqB,CAACU,CAAC,CAACH,MAAM,CAACN,SAAS,CAAC,EAAE,CAACpD,OAAO,CAAC,EAAEH,OAAO,EAAEgE,CAAC,CAACH,MAAM,EAAEO,KAAK,CAAC;AAC9F,CAAC,CAAC;;AAEJnD,CAAC,CAACyC,IAAI,CAAC,KAAK,CAAC;AACVC,OAAO,CAAC,gEAAgE,CAAC;AACzEC,IAAI;EACF;AACL;AACA;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAApB,CAAC;AACPA,CAAC,CAACqB,OAAO,CAAC,aAAa,EAAEhD,eAAe,CAAC,CAACgD,OAAO,CAAC,WAAW,EAAE,CAACN,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAU;AAC9F,CAAC;AACAO,iBAAiB,CAAC,CAAAC,CAAC,KAAI;EACtBA,CAAC,CAACC,0BAA0B,CAAC,EAAEC,gBAAgB,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC;AACDC,EAAE,CAAC,OAAMH,CAAC,KAAI;EACb,MAAMI,KAAK,GAAG,MAAM/B,CAAC,CAACgC,GAAG,CAACL,CAAC,CAACH,MAAM,CAACS,WAAW,KAAK,OAAO,GAAG,WAAW,GAAG,eAAe,CAAC;EAC3F,MAAMvD,GAAG,CAACiD,CAAC,EAAEV,qBAAqB,CAACU,CAAC,CAACH,MAAM,CAACN,SAAS,CAAC,EAAE,CAACtD,OAAO,CAAC,EAAED,OAAO,EAAEgE,CAAC,CAACH,MAAM,EAAEO,KAAK,CAAC;AAC9F,CAAC,CAAC;;AAEJnD,CAAC,CAACyC,IAAI,CAAC,KAAK,CAAC;AACVC,OAAO,CAAC,gEAAgE,CAAC;AACzEC,IAAI;EACF;AACL;AACA;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAApB,CAAC;AACPA,CAAC,CAACqB,OAAO,CAAC,aAAa,EAAEhD,eAAe,CAAC,CAACgD,OAAO,CAAC,WAAW,EAAE,CAACN,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAU;AAC9F,CAAC;AACAO,iBAAiB,CAAC,CAAAC,CAAC,KAAI;EACtBA,CAAC,CAACC,0BAA0B,CAAC,EAAEC,gBAAgB,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC;AACDC,EAAE,CAAC,OAAMH,CAAC,KAAI;EACb,MAAMI,KAAK,GAAG,MAAM/B,CAAC,CAACgC,GAAG,CAACL,CAAC,CAACH,MAAM,CAACS,WAAW,KAAK,OAAO,GAAG,WAAW,GAAG,eAAe,CAAC;EAC3F,MAAMvD,GAAG,CAACiD,CAAC,EAAEV,qBAAqB,CAACU,CAAC,CAACH,MAAM,CAACN,SAAS,CAAC,EAAE,CAACxD,OAAO,CAAC,EAAEC,OAAO,EAAEgE,CAAC,CAACH,MAAM,EAAEO,KAAK,CAAC;AAC9F,CAAC,CAAC;;AAEJnD,CAAC,CAACyC,IAAI,CAAC,SAAS,CAAC;AACdC,OAAO,CAAC,sDAAsD,CAAC;AAC/DC,IAAI,CAAE,gCAA+B,CAAC;AACtCC,MAAM,CAAC,CAAApB,CAAC;AACPA,CAAC;AACEqB,OAAO,CAAC,aAAa,EAAEhD,eAAe,CAAC;AACvCgD,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAU,CAAC;AACnCA,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAU;AACvC,CAAC;AACAC,iBAAiB,CAAC,CAAAC,CAAC,KAAI;EACtBA,CAAC,CAACC,0BAA0B,CAAC,EAAEC,gBAAgB,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC;AACDC,EAAE,CAAC,OAAMH,CAAC,KAAI;EACb,MAAMtC,IAAI,GAAGsC,CAAC,CAACH,MAAM,CAACnC,IAAI;EAC1B,MAAMC,IAAI,GAAGqC,CAAC,CAACH,MAAM,CAAClC,IAAI;EAC1B,MAAMyC,KAAK,GAAG,MAAM/B,CAAC,CAACgC,GAAG;IACvBL,CAAC,CAACH,MAAM,CAACS,WAAW,KAAK,OAAO;IAC3B,UAAS5C,IAAK,IAAGC,IAAK,QAAO;IAC7B,UAASD,IAAK,IAAGC,IAAK;EAC7B,CAAC;EACD,MAAMZ,GAAG;IACPiD,CAAC;IACDP,iBAAiB,CAAC/B,IAAI,EAAEC,IAAI,CAAC;IAC7B,CAACzB,OAAO,CAACwB,IAAI,EAAEC,IAAI,EAAE5B,OAAO,CAAC,CAAC;IAC9BG,OAAO,CAACwB,IAAI,EAAEC,IAAI,EAAE3B,OAAO,CAAC;IAC5BgE,CAAC,CAACH,MAAM;IACRO;EACF,CAAC;AACH,CAAC,CAAC;;AAEJnD,CAAC,CAACyC,IAAI,CAAC,KAAK,CAAC;AACVC,OAAO,CAAC,gEAAgE,CAAC;AACzEC,IAAI;EACF;AACL;AACA;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAApB,CAAC;AACPA,CAAC,CAACqB,OAAO,CAAC,aAAa,EAAEhD,eAAe,CAAC,CAACgD,OAAO,CAAC,WAAW,EAAE,CAACN,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAU;AAC9F,CAAC;AACAO,iBAAiB,CAAC,CAAAC,CAAC,KAAI;EACtBA,CAAC,CAACC,0BAA0B,CAAC,EAAEC,gBAAgB,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC;AACDC,EAAE,CAAC,OAAMH,CAAC,KAAI;EACb,MAAMI,KAAK,GAAG,MAAM/B,CAAC,CAACgC,GAAG,CAAC,KAAK,CAAC;EAChC,MAAMtD,GAAG,CAACiD,CAAC,EAAEV,qBAAqB,CAACU,CAAC,CAACH,MAAM,CAACN,SAAS,CAAC,EAAE,CAACvD,OAAO,CAAC,EAAEA,OAAO,EAAEgE,CAAC,CAACH,MAAM,EAAEO,KAAK,CAAC;AAC9F,CAAC,CAAC;;AAEJnD,CAAC,CAACyC,IAAI,CAAC,SAAS,CAAC;AACdC,OAAO,CAAC,sDAAsD,CAAC;AAC/DC,IAAI,CAAE,oDAAmD,CAAC;AAC1DC,MAAM,CAAC,CAAApB,CAAC;AACPA,CAAC;AACEqB,OAAO,CAAC,aAAa,EAAEhD,eAAe,CAAC;AACvCgD,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAU,CAAC;AACnCA,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAU;AACvC,CAAC;AACAC,iBAAiB,CAAC,CAAAC,CAAC,KAAI;EACtBA,CAAC,CAACC,0BAA0B,CAAC,EAAEC,gBAAgB,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC;AACDC,EAAE,CAAC,OAAMH,CAAC,KAAI;EACb,MAAMtC,IAAI,GAAGsC,CAAC,CAACH,MAAM,CAACnC,IAAI;EAC1B,MAAMC,IAAI,GAAGqC,CAAC,CAACH,MAAM,CAAClC,IAAI;EAC1B,MAAMyC,KAAK,GAAG,MAAM/B,CAAC,CAACgC,GAAG;IACvBL,CAAC,CAACH,MAAM,CAACS,WAAW,KAAK,OAAO;IAC3B,UAAS5C,IAAK,IAAGC,IAAK,QAAO;IAC7B,UAASD,IAAK,IAAGC,IAAK;EAC7B,CAAC;EACD,MAAMZ,GAAG;IACPiD,CAAC;IACDP,iBAAiB,CAAC/B,IAAI,EAAEC,IAAI,CAAC;IAC7B,CAACzB,OAAO,CAACwB,IAAI,EAAEC,IAAI,EAAE3B,OAAO,CAAC,CAAC;IAC9BE,OAAO,CAACwB,IAAI,EAAEC,IAAI,EAAE3B,OAAO,CAAC;IAC5BgE,CAAC,CAACH,MAAM;IACRO;EACF,CAAC;AACH,CAAC,CAAC"}