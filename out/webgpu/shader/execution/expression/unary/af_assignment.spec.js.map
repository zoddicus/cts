{"version":3,"file":"af_assignment.spec.js","names":["description","makeTestGroup","GPUTest","kValue","abstractFloat","TypeAbstractFloat","TypeF16","TypeF32","FP","filteredF64Range","fullF64Range","isSubnormalNumberF64","reinterpretU64AsF64","makeCaseCache","abstractFloatShaderBuilder","basicExpressionBuilder","onlyConstInputSource","run","concrete_assignment","value","abstract_assignment","g","d","abstract","inputs","map","f","input","expected","f32","negative","min","positive","max","correctlyRoundedInterval","f16","test","specURL","desc","params","u","combine","fn","t","cases","get","beforeAllSubcases","selectDeviceOrSkipTestCase","requiredFeatures"],"sources":["../../../../../../src/webgpu/shader/execution/expression/unary/af_assignment.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for assignment of AbstractFloats\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { kValue } from '../../../../util/constants.js';\nimport { abstractFloat, TypeAbstractFloat, TypeF16, TypeF32 } from '../../../../util/conversion.js';\nimport { FP } from '../../../../util/floating_point.js';\nimport { filteredF64Range, fullF64Range, isSubnormalNumberF64 } from '../../../../util/math.js';\nimport { reinterpretU64AsF64 } from '../../../../util/reinterpret.js';\nimport { makeCaseCache } from '../case_cache.js';\nimport {\n  abstractFloatShaderBuilder,\n  basicExpressionBuilder,\n  onlyConstInputSource,\n  run,\n  ShaderBuilder,\n} from '../expression.js';\n\nfunction concrete_assignment(): ShaderBuilder {\n  return basicExpressionBuilder(value => `${value}`);\n}\n\nfunction abstract_assignment(): ShaderBuilder {\n  return abstractFloatShaderBuilder(value => `${value}`);\n}\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('unary/af_assignment', {\n  abstract: () => {\n    const inputs = [\n      // Values that are useful for debugging the underlying framework/shader code, since it cannot be directly unit tested.\n      0,\n      0.5,\n      0.5,\n      1,\n      -1,\n      reinterpretU64AsF64(0x7000_0000_0000_0001n), // smallest magnitude negative subnormal with non-zero mantissa\n      reinterpretU64AsF64(0x0000_0000_0000_0001n), // smallest magnitude positive subnormal with non-zero mantissa\n      reinterpretU64AsF64(0x600a_aaaa_5555_5555n), // negative subnormal with obvious pattern\n      reinterpretU64AsF64(0x000a_aaaa_5555_5555n), // positive subnormal with obvious pattern\n      reinterpretU64AsF64(0x0010_0000_0000_0001n), // smallest magnitude negative normal with non-zero mantissa\n      reinterpretU64AsF64(0x0010_0000_0000_0001n), // smallest magnitude positive normal with non-zero mantissa\n      reinterpretU64AsF64(0xf555_5555_aaaa_aaaan), // negative normal with obvious pattern\n      reinterpretU64AsF64(0x5555_5555_aaaa_aaaan), // positive normal with obvious pattern\n      reinterpretU64AsF64(0xffef_ffff_ffff_ffffn), // largest magnitude negative normal\n      reinterpretU64AsF64(0x7fef_ffff_ffff_ffffn), // largest magnitude positive normal\n      // WebGPU implementation stressing values\n      ...fullF64Range(),\n    ];\n    return inputs.map(f => {\n      return {\n        input: abstractFloat(f),\n        expected: isSubnormalNumberF64(f) ? abstractFloat(0) : abstractFloat(f),\n      };\n    });\n  },\n  f32: () => {\n    return filteredF64Range(kValue.f32.negative.min, kValue.f32.positive.max).map(f => {\n      return { input: abstractFloat(f), expected: FP.f32.correctlyRoundedInterval(f) };\n    });\n  },\n  f16: () => {\n    return filteredF64Range(kValue.f16.negative.min, kValue.f16.positive.max).map(f => {\n      return { input: abstractFloat(f), expected: FP.f16.correctlyRoundedInterval(f) };\n    });\n  },\n});\n\ng.test('abstract')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-conversion')\n  .desc(\n    `\ntesting that extracting abstract floats works\n`\n  )\n  .params(u => u.combine('inputSource', onlyConstInputSource))\n  .fn(async t => {\n    const cases = await d.get('abstract');\n    await run(t, abstract_assignment(), [TypeAbstractFloat], TypeAbstractFloat, t.params, cases, 1);\n  });\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-conversion')\n  .desc(\n    `\nconcretizing to f32\n`\n  )\n  .params(u => u.combine('inputSource', onlyConstInputSource))\n  .fn(async t => {\n    const cases = await d.get('f32');\n    await run(t, concrete_assignment(), [TypeAbstractFloat], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-conversion')\n  .desc(\n    `\nconcretizing to f16\n`\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .params(u => u.combine('inputSource', onlyConstInputSource))\n  .fn(async t => {\n    const cases = await d.get('f16');\n    await run(t, concrete_assignment(), [TypeAbstractFloat], TypeF16, t.params, cases);\n  });\n"],"mappings":"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"}