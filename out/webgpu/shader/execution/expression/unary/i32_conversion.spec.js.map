{"version":3,"file":"i32_conversion.spec.js","names":["description","makeTestGroup","GPUTest","kValue","bool","f32","f16","i32","TypeBool","TypeF32","TypeF16","TypeI32","TypeU32","u32","fullF32Range","fullF16Range","fullI32Range","fullU32Range","quantizeToF32","quantizeToF16","reinterpretU32AsI32","makeCaseCache","allInputSources","run","unary","g","d","input","expected","map","u","i","f","Math","abs","negative","min","positive","max","trunc","vectorizeToExpression","vectorize","undefined","test","specURL","desc","params","combine","fn","t","cases","get","beforeAllSubcases","selectDeviceOrSkipTestCase"],"sources":["../../../../../../src/webgpu/shader/execution/expression/unary/i32_conversion.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for the i32 conversion operations\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { kValue } from '../../../../util/constants.js';\nimport {\n  bool,\n  f32,\n  f16,\n  i32,\n  TypeBool,\n  TypeF32,\n  TypeF16,\n  TypeI32,\n  TypeU32,\n  u32,\n} from '../../../../util/conversion.js';\nimport {\n  fullF32Range,\n  fullF16Range,\n  fullI32Range,\n  fullU32Range,\n  quantizeToF32,\n  quantizeToF16,\n} from '../../../../util/math.js';\nimport { reinterpretU32AsI32 } from '../../../../util/reinterpret.js';\nimport { makeCaseCache } from '../case_cache.js';\nimport { allInputSources, run, ShaderBuilder } from '../expression.js';\n\nimport { unary } from './unary.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('unary/i32_conversion', {\n  bool: () => {\n    return [\n      { input: bool(true), expected: i32(1) },\n      { input: bool(false), expected: i32(0) },\n    ];\n  },\n  u32: () => {\n    return fullU32Range().map(u => {\n      return { input: u32(u), expected: i32(reinterpretU32AsI32(u)) };\n    });\n  },\n  i32: () => {\n    return fullI32Range().map(i => {\n      return { input: i32(i), expected: i32(i) };\n    });\n  },\n  f32: () => {\n    return fullF32Range().map(f => {\n      // Handles zeros and subnormals\n      if (Math.abs(f) < 1.0) {\n        return { input: f32(f), expected: i32(0) };\n      }\n\n      if (f <= kValue.i32.negative.min) {\n        return { input: f32(f), expected: i32(kValue.i32.negative.min) };\n      }\n\n      if (f >= kValue.i32.positive.max) {\n        return { input: f32(f), expected: i32(kValue.i32.positive.max) };\n      }\n\n      // All f32 no larger than 2^24 has a precise interger part and a fractional part, just need\n      // to trunc towards 0 for the result integer.\n      if (Math.abs(f) <= 2 ** 24) {\n        return { input: f32(f), expected: i32(Math.trunc(f)) };\n      }\n\n      // All f32s between 2 ** 24 and kValue.i32.negative.min/.positive.max are\n      // integers, so in theory one could use them directly, expect that number\n      // is actually f64 internally, so they need to be quantized to f32 first.\n      // Cannot just use trunc here, since that might produce a i32 value that\n      // is precise in f64, but not in f32.\n      return { input: f32(f), expected: i32(quantizeToF32(f)) };\n    });\n  },\n  f16: () => {\n    // Note that finite f16 values are always in range of i32.\n    return fullF16Range().map(f => {\n      // Handles zeros and subnormals\n      if (Math.abs(f) < 1.0) {\n        return { input: f16(f), expected: i32(0) };\n      }\n\n      // All f16 no larger than <= 2^12 has a precise interger part and a fractional part, just need\n      // to trunc towards 0 for the result integer.\n      if (Math.abs(f) <= 2 ** 12) {\n        return { input: f16(f), expected: i32(Math.trunc(f)) };\n      }\n\n      // All f16s larger than 2 ** 12 are integers, so in theory one could use them directly, expect\n      // that number is actually f64 internally, so they need to be quantized to f16 first.\n      // Cannot just use trunc here, since that might produce a i32 value that is precise in f64,\n      // but not in f16.\n      return { input: f16(f), expected: i32(quantizeToF16(f)) };\n    });\n  },\n});\n\n/** Generate a ShaderBuilder based on how the test case is to be vectorized */\nfunction vectorizeToExpression(vectorize: undefined | 2 | 3 | 4): ShaderBuilder {\n  return vectorize === undefined ? unary('i32') : unary(`vec${vectorize}<i32>`);\n}\n\ng.test('bool')\n  .specURL('https://www.w3.org/TR/WGSL/#value-constructor-builtin-function')\n  .desc(\n    `\ni32(e), where e is a bool\n\nThe result is 1u if e is true and 0u otherwise\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('bool');\n    await run(t, vectorizeToExpression(t.params.vectorize), [TypeBool], TypeI32, t.params, cases);\n  });\n\ng.test('u32')\n  .specURL('https://www.w3.org/TR/WGSL/#bool-builtin')\n  .desc(\n    `\ni32(e), where e is a u32\n\nReinterpretation of bits\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('u32');\n    await run(t, vectorizeToExpression(t.params.vectorize), [TypeU32], TypeI32, t.params, cases);\n  });\n\ng.test('i32')\n  .specURL('https://www.w3.org/TR/WGSL/#value-constructor-builtin-function')\n  .desc(\n    `\ni32(e), where e is a i32\n\nIdentity operation\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('i32');\n    await run(t, vectorizeToExpression(t.params.vectorize), [TypeI32], TypeI32, t.params, cases);\n  });\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#value-constructor-builtin-function')\n  .desc(\n    `\ni32(e), where e is a f32\n\ne is converted to i32, rounding towards zero\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('f32');\n    await run(t, vectorizeToExpression(t.params.vectorize), [TypeF32], TypeI32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#value-constructor-builtin-function')\n  .desc(\n    `\ni32(e), where e is a f16\n\ne is converted to u32, rounding towards zero\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  })\n  .fn(async t => {\n    const cases = await d.get('f16');\n    await run(t, vectorizeToExpression(t.params.vectorize), [TypeF16], TypeI32, t.params, cases);\n  });\n"],"mappings":"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"}