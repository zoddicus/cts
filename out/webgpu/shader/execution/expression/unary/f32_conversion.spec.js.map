{"version":3,"file":"f32_conversion.spec.js","names":["description","makeTestGroup","GPUTest","bool","f32","i32","TypeBool","TypeF32","TypeI32","TypeMat","TypeU32","u32","FP","fullF32Range","fullI32Range","fullU32Range","sparseMatrixF32Range","makeCaseCache","allInputSources","run","unary","g","d","input","expected","map","u","correctlyRoundedInterval","i","f","f32_mat2x2_const","generateMatrixToMatrixCases","correctlyRoundedMatrix","f32_mat2x2_non_const","f32_mat2x3_const","f32_mat2x3_non_const","f32_mat2x4_const","f32_mat2x4_non_const","f32_mat3x2_const","f32_mat3x2_non_const","f32_mat3x3_const","f32_mat3x3_non_const","f32_mat3x4_const","f32_mat3x4_non_const","f32_mat4x2_const","f32_mat4x2_non_const","f32_mat4x3_const","f32_mat4x3_non_const","f32_mat4x4_const","f32_mat4x4_non_const","vectorizeToExpression","vectorize","undefined","matrixExperession","cols","rows","test","specURL","desc","params","combine","fn","t","cases","get","inputSource","unimplemented"],"sources":["../../../../../../src/webgpu/shader/execution/expression/unary/f32_conversion.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for the f32 conversion operations\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport {\n  bool,\n  f32,\n  i32,\n  TypeBool,\n  TypeF32,\n  TypeI32,\n  TypeMat,\n  TypeU32,\n  u32,\n} from '../../../../util/conversion.js';\nimport { FP } from '../../../../util/floating_point.js';\nimport {\n  fullF32Range,\n  fullI32Range,\n  fullU32Range,\n  sparseMatrixF32Range,\n} from '../../../../util/math.js';\nimport { makeCaseCache } from '../case_cache.js';\nimport { allInputSources, run, ShaderBuilder } from '../expression.js';\n\nimport { unary } from './unary.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('unary/f32_conversion', {\n  bool: () => {\n    return [\n      { input: bool(true), expected: f32(1.0) },\n      { input: bool(false), expected: f32(0.0) },\n    ];\n  },\n  u32: () => {\n    return fullU32Range().map(u => {\n      return { input: u32(u), expected: FP.f32.correctlyRoundedInterval(u) };\n    });\n  },\n  i32: () => {\n    return fullI32Range().map(i => {\n      return { input: i32(i), expected: FP.f32.correctlyRoundedInterval(i) };\n    });\n  },\n  f32: () => {\n    return fullF32Range().map(f => {\n      return { input: f32(f), expected: FP.f32.correctlyRoundedInterval(f) };\n    });\n  },\n  f32_mat2x2_const: () => {\n    return FP.f32.generateMatrixToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      'finite',\n      FP.f32.correctlyRoundedMatrix\n    );\n  },\n  f32_mat2x2_non_const: () => {\n    return FP.f32.generateMatrixToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      'unfiltered',\n      FP.f32.correctlyRoundedMatrix\n    );\n  },\n  f32_mat2x3_const: () => {\n    return FP.f32.generateMatrixToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      'finite',\n      FP.f32.correctlyRoundedMatrix\n    );\n  },\n  f32_mat2x3_non_const: () => {\n    return FP.f32.generateMatrixToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      'unfiltered',\n      FP.f32.correctlyRoundedMatrix\n    );\n  },\n  f32_mat2x4_const: () => {\n    return FP.f32.generateMatrixToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      'finite',\n      FP.f32.correctlyRoundedMatrix\n    );\n  },\n  f32_mat2x4_non_const: () => {\n    return FP.f32.generateMatrixToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      'unfiltered',\n      FP.f32.correctlyRoundedMatrix\n    );\n  },\n  f32_mat3x2_const: () => {\n    return FP.f32.generateMatrixToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      'finite',\n      FP.f32.correctlyRoundedMatrix\n    );\n  },\n  f32_mat3x2_non_const: () => {\n    return FP.f32.generateMatrixToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      'unfiltered',\n      FP.f32.correctlyRoundedMatrix\n    );\n  },\n  f32_mat3x3_const: () => {\n    return FP.f32.generateMatrixToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      'finite',\n      FP.f32.correctlyRoundedMatrix\n    );\n  },\n  f32_mat3x3_non_const: () => {\n    return FP.f32.generateMatrixToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      'unfiltered',\n      FP.f32.correctlyRoundedMatrix\n    );\n  },\n  f32_mat3x4_const: () => {\n    return FP.f32.generateMatrixToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      'finite',\n      FP.f32.correctlyRoundedMatrix\n    );\n  },\n  f32_mat3x4_non_const: () => {\n    return FP.f32.generateMatrixToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      'unfiltered',\n      FP.f32.correctlyRoundedMatrix\n    );\n  },\n  f32_mat4x2_const: () => {\n    return FP.f32.generateMatrixToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      'finite',\n      FP.f32.correctlyRoundedMatrix\n    );\n  },\n  f32_mat4x2_non_const: () => {\n    return FP.f32.generateMatrixToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      'unfiltered',\n      FP.f32.correctlyRoundedMatrix\n    );\n  },\n  f32_mat4x3_const: () => {\n    return FP.f32.generateMatrixToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      'finite',\n      FP.f32.correctlyRoundedMatrix\n    );\n  },\n  f32_mat4x3_non_const: () => {\n    return FP.f32.generateMatrixToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      'unfiltered',\n      FP.f32.correctlyRoundedMatrix\n    );\n  },\n  f32_mat4x4_const: () => {\n    return FP.f32.generateMatrixToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      'finite',\n      FP.f32.correctlyRoundedMatrix\n    );\n  },\n  f32_mat4x4_non_const: () => {\n    return FP.f32.generateMatrixToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      'unfiltered',\n      FP.f32.correctlyRoundedMatrix\n    );\n  },\n});\n\n/** Generate a ShaderBuilder based on how the test case is to be vectorized */\nfunction vectorizeToExpression(vectorize: undefined | 2 | 3 | 4): ShaderBuilder {\n  return vectorize === undefined ? unary('f32') : unary(`vec${vectorize}<f32>`);\n}\n\n/** Generate a ShaderBuilder for a matrix of the provided dimensions */\nfunction matrixExperession(cols: number, rows: number): ShaderBuilder {\n  return unary(`mat${cols}x${rows}<f32>`);\n}\n\ng.test('bool')\n  .specURL('https://www.w3.org/TR/WGSL/#value-constructor-builtin-function')\n  .desc(\n    `\nf32(e), where e is a bool\n\nThe result is 1.0 if e is true and 0.0 otherwise\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('bool');\n    await run(t, vectorizeToExpression(t.params.vectorize), [TypeBool], TypeF32, t.params, cases);\n  });\n\ng.test('u32')\n  .specURL('https://www.w3.org/TR/WGSL/#bool-builtin')\n  .desc(\n    `\nf32(e), where e is a u32\n\nConverted to f32\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('u32');\n    await run(t, vectorizeToExpression(t.params.vectorize), [TypeU32], TypeF32, t.params, cases);\n  });\n\ng.test('i32')\n  .specURL('https://www.w3.org/TR/WGSL/#value-constructor-builtin-function')\n  .desc(\n    `\nf32(e), where e is a i32\n\nConverted to f32\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('i32');\n    await run(t, vectorizeToExpression(t.params.vectorize), [TypeI32], TypeF32, t.params, cases);\n  });\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#value-constructor-builtin-function')\n  .desc(\n    `\nf32(e), where e is a f32\n\nIdentity operation\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('f32');\n    await run(t, vectorizeToExpression(t.params.vectorize), [TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f32_mat')\n  .specURL('https://www.w3.org/TR/WGSL/#matrix-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `f32_mat${cols}x${rows}_const`\n        : `f32_mat${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      matrixExperession(cols, rows),\n      [TypeMat(cols, rows, TypeF32)],\n      TypeMat(cols, rows, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#value-constructor-builtin-function')\n  .desc(\n    `\ni32(e), where e is a f16\n\ne is converted to u32, rounding towards zero\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n"],"mappings":"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"}