{"version":3,"file":"f32_matrix_vector_multiplication.spec.js","names":["description","makeTestGroup","GPUTest","TypeF32","TypeMat","TypeVec","FP","sparseMatrixF32Range","sparseVectorF32Range","makeCaseCache","allInputSources","run","binary","compoundBinary","g","d","mat2x2_vec2_const","f32","generateMatrixVectorToVectorCases","multiplicationMatrixVectorInterval","mat2x2_vec2_non_const","mat2x3_vec2_const","mat2x3_vec2_non_const","mat2x4_vec2_const","mat2x4_vec2_non_const","mat3x2_vec3_const","mat3x2_vec3_non_const","mat3x3_vec3_const","mat3x3_vec3_non_const","mat3x4_vec3_const","mat3x4_vec3_non_const","mat4x2_vec4_const","mat4x2_vec4_non_const","mat4x3_vec4_const","mat4x3_vec4_non_const","mat4x4_vec4_const","mat4x4_vec4_non_const","vec2_mat2x2_const","generateVectorMatrixToVectorCases","multiplicationVectorMatrixInterval","vec2_mat2x2_non_const","vec2_mat3x2_const","vec2_mat3x2_non_const","vec2_mat4x2_const","vec2_mat4x2_non_const","vec3_mat2x3_const","vec3_mat2x3_non_const","vec3_mat3x3_const","vec3_mat3x3_non_const","vec3_mat4x3_const","vec3_mat4x3_non_const","vec4_mat2x4_const","vec4_mat2x4_non_const","vec4_mat3x4_const","vec4_mat3x4_non_const","vec4_mat4x4_const","vec4_mat4x4_non_const","subtraction_mat2x2_const","generateMatrixPairToMatrixCases","subtractionMatrixMatrixInterval","subtraction_mat2x2_non_const","test","specURL","desc","params","u","combine","fn","t","cols","rows","cases","get","inputSource","dim"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/f32_matrix_vector_multiplication.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for matrix-vector and vector-matrix f32 multiplication expression\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { TypeF32, TypeMat, TypeVec } from '../../../../util/conversion.js';\nimport { FP } from '../../../../util/floating_point.js';\nimport { sparseMatrixF32Range, sparseVectorF32Range } from '../../../../util/math.js';\nimport { makeCaseCache } from '../case_cache.js';\nimport { allInputSources, run } from '../expression.js';\n\nimport { binary, compoundBinary } from './binary.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('binary/f32_matrix_vector_multiplication', {\n  mat2x2_vec2_const: () => {\n    return FP.f32.generateMatrixVectorToVectorCases(\n      sparseMatrixF32Range(2, 2),\n      sparseVectorF32Range(2),\n      'finite',\n      FP.f32.multiplicationMatrixVectorInterval\n    );\n  },\n  mat2x2_vec2_non_const: () => {\n    return FP.f32.generateMatrixVectorToVectorCases(\n      sparseMatrixF32Range(2, 2),\n      sparseVectorF32Range(2),\n      'unfiltered',\n      FP.f32.multiplicationMatrixVectorInterval\n    );\n  },\n  mat2x3_vec2_const: () => {\n    return FP.f32.generateMatrixVectorToVectorCases(\n      sparseMatrixF32Range(2, 3),\n      sparseVectorF32Range(2),\n      'finite',\n      FP.f32.multiplicationMatrixVectorInterval\n    );\n  },\n  mat2x3_vec2_non_const: () => {\n    return FP.f32.generateMatrixVectorToVectorCases(\n      sparseMatrixF32Range(2, 3),\n      sparseVectorF32Range(2),\n      'unfiltered',\n      FP.f32.multiplicationMatrixVectorInterval\n    );\n  },\n  mat2x4_vec2_const: () => {\n    return FP.f32.generateMatrixVectorToVectorCases(\n      sparseMatrixF32Range(2, 4),\n      sparseVectorF32Range(2),\n      'finite',\n      FP.f32.multiplicationMatrixVectorInterval\n    );\n  },\n  mat2x4_vec2_non_const: () => {\n    return FP.f32.generateMatrixVectorToVectorCases(\n      sparseMatrixF32Range(2, 4),\n      sparseVectorF32Range(2),\n      'unfiltered',\n      FP.f32.multiplicationMatrixVectorInterval\n    );\n  },\n  mat3x2_vec3_const: () => {\n    return FP.f32.generateMatrixVectorToVectorCases(\n      sparseMatrixF32Range(3, 2),\n      sparseVectorF32Range(3),\n      'finite',\n      FP.f32.multiplicationMatrixVectorInterval\n    );\n  },\n  mat3x2_vec3_non_const: () => {\n    return FP.f32.generateMatrixVectorToVectorCases(\n      sparseMatrixF32Range(3, 2),\n      sparseVectorF32Range(3),\n      'unfiltered',\n      FP.f32.multiplicationMatrixVectorInterval\n    );\n  },\n  mat3x3_vec3_const: () => {\n    return FP.f32.generateMatrixVectorToVectorCases(\n      sparseMatrixF32Range(3, 3),\n      sparseVectorF32Range(3),\n      'finite',\n      FP.f32.multiplicationMatrixVectorInterval\n    );\n  },\n  mat3x3_vec3_non_const: () => {\n    return FP.f32.generateMatrixVectorToVectorCases(\n      sparseMatrixF32Range(3, 3),\n      sparseVectorF32Range(3),\n      'unfiltered',\n      FP.f32.multiplicationMatrixVectorInterval\n    );\n  },\n  mat3x4_vec3_const: () => {\n    return FP.f32.generateMatrixVectorToVectorCases(\n      sparseMatrixF32Range(3, 4),\n      sparseVectorF32Range(3),\n      'finite',\n      FP.f32.multiplicationMatrixVectorInterval\n    );\n  },\n  mat3x4_vec3_non_const: () => {\n    return FP.f32.generateMatrixVectorToVectorCases(\n      sparseMatrixF32Range(3, 4),\n      sparseVectorF32Range(3),\n      'unfiltered',\n      FP.f32.multiplicationMatrixVectorInterval\n    );\n  },\n  mat4x2_vec4_const: () => {\n    return FP.f32.generateMatrixVectorToVectorCases(\n      sparseMatrixF32Range(4, 2),\n      sparseVectorF32Range(4),\n      'finite',\n      FP.f32.multiplicationMatrixVectorInterval\n    );\n  },\n  mat4x2_vec4_non_const: () => {\n    return FP.f32.generateMatrixVectorToVectorCases(\n      sparseMatrixF32Range(4, 2),\n      sparseVectorF32Range(4),\n      'unfiltered',\n      FP.f32.multiplicationMatrixVectorInterval\n    );\n  },\n  mat4x3_vec4_const: () => {\n    return FP.f32.generateMatrixVectorToVectorCases(\n      sparseMatrixF32Range(4, 3),\n      sparseVectorF32Range(4),\n      'finite',\n      FP.f32.multiplicationMatrixVectorInterval\n    );\n  },\n  mat4x3_vec4_non_const: () => {\n    return FP.f32.generateMatrixVectorToVectorCases(\n      sparseMatrixF32Range(4, 3),\n      sparseVectorF32Range(4),\n      'unfiltered',\n      FP.f32.multiplicationMatrixVectorInterval\n    );\n  },\n  mat4x4_vec4_const: () => {\n    return FP.f32.generateMatrixVectorToVectorCases(\n      sparseMatrixF32Range(4, 4),\n      sparseVectorF32Range(4),\n      'finite',\n      FP.f32.multiplicationMatrixVectorInterval\n    );\n  },\n  mat4x4_vec4_non_const: () => {\n    return FP.f32.generateMatrixVectorToVectorCases(\n      sparseMatrixF32Range(4, 4),\n      sparseVectorF32Range(4),\n      'unfiltered',\n      FP.f32.multiplicationMatrixVectorInterval\n    );\n  },\n  vec2_mat2x2_const: () => {\n    return FP.f32.generateVectorMatrixToVectorCases(\n      sparseVectorF32Range(2),\n      sparseMatrixF32Range(2, 2),\n      'finite',\n      FP.f32.multiplicationVectorMatrixInterval\n    );\n  },\n  vec2_mat2x2_non_const: () => {\n    return FP.f32.generateVectorMatrixToVectorCases(\n      sparseVectorF32Range(2),\n      sparseMatrixF32Range(2, 2),\n      'unfiltered',\n      FP.f32.multiplicationVectorMatrixInterval\n    );\n  },\n  vec2_mat3x2_const: () => {\n    return FP.f32.generateVectorMatrixToVectorCases(\n      sparseVectorF32Range(2),\n      sparseMatrixF32Range(3, 2),\n      'finite',\n      FP.f32.multiplicationVectorMatrixInterval\n    );\n  },\n  vec2_mat3x2_non_const: () => {\n    return FP.f32.generateVectorMatrixToVectorCases(\n      sparseVectorF32Range(2),\n      sparseMatrixF32Range(3, 2),\n      'unfiltered',\n      FP.f32.multiplicationVectorMatrixInterval\n    );\n  },\n  vec2_mat4x2_const: () => {\n    return FP.f32.generateVectorMatrixToVectorCases(\n      sparseVectorF32Range(2),\n      sparseMatrixF32Range(4, 2),\n      'finite',\n      FP.f32.multiplicationVectorMatrixInterval\n    );\n  },\n  vec2_mat4x2_non_const: () => {\n    return FP.f32.generateVectorMatrixToVectorCases(\n      sparseVectorF32Range(2),\n      sparseMatrixF32Range(4, 2),\n      'unfiltered',\n      FP.f32.multiplicationVectorMatrixInterval\n    );\n  },\n  vec3_mat2x3_const: () => {\n    return FP.f32.generateVectorMatrixToVectorCases(\n      sparseVectorF32Range(3),\n      sparseMatrixF32Range(2, 3),\n      'finite',\n      FP.f32.multiplicationVectorMatrixInterval\n    );\n  },\n  vec3_mat2x3_non_const: () => {\n    return FP.f32.generateVectorMatrixToVectorCases(\n      sparseVectorF32Range(3),\n      sparseMatrixF32Range(2, 3),\n      'unfiltered',\n      FP.f32.multiplicationVectorMatrixInterval\n    );\n  },\n  vec3_mat3x3_const: () => {\n    return FP.f32.generateVectorMatrixToVectorCases(\n      sparseVectorF32Range(3),\n      sparseMatrixF32Range(3, 3),\n      'finite',\n      FP.f32.multiplicationVectorMatrixInterval\n    );\n  },\n  vec3_mat3x3_non_const: () => {\n    return FP.f32.generateVectorMatrixToVectorCases(\n      sparseVectorF32Range(3),\n      sparseMatrixF32Range(3, 3),\n      'unfiltered',\n      FP.f32.multiplicationVectorMatrixInterval\n    );\n  },\n  vec3_mat4x3_const: () => {\n    return FP.f32.generateVectorMatrixToVectorCases(\n      sparseVectorF32Range(3),\n      sparseMatrixF32Range(4, 3),\n      'finite',\n      FP.f32.multiplicationVectorMatrixInterval\n    );\n  },\n  vec3_mat4x3_non_const: () => {\n    return FP.f32.generateVectorMatrixToVectorCases(\n      sparseVectorF32Range(3),\n      sparseMatrixF32Range(4, 3),\n      'unfiltered',\n      FP.f32.multiplicationVectorMatrixInterval\n    );\n  },\n  vec4_mat2x4_const: () => {\n    return FP.f32.generateVectorMatrixToVectorCases(\n      sparseVectorF32Range(4),\n      sparseMatrixF32Range(2, 4),\n      'finite',\n      FP.f32.multiplicationVectorMatrixInterval\n    );\n  },\n  vec4_mat2x4_non_const: () => {\n    return FP.f32.generateVectorMatrixToVectorCases(\n      sparseVectorF32Range(4),\n      sparseMatrixF32Range(2, 4),\n      'unfiltered',\n      FP.f32.multiplicationVectorMatrixInterval\n    );\n  },\n  vec4_mat3x4_const: () => {\n    return FP.f32.generateVectorMatrixToVectorCases(\n      sparseVectorF32Range(4),\n      sparseMatrixF32Range(3, 4),\n      'finite',\n      FP.f32.multiplicationVectorMatrixInterval\n    );\n  },\n  vec4_mat3x4_non_const: () => {\n    return FP.f32.generateVectorMatrixToVectorCases(\n      sparseVectorF32Range(4),\n      sparseMatrixF32Range(3, 4),\n      'unfiltered',\n      FP.f32.multiplicationVectorMatrixInterval\n    );\n  },\n  vec4_mat4x4_const: () => {\n    return FP.f32.generateVectorMatrixToVectorCases(\n      sparseVectorF32Range(4),\n      sparseMatrixF32Range(4, 4),\n      'finite',\n      FP.f32.multiplicationVectorMatrixInterval\n    );\n  },\n  vec4_mat4x4_non_const: () => {\n    return FP.f32.generateVectorMatrixToVectorCases(\n      sparseVectorF32Range(4),\n      sparseMatrixF32Range(4, 4),\n      'unfiltered',\n      FP.f32.multiplicationVectorMatrixInterval\n    );\n  },\n  subtraction_mat2x2_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(2, 2),\n      'finite',\n      FP.f32.subtractionMatrixMatrixInterval\n    );\n  },\n  subtraction_mat2x2_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(2, 2),\n      'unfiltered',\n      FP.f32.subtractionMatrixMatrixInterval\n    );\n  },\n});\n\ng.test('matrix_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x is a matrix and y is a vector\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `mat${cols}x${rows}_vec${cols}_const`\n        : `mat${cols}x${rows}_vec${cols}_non_const`\n    );\n    await run(\n      t,\n      binary('*'),\n      [TypeMat(cols, rows, TypeF32), TypeVec(cols, TypeF32)],\n      TypeVec(rows, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('vector_matrix')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x is a vector and y is is a matrix\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `vec${rows}_mat${cols}x${rows}_const`\n        : `vec${rows}_mat${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      binary('*'),\n      [TypeVec(rows, TypeF32), TypeMat(cols, rows, TypeF32)],\n      TypeVec(cols, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('vector_matrix_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x *= y, where x is a vector and y is is a matrix\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const cols = t.params.dim;\n    const rows = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `vec${rows}_mat${cols}x${rows}_const`\n        : `vec${rows}_mat${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      compoundBinary('*='),\n      [TypeVec(rows, TypeF32), TypeMat(cols, rows, TypeF32)],\n      TypeVec(cols, TypeF32),\n      t.params,\n      cases\n    );\n  });\n"],"mappings":"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"}