{"version":3,"file":"f32_matrix_scalar_multiplication.spec.js","names":["description","makeTestGroup","GPUTest","TypeF32","TypeMat","FP","sparseF32Range","sparseMatrixF32Range","makeCaseCache","allInputSources","run","binary","compoundBinary","g","d","mat2x2_scalar_const","f32","generateMatrixScalarToMatrixCases","multiplicationMatrixScalarInterval","mat2x2_scalar_non_const","mat2x3_scalar_const","mat2x3_scalar_non_const","mat2x4_scalar_const","mat2x4_scalar_non_const","mat3x2_scalar_const","mat3x2_scalar_non_const","mat3x3_scalar_const","mat3x3_scalar_non_const","mat3x4_scalar_const","mat3x4_scalar_non_const","mat4x2_scalar_const","mat4x2_scalar_non_const","mat4x3_scalar_const","mat4x3_scalar_non_const","mat4x4_scalar_const","mat4x4_scalar_non_const","scalar_mat2x2_const","generateScalarMatrixToMatrixCases","multiplicationScalarMatrixInterval","scalar_mat2x2_non_const","scalar_mat2x3_const","scalar_mat2x3_non_const","scalar_mat2x4_const","scalar_mat2x4_non_const","scalar_mat3x2_const","scalar_mat3x2_non_const","scalar_mat3x3_const","scalar_mat3x3_non_const","scalar_mat3x4_const","scalar_mat3x4_non_const","scalar_mat4x2_const","scalar_mat4x2_non_const","scalar_mat4x3_const","scalar_mat4x3_non_const","scalar_mat4x4_const","scalar_mat4x4_non_const","test","specURL","desc","params","u","combine","fn","t","cols","rows","cases","get","inputSource"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/f32_matrix_scalar_multiplication.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for matrix-scalar and scalar-matrix f32 multiplication expression\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { TypeF32, TypeMat } from '../../../../util/conversion.js';\nimport { FP } from '../../../../util/floating_point.js';\nimport { sparseF32Range, sparseMatrixF32Range } from '../../../../util/math.js';\nimport { makeCaseCache } from '../case_cache.js';\nimport { allInputSources, run } from '../expression.js';\n\nimport { binary, compoundBinary } from './binary.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('binary/f32_matrix_scalar_multiplication', {\n  mat2x2_scalar_const: () => {\n    return FP.f32.generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseF32Range(),\n      'finite',\n      FP.f32.multiplicationMatrixScalarInterval\n    );\n  },\n  mat2x2_scalar_non_const: () => {\n    return FP.f32.generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseF32Range(),\n      'unfiltered',\n      FP.f32.multiplicationMatrixScalarInterval\n    );\n  },\n  mat2x3_scalar_const: () => {\n    return FP.f32.generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseF32Range(),\n      'finite',\n      FP.f32.multiplicationMatrixScalarInterval\n    );\n  },\n  mat2x3_scalar_non_const: () => {\n    return FP.f32.generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseF32Range(),\n      'unfiltered',\n      FP.f32.multiplicationMatrixScalarInterval\n    );\n  },\n  mat2x4_scalar_const: () => {\n    return FP.f32.generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseF32Range(),\n      'finite',\n      FP.f32.multiplicationMatrixScalarInterval\n    );\n  },\n  mat2x4_scalar_non_const: () => {\n    return FP.f32.generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseF32Range(),\n      'unfiltered',\n      FP.f32.multiplicationMatrixScalarInterval\n    );\n  },\n  mat3x2_scalar_const: () => {\n    return FP.f32.generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseF32Range(),\n      'finite',\n      FP.f32.multiplicationMatrixScalarInterval\n    );\n  },\n  mat3x2_scalar_non_const: () => {\n    return FP.f32.generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseF32Range(),\n      'unfiltered',\n      FP.f32.multiplicationMatrixScalarInterval\n    );\n  },\n  mat3x3_scalar_const: () => {\n    return FP.f32.generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseF32Range(),\n      'finite',\n      FP.f32.multiplicationMatrixScalarInterval\n    );\n  },\n  mat3x3_scalar_non_const: () => {\n    return FP.f32.generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseF32Range(),\n      'unfiltered',\n      FP.f32.multiplicationMatrixScalarInterval\n    );\n  },\n  mat3x4_scalar_const: () => {\n    return FP.f32.generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseF32Range(),\n      'finite',\n      FP.f32.multiplicationMatrixScalarInterval\n    );\n  },\n  mat3x4_scalar_non_const: () => {\n    return FP.f32.generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseF32Range(),\n      'unfiltered',\n      FP.f32.multiplicationMatrixScalarInterval\n    );\n  },\n  mat4x2_scalar_const: () => {\n    return FP.f32.generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseF32Range(),\n      'finite',\n      FP.f32.multiplicationMatrixScalarInterval\n    );\n  },\n  mat4x2_scalar_non_const: () => {\n    return FP.f32.generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseF32Range(),\n      'unfiltered',\n      FP.f32.multiplicationMatrixScalarInterval\n    );\n  },\n  mat4x3_scalar_const: () => {\n    return FP.f32.generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseF32Range(),\n      'finite',\n      FP.f32.multiplicationMatrixScalarInterval\n    );\n  },\n  mat4x3_scalar_non_const: () => {\n    return FP.f32.generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseF32Range(),\n      'unfiltered',\n      FP.f32.multiplicationMatrixScalarInterval\n    );\n  },\n  mat4x4_scalar_const: () => {\n    return FP.f32.generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseF32Range(),\n      'finite',\n      FP.f32.multiplicationMatrixScalarInterval\n    );\n  },\n  mat4x4_scalar_non_const: () => {\n    return FP.f32.generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseF32Range(),\n      'unfiltered',\n      FP.f32.multiplicationMatrixScalarInterval\n    );\n  },\n  scalar_mat2x2_const: () => {\n    return FP.f32.generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(2, 2),\n      'finite',\n      FP.f32.multiplicationScalarMatrixInterval\n    );\n  },\n  scalar_mat2x2_non_const: () => {\n    return FP.f32.generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(2, 2),\n      'unfiltered',\n      FP.f32.multiplicationScalarMatrixInterval\n    );\n  },\n  scalar_mat2x3_const: () => {\n    return FP.f32.generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(2, 3),\n      'finite',\n      FP.f32.multiplicationScalarMatrixInterval\n    );\n  },\n  scalar_mat2x3_non_const: () => {\n    return FP.f32.generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(2, 3),\n      'unfiltered',\n      FP.f32.multiplicationScalarMatrixInterval\n    );\n  },\n  scalar_mat2x4_const: () => {\n    return FP.f32.generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(2, 4),\n      'finite',\n      FP.f32.multiplicationScalarMatrixInterval\n    );\n  },\n  scalar_mat2x4_non_const: () => {\n    return FP.f32.generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(2, 4),\n      'unfiltered',\n      FP.f32.multiplicationScalarMatrixInterval\n    );\n  },\n  scalar_mat3x2_const: () => {\n    return FP.f32.generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(3, 2),\n      'finite',\n      FP.f32.multiplicationScalarMatrixInterval\n    );\n  },\n  scalar_mat3x2_non_const: () => {\n    return FP.f32.generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(3, 2),\n      'unfiltered',\n      FP.f32.multiplicationScalarMatrixInterval\n    );\n  },\n  scalar_mat3x3_const: () => {\n    return FP.f32.generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(3, 3),\n      'finite',\n      FP.f32.multiplicationScalarMatrixInterval\n    );\n  },\n  scalar_mat3x3_non_const: () => {\n    return FP.f32.generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(3, 3),\n      'unfiltered',\n      FP.f32.multiplicationScalarMatrixInterval\n    );\n  },\n  scalar_mat3x4_const: () => {\n    return FP.f32.generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(3, 4),\n      'finite',\n      FP.f32.multiplicationScalarMatrixInterval\n    );\n  },\n  scalar_mat3x4_non_const: () => {\n    return FP.f32.generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(3, 4),\n      'unfiltered',\n      FP.f32.multiplicationScalarMatrixInterval\n    );\n  },\n  scalar_mat4x2_const: () => {\n    return FP.f32.generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(4, 2),\n      'finite',\n      FP.f32.multiplicationScalarMatrixInterval\n    );\n  },\n  scalar_mat4x2_non_const: () => {\n    return FP.f32.generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(4, 2),\n      'unfiltered',\n      FP.f32.multiplicationScalarMatrixInterval\n    );\n  },\n  scalar_mat4x3_const: () => {\n    return FP.f32.generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(4, 3),\n      'finite',\n      FP.f32.multiplicationScalarMatrixInterval\n    );\n  },\n  scalar_mat4x3_non_const: () => {\n    return FP.f32.generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(4, 3),\n      'unfiltered',\n      FP.f32.multiplicationScalarMatrixInterval\n    );\n  },\n  scalar_mat4x4_const: () => {\n    return FP.f32.generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(4, 4),\n      'finite',\n      FP.f32.multiplicationScalarMatrixInterval\n    );\n  },\n  scalar_mat4x4_non_const: () => {\n    return FP.f32.generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(4, 4),\n      'unfiltered',\n      FP.f32.multiplicationScalarMatrixInterval\n    );\n  },\n});\n\ng.test('matrix_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x is a matrix and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `mat${cols}x${rows}_scalar_const`\n        : `mat${cols}x${rows}_scalar_non_const`\n    );\n    await run(\n      t,\n      binary('*'),\n      [TypeMat(cols, rows, TypeF32), TypeF32],\n      TypeMat(cols, rows, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('matrix_scalar_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x *= y, where x is a matrix and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `mat${cols}x${rows}_scalar_const`\n        : `mat${cols}x${rows}_scalar_non_const`\n    );\n    await run(\n      t,\n      compoundBinary('*='),\n      [TypeMat(cols, rows, TypeF32), TypeF32],\n      TypeMat(cols, rows, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('scalar_matrix')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x is a scalar and y is a matrix\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `scalar_mat${cols}x${rows}_const`\n        : `scalar_mat${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      binary('*'),\n      [TypeF32, TypeMat(cols, rows, TypeF32)],\n      TypeMat(cols, rows, TypeF32),\n      t.params,\n      cases\n    );\n  });\n"],"mappings":"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"}