{"version":3,"file":"af_matrix_scalar_multiplication.cache.js","names":["FP","flatten2DArray","sparseScalarF64Range","unflatten2DArray","selectNCases","makeCaseCache","getMultiplicationAFInterval","kSparseMatrixAFValues","multiplicationMatrixScalarInterval","mat","s","cols","length","rows","abstract","toMatrix","map","e","multiplicationScalarMatrixInterval","mat_scalar_cases","flatMap","generateMatrixScalarToMatrixCases","reduce","a","b","scalar_mat_cases","generateScalarMatrixToMatrixCases","d"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/af_matrix_scalar_multiplication.cache.ts"],"sourcesContent":["import { ROArrayArray } from '../../../../../common/util/types.js';\nimport { FP, FPMatrix } from '../../../../util/floating_point.js';\nimport { flatten2DArray, sparseScalarF64Range, unflatten2DArray } from '../../../../util/math.js';\nimport { selectNCases } from '../case.js';\nimport { makeCaseCache } from '../case_cache.js';\n\nimport { getMultiplicationAFInterval, kSparseMatrixAFValues } from './af_data.js';\n\nconst multiplicationMatrixScalarInterval = (mat: ROArrayArray<number>, s: number): FPMatrix => {\n  const cols = mat.length;\n  const rows = mat[0].length;\n  return FP.abstract.toMatrix(\n    unflatten2DArray(\n      flatten2DArray(mat).map(e => getMultiplicationAFInterval(e, s)),\n      cols,\n      rows\n    )\n  );\n};\n\nconst multiplicationScalarMatrixInterval = (s: number, mat: ROArrayArray<number>): FPMatrix => {\n  const cols = mat.length;\n  const rows = mat[0].length;\n  return FP.abstract.toMatrix(\n    unflatten2DArray(\n      flatten2DArray(mat).map(e => getMultiplicationAFInterval(s, e)),\n      cols,\n      rows\n    )\n  );\n};\n\n// Cases: matCxR_scalar\nconst mat_scalar_cases = ([2, 3, 4] as const)\n  .flatMap(cols =>\n    ([2, 3, 4] as const).map(rows => ({\n      [`mat${cols}x${rows}_scalar`]: () => {\n        return selectNCases(\n          'binary/af_matrix_scalar_multiplication_mat_scalar',\n          50,\n          FP.abstract.generateMatrixScalarToMatrixCases(\n            kSparseMatrixAFValues[cols][rows],\n            sparseScalarF64Range(),\n            'finite',\n            multiplicationMatrixScalarInterval\n          )\n        );\n      },\n    }))\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\n// Cases: scalar_matCxR\nconst scalar_mat_cases = ([2, 3, 4] as const)\n  .flatMap(cols =>\n    ([2, 3, 4] as const).map(rows => ({\n      [`scalar_mat${cols}x${rows}`]: () => {\n        return selectNCases(\n          'binary/af_matrix_scalar_multiplication_scalar_mat',\n          50,\n          FP.abstract.generateScalarMatrixToMatrixCases(\n            sparseScalarF64Range(),\n            kSparseMatrixAFValues[cols][rows],\n            'finite',\n            multiplicationScalarMatrixInterval\n          )\n        );\n      },\n    }))\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('binary/af_matrix_scalar_multiplication', {\n  ...mat_scalar_cases,\n  ...scalar_mat_cases,\n});\n"],"mappings":"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"}