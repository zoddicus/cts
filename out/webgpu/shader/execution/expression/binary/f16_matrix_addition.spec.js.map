{"version":3,"file":"f16_matrix_addition.spec.js","names":["description","makeTestGroup","GPUTest","Type","allInputSources","run","binary","compoundBinary","d","g","test","specURL","desc","params","u","combine","beforeAllSubcases","t","selectDeviceOrSkipTestCase","requiredFeatures","fn","cols","rows","cases","get","inputSource","mat","f16"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/f16_matrix_addition.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for matrix f16 addition expression\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { Type } from '../../../../util/conversion.js';\nimport { allInputSources, run } from '../expression.js';\n\nimport { binary, compoundBinary } from './binary.js';\nimport { d } from './f16_matrix_addition.cache.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('matrix')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x + y, where x and y are matrices\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? `mat${cols}x${rows}_const` : `mat${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      binary('+'),\n      [Type.mat(cols, rows, Type.f16), Type.mat(cols, rows, Type.f16)],\n      Type.mat(cols, rows, Type.f16),\n      t.params,\n      cases\n    );\n  });\n\ng.test('matrix_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x =+ y, where x and y are matrices\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? `mat${cols}x${rows}_const` : `mat${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      compoundBinary('+='),\n      [Type.mat(cols, rows, Type.f16), Type.mat(cols, rows, Type.f16)],\n      Type.mat(cols, rows, Type.f16),\n      t.params,\n      cases\n    );\n  });\n"],"mappings":"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"}