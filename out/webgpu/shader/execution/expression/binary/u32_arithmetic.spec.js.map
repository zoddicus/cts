{"version":3,"file":"u32_arithmetic.spec.js","names":["description","makeTestGroup","GPUTest","TypeU32","TypeVec","sparseU32Range","vectorU32Range","makeCaseCache","allInputSources","generateBinaryToU32Cases","generateU32VectorBinaryToVectorCases","generateVectorU32BinaryToVectorCases","run","binary","compoundBinary","u32_add","x","y","u32_subtract","u32_multiply","Math","imul","u32_divide_non_const","u32_divide_const","undefined","u32_remainder_non_const","u32_remainder_const","g","d","addition","subtraction","multiplication","division_non_const","division_const","remainder_non_const","remainder_const","addition_scalar_vector2","addition_scalar_vector3","addition_scalar_vector4","addition_vector2_scalar","addition_vector3_scalar","addition_vector4_scalar","subtraction_scalar_vector2","subtraction_scalar_vector3","subtraction_scalar_vector4","subtraction_vector2_scalar","subtraction_vector3_scalar","subtraction_vector4_scalar","multiplication_scalar_vector2","multiplication_scalar_vector3","multiplication_scalar_vector4","multiplication_vector2_scalar","multiplication_vector3_scalar","multiplication_vector4_scalar","division_scalar_vector2_non_const","division_scalar_vector3_non_const","division_scalar_vector4_non_const","division_vector2_scalar_non_const","division_vector3_scalar_non_const","division_vector4_scalar_non_const","division_scalar_vector2_const","division_scalar_vector3_const","division_scalar_vector4_const","division_vector2_scalar_const","division_vector3_scalar_const","division_vector4_scalar_const","remainder_scalar_vector2_non_const","remainder_scalar_vector3_non_const","remainder_scalar_vector4_non_const","remainder_vector2_scalar_non_const","remainder_vector3_scalar_non_const","remainder_vector4_scalar_non_const","remainder_scalar_vector2_const","remainder_scalar_vector3_const","remainder_scalar_vector4_const","remainder_vector2_scalar_const","remainder_vector3_scalar_const","remainder_vector4_scalar_const","test","specURL","desc","params","u","combine","fn","t","cases","get","inputSource","vec_size","vectorize_rhs","vec_type","vectorize_lhs","source"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/u32_arithmetic.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for the u32 arithmetic binary expression operations\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { TypeU32, TypeVec } from '../../../../util/conversion.js';\nimport { sparseU32Range, vectorU32Range } from '../../../../util/math.js';\nimport { makeCaseCache } from '../case_cache.js';\nimport {\n  allInputSources,\n  generateBinaryToU32Cases,\n  generateU32VectorBinaryToVectorCases,\n  generateVectorU32BinaryToVectorCases,\n  run,\n} from '../expression.js';\n\nimport { binary, compoundBinary } from './binary.js';\n\nfunction u32_add(x: number, y: number): number | undefined {\n  return x + y;\n}\n\nfunction u32_subtract(x: number, y: number): number | undefined {\n  return x - y;\n}\n\nfunction u32_multiply(x: number, y: number): number | undefined {\n  return Math.imul(x, y);\n}\n\nfunction u32_divide_non_const(x: number, y: number): number | undefined {\n  if (y === 0) {\n    return x;\n  }\n  return x / y;\n}\n\nfunction u32_divide_const(x: number, y: number): number | undefined {\n  if (y === 0) {\n    return undefined;\n  }\n  return x / y;\n}\n\nfunction u32_remainder_non_const(x: number, y: number): number | undefined {\n  if (y === 0) {\n    return 0;\n  }\n  return x % y;\n}\n\nfunction u32_remainder_const(x: number, y: number): number | undefined {\n  if (y === 0) {\n    return undefined;\n  }\n  return x % y;\n}\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('binary/u32_arithmetic', {\n  addition: () => {\n    return generateBinaryToU32Cases(sparseU32Range(), sparseU32Range(), u32_add);\n  },\n  subtraction: () => {\n    return generateBinaryToU32Cases(sparseU32Range(), sparseU32Range(), u32_subtract);\n  },\n  multiplication: () => {\n    return generateBinaryToU32Cases(sparseU32Range(), sparseU32Range(), u32_multiply);\n  },\n  division_non_const: () => {\n    return generateBinaryToU32Cases(sparseU32Range(), sparseU32Range(), u32_divide_non_const);\n  },\n  division_const: () => {\n    return generateBinaryToU32Cases(sparseU32Range(), sparseU32Range(), u32_divide_const);\n  },\n  remainder_non_const: () => {\n    return generateBinaryToU32Cases(sparseU32Range(), sparseU32Range(), u32_remainder_non_const);\n  },\n  remainder_const: () => {\n    return generateBinaryToU32Cases(sparseU32Range(), sparseU32Range(), u32_remainder_const);\n  },\n  addition_scalar_vector2: () => {\n    return generateU32VectorBinaryToVectorCases(sparseU32Range(), vectorU32Range(2), u32_add);\n  },\n  addition_scalar_vector3: () => {\n    return generateU32VectorBinaryToVectorCases(sparseU32Range(), vectorU32Range(3), u32_add);\n  },\n  addition_scalar_vector4: () => {\n    return generateU32VectorBinaryToVectorCases(sparseU32Range(), vectorU32Range(4), u32_add);\n  },\n  addition_vector2_scalar: () => {\n    return generateVectorU32BinaryToVectorCases(vectorU32Range(2), sparseU32Range(), u32_add);\n  },\n  addition_vector3_scalar: () => {\n    return generateVectorU32BinaryToVectorCases(vectorU32Range(3), sparseU32Range(), u32_add);\n  },\n  addition_vector4_scalar: () => {\n    return generateVectorU32BinaryToVectorCases(vectorU32Range(4), sparseU32Range(), u32_add);\n  },\n  subtraction_scalar_vector2: () => {\n    return generateU32VectorBinaryToVectorCases(sparseU32Range(), vectorU32Range(2), u32_subtract);\n  },\n  subtraction_scalar_vector3: () => {\n    return generateU32VectorBinaryToVectorCases(sparseU32Range(), vectorU32Range(3), u32_subtract);\n  },\n  subtraction_scalar_vector4: () => {\n    return generateU32VectorBinaryToVectorCases(sparseU32Range(), vectorU32Range(4), u32_subtract);\n  },\n  subtraction_vector2_scalar: () => {\n    return generateVectorU32BinaryToVectorCases(vectorU32Range(2), sparseU32Range(), u32_subtract);\n  },\n  subtraction_vector3_scalar: () => {\n    return generateVectorU32BinaryToVectorCases(vectorU32Range(3), sparseU32Range(), u32_subtract);\n  },\n  subtraction_vector4_scalar: () => {\n    return generateVectorU32BinaryToVectorCases(vectorU32Range(4), sparseU32Range(), u32_subtract);\n  },\n  multiplication_scalar_vector2: () => {\n    return generateU32VectorBinaryToVectorCases(sparseU32Range(), vectorU32Range(2), u32_multiply);\n  },\n  multiplication_scalar_vector3: () => {\n    return generateU32VectorBinaryToVectorCases(sparseU32Range(), vectorU32Range(3), u32_multiply);\n  },\n  multiplication_scalar_vector4: () => {\n    return generateU32VectorBinaryToVectorCases(sparseU32Range(), vectorU32Range(4), u32_multiply);\n  },\n  multiplication_vector2_scalar: () => {\n    return generateVectorU32BinaryToVectorCases(vectorU32Range(2), sparseU32Range(), u32_multiply);\n  },\n  multiplication_vector3_scalar: () => {\n    return generateVectorU32BinaryToVectorCases(vectorU32Range(3), sparseU32Range(), u32_multiply);\n  },\n  multiplication_vector4_scalar: () => {\n    return generateVectorU32BinaryToVectorCases(vectorU32Range(4), sparseU32Range(), u32_multiply);\n  },\n  division_scalar_vector2_non_const: () => {\n    return generateU32VectorBinaryToVectorCases(\n      sparseU32Range(),\n      vectorU32Range(2),\n      u32_divide_non_const\n    );\n  },\n  division_scalar_vector3_non_const: () => {\n    return generateU32VectorBinaryToVectorCases(\n      sparseU32Range(),\n      vectorU32Range(3),\n      u32_divide_non_const\n    );\n  },\n  division_scalar_vector4_non_const: () => {\n    return generateU32VectorBinaryToVectorCases(\n      sparseU32Range(),\n      vectorU32Range(4),\n      u32_divide_non_const\n    );\n  },\n  division_vector2_scalar_non_const: () => {\n    return generateVectorU32BinaryToVectorCases(\n      vectorU32Range(2),\n      sparseU32Range(),\n      u32_divide_non_const\n    );\n  },\n  division_vector3_scalar_non_const: () => {\n    return generateVectorU32BinaryToVectorCases(\n      vectorU32Range(3),\n      sparseU32Range(),\n      u32_divide_non_const\n    );\n  },\n  division_vector4_scalar_non_const: () => {\n    return generateVectorU32BinaryToVectorCases(\n      vectorU32Range(4),\n      sparseU32Range(),\n      u32_divide_non_const\n    );\n  },\n  division_scalar_vector2_const: () => {\n    return generateU32VectorBinaryToVectorCases(\n      sparseU32Range(),\n      vectorU32Range(2),\n      u32_divide_const\n    );\n  },\n  division_scalar_vector3_const: () => {\n    return generateU32VectorBinaryToVectorCases(\n      sparseU32Range(),\n      vectorU32Range(3),\n      u32_divide_const\n    );\n  },\n  division_scalar_vector4_const: () => {\n    return generateU32VectorBinaryToVectorCases(\n      sparseU32Range(),\n      vectorU32Range(4),\n      u32_divide_const\n    );\n  },\n  division_vector2_scalar_const: () => {\n    return generateVectorU32BinaryToVectorCases(\n      vectorU32Range(2),\n      sparseU32Range(),\n      u32_divide_const\n    );\n  },\n  division_vector3_scalar_const: () => {\n    return generateVectorU32BinaryToVectorCases(\n      vectorU32Range(3),\n      sparseU32Range(),\n      u32_divide_const\n    );\n  },\n  division_vector4_scalar_const: () => {\n    return generateVectorU32BinaryToVectorCases(\n      vectorU32Range(4),\n      sparseU32Range(),\n      u32_divide_const\n    );\n  },\n  remainder_scalar_vector2_non_const: () => {\n    return generateU32VectorBinaryToVectorCases(\n      sparseU32Range(),\n      vectorU32Range(2),\n      u32_remainder_non_const\n    );\n  },\n  remainder_scalar_vector3_non_const: () => {\n    return generateU32VectorBinaryToVectorCases(\n      sparseU32Range(),\n      vectorU32Range(3),\n      u32_remainder_non_const\n    );\n  },\n  remainder_scalar_vector4_non_const: () => {\n    return generateU32VectorBinaryToVectorCases(\n      sparseU32Range(),\n      vectorU32Range(4),\n      u32_remainder_non_const\n    );\n  },\n  remainder_vector2_scalar_non_const: () => {\n    return generateVectorU32BinaryToVectorCases(\n      vectorU32Range(2),\n      sparseU32Range(),\n      u32_remainder_non_const\n    );\n  },\n  remainder_vector3_scalar_non_const: () => {\n    return generateVectorU32BinaryToVectorCases(\n      vectorU32Range(3),\n      sparseU32Range(),\n      u32_remainder_non_const\n    );\n  },\n  remainder_vector4_scalar_non_const: () => {\n    return generateVectorU32BinaryToVectorCases(\n      vectorU32Range(4),\n      sparseU32Range(),\n      u32_remainder_non_const\n    );\n  },\n  remainder_scalar_vector2_const: () => {\n    return generateU32VectorBinaryToVectorCases(\n      sparseU32Range(),\n      vectorU32Range(2),\n      u32_remainder_const\n    );\n  },\n  remainder_scalar_vector3_const: () => {\n    return generateU32VectorBinaryToVectorCases(\n      sparseU32Range(),\n      vectorU32Range(3),\n      u32_remainder_const\n    );\n  },\n  remainder_scalar_vector4_const: () => {\n    return generateU32VectorBinaryToVectorCases(\n      sparseU32Range(),\n      vectorU32Range(4),\n      u32_remainder_const\n    );\n  },\n  remainder_vector2_scalar_const: () => {\n    return generateVectorU32BinaryToVectorCases(\n      vectorU32Range(2),\n      sparseU32Range(),\n      u32_remainder_const\n    );\n  },\n  remainder_vector3_scalar_const: () => {\n    return generateVectorU32BinaryToVectorCases(\n      vectorU32Range(3),\n      sparseU32Range(),\n      u32_remainder_const\n    );\n  },\n  remainder_vector4_scalar_const: () => {\n    return generateVectorU32BinaryToVectorCases(\n      vectorU32Range(4),\n      sparseU32Range(),\n      u32_remainder_const\n    );\n  },\n});\n\ng.test('addition')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x + y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('addition');\n    await run(t, binary('+'), [TypeU32, TypeU32], TypeU32, t.params, cases);\n  });\n\ng.test('addition_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x += y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('addition');\n    await run(t, compoundBinary('+='), [TypeU32, TypeU32], TypeU32, t.params, cases);\n  });\n\ng.test('subtraction')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x - y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('subtraction');\n    await run(t, binary('-'), [TypeU32, TypeU32], TypeU32, t.params, cases);\n  });\n\ng.test('subtraction_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x -= y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('subtraction');\n    await run(t, compoundBinary('-='), [TypeU32, TypeU32], TypeU32, t.params, cases);\n  });\n\ng.test('multiplication')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x * y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('multiplication');\n    await run(t, binary('*'), [TypeU32, TypeU32], TypeU32, t.params, cases);\n  });\n\ng.test('multiplication_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x *= y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('multiplication');\n    await run(t, compoundBinary('*='), [TypeU32, TypeU32], TypeU32, t.params, cases);\n  });\n\ng.test('division')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x / y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'division_const' : 'division_non_const'\n    );\n    await run(t, binary('/'), [TypeU32, TypeU32], TypeU32, t.params, cases);\n  });\n\ng.test('division_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x /= y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'division_const' : 'division_non_const'\n    );\n    await run(t, compoundBinary('/='), [TypeU32, TypeU32], TypeU32, t.params, cases);\n  });\n\ng.test('remainder')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x % y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'remainder_const' : 'remainder_non_const'\n    );\n    await run(t, binary('%'), [TypeU32, TypeU32], TypeU32, t.params, cases);\n  });\n\ng.test('remainder_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x %= y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'remainder_const' : 'remainder_non_const'\n    );\n    await run(t, compoundBinary('%='), [TypeU32, TypeU32], TypeU32, t.params, cases);\n  });\n\ng.test('addition_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x + y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_rhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_rhs;\n    const vec_type = TypeVec(vec_size, TypeU32);\n    const cases = await d.get(`addition_scalar_vector${vec_size}`);\n    await run(t, binary('+'), [TypeU32, vec_type], vec_type, t.params, cases);\n  });\n\ng.test('addition_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x + y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_lhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_lhs;\n    const vec_type = TypeVec(vec_size, TypeU32);\n    const cases = await d.get(`addition_vector${vec_size}_scalar`);\n    await run(t, binary('+'), [vec_type, TypeU32], vec_type, t.params, cases);\n  });\n\ng.test('addition_vector_scalar_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x += y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_lhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_lhs;\n    const vec_type = TypeVec(vec_size, TypeU32);\n    const cases = await d.get(`addition_vector${vec_size}_scalar`);\n    await run(t, compoundBinary('+='), [vec_type, TypeU32], vec_type, t.params, cases);\n  });\n\ng.test('subtraction_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x - y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_rhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_rhs;\n    const vec_type = TypeVec(vec_size, TypeU32);\n    const cases = await d.get(`subtraction_scalar_vector${vec_size}`);\n    await run(t, binary('-'), [TypeU32, vec_type], vec_type, t.params, cases);\n  });\n\ng.test('subtraction_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x - y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_lhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_lhs;\n    const vec_type = TypeVec(vec_size, TypeU32);\n    const cases = await d.get(`subtraction_vector${vec_size}_scalar`);\n    await run(t, binary('-'), [vec_type, TypeU32], vec_type, t.params, cases);\n  });\n\ng.test('subtraction_vector_scalar_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x -= y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_lhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_lhs;\n    const vec_type = TypeVec(vec_size, TypeU32);\n    const cases = await d.get(`subtraction_vector${vec_size}_scalar`);\n    await run(t, compoundBinary('-='), [vec_type, TypeU32], vec_type, t.params, cases);\n  });\n\ng.test('multiplication_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x * y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_rhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_rhs;\n    const vec_type = TypeVec(vec_size, TypeU32);\n    const cases = await d.get(`multiplication_scalar_vector${vec_size}`);\n    await run(t, binary('*'), [TypeU32, vec_type], vec_type, t.params, cases);\n  });\n\ng.test('multiplication_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x * y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_lhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_lhs;\n    const vec_type = TypeVec(vec_size, TypeU32);\n    const cases = await d.get(`multiplication_vector${vec_size}_scalar`);\n    await run(t, binary('*'), [vec_type, TypeU32], vec_type, t.params, cases);\n  });\n\ng.test('multiplication_vector_scalar_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x *= y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_lhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_lhs;\n    const vec_type = TypeVec(vec_size, TypeU32);\n    const cases = await d.get(`multiplication_vector${vec_size}_scalar`);\n    await run(t, compoundBinary('*='), [vec_type, TypeU32], vec_type, t.params, cases);\n  });\n\ng.test('division_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x / y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_rhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_rhs;\n    const vec_type = TypeVec(vec_size, TypeU32);\n    const source = t.params.inputSource === 'const' ? 'const' : 'non_const';\n    const cases = await d.get(`division_scalar_vector${vec_size}_${source}`);\n    await run(t, binary('/'), [TypeU32, vec_type], vec_type, t.params, cases);\n  });\n\ng.test('division_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x / y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_lhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_lhs;\n    const vec_type = TypeVec(vec_size, TypeU32);\n    const source = t.params.inputSource === 'const' ? 'const' : 'non_const';\n    const cases = await d.get(`division_vector${vec_size}_scalar_${source}`);\n    await run(t, binary('/'), [vec_type, TypeU32], vec_type, t.params, cases);\n  });\n\ng.test('division_vector_scalar_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x /= y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_lhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_lhs;\n    const vec_type = TypeVec(vec_size, TypeU32);\n    const source = t.params.inputSource === 'const' ? 'const' : 'non_const';\n    const cases = await d.get(`division_vector${vec_size}_scalar_${source}`);\n    await run(t, compoundBinary('/='), [vec_type, TypeU32], vec_type, t.params, cases);\n  });\n\ng.test('remainder_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x % y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_rhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_rhs;\n    const vec_type = TypeVec(vec_size, TypeU32);\n    const source = t.params.inputSource === 'const' ? 'const' : 'non_const';\n    const cases = await d.get(`remainder_scalar_vector${vec_size}_${source}`);\n    await run(t, binary('%'), [TypeU32, vec_type], vec_type, t.params, cases);\n  });\n\ng.test('remainder_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x % y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_lhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_lhs;\n    const vec_type = TypeVec(vec_size, TypeU32);\n    const source = t.params.inputSource === 'const' ? 'const' : 'non_const';\n    const cases = await d.get(`remainder_vector${vec_size}_scalar_${source}`);\n    await run(t, binary('%'), [vec_type, TypeU32], vec_type, t.params, cases);\n  });\n\ng.test('remainder_vector_scalar_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x %= y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_lhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_lhs;\n    const vec_type = TypeVec(vec_size, TypeU32);\n    const source = t.params.inputSource === 'const' ? 'const' : 'non_const';\n    const cases = await d.get(`remainder_vector${vec_size}_scalar_${source}`);\n    await run(t, compoundBinary('%='), [vec_type, TypeU32], vec_type, t.params, cases);\n  });\n"],"mappings":"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"}