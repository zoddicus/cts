{"version":3,"file":"i32_comparison.cache.js","names":["bool","i32","vectorI32Range","makeCaseCache","makeCase","lhs","rhs","expected_answer","input","expected","d","equals","map","v","not_equals","less_than","less_equal","greater_than","greater_equal"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/i32_comparison.cache.ts"],"sourcesContent":["import { bool, i32 } from '../../../../util/conversion.js';\nimport { vectorI32Range } from '../../../../util/math.js';\nimport { Case } from '../case.js';\nimport { makeCaseCache } from '../case_cache.js';\n\n/**\n * @returns a test case for the provided left hand & right hand values and\n * expected boolean result.\n */\nfunction makeCase(lhs: number, rhs: number, expected_answer: boolean): Case {\n  return { input: [i32(lhs), i32(rhs)], expected: bool(expected_answer) };\n}\n\nexport const d = makeCaseCache('binary/i32_comparison', {\n  equals: () => vectorI32Range(2).map(v => makeCase(v[0], v[1], v[0] === v[1])),\n  not_equals: () => vectorI32Range(2).map(v => makeCase(v[0], v[1], v[0] !== v[1])),\n  less_than: () => vectorI32Range(2).map(v => makeCase(v[0], v[1], v[0] < v[1])),\n  less_equal: () => vectorI32Range(2).map(v => makeCase(v[0], v[1], v[0] <= v[1])),\n  greater_than: () => vectorI32Range(2).map(v => makeCase(v[0], v[1], v[0] > v[1])),\n  greater_equal: () => vectorI32Range(2).map(v => makeCase(v[0], v[1], v[0] >= v[1])),\n});\n"],"mappings":";;GAAA,SAASA,IAAI,EAAEC,GAAG,QAAQ,gCAAgC,CAC1D,SAASC,cAAc,QAAQ,0BAA0B;AAEzD,SAASC,aAAa,QAAQ,kBAAkB;;AAEhD;AACA;AACA;AACA;AACA,SAASC,QAAQA,CAACC,GAAW,EAAEC,GAAW,EAAEC,eAAwB,EAAQ;EAC1E,OAAO,EAAEC,KAAK,EAAE,CAACP,GAAG,CAACI,GAAG,CAAC,EAAEJ,GAAG,CAACK,GAAG,CAAC,CAAC,EAAEG,QAAQ,EAAET,IAAI,CAACO,eAAe,CAAC,CAAC,CAAC;AACzE;;AAEA,OAAO,MAAMG,CAAC,GAAGP,aAAa,CAAC,uBAAuB,EAAE;EACtDQ,MAAM,EAAEA,CAAA,KAAMT,cAAc,CAAC,CAAC,CAAC,CAACU,GAAG,CAAC,CAAAC,CAAC,KAAIT,QAAQ,CAACS,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,KAAKA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7EC,UAAU,EAAEA,CAAA,KAAMZ,cAAc,CAAC,CAAC,CAAC,CAACU,GAAG,CAAC,CAAAC,CAAC,KAAIT,QAAQ,CAACS,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,KAAKA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjFE,SAAS,EAAEA,CAAA,KAAMb,cAAc,CAAC,CAAC,CAAC,CAACU,GAAG,CAAC,CAAAC,CAAC,KAAIT,QAAQ,CAACS,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9EG,UAAU,EAAEA,CAAA,KAAMd,cAAc,CAAC,CAAC,CAAC,CAACU,GAAG,CAAC,CAAAC,CAAC,KAAIT,QAAQ,CAACS,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChFI,YAAY,EAAEA,CAAA,KAAMf,cAAc,CAAC,CAAC,CAAC,CAACU,GAAG,CAAC,CAAAC,CAAC,KAAIT,QAAQ,CAACS,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjFK,aAAa,EAAEA,CAAA,KAAMhB,cAAc,CAAC,CAAC,CAAC,CAACU,GAAG,CAAC,CAAAC,CAAC,KAAIT,QAAQ,CAACS,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAAC;AACpF,CAAC,CAAC"}