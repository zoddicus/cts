{"version":3,"file":"ai_arithmetic.cache.js","names":["kValue","sparseI64Range","vectorI64Range","generateBinaryToI64Cases","generateI64VectorBinaryToVectorCases","generateVectorI64BinaryToVectorCases","makeCaseCache","ai_add","x","y","result","i64","isOOB","undefined","ai_div","negative","min","ai_mul","ai_rem","ai_sub","d","addition","addition_scalar_vector2","addition_scalar_vector3","addition_scalar_vector4","addition_vector2_scalar","addition_vector3_scalar","addition_vector4_scalar","division","division_scalar_vector2","division_scalar_vector3","division_scalar_vector4","division_vector2_scalar","division_vector3_scalar","division_vector4_scalar","multiplication","multiplication_scalar_vector2","multiplication_scalar_vector3","multiplication_scalar_vector4","multiplication_vector2_scalar","multiplication_vector3_scalar","multiplication_vector4_scalar","remainder","remainder_scalar_vector2","remainder_scalar_vector3","remainder_scalar_vector4","remainder_vector2_scalar","remainder_vector3_scalar","remainder_vector4_scalar","subtraction","subtraction_scalar_vector2","subtraction_scalar_vector3","subtraction_scalar_vector4","subtraction_vector2_scalar","subtraction_vector3_scalar","subtraction_vector4_scalar"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/ai_arithmetic.cache.ts"],"sourcesContent":["import { kValue } from '../../../../util/constants.js';\nimport { sparseI64Range, vectorI64Range } from '../../../../util/math.js';\nimport {\n  generateBinaryToI64Cases,\n  generateI64VectorBinaryToVectorCases,\n  generateVectorI64BinaryToVectorCases,\n} from '../case.js';\nimport { makeCaseCache } from '../case_cache.js';\n\nfunction ai_add(x: bigint, y: bigint): bigint | undefined {\n  const result = x + y;\n  return !kValue.i64.isOOB(result) ? result : undefined;\n}\n\nfunction ai_div(x: bigint, y: bigint): bigint | undefined {\n  if (y === 0n) return undefined;\n  if (x === kValue.i64.negative.min && y === -1n) return undefined;\n  const result = x / y;\n  return !kValue.i64.isOOB(result) ? result : undefined;\n}\n\nfunction ai_mul(x: bigint, y: bigint): bigint | undefined {\n  const result = x * y;\n  return !kValue.i64.isOOB(result) ? result : undefined;\n}\n\nfunction ai_rem(x: bigint, y: bigint): bigint | undefined {\n  if (y === 0n) return undefined;\n  if (x === kValue.i64.negative.min && y === -1n) return undefined;\n  const result = x % y;\n  return !kValue.i64.isOOB(result) ? result : undefined;\n}\n\nfunction ai_sub(x: bigint, y: bigint): bigint | undefined {\n  const result = x - y;\n  return !kValue.i64.isOOB(result) ? result : undefined;\n}\n\nexport const d = makeCaseCache('binary/ai_arithmetic', {\n  addition: () => {\n    return generateBinaryToI64Cases(sparseI64Range(), sparseI64Range(), ai_add);\n  },\n  addition_scalar_vector2: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(2), ai_add);\n  },\n  addition_scalar_vector3: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(3), ai_add);\n  },\n  addition_scalar_vector4: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(4), ai_add);\n  },\n  addition_vector2_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(2), sparseI64Range(), ai_add);\n  },\n  addition_vector3_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(3), sparseI64Range(), ai_add);\n  },\n  addition_vector4_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(4), sparseI64Range(), ai_add);\n  },\n  division: () => {\n    return generateBinaryToI64Cases(sparseI64Range(), sparseI64Range(), ai_div);\n  },\n  division_scalar_vector2: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(2), ai_div);\n  },\n  division_scalar_vector3: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(3), ai_div);\n  },\n  division_scalar_vector4: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(4), ai_div);\n  },\n  division_vector2_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(2), sparseI64Range(), ai_div);\n  },\n  division_vector3_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(3), sparseI64Range(), ai_div);\n  },\n  division_vector4_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(4), sparseI64Range(), ai_div);\n  },\n  multiplication: () => {\n    return generateBinaryToI64Cases(sparseI64Range(), sparseI64Range(), ai_mul);\n  },\n  multiplication_scalar_vector2: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(2), ai_mul);\n  },\n  multiplication_scalar_vector3: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(3), ai_mul);\n  },\n  multiplication_scalar_vector4: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(4), ai_mul);\n  },\n  multiplication_vector2_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(2), sparseI64Range(), ai_mul);\n  },\n  multiplication_vector3_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(3), sparseI64Range(), ai_mul);\n  },\n  multiplication_vector4_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(4), sparseI64Range(), ai_mul);\n  },\n  remainder: () => {\n    return generateBinaryToI64Cases(sparseI64Range(), sparseI64Range(), ai_rem);\n  },\n  remainder_scalar_vector2: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(2), ai_rem);\n  },\n  remainder_scalar_vector3: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(3), ai_rem);\n  },\n  remainder_scalar_vector4: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(4), ai_rem);\n  },\n  remainder_vector2_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(2), sparseI64Range(), ai_rem);\n  },\n  remainder_vector3_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(3), sparseI64Range(), ai_rem);\n  },\n  remainder_vector4_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(4), sparseI64Range(), ai_rem);\n  },\n  subtraction: () => {\n    return generateBinaryToI64Cases(sparseI64Range(), sparseI64Range(), ai_sub);\n  },\n  subtraction_scalar_vector2: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(2), ai_sub);\n  },\n  subtraction_scalar_vector3: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(3), ai_sub);\n  },\n  subtraction_scalar_vector4: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(4), ai_sub);\n  },\n  subtraction_vector2_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(2), sparseI64Range(), ai_sub);\n  },\n  subtraction_vector3_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(3), sparseI64Range(), ai_sub);\n  },\n  subtraction_vector4_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(4), sparseI64Range(), ai_sub);\n  },\n});\n"],"mappings":"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"}