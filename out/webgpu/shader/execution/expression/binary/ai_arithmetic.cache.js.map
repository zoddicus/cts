{"version":3,"file":"ai_arithmetic.cache.js","names":["kValue","sparseI64Range","vectorI64Range","generateBinaryToI64Cases","generateI64VectorBinaryToVectorCases","generateVectorI64BinaryToVectorCases","makeCaseCache","isOOB","val","i64","positive","max","negative","min","ai_add","x","y","result","undefined","ai_div","ai_mul","ai_sub","d","addition","addition_scalar_vector2","addition_scalar_vector3","addition_scalar_vector4","addition_vector2_scalar","addition_vector3_scalar","addition_vector4_scalar","division","division_scalar_vector2","division_scalar_vector3","division_scalar_vector4","division_vector2_scalar","division_vector3_scalar","division_vector4_scalar","multiplication","multiplication_scalar_vector2","multiplication_scalar_vector3","multiplication_scalar_vector4","multiplication_vector2_scalar","multiplication_vector3_scalar","multiplication_vector4_scalar","subtraction","subtraction_scalar_vector2","subtraction_scalar_vector3","subtraction_scalar_vector4","subtraction_vector2_scalar","subtraction_vector3_scalar","subtraction_vector4_scalar"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/ai_arithmetic.cache.ts"],"sourcesContent":["import { kValue } from '../../../../util/constants.js';\nimport { sparseI64Range, vectorI64Range } from '../../../../util/math.js';\nimport {\n  generateBinaryToI64Cases,\n  generateI64VectorBinaryToVectorCases,\n  generateVectorI64BinaryToVectorCases,\n} from '../case.js';\nimport { makeCaseCache } from '../case_cache.js';\n\nfunction isOOB(val: bigint): boolean {\n  return val > kValue.i64.positive.max || val < kValue.i64.negative.min;\n}\nfunction ai_add(x: bigint, y: bigint): bigint | undefined {\n  const result = x + y;\n  return !isOOB(result) ? result : undefined;\n}\n\nfunction ai_div(x: bigint, y: bigint): bigint | undefined {\n  if (y === 0n) return undefined;\n  if (x === kValue.i64.negative.min && y === -1n) return undefined;\n  const result = x / y;\n  return !isOOB(result) ? result : undefined;\n}\n\nfunction ai_mul(x: bigint, y: bigint): bigint | undefined {\n  const result = x * y;\n  return !isOOB(result) ? result : undefined;\n}\n\nfunction ai_sub(x: bigint, y: bigint): bigint | undefined {\n  const result = x - y;\n  return !isOOB(result) ? result : undefined;\n}\n\nexport const d = makeCaseCache('binary/ai_arithmetic', {\n  addition: () => {\n    return generateBinaryToI64Cases(sparseI64Range(), sparseI64Range(), ai_add);\n  },\n  addition_scalar_vector2: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(2), ai_add);\n  },\n  addition_scalar_vector3: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(3), ai_add);\n  },\n  addition_scalar_vector4: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(4), ai_add);\n  },\n  addition_vector2_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(2), sparseI64Range(), ai_add);\n  },\n  addition_vector3_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(3), sparseI64Range(), ai_add);\n  },\n  addition_vector4_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(4), sparseI64Range(), ai_add);\n  },\n  division: () => {\n    return generateBinaryToI64Cases(sparseI64Range(), sparseI64Range(), ai_div);\n  },\n  division_scalar_vector2: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(2), ai_div);\n  },\n  division_scalar_vector3: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(3), ai_div);\n  },\n  division_scalar_vector4: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(4), ai_div);\n  },\n  division_vector2_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(2), sparseI64Range(), ai_div);\n  },\n  division_vector3_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(3), sparseI64Range(), ai_div);\n  },\n  division_vector4_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(4), sparseI64Range(), ai_div);\n  },\n  multiplication: () => {\n    return generateBinaryToI64Cases(sparseI64Range(), sparseI64Range(), ai_mul);\n  },\n  multiplication_scalar_vector2: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(2), ai_mul);\n  },\n  multiplication_scalar_vector3: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(3), ai_mul);\n  },\n  multiplication_scalar_vector4: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(4), ai_mul);\n  },\n  multiplication_vector2_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(2), sparseI64Range(), ai_mul);\n  },\n  multiplication_vector3_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(3), sparseI64Range(), ai_mul);\n  },\n  multiplication_vector4_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(4), sparseI64Range(), ai_mul);\n  },\n  subtraction: () => {\n    return generateBinaryToI64Cases(sparseI64Range(), sparseI64Range(), ai_sub);\n  },\n  subtraction_scalar_vector2: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(2), ai_sub);\n  },\n  subtraction_scalar_vector3: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(3), ai_sub);\n  },\n  subtraction_scalar_vector4: () => {\n    return generateI64VectorBinaryToVectorCases(sparseI64Range(), vectorI64Range(4), ai_sub);\n  },\n  subtraction_vector2_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(2), sparseI64Range(), ai_sub);\n  },\n  subtraction_vector3_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(3), sparseI64Range(), ai_sub);\n  },\n  subtraction_vector4_scalar: () => {\n    return generateVectorI64BinaryToVectorCases(vectorI64Range(4), sparseI64Range(), ai_sub);\n  },\n});\n"],"mappings":"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"}