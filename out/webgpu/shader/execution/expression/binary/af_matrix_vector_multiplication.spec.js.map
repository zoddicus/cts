{"version":3,"file":"af_matrix_vector_multiplication.spec.js","names":["description","makeTestGroup","GPUTest","TypeAbstractFloat","TypeMat","TypeVec","onlyConstInputSource","run","d","abstractFloatBinary","g","test","specURL","desc","params","u","combine","fn","t","cols","rows","cases","get"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/af_matrix_vector_multiplication.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for matrix-vector and vector-matrix AbstractFloat multiplication expression\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { TypeAbstractFloat, TypeMat, TypeVec } from '../../../../util/conversion.js';\nimport { onlyConstInputSource, run } from '../expression.js';\n\nimport { d } from './af_matrix_vector_multiplication.cache.js';\nimport { abstractFloatBinary } from './binary.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('matrix_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x is a matrix and y is a vector\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', onlyConstInputSource)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(`mat${cols}x${rows}_vec${cols}`);\n    await run(\n      t,\n      abstractFloatBinary('*'),\n      [TypeMat(cols, rows, TypeAbstractFloat), TypeVec(cols, TypeAbstractFloat)],\n      TypeVec(rows, TypeAbstractFloat),\n      t.params,\n      cases\n    );\n  });\n\ng.test('vector_matrix')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x is a vector and y is is a matrix\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', onlyConstInputSource)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(`vec${rows}_mat${cols}x${rows}`);\n    await run(\n      t,\n      abstractFloatBinary('*'),\n      [TypeVec(rows, TypeAbstractFloat), TypeMat(cols, rows, TypeAbstractFloat)],\n      TypeVec(cols, TypeAbstractFloat),\n      t.params,\n      cases\n    );\n  });\n"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,+CAA+C;AAC7E,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,iBAAiB,EAAEC,OAAO,EAAEC,OAAO,QAAQ,gCAAgC;AACpF,SAASC,oBAAoB,EAAEC,GAAG,QAAQ,kBAAkB;;AAE5D,SAASC,CAAC,QAAQ,4CAA4C;AAC9D,SAASC,mBAAmB,QAAQ,aAAa;;AAEjD,OAAO,MAAMC,CAAC,GAAGT,aAAa,CAACC,OAAO,CAAC;;AAEvCQ,CAAC,CAACC,IAAI,CAAC,eAAe,CAAC;AACpBC,OAAO,CAAC,uDAAuD,CAAC;AAChEC,IAAI;EACF;AACL;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,aAAa,EAAEV,oBAAoB,CAAC;AAC5CU,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAU,CAAC;AACnCA,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAU;AACvC,CAAC;AACAC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,IAAI,GAAGD,CAAC,CAACJ,MAAM,CAACK,IAAI;EAC1B,MAAMC,IAAI,GAAGF,CAAC,CAACJ,MAAM,CAACM,IAAI;EAC1B,MAAMC,KAAK,GAAG,MAAMb,CAAC,CAACc,GAAG,CAAE,MAAKH,IAAK,IAAGC,IAAK,OAAMD,IAAK,EAAC,CAAC;EAC1D,MAAMZ,GAAG;IACPW,CAAC;IACDT,mBAAmB,CAAC,GAAG,CAAC;IACxB,CAACL,OAAO,CAACe,IAAI,EAAEC,IAAI,EAAEjB,iBAAiB,CAAC,EAAEE,OAAO,CAACc,IAAI,EAAEhB,iBAAiB,CAAC,CAAC;IAC1EE,OAAO,CAACe,IAAI,EAAEjB,iBAAiB,CAAC;IAChCe,CAAC,CAACJ,MAAM;IACRO;EACF,CAAC;AACH,CAAC,CAAC;;AAEJX,CAAC,CAACC,IAAI,CAAC,eAAe,CAAC;AACpBC,OAAO,CAAC,uDAAuD,CAAC;AAChEC,IAAI;EACF;AACL;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,aAAa,EAAEV,oBAAoB,CAAC;AAC5CU,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAU,CAAC;AACnCA,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAU;AACvC,CAAC;AACAC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,IAAI,GAAGD,CAAC,CAACJ,MAAM,CAACK,IAAI;EAC1B,MAAMC,IAAI,GAAGF,CAAC,CAACJ,MAAM,CAACM,IAAI;EAC1B,MAAMC,KAAK,GAAG,MAAMb,CAAC,CAACc,GAAG,CAAE,MAAKF,IAAK,OAAMD,IAAK,IAAGC,IAAK,EAAC,CAAC;EAC1D,MAAMb,GAAG;IACPW,CAAC;IACDT,mBAAmB,CAAC,GAAG,CAAC;IACxB,CAACJ,OAAO,CAACe,IAAI,EAAEjB,iBAAiB,CAAC,EAAEC,OAAO,CAACe,IAAI,EAAEC,IAAI,EAAEjB,iBAAiB,CAAC,CAAC;IAC1EE,OAAO,CAACc,IAAI,EAAEhB,iBAAiB,CAAC;IAChCe,CAAC,CAACJ,MAAM;IACRO;EACF,CAAC;AACH,CAAC,CAAC"}