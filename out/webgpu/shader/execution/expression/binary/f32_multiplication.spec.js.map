{"version":3,"file":"f32_multiplication.spec.js","names":["description","makeTestGroup","GPUTest","TypeF32","TypeVec","FP","sparseF32Range","sparseVectorF32Range","makeCaseCache","allInputSources","run","binary","compoundBinary","multiplicationVectorScalarInterval","v","s","f32","toVector","map","e","multiplicationInterval","multiplicationScalarVectorInterval","g","d","scalar_const","generateScalarPairToIntervalCases","scalar_non_const","vec2_scalar_const","generateVectorScalarToVectorCases","vec2_scalar_non_const","vec3_scalar_const","vec3_scalar_non_const","vec4_scalar_const","vec4_scalar_non_const","scalar_vec2_const","generateScalarVectorToVectorCases","scalar_vec2_non_const","scalar_vec3_const","scalar_vec3_non_const","scalar_vec4_const","scalar_vec4_non_const","test","specURL","desc","params","u","combine","fn","t","cases","get","inputSource","undefined","dim"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/f32_multiplication.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for non-matrix f32 multiplication expression\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { TypeF32, TypeVec } from '../../../../util/conversion.js';\nimport { FP, FPVector } from '../../../../util/floating_point.js';\nimport { sparseF32Range, sparseVectorF32Range } from '../../../../util/math.js';\nimport { makeCaseCache } from '../case_cache.js';\nimport { allInputSources, run } from '../expression.js';\n\nimport { binary, compoundBinary } from './binary.js';\n\nconst multiplicationVectorScalarInterval = (v: number[], s: number): FPVector => {\n  return FP.f32.toVector(v.map(e => FP.f32.multiplicationInterval(e, s)));\n};\n\nconst multiplicationScalarVectorInterval = (s: number, v: number[]): FPVector => {\n  return FP.f32.toVector(v.map(e => FP.f32.multiplicationInterval(s, e)));\n};\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('binary/f32_multiplication', {\n  scalar_const: () => {\n    return FP.f32.generateScalarPairToIntervalCases(\n      sparseF32Range(),\n      sparseF32Range(),\n      'finite',\n      FP.f32.multiplicationInterval\n    );\n  },\n  scalar_non_const: () => {\n    return FP.f32.generateScalarPairToIntervalCases(\n      sparseF32Range(),\n      sparseF32Range(),\n      'unfiltered',\n      FP.f32.multiplicationInterval\n    );\n  },\n  vec2_scalar_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(2),\n      sparseF32Range(),\n      'finite',\n      multiplicationVectorScalarInterval\n    );\n  },\n  vec2_scalar_non_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(2),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationVectorScalarInterval\n    );\n  },\n  vec3_scalar_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(3),\n      sparseF32Range(),\n      'finite',\n      multiplicationVectorScalarInterval\n    );\n  },\n  vec3_scalar_non_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(3),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationVectorScalarInterval\n    );\n  },\n  vec4_scalar_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(4),\n      sparseF32Range(),\n      'finite',\n      multiplicationVectorScalarInterval\n    );\n  },\n  vec4_scalar_non_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(4),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationVectorScalarInterval\n    );\n  },\n  scalar_vec2_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      sparseF32Range(),\n      sparseVectorF32Range(2),\n      'finite',\n      multiplicationScalarVectorInterval\n    );\n  },\n  scalar_vec2_non_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      sparseF32Range(),\n      sparseVectorF32Range(2),\n      'unfiltered',\n      multiplicationScalarVectorInterval\n    );\n  },\n  scalar_vec3_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      sparseF32Range(),\n      sparseVectorF32Range(3),\n      'finite',\n      multiplicationScalarVectorInterval\n    );\n  },\n  scalar_vec3_non_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      sparseF32Range(),\n      sparseVectorF32Range(3),\n      'unfiltered',\n      multiplicationScalarVectorInterval\n    );\n  },\n  scalar_vec4_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      sparseF32Range(),\n      sparseVectorF32Range(4),\n      'finite',\n      multiplicationScalarVectorInterval\n    );\n  },\n  scalar_vec4_non_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      sparseF32Range(),\n      sparseVectorF32Range(4),\n      'unfiltered',\n      multiplicationScalarVectorInterval\n    );\n  },\n});\n\ng.test('scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x and y are scalars\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'scalar_const' : 'scalar_non_const'\n    );\n    await run(t, binary('*'), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('vector')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x and y are vectors\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('vectorize', [2, 3, 4] as const))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'scalar_const' : 'scalar_non_const' // Using vectorize to generate vector cases based on scalar cases\n    );\n    await run(t, binary('*'), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('scalar_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x *= y\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'scalar_const' : 'scalar_non_const'\n    );\n    await run(t, compoundBinary('*='), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? `vec${dim}_scalar_const` : `vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      binary('*'),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('vector_scalar_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x *= y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? `vec${dim}_scalar_const` : `vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      compoundBinary('*='),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x is a scalar and y is a vector\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? `scalar_vec${dim}_const` : `scalar_vec${dim}_non_const`\n    );\n    await run(\n      t,\n      binary('*'),\n      [TypeF32, TypeVec(dim, TypeF32)],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n"],"mappings":";AAAA;AAAA,GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,+CAA+C;AAC7E,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,OAAO,EAAEC,OAAO,QAAQ,gCAAgC;AACjE,SAASC,EAAE,QAAkB,oCAAoC;AACjE,SAASC,cAAc,EAAEC,oBAAoB,QAAQ,0BAA0B;AAC/E,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,eAAe,EAAEC,GAAG,QAAQ,kBAAkB;;AAEvD,SAASC,MAAM,EAAEC,cAAc,QAAQ,aAAa;;AAEpD,MAAMC,kCAAkC,GAAG,CAACC,CAAW,EAAEC,CAAS,KAAe;EAC/E,OAAOV,EAAE,CAACW,GAAG,CAACC,QAAQ,CAACH,CAAC,CAACI,GAAG,CAAC,CAAAC,CAAC,KAAId,EAAE,CAACW,GAAG,CAACI,sBAAsB,CAACD,CAAC,EAAEJ,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC;;AAED,MAAMM,kCAAkC,GAAG,CAACN,CAAS,EAAED,CAAW,KAAe;EAC/E,OAAOT,EAAE,CAACW,GAAG,CAACC,QAAQ,CAACH,CAAC,CAACI,GAAG,CAAC,CAAAC,CAAC,KAAId,EAAE,CAACW,GAAG,CAACI,sBAAsB,CAACL,CAAC,EAAEI,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC;;AAED,OAAO,MAAMG,CAAC,GAAGrB,aAAa,CAACC,OAAO,CAAC;;AAEvC,OAAO,MAAMqB,CAAC,GAAGf,aAAa,CAAC,2BAA2B,EAAE;EAC1DgB,YAAY,EAAE,MAAM;IAClB,OAAOnB,EAAE,CAACW,GAAG,CAACS,iCAAiC;IAC7CnB,cAAc,EAAE;IAChBA,cAAc,EAAE;IAChB,QAAQ;IACRD,EAAE,CAACW,GAAG,CAACI,sBAAsB,CAC9B;;EACH,CAAC;EACDM,gBAAgB,EAAE,MAAM;IACtB,OAAOrB,EAAE,CAACW,GAAG,CAACS,iCAAiC;IAC7CnB,cAAc,EAAE;IAChBA,cAAc,EAAE;IAChB,YAAY;IACZD,EAAE,CAACW,GAAG,CAACI,sBAAsB,CAC9B;;EACH,CAAC;EACDO,iBAAiB,EAAE,MAAM;IACvB,OAAOtB,EAAE,CAACW,GAAG,CAACY,iCAAiC;IAC7CrB,oBAAoB,CAAC,CAAC,CAAC;IACvBD,cAAc,EAAE;IAChB,QAAQ;IACRO,kCAAkC,CACnC;;EACH,CAAC;EACDgB,qBAAqB,EAAE,MAAM;IAC3B,OAAOxB,EAAE,CAACW,GAAG,CAACY,iCAAiC;IAC7CrB,oBAAoB,CAAC,CAAC,CAAC;IACvBD,cAAc,EAAE;IAChB,YAAY;IACZO,kCAAkC,CACnC;;EACH,CAAC;EACDiB,iBAAiB,EAAE,MAAM;IACvB,OAAOzB,EAAE,CAACW,GAAG,CAACY,iCAAiC;IAC7CrB,oBAAoB,CAAC,CAAC,CAAC;IACvBD,cAAc,EAAE;IAChB,QAAQ;IACRO,kCAAkC,CACnC;;EACH,CAAC;EACDkB,qBAAqB,EAAE,MAAM;IAC3B,OAAO1B,EAAE,CAACW,GAAG,CAACY,iCAAiC;IAC7CrB,oBAAoB,CAAC,CAAC,CAAC;IACvBD,cAAc,EAAE;IAChB,YAAY;IACZO,kCAAkC,CACnC;;EACH,CAAC;EACDmB,iBAAiB,EAAE,MAAM;IACvB,OAAO3B,EAAE,CAACW,GAAG,CAACY,iCAAiC;IAC7CrB,oBAAoB,CAAC,CAAC,CAAC;IACvBD,cAAc,EAAE;IAChB,QAAQ;IACRO,kCAAkC,CACnC;;EACH,CAAC;EACDoB,qBAAqB,EAAE,MAAM;IAC3B,OAAO5B,EAAE,CAACW,GAAG,CAACY,iCAAiC;IAC7CrB,oBAAoB,CAAC,CAAC,CAAC;IACvBD,cAAc,EAAE;IAChB,YAAY;IACZO,kCAAkC,CACnC;;EACH,CAAC;EACDqB,iBAAiB,EAAE,MAAM;IACvB,OAAO7B,EAAE,CAACW,GAAG,CAACmB,iCAAiC;IAC7C7B,cAAc,EAAE;IAChBC,oBAAoB,CAAC,CAAC,CAAC;IACvB,QAAQ;IACRc,kCAAkC,CACnC;;EACH,CAAC;EACDe,qBAAqB,EAAE,MAAM;IAC3B,OAAO/B,EAAE,CAACW,GAAG,CAACmB,iCAAiC;IAC7C7B,cAAc,EAAE;IAChBC,oBAAoB,CAAC,CAAC,CAAC;IACvB,YAAY;IACZc,kCAAkC,CACnC;;EACH,CAAC;EACDgB,iBAAiB,EAAE,MAAM;IACvB,OAAOhC,EAAE,CAACW,GAAG,CAACmB,iCAAiC;IAC7C7B,cAAc,EAAE;IAChBC,oBAAoB,CAAC,CAAC,CAAC;IACvB,QAAQ;IACRc,kCAAkC,CACnC;;EACH,CAAC;EACDiB,qBAAqB,EAAE,MAAM;IAC3B,OAAOjC,EAAE,CAACW,GAAG,CAACmB,iCAAiC;IAC7C7B,cAAc,EAAE;IAChBC,oBAAoB,CAAC,CAAC,CAAC;IACvB,YAAY;IACZc,kCAAkC,CACnC;;EACH,CAAC;EACDkB,iBAAiB,EAAE,MAAM;IACvB,OAAOlC,EAAE,CAACW,GAAG,CAACmB,iCAAiC;IAC7C7B,cAAc,EAAE;IAChBC,oBAAoB,CAAC,CAAC,CAAC;IACvB,QAAQ;IACRc,kCAAkC,CACnC;;EACH,CAAC;EACDmB,qBAAqB,EAAE,MAAM;IAC3B,OAAOnC,EAAE,CAACW,GAAG,CAACmB,iCAAiC;IAC7C7B,cAAc,EAAE;IAChBC,oBAAoB,CAAC,CAAC,CAAC;IACvB,YAAY;IACZc,kCAAkC,CACnC;;EACH;AACF,CAAC,CAAC;;AAEFC,CAAC,CAACmB,IAAI,CAAC,QAAQ,CAAC;AACbC,OAAO,CAAC,uDAAuD,CAAC;AAChEC,IAAI;AACF;AACL;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAAC;AACtDsC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,KAAK,GAAG,MAAM1B,CAAC,CAAC2B,GAAG;EACvBF,CAAC,CAACJ,MAAM,CAACO,WAAW,KAAK,OAAO,GAAG,cAAc,GAAG,kBAAkB,CACvE;;EACD,MAAMzC,GAAG,CAACsC,CAAC,EAAErC,MAAM,CAAC,GAAG,CAAC,EAAE,CAACR,OAAO,EAAEA,OAAO,CAAC,EAAEA,OAAO,EAAE6C,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACzE,CAAC,CAAC;;AAEJ3B,CAAC,CAACmB,IAAI,CAAC,QAAQ,CAAC;AACbC,OAAO,CAAC,uDAAuD,CAAC;AAChEC,IAAI;AACF;AACL;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAACqC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAU,CAAC;AAC/FC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,KAAK,GAAG,MAAM1B,CAAC,CAAC2B,GAAG;EACvBF,CAAC,CAACJ,MAAM,CAACO,WAAW,KAAK,OAAO,GAAG,cAAc,GAAG,kBAAkB,CAAC;EAAA,CACxE;EACD,MAAMzC,GAAG,CAACsC,CAAC,EAAErC,MAAM,CAAC,GAAG,CAAC,EAAE,CAACR,OAAO,EAAEA,OAAO,CAAC,EAAEA,OAAO,EAAE6C,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACzE,CAAC,CAAC;;AAEJ3B,CAAC,CAACmB,IAAI,CAAC,iBAAiB,CAAC;AACtBC,OAAO,CAAC,uDAAuD,CAAC;AAChEC,IAAI;AACF;AACL;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAACqC,OAAO,CAAC,WAAW,EAAE,CAACM,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAU,CAC9F;;AACAL,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,KAAK,GAAG,MAAM1B,CAAC,CAAC2B,GAAG;EACvBF,CAAC,CAACJ,MAAM,CAACO,WAAW,KAAK,OAAO,GAAG,cAAc,GAAG,kBAAkB,CACvE;;EACD,MAAMzC,GAAG,CAACsC,CAAC,EAAEpC,cAAc,CAAC,IAAI,CAAC,EAAE,CAACT,OAAO,EAAEA,OAAO,CAAC,EAAEA,OAAO,EAAE6C,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AAClF,CAAC,CAAC;;AAEJ3B,CAAC,CAACmB,IAAI,CAAC,eAAe,CAAC;AACpBC,OAAO,CAAC,uDAAuD,CAAC;AAChEC,IAAI;AACF;AACL;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAACqC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAU,CAAC;AACzFC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMK,GAAG,GAAGL,CAAC,CAACJ,MAAM,CAACS,GAAG;EACxB,MAAMJ,KAAK,GAAG,MAAM1B,CAAC,CAAC2B,GAAG;EACvBF,CAAC,CAACJ,MAAM,CAACO,WAAW,KAAK,OAAO,GAAI,MAAKE,GAAI,eAAc,GAAI,MAAKA,GAAI,mBAAkB,CAC3F;;EACD,MAAM3C,GAAG;EACPsC,CAAC;EACDrC,MAAM,CAAC,GAAG,CAAC;EACX,CAACP,OAAO,CAACiD,GAAG,EAAElD,OAAO,CAAC,EAAEA,OAAO,CAAC;EAChCC,OAAO,CAACiD,GAAG,EAAElD,OAAO,CAAC;EACrB6C,CAAC,CAACJ,MAAM;EACRK,KAAK,CACN;;AACH,CAAC,CAAC;;AAEJ3B,CAAC,CAACmB,IAAI,CAAC,wBAAwB,CAAC;AAC7BC,OAAO,CAAC,uDAAuD,CAAC;AAChEC,IAAI;AACF;AACL;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAACqC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAU,CAAC;AACzFC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMK,GAAG,GAAGL,CAAC,CAACJ,MAAM,CAACS,GAAG;EACxB,MAAMJ,KAAK,GAAG,MAAM1B,CAAC,CAAC2B,GAAG;EACvBF,CAAC,CAACJ,MAAM,CAACO,WAAW,KAAK,OAAO,GAAI,MAAKE,GAAI,eAAc,GAAI,MAAKA,GAAI,mBAAkB,CAC3F;;EACD,MAAM3C,GAAG;EACPsC,CAAC;EACDpC,cAAc,CAAC,IAAI,CAAC;EACpB,CAACR,OAAO,CAACiD,GAAG,EAAElD,OAAO,CAAC,EAAEA,OAAO,CAAC;EAChCC,OAAO,CAACiD,GAAG,EAAElD,OAAO,CAAC;EACrB6C,CAAC,CAACJ,MAAM;EACRK,KAAK,CACN;;AACH,CAAC,CAAC;;AAEJ3B,CAAC,CAACmB,IAAI,CAAC,eAAe,CAAC;AACpBC,OAAO,CAAC,uDAAuD,CAAC;AAChEC,IAAI;AACF;AACL;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAACqC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAU,CAAC;AACzFC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMK,GAAG,GAAGL,CAAC,CAACJ,MAAM,CAACS,GAAG;EACxB,MAAMJ,KAAK,GAAG,MAAM1B,CAAC,CAAC2B,GAAG;EACvBF,CAAC,CAACJ,MAAM,CAACO,WAAW,KAAK,OAAO,GAAI,aAAYE,GAAI,QAAO,GAAI,aAAYA,GAAI,YAAW,CAC3F;;EACD,MAAM3C,GAAG;EACPsC,CAAC;EACDrC,MAAM,CAAC,GAAG,CAAC;EACX,CAACR,OAAO,EAAEC,OAAO,CAACiD,GAAG,EAAElD,OAAO,CAAC,CAAC;EAChCC,OAAO,CAACiD,GAAG,EAAElD,OAAO,CAAC;EACrB6C,CAAC,CAACJ,MAAM;EACRK,KAAK,CACN;;AACH,CAAC,CAAC"}