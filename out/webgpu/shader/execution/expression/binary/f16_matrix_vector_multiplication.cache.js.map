{"version":3,"file":"f16_matrix_vector_multiplication.cache.js","names":["FP","sparseMatrixF16Range","sparseVectorF16Range","makeCaseCache","mat_vec_cases","flatMap","cols","rows","map","nonConst","f16","generateMatrixVectorToVectorCases","multiplicationMatrixVectorInterval","reduce","a","b","vec_mat_cases","generateVectorMatrixToVectorCases","multiplicationVectorMatrixInterval","d"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/f16_matrix_vector_multiplication.cache.ts"],"sourcesContent":["import { FP } from '../../../../util/floating_point.js';\nimport { sparseMatrixF16Range, sparseVectorF16Range } from '../../../../util/math.js';\nimport { makeCaseCache } from '../case_cache.js';\n\n// Cases: matCxR_vecC_[non_]const\nconst mat_vec_cases = ([2, 3, 4] as const)\n  .flatMap(cols =>\n    ([2, 3, 4] as const).flatMap(rows =>\n      ([true, false] as const).map(nonConst => ({\n        [`mat${cols}x${rows}_vec${cols}_${nonConst ? 'non_const' : 'const'}`]: () => {\n          return FP.f16.generateMatrixVectorToVectorCases(\n            sparseMatrixF16Range(cols, rows),\n            sparseVectorF16Range(cols),\n            nonConst ? 'unfiltered' : 'finite',\n            FP.f16.multiplicationMatrixVectorInterval\n          );\n        },\n      }))\n    )\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\n// Cases: vecR_matCxR_[non_]const\nconst vec_mat_cases = ([2, 3, 4] as const)\n  .flatMap(rows =>\n    ([2, 3, 4] as const).flatMap(cols =>\n      ([true, false] as const).map(nonConst => ({\n        [`vec${rows}_mat${cols}x${rows}_${nonConst ? 'non_const' : 'const'}`]: () => {\n          return FP.f16.generateVectorMatrixToVectorCases(\n            sparseVectorF16Range(rows),\n            sparseMatrixF16Range(cols, rows),\n            nonConst ? 'unfiltered' : 'finite',\n            FP.f16.multiplicationVectorMatrixInterval\n          );\n        },\n      }))\n    )\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('binary/f16_matrix_vector_multiplication', {\n  ...mat_vec_cases,\n  ...vec_mat_cases,\n});\n"],"mappings":";;GAAA,SAASA,EAAE,QAAQ,oCAAoC,CACvD,SAASC,oBAAoB,EAAEC,oBAAoB,QAAQ,0BAA0B,CACrF,SAASC,aAAa,QAAQ,kBAAkB;;AAEhD;AACA,MAAMC,aAAa,GAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC7BC,OAAO,CAAC,CAAAC,IAAI;AACV,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAWD,OAAO,CAAC,CAAAE,IAAI;AAC9B,CAAC,IAAI,EAAE,KAAK,CAAC,CAAWC,GAAG,CAAC,CAAAC,QAAQ,MAAK;EACxC,CAAE,MAAKH,IAAK,IAAGC,IAAK,OAAMD,IAAK,IAAGG,QAAQ,GAAG,WAAW,GAAG,OAAQ,EAAC,GAAG,MAAM;IAC3E,OAAOT,EAAE,CAACU,GAAG,CAACC,iCAAiC;MAC7CV,oBAAoB,CAACK,IAAI,EAAEC,IAAI,CAAC;MAChCL,oBAAoB,CAACI,IAAI,CAAC;MAC1BG,QAAQ,GAAG,YAAY,GAAG,QAAQ;MAClCT,EAAE,CAACU,GAAG,CAACE;IACT,CAAC;EACH;AACF,CAAC,CAAC;AACJ;AACF,CAAC;AACAC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM,EAAE,GAAGD,CAAC,EAAE,GAAGC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEzC;AACA,MAAMC,aAAa,GAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC7BX,OAAO,CAAC,CAAAE,IAAI;AACV,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAWF,OAAO,CAAC,CAAAC,IAAI;AAC9B,CAAC,IAAI,EAAE,KAAK,CAAC,CAAWE,GAAG,CAAC,CAAAC,QAAQ,MAAK;EACxC,CAAE,MAAKF,IAAK,OAAMD,IAAK,IAAGC,IAAK,IAAGE,QAAQ,GAAG,WAAW,GAAG,OAAQ,EAAC,GAAG,MAAM;IAC3E,OAAOT,EAAE,CAACU,GAAG,CAACO,iCAAiC;MAC7Cf,oBAAoB,CAACK,IAAI,CAAC;MAC1BN,oBAAoB,CAACK,IAAI,EAAEC,IAAI,CAAC;MAChCE,QAAQ,GAAG,YAAY,GAAG,QAAQ;MAClCT,EAAE,CAACU,GAAG,CAACQ;IACT,CAAC;EACH;AACF,CAAC,CAAC;AACJ;AACF,CAAC;AACAL,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM,EAAE,GAAGD,CAAC,EAAE,GAAGC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEzC,OAAO,MAAMI,CAAC,GAAGhB,aAAa,CAAC,yCAAyC,EAAE;EACxE,GAAGC,aAAa;EAChB,GAAGY;AACL,CAAC,CAAC"}