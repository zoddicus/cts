{"version":3,"file":"f16_comparison.spec.js","names":["description","makeTestGroup","GPUTest","anyOf","bool","f16","TypeBool","TypeF16","flushSubnormalNumberF16","vectorF16Range","makeCaseCache","allInputSources","run","binary","g","makeCase","lhs","rhs","truthFunc","f16_lhs","f16_rhs","lhs_options","Set","rhs_options","expected","forEach","l","r","result","includes","push","input","d","equals_non_const","value","map","v","equals_const","not_equals_non_const","not_equals_const","less_than_non_const","less_than_const","less_equals_non_const","less_equals_const","greater_than_non_const","greater_than_const","greater_equals_non_const","greater_equals_const","test","specURL","desc","beforeAllSubcases","t","selectDeviceOrSkipTestCase","requiredFeatures","params","u","combine","undefined","fn","cases","get","inputSource"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/f16_comparison.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for the f16 comparison operations\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { anyOf } from '../../../../util/compare.js';\nimport { bool, f16, Scalar, TypeBool, TypeF16 } from '../../../../util/conversion.js';\nimport { flushSubnormalNumberF16, vectorF16Range } from '../../../../util/math.js';\nimport { makeCaseCache } from '../case_cache.js';\nimport { allInputSources, Case, run } from '../expression.js';\n\nimport { binary } from './binary.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n/**\n * @returns a test case for the provided left hand & right hand values and truth function.\n * Handles quantization and subnormals.\n */\nfunction makeCase(\n  lhs: number,\n  rhs: number,\n  truthFunc: (lhs: Scalar, rhs: Scalar) => boolean\n): Case {\n  // Subnormal float values may be flushed at any time.\n  // https://www.w3.org/TR/WGSL/#floating-point-evaluation\n  const f16_lhs = f16(lhs);\n  const f16_rhs = f16(rhs);\n  const lhs_options = new Set([f16_lhs, f16(flushSubnormalNumberF16(lhs))]);\n  const rhs_options = new Set([f16_rhs, f16(flushSubnormalNumberF16(rhs))]);\n  const expected: Array<Scalar> = [];\n  lhs_options.forEach(l => {\n    rhs_options.forEach(r => {\n      const result = bool(truthFunc(l, r));\n      if (!expected.includes(result)) {\n        expected.push(result);\n      }\n    });\n  });\n\n  return { input: [f16_lhs, f16_rhs], expected: anyOf(...expected) };\n}\n\nexport const d = makeCaseCache('binary/f16_logical', {\n  equals_non_const: () => {\n    const truthFunc = (lhs: Scalar, rhs: Scalar): boolean => {\n      return (lhs.value as number) === (rhs.value as number);\n    };\n\n    return vectorF16Range(2).map(v => {\n      return makeCase(v[0], v[1], truthFunc);\n    });\n  },\n  equals_const: () => {\n    const truthFunc = (lhs: Scalar, rhs: Scalar): boolean => {\n      return (lhs.value as number) === (rhs.value as number);\n    };\n\n    return vectorF16Range(2).map(v => {\n      return makeCase(v[0], v[1], truthFunc);\n    });\n  },\n  not_equals_non_const: () => {\n    const truthFunc = (lhs: Scalar, rhs: Scalar): boolean => {\n      return (lhs.value as number) !== (rhs.value as number);\n    };\n\n    return vectorF16Range(2).map(v => {\n      return makeCase(v[0], v[1], truthFunc);\n    });\n  },\n  not_equals_const: () => {\n    const truthFunc = (lhs: Scalar, rhs: Scalar): boolean => {\n      return (lhs.value as number) !== (rhs.value as number);\n    };\n\n    return vectorF16Range(2).map(v => {\n      return makeCase(v[0], v[1], truthFunc);\n    });\n  },\n  less_than_non_const: () => {\n    const truthFunc = (lhs: Scalar, rhs: Scalar): boolean => {\n      return (lhs.value as number) < (rhs.value as number);\n    };\n\n    return vectorF16Range(2).map(v => {\n      return makeCase(v[0], v[1], truthFunc);\n    });\n  },\n  less_than_const: () => {\n    const truthFunc = (lhs: Scalar, rhs: Scalar): boolean => {\n      return (lhs.value as number) < (rhs.value as number);\n    };\n\n    return vectorF16Range(2).map(v => {\n      return makeCase(v[0], v[1], truthFunc);\n    });\n  },\n  less_equals_non_const: () => {\n    const truthFunc = (lhs: Scalar, rhs: Scalar): boolean => {\n      return (lhs.value as number) <= (rhs.value as number);\n    };\n\n    return vectorF16Range(2).map(v => {\n      return makeCase(v[0], v[1], truthFunc);\n    });\n  },\n  less_equals_const: () => {\n    const truthFunc = (lhs: Scalar, rhs: Scalar): boolean => {\n      return (lhs.value as number) <= (rhs.value as number);\n    };\n\n    return vectorF16Range(2).map(v => {\n      return makeCase(v[0], v[1], truthFunc);\n    });\n  },\n  greater_than_non_const: () => {\n    const truthFunc = (lhs: Scalar, rhs: Scalar): boolean => {\n      return (lhs.value as number) > (rhs.value as number);\n    };\n\n    return vectorF16Range(2).map(v => {\n      return makeCase(v[0], v[1], truthFunc);\n    });\n  },\n  greater_than_const: () => {\n    const truthFunc = (lhs: Scalar, rhs: Scalar): boolean => {\n      return (lhs.value as number) > (rhs.value as number);\n    };\n\n    return vectorF16Range(2).map(v => {\n      return makeCase(v[0], v[1], truthFunc);\n    });\n  },\n  greater_equals_non_const: () => {\n    const truthFunc = (lhs: Scalar, rhs: Scalar): boolean => {\n      return (lhs.value as number) >= (rhs.value as number);\n    };\n\n    return vectorF16Range(2).map(v => {\n      return makeCase(v[0], v[1], truthFunc);\n    });\n  },\n  greater_equals_const: () => {\n    const truthFunc = (lhs: Scalar, rhs: Scalar): boolean => {\n      return (lhs.value as number) >= (rhs.value as number);\n    };\n\n    return vectorF16Range(2).map(v => {\n      return makeCase(v[0], v[1], truthFunc);\n    });\n  },\n});\n\ng.test('equals')\n  .specURL('https://www.w3.org/TR/WGSL/#comparison-expr')\n  .desc(\n    `\nExpression: x == y\nAccuracy: Correct result\n`\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'equals_const' : 'equals_non_const'\n    );\n    await run(t, binary('=='), [TypeF16, TypeF16], TypeBool, t.params, cases);\n  });\n\ng.test('not_equals')\n  .specURL('https://www.w3.org/TR/WGSL/#comparison-expr')\n  .desc(\n    `\nExpression: x != y\nAccuracy: Correct result\n`\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'not_equals_const' : 'not_equals_non_const'\n    );\n    await run(t, binary('!='), [TypeF16, TypeF16], TypeBool, t.params, cases);\n  });\n\ng.test('less_than')\n  .specURL('https://www.w3.org/TR/WGSL/#comparison-expr')\n  .desc(\n    `\nExpression: x < y\nAccuracy: Correct result\n`\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'less_than_const' : 'less_than_non_const'\n    );\n    await run(t, binary('<'), [TypeF16, TypeF16], TypeBool, t.params, cases);\n  });\n\ng.test('less_equals')\n  .specURL('https://www.w3.org/TR/WGSL/#comparison-expr')\n  .desc(\n    `\nExpression: x <= y\nAccuracy: Correct result\n`\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'less_equals_const' : 'less_equals_non_const'\n    );\n    await run(t, binary('<='), [TypeF16, TypeF16], TypeBool, t.params, cases);\n  });\n\ng.test('greater_than')\n  .specURL('https://www.w3.org/TR/WGSL/#comparison-expr')\n  .desc(\n    `\nExpression: x > y\nAccuracy: Correct result\n`\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'greater_than_const' : 'greater_than_non_const'\n    );\n    await run(t, binary('>'), [TypeF16, TypeF16], TypeBool, t.params, cases);\n  });\n\ng.test('greater_equals')\n  .specURL('https://www.w3.org/TR/WGSL/#comparison-expr')\n  .desc(\n    `\nExpression: x >= y\nAccuracy: Correct result\n`\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  })\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'greater_equals_const' : 'greater_equals_non_const'\n    );\n    await run(t, binary('>='), [TypeF16, TypeF16], TypeBool, t.params, cases);\n  });\n"],"mappings":"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"}