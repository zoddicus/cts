{"version":3,"file":"f16_matrix_addition.cache.js","names":["FP","sparseMatrixF16Range","makeCaseCache","mat_cases","flatMap","cols","rows","map","nonConst","f16","generateMatrixPairToMatrixCases","additionMatrixMatrixInterval","reduce","a","b","d"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/f16_matrix_addition.cache.ts"],"sourcesContent":["import { FP } from '../../../../util/floating_point.js';\nimport { sparseMatrixF16Range } from '../../../../util/math.js';\nimport { makeCaseCache } from '../case_cache.js';\n\n// Cases: matCxR_[non_]const\nconst mat_cases = ([2, 3, 4] as const)\n  .flatMap(cols =>\n    ([2, 3, 4] as const).flatMap(rows =>\n      ([true, false] as const).map(nonConst => ({\n        [`mat${cols}x${rows}_${nonConst ? 'non_const' : 'const'}`]: () => {\n          return FP.f16.generateMatrixPairToMatrixCases(\n            sparseMatrixF16Range(cols, rows),\n            sparseMatrixF16Range(cols, rows),\n            nonConst ? 'unfiltered' : 'finite',\n            FP.f16.additionMatrixMatrixInterval\n          );\n        },\n      }))\n    )\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('binary/f16_matrix_addition', mat_cases);\n"],"mappings":";;GAAA,SAASA,EAAE,QAAQ,oCAAoC,CACvD,SAASC,oBAAoB,QAAQ,0BAA0B,CAC/D,SAASC,aAAa,QAAQ,kBAAkB;;AAEhD;AACA,MAAMC,SAAS,GAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACzBC,OAAO,CAAC,CAAAC,IAAI;AACV,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAWD,OAAO,CAAC,CAAAE,IAAI;AAC9B,CAAC,IAAI,EAAE,KAAK,CAAC,CAAWC,GAAG,CAAC,CAAAC,QAAQ,MAAK;EACxC,CAAE,MAAKH,IAAK,IAAGC,IAAK,IAAGE,QAAQ,GAAG,WAAW,GAAG,OAAQ,EAAC,GAAG,MAAM;IAChE,OAAOR,EAAE,CAACS,GAAG,CAACC,+BAA+B;MAC3CT,oBAAoB,CAACI,IAAI,EAAEC,IAAI,CAAC;MAChCL,oBAAoB,CAACI,IAAI,EAAEC,IAAI,CAAC;MAChCE,QAAQ,GAAG,YAAY,GAAG,QAAQ;MAClCR,EAAE,CAACS,GAAG,CAACE;IACT,CAAC;EACH;AACF,CAAC,CAAC;AACJ;AACF,CAAC;AACAC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM,EAAE,GAAGD,CAAC,EAAE,GAAGC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEzC,OAAO,MAAMC,CAAC,GAAGb,aAAa,CAAC,4BAA4B,EAAEC,SAAS,CAAC"}