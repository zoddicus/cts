{"version":3,"file":"af_matrix_addition.spec.js","names":["description","makeTestGroup","GPUTest","TypeAbstractFloat","TypeMat","FP","sparseMatrixF64Range","makeCaseCache","onlyConstInputSource","run","abstractBinary","g","mat_cases","flatMap","cols","map","rows","abstract","generateMatrixPairToMatrixCases","additionMatrixMatrixInterval","reduce","a","b","d","test","specURL","desc","params","u","combine","fn","t","cases","get"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/af_matrix_addition.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for matrix AbstractFloat addition expressions\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { TypeAbstractFloat, TypeMat } from '../../../../util/conversion.js';\nimport { FP } from '../../../../util/floating_point.js';\nimport { sparseMatrixF64Range } from '../../../../util/math.js';\nimport { makeCaseCache } from '../case_cache.js';\nimport { onlyConstInputSource, run } from '../expression.js';\n\nimport { abstractBinary } from './binary.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n// Cases: matCxR\nconst mat_cases = ([2, 3, 4] as const)\n  .flatMap(cols =>\n    ([2, 3, 4] as const).map(rows => ({\n      [`mat${cols}x${rows}`]: () => {\n        return FP.abstract.generateMatrixPairToMatrixCases(\n          sparseMatrixF64Range(cols, rows),\n          sparseMatrixF64Range(cols, rows),\n          'finite',\n          FP.abstract.additionMatrixMatrixInterval\n        );\n      },\n    }))\n  )\n  .reduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('binary/af_matrix_addition', mat_cases);\n\ng.test('matrix')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x + y, where x and y are matrices\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', onlyConstInputSource)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(`mat${cols}x${rows}`);\n    await run(\n      t,\n      abstractBinary('+'),\n      [TypeMat(cols, rows, TypeAbstractFloat), TypeMat(cols, rows, TypeAbstractFloat)],\n      TypeMat(cols, rows, TypeAbstractFloat),\n      t.params,\n      cases\n    );\n  });\n"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,+CAA+C;AAC7E,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,iBAAiB,EAAEC,OAAO,QAAQ,gCAAgC;AAC3E,SAASC,EAAE,QAAQ,oCAAoC;AACvD,SAASC,oBAAoB,QAAQ,0BAA0B;AAC/D,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,oBAAoB,EAAEC,GAAG,QAAQ,kBAAkB;;AAE5D,SAASC,cAAc,QAAQ,aAAa;;AAE5C,OAAO,MAAMC,CAAC,GAAGV,aAAa,CAACC,OAAO,CAAC;;AAEvC;AACA,MAAMU,SAAS,GAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACzBC,OAAO,CAAC,CAAAC,IAAI;AACV,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAWC,GAAG,CAAC,CAAAC,IAAI,MAAK;EAChC,CAAE,MAAKF,IAAK,IAAGE,IAAK,EAAC,GAAG,MAAM;IAC5B,OAAOX,EAAE,CAACY,QAAQ,CAACC,+BAA+B;MAChDZ,oBAAoB,CAACQ,IAAI,EAAEE,IAAI,CAAC;MAChCV,oBAAoB,CAACQ,IAAI,EAAEE,IAAI,CAAC;MAChC,QAAQ;MACRX,EAAE,CAACY,QAAQ,CAACE;IACd,CAAC;EACH;AACF,CAAC,CAAC;AACJ,CAAC;AACAC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM,EAAE,GAAGD,CAAC,EAAE,GAAGC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEzC,OAAO,MAAMC,CAAC,GAAGhB,aAAa,CAAC,2BAA2B,EAAEK,SAAS,CAAC;;AAEtED,CAAC,CAACa,IAAI,CAAC,QAAQ,CAAC;AACbC,OAAO,CAAC,uDAAuD,CAAC;AAChEC,IAAI;EACF;AACL;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,aAAa,EAAErB,oBAAoB,CAAC;AAC5CqB,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAU,CAAC;AACnCA,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAU;AACvC,CAAC;AACAC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMjB,IAAI,GAAGiB,CAAC,CAACJ,MAAM,CAACb,IAAI;EAC1B,MAAME,IAAI,GAAGe,CAAC,CAACJ,MAAM,CAACX,IAAI;EAC1B,MAAMgB,KAAK,GAAG,MAAMT,CAAC,CAACU,GAAG,CAAE,MAAKnB,IAAK,IAAGE,IAAK,EAAC,CAAC;EAC/C,MAAMP,GAAG;IACPsB,CAAC;IACDrB,cAAc,CAAC,GAAG,CAAC;IACnB,CAACN,OAAO,CAACU,IAAI,EAAEE,IAAI,EAAEb,iBAAiB,CAAC,EAAEC,OAAO,CAACU,IAAI,EAAEE,IAAI,EAAEb,iBAAiB,CAAC,CAAC;IAChFC,OAAO,CAACU,IAAI,EAAEE,IAAI,EAAEb,iBAAiB,CAAC;IACtC4B,CAAC,CAACJ,MAAM;IACRK;EACF,CAAC;AACH,CAAC,CAAC"}