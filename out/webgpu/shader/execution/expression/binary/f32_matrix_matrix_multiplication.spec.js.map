{"version":3,"file":"f32_matrix_matrix_multiplication.spec.js","names":["description","makeTestGroup","GPUTest","TypeF32","TypeMat","FP","sparseMatrixF32Range","makeCaseCache","allInputSources","run","binary","compoundBinary","g","d","mat2x2_mat2x2_const","f32","generateMatrixPairToMatrixCases","multiplicationMatrixMatrixInterval","mat2x2_mat2x2_non_const","mat2x3_mat2x2_const","mat2x3_mat2x2_non_const","mat2x2_mat3x2_const","mat2x2_mat3x2_non_const","mat2x3_mat3x2_const","mat2x3_mat3x2_non_const","mat2x4_mat2x2_const","mat2x4_mat2x2_non_const","mat2x2_mat4x2_const","mat2x2_mat4x2_non_const","mat2x4_mat4x2_const","mat2x4_mat4x2_non_const","mat2x3_mat4x2_const","mat2x3_mat4x2_non_const","mat2x4_mat3x2_const","mat2x4_mat3x2_non_const","mat3x3_mat3x3_const","mat3x3_mat3x3_non_const","mat3x2_mat3x3_const","mat3x2_mat3x3_non_const","mat3x3_mat2x3_const","mat3x3_mat2x3_non_const","mat3x2_mat2x3_const","mat3x2_mat2x3_non_const","mat3x4_mat3x3_const","mat3x4_mat3x3_non_const","mat3x3_mat4x3_const","mat3x3_mat4x3_non_const","mat3x4_mat4x3_const","mat3x4_mat4x3_non_const","mat3x2_mat4x3_const","mat3x2_mat4x3_non_const","mat3x4_mat2x3_const","mat3x4_mat2x3_non_const","mat4x4_mat4x4_const","mat4x4_mat4x4_non_const","mat4x2_mat4x4_const","mat4x2_mat4x4_non_const","mat4x4_mat2x4_const","mat4x4_mat2x4_non_const","mat4x2_mat2x4_const","mat4x2_mat2x4_non_const","mat4x3_mat4x4_const","mat4x3_mat4x4_non_const","mat4x4_mat3x4_const","mat4x4_mat3x4_non_const","mat4x3_mat3x4_const","mat4x3_mat3x4_non_const","mat4x2_mat3x4_const","mat4x2_mat3x4_non_const","mat4x3_mat2x4_const","mat4x3_mat2x4_non_const","test","specURL","desc","params","u","combine","fn","t","x_cols","common_dim","x_rows","y_cols","y_rows","cases","get","inputSource"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/f32_matrix_matrix_multiplication.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for matrix-matrix f32 multiplication expression\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { TypeF32, TypeMat } from '../../../../util/conversion.js';\nimport { FP } from '../../../../util/floating_point.js';\nimport { sparseMatrixF32Range } from '../../../../util/math.js';\nimport { makeCaseCache } from '../case_cache.js';\nimport { allInputSources, run } from '../expression.js';\n\nimport { binary, compoundBinary } from './binary.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('binary/f32_matrix_matrix_multiplication', {\n  mat2x2_mat2x2_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(2, 2),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat2x2_mat2x2_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(2, 2),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat2x3_mat2x2_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(2, 2),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat2x3_mat2x2_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(2, 2),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat2x2_mat3x2_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(3, 2),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat2x2_mat3x2_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(3, 2),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat2x3_mat3x2_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(3, 2),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat2x3_mat3x2_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(3, 2),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat2x4_mat2x2_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(2, 2),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat2x4_mat2x2_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(2, 2),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat2x2_mat4x2_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(4, 2),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat2x2_mat4x2_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(4, 2),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat2x4_mat4x2_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(4, 2),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat2x4_mat4x2_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(4, 2),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat2x3_mat4x2_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(4, 2),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat2x3_mat4x2_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(4, 2),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat2x4_mat3x2_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(3, 2),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat2x4_mat3x2_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(3, 2),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat3x3_mat3x3_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(3, 3),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat3x3_mat3x3_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(3, 3),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat3x2_mat3x3_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(3, 3),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat3x2_mat3x3_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(3, 3),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat3x3_mat2x3_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(2, 3),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat3x3_mat2x3_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(2, 3),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat3x2_mat2x3_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(2, 3),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat3x2_mat2x3_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(2, 3),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat3x4_mat3x3_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(3, 3),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat3x4_mat3x3_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(3, 3),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat3x3_mat4x3_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(4, 3),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat3x3_mat4x3_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(4, 3),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat3x4_mat4x3_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(4, 3),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat3x4_mat4x3_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(4, 3),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat3x2_mat4x3_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(4, 3),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat3x2_mat4x3_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(4, 3),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat3x4_mat2x3_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(2, 3),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat3x4_mat2x3_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(2, 3),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat4x4_mat4x4_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(4, 4),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat4x4_mat4x4_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(4, 4),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat4x2_mat4x4_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(4, 4),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat4x2_mat4x4_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(4, 4),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat4x4_mat2x4_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(2, 4),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat4x4_mat2x4_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(2, 4),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat4x2_mat2x4_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(2, 4),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat4x2_mat2x4_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(2, 4),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat4x3_mat4x4_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(4, 4),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat4x3_mat4x4_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(4, 4),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat4x4_mat3x4_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(3, 4),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat4x4_mat3x4_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(3, 4),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat4x3_mat3x4_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(3, 4),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat4x3_mat3x4_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(3, 4),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat4x2_mat3x4_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(3, 4),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat4x2_mat3x4_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(3, 4),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat4x3_mat2x4_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(2, 4),\n      'finite',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n  mat4x3_mat2x4_non_const: () => {\n    return FP.f32.generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(2, 4),\n      'unfiltered',\n      FP.f32.multiplicationMatrixMatrixInterval\n    );\n  },\n});\n\ng.test('matrix_matrix')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x is a matrix and y is a matrix\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('common_dim', [2, 3, 4] as const)\n      .combine('x_rows', [2, 3, 4] as const)\n      .combine('y_cols', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const x_cols = t.params.common_dim;\n    const x_rows = t.params.x_rows;\n    const y_cols = t.params.y_cols;\n    const y_rows = t.params.common_dim;\n\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `mat${x_cols}x${x_rows}_mat${y_cols}x${y_rows}_const`\n        : `mat${x_cols}x${x_rows}_mat${y_cols}x${y_rows}_non_const`\n    );\n    await run(\n      t,\n      binary('*'),\n      [TypeMat(x_cols, x_rows, TypeF32), TypeMat(y_cols, y_rows, TypeF32)],\n      TypeMat(y_cols, x_rows, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('matrix_matrix_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x *= y, where x is a matrix and y is a matrix\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('common_dim', [2, 3, 4] as const)\n      .combine('x_rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const x_cols = t.params.common_dim;\n    const x_rows = t.params.x_rows;\n    const y_cols = x_cols;\n    const y_rows = t.params.common_dim;\n\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `mat${x_cols}x${x_rows}_mat${y_cols}x${y_rows}_const`\n        : `mat${x_cols}x${x_rows}_mat${y_cols}x${y_rows}_non_const`\n    );\n    await run(\n      t,\n      compoundBinary('*='),\n      [TypeMat(x_cols, x_rows, TypeF32), TypeMat(y_cols, y_rows, TypeF32)],\n      TypeMat(y_cols, x_rows, TypeF32),\n      t.params,\n      cases\n    );\n  });\n"],"mappings":"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"}