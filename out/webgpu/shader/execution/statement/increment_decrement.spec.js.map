{"version":3,"file":"increment_decrement.spec.js","names":["description","makeTestGroup","GPUTest","kValue","g","runStatementTest","t","fmt","values","wgsl_main","wgsl","pipeline","device","createComputePipeline","layout","compute","module","createShaderModule","code","entryPoint","maxOutputValues","outputBuffer","createBuffer","size","usage","GPUBufferUsage","STORAGE","COPY_SRC","bindGroup","createBindGroup","getBindGroupLayout","entries","binding","resource","buffer","encoder","createCommandEncoder","pass","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","end","queue","submit","finish","expectGPUBufferValuesEqual","test","desc","fn","Int32Array","i32","negative","min","positive","max","Uint32Array","u32"],"sources":["../../../../../src/webgpu/shader/execution/statement/increment_decrement.spec.ts"],"sourcesContent":["export const description = `\nIncrement and decrement statement tests.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { TypedArrayBufferView } from '../../../../common/util/util.js';\nimport { GPUTest } from '../../../gpu_test.js';\nimport { kValue } from '../../../util/constants.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n/**\n * Builds, runs then checks the output of a statement shader test.\n *\n * @param t The test object\n * @param builder The shader builder function that takes a\n * StatementTestBuilder as the single argument, and returns either a WGSL\n * string which is embedded into the WGSL entrypoint function, or a structure\n * with entrypoint-scoped WGSL code and extra module-scope WGSL code.\n */\nexport function runStatementTest(\n  t: GPUTest,\n  fmt: string,\n  values: TypedArrayBufferView,\n  wgsl_main: string\n) {\n  const wgsl = `\nstruct Outputs {\n  data  : array<${fmt}>,\n};\nvar<private> count: u32 = 0;\n\n@group(0) @binding(1) var<storage, read_write> outputs : Outputs;\n\nfn push_output(value : ${fmt}) {\n  outputs.data[count] = value;\n  count += 1;\n}\n\n@compute @workgroup_size(1)\nfn main() {\n  _ = &outputs;\n  ${wgsl_main}\n}\n`;\n\n  const pipeline = t.device.createComputePipeline({\n    layout: 'auto',\n    compute: {\n      module: t.device.createShaderModule({ code: wgsl }),\n      entryPoint: 'main',\n    },\n  });\n\n  const maxOutputValues = 1000;\n  const outputBuffer = t.device.createBuffer({\n    size: 4 * (1 + maxOutputValues),\n    usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC,\n  });\n\n  const bindGroup = t.device.createBindGroup({\n    layout: pipeline.getBindGroupLayout(0),\n    entries: [{ binding: 1, resource: { buffer: outputBuffer } }],\n  });\n\n  // Run the shader.\n  const encoder = t.device.createCommandEncoder();\n  const pass = encoder.beginComputePass();\n  pass.setPipeline(pipeline);\n  pass.setBindGroup(0, bindGroup);\n  pass.dispatchWorkgroups(1);\n  pass.end();\n  t.queue.submit([encoder.finish()]);\n\n  t.expectGPUBufferValuesEqual(outputBuffer, values);\n}\n\ng.test('scalar_i32_increment')\n  .desc('Tests increment of scalar i32 values')\n  .fn(t => {\n    runStatementTest(\n      t,\n      'i32',\n      new Int32Array([-9, 11, kValue.i32.negative.min + 1, kValue.i32.positive.max, 1]),\n      `\n    var a: i32 = -10;\n    var b: i32 = 10;\n    var c: i32 = ${kValue.i32.negative.min};\n    var d: i32 = ${kValue.i32.positive.max - 1};\n    var e: i32 = 0;\n\n    a++;\n    b++;\n    c++;\n    d++;\n    e++;\n\n    push_output(a);\n    push_output(b);\n    push_output(c);\n    push_output(d);\n    push_output(e);\n`\n    );\n  });\n\ng.test('scalar_i32_increment_overflow')\n  .desc('Tests increment of scalar i32 values which overflows')\n  .fn(t => {\n    runStatementTest(\n      t,\n      'i32',\n      new Int32Array([kValue.i32.negative.min]),\n      `\n    var a: i32 = ${kValue.i32.positive.max};\n    a++;\n    push_output(a);\n`\n    );\n  });\n\ng.test('scalar_u32_increment')\n  .desc('Tests increment of scalar u32 values')\n  .fn(t => {\n    runStatementTest(\n      t,\n      'u32',\n      new Uint32Array([1, 11, kValue.u32.max]),\n      `\n    var a: u32 = 0;\n    var b: u32 = 10;\n    var c: u32 = ${kValue.u32.max - 1};\n\n    a++;\n    b++;\n    c++;\n\n    push_output(a);\n    push_output(b);\n    push_output(c);\n`\n    );\n  });\n\ng.test('scalar_u32_increment_overflow')\n  .desc('Tests increment of scalar u32 values which overflows')\n  .fn(t => {\n    runStatementTest(\n      t,\n      'u32',\n      new Uint32Array([0]),\n      `\n    var a: u32 = ${kValue.u32.max};\n    a++;\n    push_output(a);\n`\n    );\n  });\n\ng.test('scalar_i32_decrement')\n  .desc('Tests decrement of scalar i32 values')\n  .fn(t => {\n    runStatementTest(\n      t,\n      'i32',\n      new Int32Array([-11, 9, kValue.i32.negative.min, kValue.i32.positive.max - 1, -1]),\n      `\n    var a: i32 = -10;\n    var b: i32 = 10;\n    var c: i32 = ${kValue.i32.negative.min + 1};\n    var d: i32 = ${kValue.i32.positive.max};\n    var e: i32 = 0;\n\n    a--;\n    b--;\n    c--;\n    d--;\n    e--;\n\n    push_output(a);\n    push_output(b);\n    push_output(c);\n    push_output(d);\n    push_output(e);\n`\n    );\n  });\n\ng.test('scalar_i32_decrement_underflow')\n  .desc('Tests decrement of scalar i32 values which underflow')\n  .fn(t => {\n    runStatementTest(\n      t,\n      'i32',\n      new Int32Array([kValue.i32.positive.max]),\n      `\n    var a: i32 = ${kValue.i32.negative.min};\n    a--;\n    push_output(a);\n`\n    );\n  });\n\ng.test('scalar_u32_decrement')\n  .desc('Tests decrement of scalar u32 values')\n  .fn(t => {\n    runStatementTest(\n      t,\n      'u32',\n      new Uint32Array([0, 9, kValue.u32.max - 1]),\n      `\n    var a: u32 = 1;\n    var b: u32 = 10;\n    var c: u32 = ${kValue.u32.max};\n\n    a--;\n    b--;\n    c--;\n\n    push_output(a);\n    push_output(b);\n    push_output(c);\n`\n    );\n  });\n\ng.test('scalar_u32_decrement_underflow')\n  .desc('Tests decrement of scalar u32 values which underflow')\n  .fn(t => {\n    runStatementTest(\n      t,\n      'u32',\n      new Uint32Array([kValue.u32.max]),\n      `\n    var a: u32 = 0;\n    a--;\n    push_output(a);\n`\n    );\n  });\n\ng.test('vec2_element_increment')\n  .desc('Tests increment of ve2 values')\n  .fn(t => {\n    runStatementTest(\n      t,\n      'i32',\n      new Int32Array([-9, 11]),\n      `\n    var a = vec2(-10, 10);\n\n    a.x++;\n    a.g++;\n\n    push_output(a.x);\n    push_output(a.y);\n`\n    );\n  });\n\ng.test('vec3_element_increment')\n  .desc('Tests increment of vec3 values')\n  .fn(t => {\n    runStatementTest(\n      t,\n      'i32',\n      new Int32Array([-9, 11, kValue.i32.negative.min + 1]),\n      `\n    var a = vec3(-10, 10, ${kValue.i32.negative.min});\n\n    a.x++;\n    a.g++;\n    a.z++;\n\n    push_output(a.x);\n    push_output(a.y);\n    push_output(a.z);\n`\n    );\n  });\n\ng.test('vec4_element_increment')\n  .desc('Tests increment of vec4 values')\n  .fn(t => {\n    runStatementTest(\n      t,\n      'i32',\n      new Int32Array([-9, 11, kValue.i32.negative.min + 1, kValue.i32.positive.max]),\n      `\n    var a: vec4<i32> = vec4(-10, 10, ${kValue.i32.negative.min}, ${kValue.i32.positive.max - 1});\n\n    a.x++;\n    a.g++;\n    a.z++;\n    a.a++;\n\n    push_output(a.x);\n    push_output(a.y);\n    push_output(a.z);\n    push_output(a.w);\n`\n    );\n  });\n\ng.test('vec2_element_decrement')\n  .desc('Tests decrement of vec2 values')\n  .fn(t => {\n    runStatementTest(\n      t,\n      'i32',\n      new Int32Array([-11, 9]),\n      `\n    var a = vec2(-10, 10);\n\n    a.x--;\n    a.g--;\n\n    push_output(a.x);\n    push_output(a.y);\n`\n    );\n  });\n\ng.test('vec3_element_decrement')\n  .desc('Tests decrement of vec3 values')\n  .fn(t => {\n    runStatementTest(\n      t,\n      'i32',\n      new Int32Array([-11, 9, kValue.i32.negative.min]),\n      `\n    var a = vec3(-10, 10, ${kValue.i32.negative.min + 1});\n\n    a.x--;\n    a.g--;\n    a.z--;\n\n    push_output(a.x);\n    push_output(a.y);\n    push_output(a.z);\n`\n    );\n  });\n\ng.test('vec4_element_decrement')\n  .desc('Tests decrement of vec4 values')\n  .fn(t => {\n    runStatementTest(\n      t,\n      'i32',\n      new Int32Array([-11, 9, kValue.i32.negative.min, kValue.i32.positive.max - 1]),\n      `\n    var a: vec4<i32> = vec4(-10, 10, ${kValue.i32.negative.min + 1}, ${kValue.i32.positive.max});\n\n    a.x--;\n    a.g--;\n    a.z--;\n    a.a--;\n\n    push_output(a.x);\n    push_output(a.y);\n    push_output(a.z);\n    push_output(a.w);\n`\n    );\n  });\n\ng.test('frexp_exp_increment')\n  .desc('Tests increment can be used on a frexp field')\n  .fn(t => {\n    runStatementTest(\n      t,\n      'i32',\n      new Int32Array([2]),\n      `\n    var a = frexp(1.23);\n    a.exp++;\n    push_output(a.exp);\n`\n    );\n  });\n"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,4CAA4C;;AAE1E,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,MAAM,QAAQ,4BAA4B;;AAEnD,OAAO,MAAMC,CAAC,GAAGH,aAAa,CAACC,OAAO,CAAC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,gBAAgBA;AAC9BC,CAAU;AACVC,GAAW;AACXC,MAA4B;AAC5BC,SAAiB;AACjB;EACA,MAAMC,IAAI,GAAI;AAChB;AACA,kBAAkBH,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA,yBAAyBA,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIE,SAAU;AACd;AACA,CAAC;;EAEC,MAAME,QAAQ,GAAGL,CAAC,CAACM,MAAM,CAACC,qBAAqB,CAAC;IAC9CC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAEV,CAAC,CAACM,MAAM,CAACK,kBAAkB,CAAC,EAAEC,IAAI,EAAER,IAAI,CAAC,CAAC,CAAC;MACnDS,UAAU,EAAE;IACd;EACF,CAAC,CAAC;;EAEF,MAAMC,eAAe,GAAG,IAAI;EAC5B,MAAMC,YAAY,GAAGf,CAAC,CAACM,MAAM,CAACU,YAAY,CAAC;IACzCC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAGH,eAAe,CAAC;IAC/BI,KAAK,EAAEC,cAAc,CAACC,OAAO,GAAGD,cAAc,CAACE;EACjD,CAAC,CAAC;;EAEF,MAAMC,SAAS,GAAGtB,CAAC,CAACM,MAAM,CAACiB,eAAe,CAAC;IACzCf,MAAM,EAAEH,QAAQ,CAACmB,kBAAkB,CAAC,CAAC,CAAC;IACtCC,OAAO,EAAE,CAAC,EAAEC,OAAO,EAAE,CAAC,EAAEC,QAAQ,EAAE,EAAEC,MAAM,EAAEb,YAAY,CAAC,CAAC,CAAC,CAAC;EAC9D,CAAC,CAAC;;EAEF;EACA,MAAMc,OAAO,GAAG7B,CAAC,CAACM,MAAM,CAACwB,oBAAoB,CAAC,CAAC;EAC/C,MAAMC,IAAI,GAAGF,OAAO,CAACG,gBAAgB,CAAC,CAAC;EACvCD,IAAI,CAACE,WAAW,CAAC5B,QAAQ,CAAC;EAC1B0B,IAAI,CAACG,YAAY,CAAC,CAAC,EAAEZ,SAAS,CAAC;EAC/BS,IAAI,CAACI,kBAAkB,CAAC,CAAC,CAAC;EAC1BJ,IAAI,CAACK,GAAG,CAAC,CAAC;EACVpC,CAAC,CAACqC,KAAK,CAACC,MAAM,CAAC,CAACT,OAAO,CAACU,MAAM,CAAC,CAAC,CAAC,CAAC;;EAElCvC,CAAC,CAACwC,0BAA0B,CAACzB,YAAY,EAAEb,MAAM,CAAC;AACpD;;AAEAJ,CAAC,CAAC2C,IAAI,CAAC,sBAAsB,CAAC;AAC3BC,IAAI,CAAC,sCAAsC,CAAC;AAC5CC,EAAE,CAAC,CAAA3C,CAAC,KAAI;EACPD,gBAAgB;IACdC,CAAC;IACD,KAAK;IACL,IAAI4C,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE/C,MAAM,CAACgD,GAAG,CAACC,QAAQ,CAACC,GAAG,GAAG,CAAC,EAAElD,MAAM,CAACgD,GAAG,CAACG,QAAQ,CAACC,GAAG,EAAE,CAAC,CAAC,CAAC;IAChF;AACP;AACA;AACA,mBAAmBpD,MAAM,CAACgD,GAAG,CAACC,QAAQ,CAACC,GAAI;AAC3C,mBAAmBlD,MAAM,CAACgD,GAAG,CAACG,QAAQ,CAACC,GAAG,GAAG,CAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC;AACH,CAAC,CAAC;;AAEJnD,CAAC,CAAC2C,IAAI,CAAC,+BAA+B,CAAC;AACpCC,IAAI,CAAC,sDAAsD,CAAC;AAC5DC,EAAE,CAAC,CAAA3C,CAAC,KAAI;EACPD,gBAAgB;IACdC,CAAC;IACD,KAAK;IACL,IAAI4C,UAAU,CAAC,CAAC/C,MAAM,CAACgD,GAAG,CAACC,QAAQ,CAACC,GAAG,CAAC,CAAC;IACxC;AACP,mBAAmBlD,MAAM,CAACgD,GAAG,CAACG,QAAQ,CAACC,GAAI;AAC3C;AACA;AACA;EACI,CAAC;AACH,CAAC,CAAC;;AAEJnD,CAAC,CAAC2C,IAAI,CAAC,sBAAsB,CAAC;AAC3BC,IAAI,CAAC,sCAAsC,CAAC;AAC5CC,EAAE,CAAC,CAAA3C,CAAC,KAAI;EACPD,gBAAgB;IACdC,CAAC;IACD,KAAK;IACL,IAAIkD,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,EAAErD,MAAM,CAACsD,GAAG,CAACF,GAAG,CAAC,CAAC;IACvC;AACP;AACA;AACA,mBAAmBpD,MAAM,CAACsD,GAAG,CAACF,GAAG,GAAG,CAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC;AACH,CAAC,CAAC;;AAEJnD,CAAC,CAAC2C,IAAI,CAAC,+BAA+B,CAAC;AACpCC,IAAI,CAAC,sDAAsD,CAAC;AAC5DC,EAAE,CAAC,CAAA3C,CAAC,KAAI;EACPD,gBAAgB;IACdC,CAAC;IACD,KAAK;IACL,IAAIkD,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB;AACP,mBAAmBrD,MAAM,CAACsD,GAAG,CAACF,GAAI;AAClC;AACA;AACA;EACI,CAAC;AACH,CAAC,CAAC;;AAEJnD,CAAC,CAAC2C,IAAI,CAAC,sBAAsB,CAAC;AAC3BC,IAAI,CAAC,sCAAsC,CAAC;AAC5CC,EAAE,CAAC,CAAA3C,CAAC,KAAI;EACPD,gBAAgB;IACdC,CAAC;IACD,KAAK;IACL,IAAI4C,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE/C,MAAM,CAACgD,GAAG,CAACC,QAAQ,CAACC,GAAG,EAAElD,MAAM,CAACgD,GAAG,CAACG,QAAQ,CAACC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjF;AACP;AACA;AACA,mBAAmBpD,MAAM,CAACgD,GAAG,CAACC,QAAQ,CAACC,GAAG,GAAG,CAAE;AAC/C,mBAAmBlD,MAAM,CAACgD,GAAG,CAACG,QAAQ,CAACC,GAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC;AACH,CAAC,CAAC;;AAEJnD,CAAC,CAAC2C,IAAI,CAAC,gCAAgC,CAAC;AACrCC,IAAI,CAAC,sDAAsD,CAAC;AAC5DC,EAAE,CAAC,CAAA3C,CAAC,KAAI;EACPD,gBAAgB;IACdC,CAAC;IACD,KAAK;IACL,IAAI4C,UAAU,CAAC,CAAC/C,MAAM,CAACgD,GAAG,CAACG,QAAQ,CAACC,GAAG,CAAC,CAAC;IACxC;AACP,mBAAmBpD,MAAM,CAACgD,GAAG,CAACC,QAAQ,CAACC,GAAI;AAC3C;AACA;AACA;EACI,CAAC;AACH,CAAC,CAAC;;AAEJjD,CAAC,CAAC2C,IAAI,CAAC,sBAAsB,CAAC;AAC3BC,IAAI,CAAC,sCAAsC,CAAC;AAC5CC,EAAE,CAAC,CAAA3C,CAAC,KAAI;EACPD,gBAAgB;IACdC,CAAC;IACD,KAAK;IACL,IAAIkD,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,EAAErD,MAAM,CAACsD,GAAG,CAACF,GAAG,GAAG,CAAC,CAAC,CAAC;IAC1C;AACP;AACA;AACA,mBAAmBpD,MAAM,CAACsD,GAAG,CAACF,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC;AACH,CAAC,CAAC;;AAEJnD,CAAC,CAAC2C,IAAI,CAAC,gCAAgC,CAAC;AACrCC,IAAI,CAAC,sDAAsD,CAAC;AAC5DC,EAAE,CAAC,CAAA3C,CAAC,KAAI;EACPD,gBAAgB;IACdC,CAAC;IACD,KAAK;IACL,IAAIkD,WAAW,CAAC,CAACrD,MAAM,CAACsD,GAAG,CAACF,GAAG,CAAC,CAAC;IAChC;AACP;AACA;AACA;AACA;EACI,CAAC;AACH,CAAC,CAAC;;AAEJnD,CAAC,CAAC2C,IAAI,CAAC,wBAAwB,CAAC;AAC7BC,IAAI,CAAC,+BAA+B,CAAC;AACrCC,EAAE,CAAC,CAAA3C,CAAC,KAAI;EACPD,gBAAgB;IACdC,CAAC;IACD,KAAK;IACL,IAAI4C,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACvB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC;AACH,CAAC,CAAC;;AAEJ9C,CAAC,CAAC2C,IAAI,CAAC,wBAAwB,CAAC;AAC7BC,IAAI,CAAC,gCAAgC,CAAC;AACtCC,EAAE,CAAC,CAAA3C,CAAC,KAAI;EACPD,gBAAgB;IACdC,CAAC;IACD,KAAK;IACL,IAAI4C,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE/C,MAAM,CAACgD,GAAG,CAACC,QAAQ,CAACC,GAAG,GAAG,CAAC,CAAC,CAAC;IACpD;AACP,4BAA4BlD,MAAM,CAACgD,GAAG,CAACC,QAAQ,CAACC,GAAI;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC;AACH,CAAC,CAAC;;AAEJjD,CAAC,CAAC2C,IAAI,CAAC,wBAAwB,CAAC;AAC7BC,IAAI,CAAC,gCAAgC,CAAC;AACtCC,EAAE,CAAC,CAAA3C,CAAC,KAAI;EACPD,gBAAgB;IACdC,CAAC;IACD,KAAK;IACL,IAAI4C,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE/C,MAAM,CAACgD,GAAG,CAACC,QAAQ,CAACC,GAAG,GAAG,CAAC,EAAElD,MAAM,CAACgD,GAAG,CAACG,QAAQ,CAACC,GAAG,CAAC,CAAC;IAC7E;AACP,uCAAuCpD,MAAM,CAACgD,GAAG,CAACC,QAAQ,CAACC,GAAI,KAAIlD,MAAM,CAACgD,GAAG,CAACG,QAAQ,CAACC,GAAG,GAAG,CAAE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC;AACH,CAAC,CAAC;;AAEJnD,CAAC,CAAC2C,IAAI,CAAC,wBAAwB,CAAC;AAC7BC,IAAI,CAAC,gCAAgC,CAAC;AACtCC,EAAE,CAAC,CAAA3C,CAAC,KAAI;EACPD,gBAAgB;IACdC,CAAC;IACD,KAAK;IACL,IAAI4C,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACvB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC;AACH,CAAC,CAAC;;AAEJ9C,CAAC,CAAC2C,IAAI,CAAC,wBAAwB,CAAC;AAC7BC,IAAI,CAAC,gCAAgC,CAAC;AACtCC,EAAE,CAAC,CAAA3C,CAAC,KAAI;EACPD,gBAAgB;IACdC,CAAC;IACD,KAAK;IACL,IAAI4C,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE/C,MAAM,CAACgD,GAAG,CAACC,QAAQ,CAACC,GAAG,CAAC,CAAC;IAChD;AACP,4BAA4BlD,MAAM,CAACgD,GAAG,CAACC,QAAQ,CAACC,GAAG,GAAG,CAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC;AACH,CAAC,CAAC;;AAEJjD,CAAC,CAAC2C,IAAI,CAAC,wBAAwB,CAAC;AAC7BC,IAAI,CAAC,gCAAgC,CAAC;AACtCC,EAAE,CAAC,CAAA3C,CAAC,KAAI;EACPD,gBAAgB;IACdC,CAAC;IACD,KAAK;IACL,IAAI4C,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE/C,MAAM,CAACgD,GAAG,CAACC,QAAQ,CAACC,GAAG,EAAElD,MAAM,CAACgD,GAAG,CAACG,QAAQ,CAACC,GAAG,GAAG,CAAC,CAAC,CAAC;IAC7E;AACP,uCAAuCpD,MAAM,CAACgD,GAAG,CAACC,QAAQ,CAACC,GAAG,GAAG,CAAE,KAAIlD,MAAM,CAACgD,GAAG,CAACG,QAAQ,CAACC,GAAI;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC;AACH,CAAC,CAAC;;AAEJnD,CAAC,CAAC2C,IAAI,CAAC,qBAAqB,CAAC;AAC1BC,IAAI,CAAC,8CAA8C,CAAC;AACpDC,EAAE,CAAC,CAAA3C,CAAC,KAAI;EACPD,gBAAgB;IACdC,CAAC;IACD,KAAK;IACL,IAAI4C,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IAClB;AACP;AACA;AACA;AACA;EACI,CAAC;AACH,CAAC,CAAC"}