{"version":3,"file":"utils.js","names":["generateResources","resources","buffer","type","code","staticUse","sampler","texture","sampleType","viewDimension","multisampled","sampleDims","sampleTypes","sampleWGSL","dim","i","push","replace","depthDims","storageDims","formats","accesses","format","access","storageTexture","resourceKey","res","externalTexture","kAPIResources","Object","fromEntries","map","x","getWGSLShaderForResource","stage","resource","retTy","retVal","getAPIBindGroupLayoutForResource","device","entry","binding","visibility","entries","createBindGroupLayout","doSampleTypesMatch","api","wgsl","doAccessesMatch","doResourcesMatch","aType","wType","aAccess","wAccess","undefined"],"sources":["../../../../src/webgpu/api/validation/utils.ts"],"sourcesContent":["interface Resource {\n  readonly buffer?: GPUBufferBindingLayout;\n  readonly sampler?: GPUSamplerBindingLayout;\n  readonly texture?: GPUTextureBindingLayout;\n  readonly storageTexture?: GPUStorageTextureBindingLayout;\n  readonly externalTexture?: GPUExternalTextureBindingLayout;\n  readonly code: string;\n  readonly staticUse?: string;\n}\n\n/**\n * Returns an array of possible resources\n */\nfunction generateResources(): Resource[] {\n  const resources: Resource[] = [\n    // Buffers\n    {\n      buffer: { type: 'uniform' },\n      code: `var<uniform> res : array<vec4u, 16>`,\n      staticUse: `res[0]`,\n    },\n    {\n      buffer: { type: 'storage' },\n      code: `var<storage, read_write> res : array<vec4u>`,\n      staticUse: `res[0]`,\n    },\n    {\n      buffer: { type: 'read-only-storage' },\n      code: `var<storage> res : array<vec4u>`,\n      staticUse: `res[0]`,\n    },\n\n    // Samplers\n    {\n      sampler: { type: 'filtering' },\n      code: `var res : sampler`,\n    },\n    {\n      sampler: { type: 'non-filtering' },\n      code: `var res : sampler`,\n    },\n    {\n      sampler: { type: 'comparison' },\n      code: `var res : sampler_comparison`,\n    },\n    // Multisampled textures\n    {\n      texture: { sampleType: 'depth', viewDimension: '2d', multisampled: true },\n      code: `var res : texture_depth_multisampled_2d`,\n    },\n    {\n      texture: { sampleType: 'unfilterable-float', viewDimension: '2d', multisampled: true },\n      code: `var res : texture_multisampled_2d<f32>`,\n    },\n    {\n      texture: { sampleType: 'sint', viewDimension: '2d', multisampled: true },\n      code: `var res : texture_multisampled_2d<i32>`,\n    },\n    {\n      texture: { sampleType: 'uint', viewDimension: '2d', multisampled: true },\n      code: `var res : texture_multisampled_2d<u32>`,\n    },\n  ];\n\n  // Sampled textures\n  const sampleDims: GPUTextureViewDimension[] = [\n    '1d',\n    '2d',\n    '2d-array',\n    '3d',\n    'cube',\n    'cube-array',\n  ];\n  const sampleTypes: GPUTextureSampleType[] = ['float', 'unfilterable-float', 'sint', 'uint'];\n  const sampleWGSL = ['f32', 'f32', 'i32', 'u32'];\n  for (const dim of sampleDims) {\n    let i = 0;\n    for (const type of sampleTypes) {\n      resources.push({\n        texture: { sampleType: type, viewDimension: dim, multisampled: false },\n        code: `var res : texture_${dim.replace('-', '_')}<${sampleWGSL[i++]}>`,\n      });\n    }\n  }\n\n  // Depth textures\n  const depthDims: GPUTextureViewDimension[] = ['2d', '2d-array', 'cube', 'cube-array'];\n  for (const dim of depthDims) {\n    resources.push({\n      texture: { sampleType: 'depth', viewDimension: dim, multisampled: false },\n      code: `var res : texture_depth_${dim.replace('-', '_')}`,\n    });\n  }\n\n  // Storage textures\n  // Only cover r32uint, r32sint, and r32float here for ease of testing.\n  const storageDims: GPUTextureViewDimension[] = ['1d', '2d', '2d-array', '3d'];\n  const formats: GPUTextureFormat[] = ['r32float', 'r32sint', 'r32uint'];\n  const accesses: GPUStorageTextureAccess[] = ['write-only', 'read-only', 'read-write'];\n  for (const dim of storageDims) {\n    for (const format of formats) {\n      for (const access of accesses) {\n        resources.push({\n          storageTexture: { access, format, viewDimension: dim },\n          code: `var res : texture_storage_${dim.replace('-', '_')}<${format},${access\n            .replace('-only', '')\n            .replace('-', '_')}>`,\n        });\n      }\n    }\n  }\n\n  return resources;\n}\n\n/**\n * Returns a string suitable as a Record key.\n */\nfunction resourceKey(res: Resource): string {\n  if (res.buffer) {\n    return `${res.buffer.type}_buffer`;\n  }\n  if (res.sampler) {\n    return `${res.sampler.type}_sampler`;\n  }\n  if (res.texture) {\n    return `texture_${res.texture.sampleType}_${res.texture.viewDimension}_${res.texture.multisampled}`;\n  }\n  if (res.storageTexture) {\n    return `storage_texture_${res.storageTexture.viewDimension}_${res.storageTexture.format}_${res.storageTexture.access}`;\n  }\n  if (res.externalTexture) {\n    return `external_texture`;\n  }\n  return ``;\n}\n\n/**\n * Resource array converted to a Record for nicer test parameterization names.\n */\nexport const kAPIResources: Record<string, Resource> = Object.fromEntries(\n  generateResources().map(x => [resourceKey(x), x])\n) as Record<string, Resource>;\n\n/**\n * Generates a shader of the specified stage using the specified resource at binding (0,0).\n */\nexport function getWGSLShaderForResource(stage: string, resource: Resource): string {\n  let code = `@group(0) @binding(0) ${resource.code};\\n`;\n\n  code += `@${stage}`;\n  if (stage === 'compute') {\n    code += `@workgroup_size(1)`;\n  }\n\n  let retTy = '';\n  let retVal = '';\n  if (stage === 'vertex') {\n    retTy = ' -> @builtin(position) vec4f';\n    retVal = 'return vec4f();';\n  } else if (stage === 'fragment') {\n    retTy = ' -> @location(0) vec4f';\n    retVal = 'return vec4f();';\n  }\n  code += `\nfn main() ${retTy} {\n  _ = ${resource.staticUse ?? 'res'};\n  ${retVal}\n}\n`;\n\n  return code;\n}\n\n/**\n * Generates a bind group layout for for the given resource at binding 0.\n */\nexport function getAPIBindGroupLayoutForResource(\n  device: GPUDevice,\n  stage: GPUShaderStageFlags,\n  resource: Resource\n): GPUBindGroupLayout {\n  const entry: GPUBindGroupLayoutEntry = {\n    binding: 0,\n    visibility: stage,\n  };\n  if (resource.buffer) {\n    entry.buffer = resource.buffer;\n  }\n  if (resource.sampler) {\n    entry.sampler = resource.sampler;\n  }\n  if (resource.texture) {\n    entry.texture = resource.texture;\n  }\n  if (resource.storageTexture) {\n    entry.storageTexture = resource.storageTexture;\n  }\n  if (resource.externalTexture) {\n    entry.externalTexture = resource.externalTexture;\n  }\n\n  const entries: GPUBindGroupLayoutEntry[] = [entry];\n  return device.createBindGroupLayout({ entries });\n}\n\n/**\n * Returns true if the sample types are compatible.\n */\nfunction doSampleTypesMatch(api: GPUTextureSampleType, wgsl: GPUTextureSampleType): boolean {\n  if (api === 'float' || api === 'unfilterable-float') {\n    return wgsl === 'float' || wgsl === 'unfilterable-float';\n  }\n  return api === wgsl;\n}\n\n/**\n * Returns true if the access modes are compatible.\n */\nfunction doAccessesMatch(api: GPUStorageTextureAccess, wgsl: GPUStorageTextureAccess): boolean {\n  if (api === 'read-write') {\n    return wgsl === 'read-write' || wgsl === 'write-only';\n  }\n  return api === wgsl;\n}\n\n/**\n * Returns true if the resources are compatible.\n */\nexport function doResourcesMatch(api: Resource, wgsl: Resource): boolean {\n  if (api.buffer) {\n    if (!wgsl.buffer) {\n      return false;\n    }\n    return api.buffer.type === wgsl.buffer.type;\n  }\n  if (api.sampler) {\n    if (!wgsl.sampler) {\n      return false;\n    }\n    return (\n      api.sampler.type === wgsl.sampler.type ||\n      (api.sampler.type !== 'comparison' && wgsl.sampler.type !== 'comparison')\n    );\n  }\n  if (api.texture) {\n    if (!wgsl.texture) {\n      return false;\n    }\n    const aType = api.texture.sampleType as GPUTextureSampleType;\n    const wType = wgsl.texture.sampleType as GPUTextureSampleType;\n    return (\n      doSampleTypesMatch(aType, wType) &&\n      api.texture.viewDimension === wgsl.texture.viewDimension &&\n      api.texture.multisampled === wgsl.texture.multisampled\n    );\n  }\n  if (api.storageTexture) {\n    if (!wgsl.storageTexture) {\n      return false;\n    }\n    const aAccess = api.storageTexture.access as GPUStorageTextureAccess;\n    const wAccess = wgsl.storageTexture.access as GPUStorageTextureAccess;\n    return (\n      doAccessesMatch(aAccess, wAccess) &&\n      api.storageTexture.format === wgsl.storageTexture.format &&\n      api.storageTexture.viewDimension === wgsl.storageTexture.viewDimension\n    );\n  }\n  if (api.externalTexture) {\n    return wgsl.externalTexture !== undefined;\n  }\n\n  return false;\n}\n"],"mappings":"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"}