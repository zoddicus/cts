{"version":3,"file":"maxSampledTexturesPerShaderStage.spec.js","names":["range","reorder","kReorderOrderKeys","kShaderStageCombinationsWithStage","kMaximumLimitBaseParams","makeLimitTestGroup","kBindGroupTests","kBindingCombinations","getPipelineTypeForBindingCombination","getPerStageWGSLForBindingCombination","limit","g","description","createBindGroupLayout","device","visibility","order","numBindings","entries","i","binding","texture","test","desc","params","combine","fn","t","limitTest","testValueName","testDeviceWithRequestedMaximumLimits","testValue","shouldError","expectValidationError","kNumGroups","bindGroupLayouts","minInGroup","Math","floor","numInGroup","createPipelineLayout","async","bindingCombination","bindGroupTest","pipelineType","actualLimit","code","j","module","createShaderModule","testCreatePipeline"],"sources":["../../../../../../src/webgpu/api/validation/capability_checks/limits/maxSampledTexturesPerShaderStage.spec.ts"],"sourcesContent":["import {\n  range,\n  reorder,\n  kReorderOrderKeys,\n  ReorderOrder,\n} from '../../../../../common/util/util.js';\nimport { kShaderStageCombinationsWithStage } from '../../../../capability_info.js';\n\nimport {\n  kMaximumLimitBaseParams,\n  makeLimitTestGroup,\n  kBindGroupTests,\n  kBindingCombinations,\n  getPipelineTypeForBindingCombination,\n  getPerStageWGSLForBindingCombination,\n} from './limit_utils.js';\n\nconst limit = 'maxSampledTexturesPerShaderStage';\nexport const { g, description } = makeLimitTestGroup(limit);\n\nfunction createBindGroupLayout(\n  device: GPUDevice,\n  visibility: number,\n  order: ReorderOrder,\n  numBindings: number\n) {\n  return device.createBindGroupLayout({\n    entries: reorder(\n      order,\n      range(numBindings, i => ({\n        binding: i,\n        visibility,\n        texture: {},\n      }))\n    ),\n  });\n}\n\ng.test('createBindGroupLayout,at_over')\n  .desc(\n    `\n  Test using at and over ${limit} limit in createBindGroupLayout\n\n  Note: We also test order to make sure the implementation isn't just looking\n  at just the last entry.\n  `\n  )\n  .params(\n    kMaximumLimitBaseParams\n      .combine('visibility', kShaderStageCombinationsWithStage)\n      .combine('order', kReorderOrderKeys)\n  )\n  .fn(async t => {\n    const { limitTest, testValueName, visibility, order } = t.params;\n    await t.testDeviceWithRequestedMaximumLimits(\n      limitTest,\n      testValueName,\n      async ({ device, testValue, shouldError }) => {\n        await t.expectValidationError(\n          () => createBindGroupLayout(device, visibility, order, testValue),\n          shouldError\n        );\n      }\n    );\n  });\n\ng.test('createPipelineLayout,at_over')\n  .desc(\n    `\n  Test using at and over ${limit} limit in createPipelineLayout\n\n  Note: We also test order to make sure the implementation isn't just looking\n  at just the last entry.\n  `\n  )\n  .params(\n    kMaximumLimitBaseParams\n      .combine('visibility', kShaderStageCombinationsWithStage)\n      .combine('order', kReorderOrderKeys)\n  )\n  .fn(async t => {\n    const { limitTest, testValueName, visibility, order } = t.params;\n    await t.testDeviceWithRequestedMaximumLimits(\n      limitTest,\n      testValueName,\n      async ({ device, testValue, shouldError }) => {\n        const kNumGroups = 3;\n        const bindGroupLayouts = range(kNumGroups, i => {\n          const minInGroup = Math.floor(testValue / kNumGroups);\n          const numInGroup = i ? minInGroup : testValue - minInGroup * (kNumGroups - 1);\n          return createBindGroupLayout(device, visibility, order, numInGroup);\n        });\n        await t.expectValidationError(\n          () => device.createPipelineLayout({ bindGroupLayouts }),\n          shouldError\n        );\n      }\n    );\n  });\n\ng.test('createPipeline,at_over')\n  .desc(\n    `\n  Test using createRenderPipeline(Async) and createComputePipeline(Async) at and over ${limit} limit\n\n  Note: We also test order to make sure the implementation isn't just looking\n  at just the last entry.\n  `\n  )\n  .params(\n    kMaximumLimitBaseParams\n      .combine('async', [false, true] as const)\n      .combine('bindingCombination', kBindingCombinations)\n      .combine('order', kReorderOrderKeys)\n      .combine('bindGroupTest', kBindGroupTests)\n  )\n  .fn(async t => {\n    const { limitTest, testValueName, async, bindingCombination, order, bindGroupTest } = t.params;\n    const pipelineType = getPipelineTypeForBindingCombination(bindingCombination);\n\n    await t.testDeviceWithRequestedMaximumLimits(\n      limitTest,\n      testValueName,\n      async ({ device, testValue, actualLimit, shouldError }) => {\n        const code = getPerStageWGSLForBindingCombination(\n          bindingCombination,\n          order,\n          bindGroupTest,\n          (i, j) => `var u${j}_${i}: texture_2d<f32>`,\n          (i, j) => `_ = textureLoad(u${j}_${i}, vec2u(0), 0);`,\n          testValue\n        );\n        const module = device.createShaderModule({ code });\n\n        await t.testCreatePipeline(\n          pipelineType,\n          async,\n          module,\n          shouldError,\n          `actualLimit: ${actualLimit}, testValue: ${testValue}\\n:${code}`\n        );\n      }\n    );\n  });\n"],"mappings":"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"}