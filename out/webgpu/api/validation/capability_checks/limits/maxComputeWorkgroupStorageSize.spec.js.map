{"version":3,"file":"maxComputeWorkgroupStorageSize.spec.js","names":["keysOf","assert","align","roundDown","kMaximumLimitBaseParams","makeLimitTestGroup","limit","g","description","kSmallestWorkgroupVarSize","wgslF16Types","f16","alignOf","sizeOf","requireF16","wgslBaseTypes","f32","i32","u32","S1","S2","S3","wgslTypes","kWGSLTypes","getModuleForWorkgroupStorageSize","device","wgslType","size","unitSize","units","Math","floor","extra","code","module","createShaderModule","getDeviceLimitToRequest","limitValueTest","defaultLimit","maximumLimit","getTestValue","testValueName","requestedLimit","getDeviceLimitToRequestAndValueToTest","testValue","test","desc","params","combine","fn","t","limitTest","async","adapterLimit","hasF16","adapter","features","has","testDeviceWithSpecificLimits","actualLimit","shouldError","testCreatePipeline"],"sources":["../../../../../../src/webgpu/api/validation/capability_checks/limits/maxComputeWorkgroupStorageSize.spec.ts"],"sourcesContent":["import { keysOf } from '../../../../../common/util/data_tables.js';\nimport { assert } from '../../../../../common/util/util.js';\nimport { align, roundDown } from '../../../../util/math.js';\n\nimport {\n  MaximumLimitValueTest,\n  MaximumTestValue,\n  kMaximumLimitBaseParams,\n  makeLimitTestGroup,\n} from './limit_utils.js';\n\nconst limit = 'maxComputeWorkgroupStorageSize';\nexport const { g, description } = makeLimitTestGroup(limit);\n\nconst kSmallestWorkgroupVarSize = 4;\n\nconst wgslF16Types = {\n  f16: { alignOf: 2, sizeOf: 2, requireF16: true },\n  'vec2<f16>': { alignOf: 4, sizeOf: 4, requireF16: true },\n  'vec3<f16>': { alignOf: 8, sizeOf: 6, requireF16: true },\n  'vec4<f16>': { alignOf: 8, sizeOf: 8, requireF16: true },\n  'mat2x2<f16>': { alignOf: 4, sizeOf: 8, requireF16: true },\n  'mat3x2<f16>': { alignOf: 4, sizeOf: 12, requireF16: true },\n  'mat4x2<f16>': { alignOf: 4, sizeOf: 16, requireF16: true },\n  'mat2x3<f16>': { alignOf: 8, sizeOf: 16, requireF16: true },\n  'mat3x3<f16>': { alignOf: 8, sizeOf: 24, requireF16: true },\n  'mat4x3<f16>': { alignOf: 8, sizeOf: 32, requireF16: true },\n  'mat2x4<f16>': { alignOf: 8, sizeOf: 16, requireF16: true },\n  'mat3x4<f16>': { alignOf: 8, sizeOf: 24, requireF16: true },\n  'mat4x4<f16>': { alignOf: 8, sizeOf: 32, requireF16: true },\n};\n\nconst wgslBaseTypes = {\n  f32: { alignOf: 4, sizeOf: 4, requireF16: false },\n  i32: { alignOf: 4, sizeOf: 4, requireF16: false },\n  u32: { alignOf: 4, sizeOf: 4, requireF16: false },\n\n  'vec2<f32>': { alignOf: 8, sizeOf: 8, requireF16: false },\n  'vec2<i32>': { alignOf: 8, sizeOf: 8, requireF16: false },\n  'vec2<u32>': { alignOf: 8, sizeOf: 8, requireF16: false },\n\n  'vec3<f32>': { alignOf: 16, sizeOf: 12, requireF16: false },\n  'vec3<i32>': { alignOf: 16, sizeOf: 12, requireF16: false },\n  'vec3<u32>': { alignOf: 16, sizeOf: 12, requireF16: false },\n\n  'vec4<f32>': { alignOf: 16, sizeOf: 16, requireF16: false },\n  'vec4<i32>': { alignOf: 16, sizeOf: 16, requireF16: false },\n  'vec4<u32>': { alignOf: 16, sizeOf: 16, requireF16: false },\n\n  'mat2x2<f32>': { alignOf: 8, sizeOf: 16, requireF16: false },\n  'mat3x2<f32>': { alignOf: 8, sizeOf: 24, requireF16: false },\n  'mat4x2<f32>': { alignOf: 8, sizeOf: 32, requireF16: false },\n  'mat2x3<f32>': { alignOf: 16, sizeOf: 32, requireF16: false },\n  'mat3x3<f32>': { alignOf: 16, sizeOf: 48, requireF16: false },\n  'mat4x3<f32>': { alignOf: 16, sizeOf: 64, requireF16: false },\n  'mat2x4<f32>': { alignOf: 16, sizeOf: 32, requireF16: false },\n  'mat3x4<f32>': { alignOf: 16, sizeOf: 48, requireF16: false },\n  'mat4x4<f32>': { alignOf: 16, sizeOf: 64, requireF16: false },\n\n  S1: { alignOf: 16, sizeOf: 48, requireF16: false },\n  S2: { alignOf: 4, sizeOf: 16 * 7, requireF16: false },\n  S3: { alignOf: 16, sizeOf: 32, requireF16: false },\n};\n\nconst wgslTypes = { ...wgslF16Types, ...wgslBaseTypes };\ntype WGSLType = keyof typeof wgslTypes;\nconst kWGSLTypes = keysOf(wgslTypes);\n\nfunction getModuleForWorkgroupStorageSize(device: GPUDevice, wgslType: WGSLType, size: number) {\n  assert(size % kSmallestWorkgroupVarSize === 0);\n  const { sizeOf, alignOf, requireF16 } = wgslTypes[wgslType];\n  const unitSize = align(sizeOf, alignOf);\n  const units = Math.floor(size / unitSize);\n  const extra = (size - units * unitSize) / kSmallestWorkgroupVarSize;\n\n  const code =\n    (requireF16 ? 'enable f16;\\n' : '') +\n    `\n    struct S1 {\n      a: f32,\n      b: vec4f,\n      c: u32,\n    };\n    struct S2 {\n      a: array<vec3f, 7>,\n    };\n    struct S3 {\n      a: vec3f,\n      b: vec2f,\n    };\n    var<workgroup> d0: array<${wgslType}, ${units}>;\n    ${extra ? `var<workgroup> d1: array<f32, ${extra}>;` : ''}\n    @compute @workgroup_size(1) fn main() {\n      _ = d0;\n      ${extra ? '_ = d1;' : ''}\n    }\n  `;\n  return { module: device.createShaderModule({ code }), code };\n}\n\nfunction getDeviceLimitToRequest(\n  limitValueTest: MaximumLimitValueTest,\n  defaultLimit: number,\n  maximumLimit: number\n) {\n  switch (limitValueTest) {\n    case 'atDefault':\n      return defaultLimit;\n    case 'underDefault':\n      return defaultLimit - kSmallestWorkgroupVarSize;\n    case 'betweenDefaultAndMaximum':\n      return roundDown(Math.floor((defaultLimit + maximumLimit) / 2), kSmallestWorkgroupVarSize);\n    case 'atMaximum':\n      return maximumLimit;\n    case 'overMaximum':\n      return maximumLimit + kSmallestWorkgroupVarSize;\n  }\n}\n\nfunction getTestValue(testValueName: MaximumTestValue, requestedLimit: number) {\n  switch (testValueName) {\n    case 'atLimit':\n      return requestedLimit;\n    case 'overLimit':\n      return requestedLimit + kSmallestWorkgroupVarSize;\n  }\n}\n\nfunction getDeviceLimitToRequestAndValueToTest(\n  limitValueTest: MaximumLimitValueTest,\n  testValueName: MaximumTestValue,\n  defaultLimit: number,\n  maximumLimit: number\n) {\n  const requestedLimit = getDeviceLimitToRequest(limitValueTest, defaultLimit, maximumLimit);\n  const testValue = getTestValue(testValueName, requestedLimit);\n  return {\n    requestedLimit,\n    testValue,\n  };\n}\n\ng.test('createComputePipeline,at_over')\n  .desc(`Test using createComputePipeline(Async) at and over ${limit} limit`)\n  .params(\n    kMaximumLimitBaseParams.combine('async', [false, true] as const).combine('wgslType', kWGSLTypes)\n  )\n  .fn(async t => {\n    const { limitTest, testValueName, async, wgslType } = t.params;\n    const { defaultLimit, adapterLimit: maximumLimit } = t;\n\n    const hasF16 = t.adapter.features.has('shader-f16');\n    if (!hasF16 && wgslType in wgslF16Types) {\n      return;\n    }\n\n    const features: GPUFeatureName[] = hasF16 ? ['shader-f16'] : [];\n\n    const { requestedLimit, testValue } = getDeviceLimitToRequestAndValueToTest(\n      limitTest,\n      testValueName,\n      defaultLimit,\n      maximumLimit\n    );\n    await t.testDeviceWithSpecificLimits(\n      requestedLimit,\n      testValue,\n      async ({ device, testValue, actualLimit, shouldError }) => {\n        const { module, code } = getModuleForWorkgroupStorageSize(device, wgslType, testValue);\n\n        await t.testCreatePipeline(\n          'createComputePipeline',\n          async,\n          module,\n          shouldError,\n          `size: ${testValue}, limit: ${actualLimit}\\n${code}`\n        );\n      },\n      {},\n      features\n    );\n  });\n"],"mappings":"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"}