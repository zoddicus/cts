{"version":3,"file":"query_types.spec.js","names":["description","makeTestGroup","ValidationTest","g","test","desc","params","u","combine","beforeAllSubcases","t","featureContainsTimestampQuery","requiredFeatures","push","selectDeviceOrSkipTestCase","fn","type","count","shouldException","shouldThrow","device","createQuerySet","querySet","encoder","createEncoder","writeTimestamp"],"sources":["../../../../../../src/webgpu/api/validation/capability_checks/features/query_types.spec.ts"],"sourcesContent":["export const description = `\nTests for capability checking for features enabling optional query types.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { ValidationTest } from '../../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('createQuerySet')\n  .desc(\n    `\n  Tests that creating a query set throws a type error exception if the features don't contain\n  'timestamp-query'.\n    - createQuerySet\n      - type {occlusion, timestamp}\n      - x= {pipeline statistics, timestamp} query {enable, disable}\n  `\n  )\n  .params(u =>\n    u\n      .combine('type', ['occlusion', 'timestamp'] as const)\n      .combine('featureContainsTimestampQuery', [false, true])\n  )\n  .beforeAllSubcases(t => {\n    const { featureContainsTimestampQuery } = t.params;\n\n    const requiredFeatures: GPUFeatureName[] = [];\n    if (featureContainsTimestampQuery) {\n      requiredFeatures.push('timestamp-query');\n    }\n\n    t.selectDeviceOrSkipTestCase({ requiredFeatures });\n  })\n  .fn(t => {\n    const { type, featureContainsTimestampQuery } = t.params;\n\n    const count = 1;\n    const shouldException = type === 'timestamp' && !featureContainsTimestampQuery;\n\n    t.shouldThrow(shouldException ? 'TypeError' : false, () => {\n      t.device.createQuerySet({ type, count });\n    });\n  });\n\ng.test('writeTimestamp')\n  .desc(\n    `\n  Tests that writing a timestamp throws a type error exception if the features don't contain\n  'timestamp-query'.\n  `\n  )\n  .params(u => u.combine('featureContainsTimestampQuery', [false, true]))\n  .beforeAllSubcases(t => {\n    const { featureContainsTimestampQuery } = t.params;\n\n    const requiredFeatures: GPUFeatureName[] = [];\n    if (featureContainsTimestampQuery) {\n      requiredFeatures.push('timestamp-query');\n    }\n\n    t.selectDeviceOrSkipTestCase({ requiredFeatures });\n  })\n  .fn(t => {\n    const { featureContainsTimestampQuery } = t.params;\n\n    const querySet = t.device.createQuerySet({\n      type: featureContainsTimestampQuery ? 'timestamp' : 'occlusion',\n      count: 1,\n    });\n    const encoder = t.createEncoder('non-pass');\n\n    t.shouldThrow(featureContainsTimestampQuery ? false : 'TypeError', () => {\n      encoder.encoder.writeTimestamp(querySet, 0);\n    });\n  });\n"],"mappings":";AAAA;AAAA,GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,+CAA+C;AAC7E,SAASC,cAAc,QAAQ,0BAA0B;;AAEzD,OAAO,MAAMC,CAAC,GAAGF,aAAa,CAACC,cAAc,CAAC;;AAE9CC,CAAC,CAACC,IAAI,CAAC,gBAAgB,CAAC;AACrBC,IAAI;AACF;AACL;AACA;AACA;AACA;AACA;AACA,GAAG,CACA;;AACAC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,CAAU;AACpDA,OAAO,CAAC,+BAA+B,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAC3D;;AACAC,iBAAiB,CAAC,CAAAC,CAAC,KAAI;EACtB,MAAM,EAAEC,6BAA6B,CAAC,CAAC,GAAGD,CAAC,CAACJ,MAAM;;EAElD,MAAMM,gBAAkC,GAAG,EAAE;EAC7C,IAAID,6BAA6B,EAAE;IACjCC,gBAAgB,CAACC,IAAI,CAAC,iBAAiB,CAAC;EAC1C;;EAEAH,CAAC,CAACI,0BAA0B,CAAC,EAAEF,gBAAgB,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC;AACDG,EAAE,CAAC,CAAAL,CAAC,KAAI;EACP,MAAM,EAAEM,IAAI,EAAEL,6BAA6B,CAAC,CAAC,GAAGD,CAAC,CAACJ,MAAM;;EAExD,MAAMW,KAAK,GAAG,CAAC;EACf,MAAMC,eAAe,GAAGF,IAAI,KAAK,WAAW,IAAI,CAACL,6BAA6B;;EAE9ED,CAAC,CAACS,WAAW,CAACD,eAAe,GAAG,WAAW,GAAG,KAAK,EAAE,MAAM;IACzDR,CAAC,CAACU,MAAM,CAACC,cAAc,CAAC,EAAEL,IAAI,EAAEC,KAAK,CAAC,CAAC,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEJd,CAAC,CAACC,IAAI,CAAC,gBAAgB,CAAC;AACrBC,IAAI;AACF;AACL;AACA;AACA,GAAG,CACA;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,+BAA+B,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;AACtEC,iBAAiB,CAAC,CAAAC,CAAC,KAAI;EACtB,MAAM,EAAEC,6BAA6B,CAAC,CAAC,GAAGD,CAAC,CAACJ,MAAM;;EAElD,MAAMM,gBAAkC,GAAG,EAAE;EAC7C,IAAID,6BAA6B,EAAE;IACjCC,gBAAgB,CAACC,IAAI,CAAC,iBAAiB,CAAC;EAC1C;;EAEAH,CAAC,CAACI,0BAA0B,CAAC,EAAEF,gBAAgB,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC;AACDG,EAAE,CAAC,CAAAL,CAAC,KAAI;EACP,MAAM,EAAEC,6BAA6B,CAAC,CAAC,GAAGD,CAAC,CAACJ,MAAM;;EAElD,MAAMgB,QAAQ,GAAGZ,CAAC,CAACU,MAAM,CAACC,cAAc,CAAC;IACvCL,IAAI,EAAEL,6BAA6B,GAAG,WAAW,GAAG,WAAW;IAC/DM,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAMM,OAAO,GAAGb,CAAC,CAACc,aAAa,CAAC,UAAU,CAAC;;EAE3Cd,CAAC,CAACS,WAAW,CAACR,6BAA6B,GAAG,KAAK,GAAG,WAAW,EAAE,MAAM;IACvEY,OAAO,CAACA,OAAO,CAACE,cAAc,CAACH,QAAQ,EAAE,CAAC,CAAC;EAC7C,CAAC,CAAC;AACJ,CAAC,CAAC"}