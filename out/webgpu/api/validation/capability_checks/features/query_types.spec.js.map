{"version":3,"file":"query_types.spec.js","names":["description","makeTestGroup","ValidationTest","g","test","desc","params","u","combine","beforeAllSubcases","t","featureContainsTimestampQuery","requiredFeatures","push","selectDeviceOrSkipTestCase","fn","type","count","shouldException","shouldThrow","device","createQuerySet","querySet","expected","encoder","createEncoder","writeTimestamp","finish","beginComputePass","timestampWrites","beginningOfPassWriteIndex","endOfPassWriteIndex","end","expectValidationError","view","trackForCleanup","createTexture","size","format","usage","GPUTextureUsage","RENDER_ATTACHMENT","createView","beginRenderPass","colorAttachments","loadOp","storeOp"],"sources":["../../../../../../src/webgpu/api/validation/capability_checks/features/query_types.spec.ts"],"sourcesContent":["export const description = `\nTests for capability checking for features enabling optional query types.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { ValidationTest } from '../../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('createQuerySet')\n  .desc(\n    `\n  Tests that creating a query set throws a type error exception if the features don't contain\n  'timestamp-query'.\n    - createQuerySet\n      - type {occlusion, timestamp}\n      - x= timestamp query {enable, disable}\n  `\n  )\n  .params(u =>\n    u\n      .combine('type', ['occlusion', 'timestamp'] as const)\n      .combine('featureContainsTimestampQuery', [false, true])\n  )\n  .beforeAllSubcases(t => {\n    const { featureContainsTimestampQuery } = t.params;\n\n    const requiredFeatures: GPUFeatureName[] = [];\n    if (featureContainsTimestampQuery) {\n      requiredFeatures.push('timestamp-query');\n    }\n\n    t.selectDeviceOrSkipTestCase({ requiredFeatures });\n  })\n  .fn(t => {\n    const { type, featureContainsTimestampQuery } = t.params;\n\n    const count = 1;\n    const shouldException = type === 'timestamp' && !featureContainsTimestampQuery;\n\n    t.shouldThrow(shouldException ? 'TypeError' : false, () => {\n      t.device.createQuerySet({ type, count });\n    });\n  });\n\ng.test('timestamp')\n  .desc(\n    `\n  Tests that writing a timestamp throws a type error exception if the features don't contain\n  'timestamp-query'.\n\n  TODO: writeTimestamp test is disabled since it's removed from the spec for now.\n  `\n  )\n  .params(u => u.combine('featureContainsTimestampQuery', [false, true]))\n  .beforeAllSubcases(t => {\n    const { featureContainsTimestampQuery } = t.params;\n\n    const requiredFeatures: GPUFeatureName[] = [];\n    if (featureContainsTimestampQuery) {\n      requiredFeatures.push('timestamp-query');\n    }\n\n    t.selectDeviceOrSkipTestCase({ requiredFeatures });\n  })\n  .fn(t => {\n    const { featureContainsTimestampQuery } = t.params;\n\n    const querySet = t.device.createQuerySet({\n      type: featureContainsTimestampQuery ? 'timestamp' : 'occlusion',\n      count: 2,\n    });\n\n    {\n      let expected = featureContainsTimestampQuery ? false : 'TypeError';\n      // writeTimestamp no longer exists and this should always TypeError.\n      expected = 'TypeError';\n\n      const encoder = t.createEncoder('non-pass');\n      t.shouldThrow(expected, () => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (encoder.encoder as any).writeTimestamp(querySet, 0);\n      });\n      encoder.finish();\n    }\n\n    {\n      const encoder = t.createEncoder('non-pass');\n      encoder.encoder\n        .beginComputePass({\n          timestampWrites: { querySet, beginningOfPassWriteIndex: 0, endOfPassWriteIndex: 1 },\n        })\n        .end();\n      t.expectValidationError(() => {\n        encoder.finish();\n      }, !featureContainsTimestampQuery);\n    }\n\n    {\n      const encoder = t.createEncoder('non-pass');\n      const view = t\n        .trackForCleanup(\n          t.device.createTexture({\n            size: [16, 16, 1],\n            format: 'rgba8unorm',\n            usage: GPUTextureUsage.RENDER_ATTACHMENT,\n          })\n        )\n        .createView();\n      encoder.encoder\n        .beginRenderPass({\n          colorAttachments: [{ view, loadOp: 'clear', storeOp: 'discard' }],\n          timestampWrites: { querySet, beginningOfPassWriteIndex: 0, endOfPassWriteIndex: 1 },\n        })\n        .end();\n      t.expectValidationError(() => {\n        encoder.finish();\n      }, !featureContainsTimestampQuery);\n    }\n  });\n"],"mappings":"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"}