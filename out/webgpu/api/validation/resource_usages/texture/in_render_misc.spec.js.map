{"version":3,"file":"in_render_misc.spec.js","names":["description","makeTestGroup","unreachable","ValidationTest","F","createBindGroupLayoutForTest","textureUsage","sampleType","visibility","GPUShaderStage","bindGroupLayoutEntry","binding","texture","viewDimension","storageTexture","access","format","device","createBindGroupLayout","entries","createBindGroupForTest","textureView","createBindGroup","layout","resource","g","kTextureSize","kTextureLayers","test","desc","params","u","combineWithParams","useDifferentTextureAsTexture2","baseLayer2","view2Binding","combine","fn","t","hasConflict","texture0","createTexture","usage","GPUTextureUsage","TEXTURE_BINDING","STORAGE_BINDING","size","textureView0","createView","dimension","baseArrayLayer","arrayLayerCount","bindGroup0","view1Binding","bindGroup1","texture2","textureView2","validBindGroup2","colorTexture","RENDER_ATTACHMENT","encoder","createCommandEncoder","renderPassEncoder","beginRenderPass","colorAttachments","view","loadOp","storeOp","setBindGroup","end","expectValidationError","finish","bindAspect","depthStencilReadOnly","depthStencilTexture","isCompatibility","textureBindingViewDimension","conflictedToNonReadOnlyAttachmentBindGroup","aspect","validBindGroup","depthStencilAttachment","depthReadOnly","stencilReadOnly","inRenderPass","FRAGMENT","COMPUTE","textureUsage0","textureUsage1","pipelineLayout","createPipelineLayout","bindGroupLayouts","renderPipeline","createRenderPipeline","vertex","module","createShaderModule","code","getNoOpShaderCode","entryPoint","fragment","targets","setPipeline","draw","computePipeline","createComputePipeline","compute","computePassEncoder","beginComputePass","dispatchWorkgroups","success","filter","usage0","usage1","COPY_SRC","COPY_DST","UseTextureOnCommandEncoder","buffer","createBufferWithState","GPUBufferUsage","copyTextureToBuffer","copyBufferToTexture","bindGroup"],"sources":["../../../../../../src/webgpu/api/validation/resource_usages/texture/in_render_misc.spec.ts"],"sourcesContent":["export const description = `\nTexture Usages Validation Tests on All Kinds of WebGPU Subresource Usage Scopes.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { unreachable } from '../../../../../common/util/util.js';\nimport { ValidationTest } from '../../validation_test.js';\n\nclass F extends ValidationTest {\n  createBindGroupLayoutForTest(\n    textureUsage: 'texture' | 'storage',\n    sampleType: 'float' | 'depth' | 'uint',\n    visibility: GPUShaderStage['FRAGMENT'] | GPUShaderStage['COMPUTE'] = GPUShaderStage['FRAGMENT']\n  ): GPUBindGroupLayout {\n    const bindGroupLayoutEntry: GPUBindGroupLayoutEntry = {\n      binding: 0,\n      visibility,\n    };\n\n    switch (textureUsage) {\n      case 'texture':\n        bindGroupLayoutEntry.texture = { viewDimension: '2d-array', sampleType };\n        break;\n      case 'storage':\n        bindGroupLayoutEntry.storageTexture = {\n          access: 'write-only',\n          format: 'rgba8unorm',\n          viewDimension: '2d-array',\n        };\n        break;\n      default:\n        unreachable();\n        break;\n    }\n    return this.device.createBindGroupLayout({\n      entries: [bindGroupLayoutEntry],\n    });\n  }\n\n  createBindGroupForTest(\n    textureView: GPUTextureView,\n    textureUsage: 'texture' | 'storage',\n    sampleType: 'float' | 'depth' | 'uint',\n    visibility: GPUShaderStage['FRAGMENT'] | GPUShaderStage['COMPUTE'] = GPUShaderStage['FRAGMENT']\n  ) {\n    return this.device.createBindGroup({\n      layout: this.createBindGroupLayoutForTest(textureUsage, sampleType, visibility),\n      entries: [{ binding: 0, resource: textureView }],\n    });\n  }\n}\n\nexport const g = makeTestGroup(F);\n\nconst kTextureSize = 16;\nconst kTextureLayers = 3;\n\ng.test('subresources,set_bind_group_on_same_index_color_texture')\n  .desc(\n    `\n  Test that when one color texture subresource is bound to different bind groups, whether the bind\n  groups are reset by another compatible ones or not, its list of internal usages within one usage\n  scope can only be a compatible usage list.`\n  )\n  .params(u =>\n    u\n      .combineWithParams([\n        { useDifferentTextureAsTexture2: true, baseLayer2: 0, view2Binding: 'texture' },\n        { useDifferentTextureAsTexture2: false, baseLayer2: 0, view2Binding: 'texture' },\n        { useDifferentTextureAsTexture2: false, baseLayer2: 1, view2Binding: 'texture' },\n        { useDifferentTextureAsTexture2: false, baseLayer2: 0, view2Binding: 'storage' },\n        { useDifferentTextureAsTexture2: false, baseLayer2: 1, view2Binding: 'storage' },\n      ] as const)\n      .combine('hasConflict', [true, false])\n  )\n  .fn(t => {\n    const { useDifferentTextureAsTexture2, baseLayer2, view2Binding, hasConflict } = t.params;\n\n    const texture0 = t.device.createTexture({\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.STORAGE_BINDING,\n      size: [kTextureSize, kTextureSize, kTextureLayers],\n    });\n    // We always bind the first layer of the texture to bindGroup0.\n    const textureView0 = texture0.createView({\n      dimension: '2d-array',\n      baseArrayLayer: 0,\n      arrayLayerCount: 1,\n    });\n    const bindGroup0 = t.createBindGroupForTest(textureView0, view2Binding, 'float');\n\n    // In one renderPassEncoder it is an error to set both bindGroup0 and bindGroup1.\n    const view1Binding = hasConflict\n      ? view2Binding === 'texture'\n        ? 'storage'\n        : 'texture'\n      : view2Binding;\n    const bindGroup1 = t.createBindGroupForTest(textureView0, view1Binding, 'float');\n\n    const texture2 = useDifferentTextureAsTexture2\n      ? t.device.createTexture({\n          format: 'rgba8unorm',\n          usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.STORAGE_BINDING,\n          size: [kTextureSize, kTextureSize, kTextureLayers],\n        })\n      : texture0;\n    const textureView2 = texture2.createView({\n      dimension: '2d-array',\n      baseArrayLayer: baseLayer2,\n      arrayLayerCount: kTextureLayers - baseLayer2,\n    });\n    // There should be no conflict between bindGroup0 and validBindGroup2.\n    const validBindGroup2 = t.createBindGroupForTest(textureView2, view2Binding, 'float');\n\n    const colorTexture = t.device.createTexture({\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n      size: [kTextureSize, kTextureSize, 1],\n    });\n    const encoder = t.device.createCommandEncoder();\n    const renderPassEncoder = encoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: colorTexture.createView(),\n          loadOp: 'load',\n          storeOp: 'store',\n        },\n      ],\n    });\n    renderPassEncoder.setBindGroup(0, bindGroup0);\n    renderPassEncoder.setBindGroup(1, bindGroup1);\n    renderPassEncoder.setBindGroup(1, validBindGroup2);\n    renderPassEncoder.end();\n\n    t.expectValidationError(() => {\n      encoder.finish();\n    }, hasConflict);\n  });\n\ng.test('subresources,set_bind_group_on_same_index_depth_stencil_texture')\n  .desc(\n    `\n  Test that when one depth stencil texture subresource is bound to different bind groups, whether\n  the bind groups are reset by another compatible ones or not, its list of internal usages within\n  one usage scope can only be a compatible usage list.`\n  )\n  .params(u =>\n    u\n      .combine('bindAspect', ['depth-only', 'stencil-only'] as const)\n      .combine('depthStencilReadOnly', [true, false])\n  )\n  .fn(t => {\n    const { bindAspect, depthStencilReadOnly } = t.params;\n    const depthStencilTexture = t.device.createTexture({\n      format: 'depth24plus-stencil8',\n      usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT,\n      size: [kTextureSize, kTextureSize, 1],\n      ...(t.isCompatibility && {\n        textureBindingViewDimension: '2d-array',\n      }),\n    });\n\n    const conflictedToNonReadOnlyAttachmentBindGroup = t.createBindGroupForTest(\n      depthStencilTexture.createView({\n        dimension: '2d-array',\n        aspect: bindAspect,\n      }),\n      'texture',\n      bindAspect === 'depth-only' ? 'depth' : 'uint'\n    );\n\n    const colorTexture = t.device.createTexture({\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.STORAGE_BINDING,\n      size: [kTextureSize, kTextureSize, 1],\n      ...(t.isCompatibility && {\n        textureBindingViewDimension: '2d-array',\n      }),\n    });\n    const validBindGroup = t.createBindGroupForTest(\n      colorTexture.createView({\n        dimension: '2d-array',\n      }),\n      'texture',\n      'float'\n    );\n\n    const encoder = t.device.createCommandEncoder();\n    const renderPassEncoder = encoder.beginRenderPass({\n      colorAttachments: [],\n      depthStencilAttachment: {\n        view: depthStencilTexture.createView(),\n        depthReadOnly: depthStencilReadOnly,\n        stencilReadOnly: depthStencilReadOnly,\n      },\n    });\n    renderPassEncoder.setBindGroup(0, conflictedToNonReadOnlyAttachmentBindGroup);\n    renderPassEncoder.setBindGroup(0, validBindGroup);\n    renderPassEncoder.end();\n\n    t.expectValidationError(() => {\n      encoder.finish();\n    }, !depthStencilReadOnly);\n  });\n\ng.test('subresources,set_unused_bind_group')\n  .desc(\n    `\n  Test that when one texture subresource is bound to different bind groups and the bind groups are\n  used in the same render or compute pass encoder, its list of internal usages within one usage\n  scope can only be a compatible usage list.`\n  )\n  .params(u => u.combine('inRenderPass', [true, false]).combine('hasConflict', [true, false]))\n  .fn(t => {\n    const { inRenderPass, hasConflict } = t.params;\n\n    const texture0 = t.device.createTexture({\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.STORAGE_BINDING,\n      size: [kTextureSize, kTextureSize, kTextureLayers],\n    });\n    // We always bind the first layer of the texture to bindGroup0.\n    const textureView0 = texture0.createView({\n      dimension: '2d-array',\n      baseArrayLayer: 0,\n      arrayLayerCount: 1,\n    });\n    const visibility = inRenderPass ? GPUShaderStage.FRAGMENT : GPUShaderStage.COMPUTE;\n    // bindGroup0 is used by the pipelines, and bindGroup1 is not used by the pipelines.\n    const textureUsage0 = inRenderPass ? 'texture' : 'storage';\n    const textureUsage1 = hasConflict ? (inRenderPass ? 'storage' : 'texture') : textureUsage0;\n    const bindGroup0 = t.createBindGroupForTest(textureView0, textureUsage0, 'float', visibility);\n    const bindGroup1 = t.createBindGroupForTest(textureView0, textureUsage1, 'float', visibility);\n\n    const encoder = t.device.createCommandEncoder();\n    const colorTexture = t.device.createTexture({\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n      size: [kTextureSize, kTextureSize, 1],\n    });\n    const pipelineLayout = t.device.createPipelineLayout({\n      bindGroupLayouts: [t.createBindGroupLayoutForTest(textureUsage0, 'float', visibility)],\n    });\n    if (inRenderPass) {\n      const renderPipeline = t.device.createRenderPipeline({\n        layout: pipelineLayout,\n        vertex: {\n          module: t.device.createShaderModule({\n            code: t.getNoOpShaderCode('VERTEX'),\n          }),\n          entryPoint: 'main',\n        },\n        fragment: {\n          module: t.device.createShaderModule({\n            code: `\n              @group(0) @binding(0) var texture0 : texture_2d_array<f32>;\n              @fragment fn main()\n                -> @location(0) vec4<f32> {\n                  return textureLoad(texture0, vec2<i32>(), 0, 0);\n              }`,\n          }),\n          entryPoint: 'main',\n          targets: [{ format: 'rgba8unorm' }],\n        },\n      });\n\n      const renderPassEncoder = encoder.beginRenderPass({\n        colorAttachments: [\n          {\n            view: colorTexture.createView(),\n            loadOp: 'load',\n            storeOp: 'store',\n          },\n        ],\n      });\n      renderPassEncoder.setBindGroup(0, bindGroup0);\n      renderPassEncoder.setBindGroup(1, bindGroup1);\n      renderPassEncoder.setPipeline(renderPipeline);\n      renderPassEncoder.draw(1);\n      renderPassEncoder.end();\n    } else {\n      const computePipeline = t.device.createComputePipeline({\n        layout: pipelineLayout,\n        compute: {\n          module: t.device.createShaderModule({\n            code: `\n            @group(0) @binding(0) var texture0 : texture_storage_2d_array<rgba8unorm, write>;\n            @compute @workgroup_size(1)\n            fn main() {\n              textureStore(texture0, vec2<i32>(), 0, vec4<f32>());\n            }`,\n          }),\n          entryPoint: 'main',\n        },\n      });\n      const computePassEncoder = encoder.beginComputePass();\n      computePassEncoder.setBindGroup(0, bindGroup0);\n      computePassEncoder.setBindGroup(1, bindGroup1);\n      computePassEncoder.setPipeline(computePipeline);\n      computePassEncoder.dispatchWorkgroups(1);\n      computePassEncoder.end();\n    }\n\n    // In WebGPU SPEC (Chapter 3.4.5, Synchronization):\n    // This specification defines the following usage scopes:\n    // - In a compute pass, each dispatch command (dispatchWorkgroups() or\n    //   dispatchWorkgroupsIndirect()) is one usage scope. A subresource is \"used\" in the usage\n    //   scope if it is potentially accessible by the command. State-setting compute pass commands,\n    //   like setBindGroup(index, bindGroup, dynamicOffsets), do not contribute directly to a usage\n    //   scope.\n    // - One render pass is one usage scope. A subresource is \"used\" in the usage scope if it’s\n    //   referenced by any (state-setting or non-state-setting) command. For example, in\n    //   setBindGroup(index, bindGroup, dynamicOffsets), every subresource in bindGroup is \"used\" in\n    //   the render pass’s usage scope.\n    const success = !inRenderPass || !hasConflict;\n    t.expectValidationError(() => {\n      encoder.finish();\n    }, !success);\n  });\n\ng.test('subresources,texture_usages_in_copy_and_render_pass')\n  .desc(\n    `\n  Test that using one texture subresource in a render pass encoder and a copy command is always\n  allowed as WebGPU SPEC (chapter 3.4.5) defines that out of any pass encoder, each command always\n  belongs to one usage scope.`\n  )\n  .params(u =>\n    u\n      .combine('usage0', [\n        'copy-src',\n        'copy-dst',\n        'texture',\n        'storage',\n        'color-attachment',\n      ] as const)\n      .combine('usage1', [\n        'copy-src',\n        'copy-dst',\n        'texture',\n        'storage',\n        'color-attachment',\n      ] as const)\n      .filter(\n        ({ usage0, usage1 }) =>\n          usage0 === 'copy-src' ||\n          usage0 === 'copy-dst' ||\n          usage1 === 'copy-src' ||\n          usage1 === 'copy-dst'\n      )\n  )\n  .fn(t => {\n    const { usage0, usage1 } = t.params;\n\n    const texture = t.device.createTexture({\n      format: 'rgba8unorm',\n      usage:\n        GPUTextureUsage.COPY_SRC |\n        GPUTextureUsage.COPY_DST |\n        GPUTextureUsage.TEXTURE_BINDING |\n        GPUTextureUsage.STORAGE_BINDING |\n        GPUTextureUsage.RENDER_ATTACHMENT,\n      size: [kTextureSize, kTextureSize, 1],\n      ...(t.isCompatibility && {\n        textureBindingViewDimension: '2d-array',\n      }),\n    });\n\n    const UseTextureOnCommandEncoder = (\n      texture: GPUTexture,\n      usage: 'copy-src' | 'copy-dst' | 'texture' | 'storage' | 'color-attachment',\n      encoder: GPUCommandEncoder\n    ) => {\n      switch (usage) {\n        case 'copy-src': {\n          const buffer = t.createBufferWithState('valid', {\n            size: 4,\n            usage: GPUBufferUsage.COPY_DST,\n          });\n          encoder.copyTextureToBuffer({ texture }, { buffer }, [1, 1, 1]);\n          break;\n        }\n        case 'copy-dst': {\n          const buffer = t.createBufferWithState('valid', {\n            size: 4,\n            usage: GPUBufferUsage.COPY_SRC,\n          });\n          encoder.copyBufferToTexture({ buffer }, { texture }, [1, 1, 1]);\n          break;\n        }\n        case 'color-attachment': {\n          const renderPassEncoder = encoder.beginRenderPass({\n            colorAttachments: [{ view: texture.createView(), loadOp: 'load', storeOp: 'store' }],\n          });\n          renderPassEncoder.end();\n          break;\n        }\n        case 'texture':\n        case 'storage': {\n          const colorTexture = t.device.createTexture({\n            format: 'rgba8unorm',\n            usage: GPUTextureUsage.RENDER_ATTACHMENT,\n            size: [kTextureSize, kTextureSize, 1],\n          });\n          const renderPassEncoder = encoder.beginRenderPass({\n            colorAttachments: [\n              { view: colorTexture.createView(), loadOp: 'load', storeOp: 'store' },\n            ],\n          });\n          const bindGroup = t.createBindGroupForTest(\n            texture.createView({\n              dimension: '2d-array',\n            }),\n            usage,\n            'float'\n          );\n          renderPassEncoder.setBindGroup(0, bindGroup);\n          renderPassEncoder.end();\n          break;\n        }\n      }\n    };\n    const encoder = t.device.createCommandEncoder();\n    UseTextureOnCommandEncoder(texture, usage0, encoder);\n    UseTextureOnCommandEncoder(texture, usage1, encoder);\n    t.expectValidationError(() => {\n      encoder.finish();\n    }, false);\n  });\n"],"mappings":"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"}