{"version":3,"file":"in_render_common.spec.js","names":["description","makeTestGroup","assert","unreachable","ValidationTest","F","getColorAttachment","texture","textureViewDescriptor","view","createView","clearValue","r","g","b","a","loadOp","storeOp","createBindGroupForTest","textureView","textureUsage","sampleType","bindGroupLayoutEntry","binding","visibility","GPUShaderStage","FRAGMENT","viewDimension","storageTexture","access","format","layout","device","createBindGroupLayout","entries","createBindGroup","resource","isRangeNotOverlapped","start0","end0","start1","end1","kTextureSize","kTextureLevels","kTextureLayers","test","desc","params","u","combine","unless","t","inSamePass","level0","level1","fn","layer0","layer1","createTexture","usage","GPUTextureUsage","RENDER_ATTACHMENT","size","mipLevelCount","colorAttachment1","dimension","baseArrayLayer","arrayLayerCount","baseMipLevel","colorAttachment2","encoder","createCommandEncoder","renderPass","beginRenderPass","colorAttachments","end","renderPass1","renderPass2","success","expectValidationError","finish","combineWithParams","bgLevel","bgLevelCount","bgLayer","bgLayerCount","bgUsage","colorAttachmentLevel","colorAttachmentLayer","TEXTURE_BINDING","STORAGE_BINDING","bindGroupView","bindGroup","colorAttachment","setBindGroup","texture2","isMipLevelNotOverlapped","isArrayLayerNotOverlapped","isNotOverlapped","beginSubcases","dsLevel","dsLayer","dsReadOnly","bgAspect","aspect","attachmentView","depthStencilAttachment","depthReadOnly","depthLoadOp","undefined","depthStoreOp","stencilReadOnly","stencilLoadOp","stencilStoreOp","base","count","bgUsage0","bg0Levels","bgUsage1","bg1Levels","bg0Layers","bg1Layers","bg0","bg1","bindGroup0","bindGroup1","colorTexture","view0Levels","view0Layers","view1Levels","view1Layers","aspect0","aspect1","bindGroupView0","bindGroupView1","sampleType0","sampleType1"],"sources":["../../../../../../src/webgpu/api/validation/resource_usages/texture/in_render_common.spec.ts"],"sourcesContent":["export const description = `\nTexture Usages Validation Tests in Same or Different Render Pass Encoders.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { assert, unreachable } from '../../../../../common/util/util.js';\nimport { ValidationTest } from '../../validation_test.js';\n\nclass F extends ValidationTest {\n  getColorAttachment(\n    texture: GPUTexture,\n    textureViewDescriptor?: GPUTextureViewDescriptor\n  ): GPURenderPassColorAttachment {\n    const view = texture.createView(textureViewDescriptor);\n\n    return {\n      view,\n      clearValue: { r: 1.0, g: 0.0, b: 0.0, a: 1.0 },\n      loadOp: 'clear',\n      storeOp: 'store',\n    };\n  }\n\n  createBindGroupForTest(\n    textureView: GPUTextureView,\n    textureUsage: 'texture' | 'storage',\n    sampleType: 'float' | 'depth' | 'uint'\n  ) {\n    const bindGroupLayoutEntry: GPUBindGroupLayoutEntry = {\n      binding: 0,\n      visibility: GPUShaderStage.FRAGMENT,\n    };\n    switch (textureUsage) {\n      case 'texture':\n        bindGroupLayoutEntry.texture = { viewDimension: '2d-array', sampleType };\n        break;\n      case 'storage':\n        bindGroupLayoutEntry.storageTexture = {\n          access: 'write-only',\n          format: 'rgba8unorm',\n          viewDimension: '2d-array',\n        };\n        break;\n      default:\n        unreachable();\n        break;\n    }\n    const layout = this.device.createBindGroupLayout({\n      entries: [bindGroupLayoutEntry],\n    });\n    return this.device.createBindGroup({\n      layout,\n      entries: [{ binding: 0, resource: textureView }],\n    });\n  }\n\n  isRangeNotOverlapped(start0: number, end0: number, start1: number, end1: number): boolean {\n    assert(start0 <= end0 && start1 <= end1);\n    // There are only two possibilities for two non-overlapped ranges:\n    // [start0, end0] [start1, end1] or\n    // [start1, end1] [start0, end0]\n    return end0 < start1 || end1 < start0;\n  }\n}\n\nexport const g = makeTestGroup(F);\n\nconst kTextureSize = 16;\nconst kTextureLevels = 3;\nconst kTextureLayers = 3;\n\ng.test('subresources,color_attachments')\n  .desc(\n    `\n  Test that the different subresource of the same texture are allowed to be used as color\n  attachments in same / different render pass encoder, while the same subresource is only allowed\n  to be used as different color attachments in different render pass encoders.`\n  )\n  .params(u =>\n    u\n      .combine('layer0', [0, 1])\n      .combine('level0', [0, 1])\n      .combine('layer1', [0, 1])\n      .combine('level1', [0, 1])\n      .combine('inSamePass', [true, false])\n      .unless(t => t.inSamePass && t.level0 !== t.level1)\n  )\n  .fn(t => {\n    const { layer0, level0, layer1, level1, inSamePass } = t.params;\n\n    const texture = t.device.createTexture({\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n      size: [kTextureSize, kTextureSize, kTextureLayers],\n      mipLevelCount: kTextureLevels,\n    });\n\n    const colorAttachment1 = t.getColorAttachment(texture, {\n      dimension: '2d',\n      baseArrayLayer: layer0,\n      arrayLayerCount: 1,\n      baseMipLevel: level0,\n      mipLevelCount: 1,\n    });\n    const colorAttachment2 = t.getColorAttachment(texture, {\n      dimension: '2d',\n      baseArrayLayer: layer1,\n      baseMipLevel: level1,\n      mipLevelCount: 1,\n    });\n    const encoder = t.device.createCommandEncoder();\n    if (inSamePass) {\n      const renderPass = encoder.beginRenderPass({\n        colorAttachments: [colorAttachment1, colorAttachment2],\n      });\n      renderPass.end();\n    } else {\n      const renderPass1 = encoder.beginRenderPass({\n        colorAttachments: [colorAttachment1],\n      });\n      renderPass1.end();\n      const renderPass2 = encoder.beginRenderPass({\n        colorAttachments: [colorAttachment2],\n      });\n      renderPass2.end();\n    }\n\n    const success = inSamePass ? layer0 !== layer1 : true;\n    t.expectValidationError(() => {\n      encoder.finish();\n    }, !success);\n  });\n\ng.test('subresources,color_attachment_and_bind_group')\n  .desc(\n    `\n  Test that when one subresource of a texture is used as a color attachment, it cannot be used in a\n  bind group simultaneously in the same render pass encoder. It is allowed when the bind group is\n  used in another render pass encoder instead of the same one.`\n  )\n  .params(u =>\n    u\n      .combine('colorAttachmentLevel', [0, 1])\n      .combine('colorAttachmentLayer', [0, 1])\n      .combineWithParams([\n        { bgLevel: 0, bgLevelCount: 1 },\n        { bgLevel: 1, bgLevelCount: 1 },\n        { bgLevel: 1, bgLevelCount: 2 },\n      ])\n      .combineWithParams([\n        { bgLayer: 0, bgLayerCount: 1 },\n        { bgLayer: 1, bgLayerCount: 1 },\n        { bgLayer: 1, bgLayerCount: 2 },\n      ])\n      .combine('bgUsage', ['texture', 'storage'] as const)\n      .unless(t => t.bgUsage === 'storage' && t.bgLevelCount > 1)\n      .combine('inSamePass', [true, false])\n  )\n  .fn(t => {\n    const {\n      colorAttachmentLevel,\n      colorAttachmentLayer,\n      bgLevel,\n      bgLevelCount,\n      bgLayer,\n      bgLayerCount,\n      bgUsage,\n      inSamePass,\n    } = t.params;\n\n    const texture = t.device.createTexture({\n      format: 'rgba8unorm',\n      usage:\n        GPUTextureUsage.RENDER_ATTACHMENT |\n        GPUTextureUsage.TEXTURE_BINDING |\n        GPUTextureUsage.STORAGE_BINDING,\n      size: [kTextureSize, kTextureSize, kTextureLayers],\n      mipLevelCount: kTextureLevels,\n    });\n    const bindGroupView = texture.createView({\n      dimension: '2d-array',\n      baseArrayLayer: bgLayer,\n      arrayLayerCount: bgLayerCount,\n      baseMipLevel: bgLevel,\n      mipLevelCount: bgLevelCount,\n    });\n    const bindGroup = t.createBindGroupForTest(bindGroupView, bgUsage, 'float');\n\n    const colorAttachment = t.getColorAttachment(texture, {\n      dimension: '2d',\n      baseArrayLayer: colorAttachmentLayer,\n      arrayLayerCount: 1,\n      baseMipLevel: colorAttachmentLevel,\n      mipLevelCount: 1,\n    });\n\n    const encoder = t.device.createCommandEncoder();\n    const renderPass = encoder.beginRenderPass({\n      colorAttachments: [colorAttachment],\n    });\n    if (inSamePass) {\n      renderPass.setBindGroup(0, bindGroup);\n      renderPass.end();\n    } else {\n      renderPass.end();\n\n      const texture2 = t.device.createTexture({\n        format: 'rgba8unorm',\n        usage: GPUTextureUsage.RENDER_ATTACHMENT,\n        size: [kTextureSize, kTextureSize, 1],\n        mipLevelCount: 1,\n      });\n      const colorAttachment2 = t.getColorAttachment(texture2);\n      const renderPass2 = encoder.beginRenderPass({\n        colorAttachments: [colorAttachment2],\n      });\n      renderPass2.setBindGroup(0, bindGroup);\n      renderPass2.end();\n    }\n\n    const isMipLevelNotOverlapped = t.isRangeNotOverlapped(\n      colorAttachmentLevel,\n      colorAttachmentLevel,\n      bgLevel,\n      bgLevel + bgLevelCount - 1\n    );\n    const isArrayLayerNotOverlapped = t.isRangeNotOverlapped(\n      colorAttachmentLayer,\n      colorAttachmentLayer,\n      bgLayer,\n      bgLayer + bgLayerCount - 1\n    );\n    const isNotOverlapped = isMipLevelNotOverlapped || isArrayLayerNotOverlapped;\n\n    const success = inSamePass ? isNotOverlapped : true;\n    t.expectValidationError(() => {\n      encoder.finish();\n    }, !success);\n  });\n\ng.test('subresources,depth_stencil_attachment_and_bind_group')\n  .desc(\n    `\n  Test that when one subresource of a texture is used as a depth stencil attachment, it cannot be\n  used in a bind group simultaneously in the same render pass encoder. It is allowed when the bind\n  group is used in another render pass encoder instead of the same one, or the subresource is used\n  as a read-only depth stencil attachment.`\n  )\n  .params(u =>\n    u\n      .combine('dsLevel', [0, 1])\n      .combine('dsLayer', [0, 1])\n      .combineWithParams([\n        { bgLevel: 0, bgLevelCount: 1 },\n        { bgLevel: 1, bgLevelCount: 1 },\n        { bgLevel: 1, bgLevelCount: 2 },\n      ])\n      .combineWithParams([\n        { bgLayer: 0, bgLayerCount: 1 },\n        { bgLayer: 1, bgLayerCount: 1 },\n        { bgLayer: 1, bgLayerCount: 2 },\n      ])\n      .beginSubcases()\n      .combine('dsReadOnly', [true, false])\n      .combine('bgAspect', ['depth-only', 'stencil-only'] as const)\n      .combine('inSamePass', [true, false])\n  )\n  .fn(t => {\n    const {\n      dsLevel,\n      dsLayer,\n      bgLevel,\n      bgLevelCount,\n      bgLayer,\n      bgLayerCount,\n      dsReadOnly,\n      bgAspect,\n      inSamePass,\n    } = t.params;\n\n    const texture = t.device.createTexture({\n      format: 'depth24plus-stencil8',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,\n      size: [kTextureSize, kTextureSize, kTextureLayers],\n      mipLevelCount: kTextureLevels,\n    });\n    const bindGroupView = texture.createView({\n      dimension: '2d-array',\n      baseArrayLayer: bgLayer,\n      arrayLayerCount: bgLayerCount,\n      baseMipLevel: bgLevel,\n      mipLevelCount: bgLevelCount,\n      aspect: bgAspect,\n    });\n    const sampleType = bgAspect === 'depth-only' ? 'depth' : 'uint';\n    const bindGroup = t.createBindGroupForTest(bindGroupView, 'texture', sampleType);\n\n    const attachmentView = texture.createView({\n      dimension: '2d',\n      baseArrayLayer: dsLayer,\n      arrayLayerCount: 1,\n      baseMipLevel: dsLevel,\n      mipLevelCount: 1,\n    });\n    const depthStencilAttachment: GPURenderPassDepthStencilAttachment = {\n      view: attachmentView,\n      depthReadOnly: dsReadOnly,\n      depthLoadOp: dsReadOnly ? undefined : 'load',\n      depthStoreOp: dsReadOnly ? undefined : 'store',\n      stencilReadOnly: dsReadOnly,\n      stencilLoadOp: dsReadOnly ? undefined : 'load',\n      stencilStoreOp: dsReadOnly ? undefined : 'store',\n    };\n\n    const encoder = t.device.createCommandEncoder();\n    const renderPass = encoder.beginRenderPass({\n      colorAttachments: [],\n      depthStencilAttachment,\n    });\n    if (inSamePass) {\n      renderPass.setBindGroup(0, bindGroup);\n      renderPass.end();\n    } else {\n      renderPass.end();\n\n      const texture2 = t.device.createTexture({\n        format: 'rgba8unorm',\n        usage: GPUTextureUsage.RENDER_ATTACHMENT,\n        size: [kTextureSize, kTextureSize, 1],\n        mipLevelCount: 1,\n      });\n      const colorAttachment2 = t.getColorAttachment(texture2);\n      const renderPass2 = encoder.beginRenderPass({\n        colorAttachments: [colorAttachment2],\n      });\n      renderPass2.setBindGroup(0, bindGroup);\n      renderPass2.end();\n    }\n\n    const isMipLevelNotOverlapped = t.isRangeNotOverlapped(\n      dsLevel,\n      dsLevel,\n      bgLevel,\n      bgLevel + bgLevelCount - 1\n    );\n    const isArrayLayerNotOverlapped = t.isRangeNotOverlapped(\n      dsLayer,\n      dsLayer,\n      bgLayer,\n      bgLayer + bgLayerCount - 1\n    );\n    const isNotOverlapped = isMipLevelNotOverlapped || isArrayLayerNotOverlapped;\n\n    const success = !inSamePass || isNotOverlapped || dsReadOnly;\n    t.expectValidationError(() => {\n      encoder.finish();\n    }, !success);\n  });\n\ng.test('subresources,multiple_bind_groups')\n  .desc(\n    `\n  Test that when one color texture subresource is bound to different bind groups, its list of\n  internal usages within one usage scope can only be a compatible usage list. For texture\n  subresources in bind groups, the compatible usage lists are {TEXTURE_BINDING} and\n  {STORAGE_BINDING}, which means it can only be bound as both TEXTURE_BINDING and STORAGE_BINDING in\n  different render pass encoders, otherwise a validation error will occur.`\n  )\n  .params(u =>\n    u\n      .combine('bg0Levels', [\n        { base: 0, count: 1 },\n        { base: 1, count: 1 },\n        { base: 1, count: 2 },\n      ])\n      .combine('bg0Layers', [\n        { base: 0, count: 1 },\n        { base: 1, count: 1 },\n        { base: 1, count: 2 },\n      ])\n      .combine('bg1Levels', [\n        { base: 0, count: 1 },\n        { base: 1, count: 1 },\n        { base: 1, count: 2 },\n      ])\n      .combine('bg1Layers', [\n        { base: 0, count: 1 },\n        { base: 1, count: 1 },\n        { base: 1, count: 2 },\n      ])\n      .combine('bgUsage0', ['texture', 'storage'] as const)\n      .combine('bgUsage1', ['texture', 'storage'] as const)\n      .unless(\n        t =>\n          (t.bgUsage0 === 'storage' && t.bg0Levels.count > 1) ||\n          (t.bgUsage1 === 'storage' && t.bg1Levels.count > 1)\n      )\n      .combine('inSamePass', [true, false])\n  )\n  .fn(t => {\n    const { bg0Levels, bg0Layers, bg1Levels, bg1Layers, bgUsage0, bgUsage1, inSamePass } = t.params;\n\n    const texture = t.device.createTexture({\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.TEXTURE_BINDING,\n      size: [kTextureSize, kTextureSize, kTextureLayers],\n      mipLevelCount: kTextureLevels,\n    });\n    const bg0 = texture.createView({\n      dimension: '2d-array',\n      baseArrayLayer: bg0Layers.base,\n      arrayLayerCount: bg0Layers.count,\n      baseMipLevel: bg0Levels.base,\n      mipLevelCount: bg0Levels.count,\n    });\n    const bg1 = texture.createView({\n      dimension: '2d-array',\n      baseArrayLayer: bg1Layers.base,\n      arrayLayerCount: bg1Layers.count,\n      baseMipLevel: bg1Levels.base,\n      mipLevelCount: bg1Levels.count,\n    });\n    const bindGroup0 = t.createBindGroupForTest(bg0, bgUsage0, 'float');\n    const bindGroup1 = t.createBindGroupForTest(bg1, bgUsage1, 'float');\n\n    const colorTexture = t.device.createTexture({\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n      size: [kTextureSize, kTextureSize, 1],\n      mipLevelCount: 1,\n    });\n    const colorAttachment = t.getColorAttachment(colorTexture);\n    const encoder = t.device.createCommandEncoder();\n    const renderPass = encoder.beginRenderPass({\n      colorAttachments: [colorAttachment],\n    });\n    if (inSamePass) {\n      renderPass.setBindGroup(0, bindGroup0);\n      renderPass.setBindGroup(1, bindGroup1);\n      renderPass.end();\n    } else {\n      renderPass.setBindGroup(0, bindGroup0);\n      renderPass.end();\n\n      const renderPass2 = encoder.beginRenderPass({\n        colorAttachments: [colorAttachment],\n      });\n      renderPass2.setBindGroup(1, bindGroup1);\n      renderPass2.end();\n    }\n\n    const isMipLevelNotOverlapped = t.isRangeNotOverlapped(\n      bg0Levels.base,\n      bg0Levels.base + bg0Levels.count - 1,\n      bg1Levels.base,\n      bg1Levels.base + bg1Levels.count - 1\n    );\n    const isArrayLayerNotOverlapped = t.isRangeNotOverlapped(\n      bg0Layers.base,\n      bg0Layers.base + bg0Layers.count - 1,\n      bg1Layers.base,\n      bg1Layers.base + bg1Layers.count - 1\n    );\n    const isNotOverlapped = isMipLevelNotOverlapped || isArrayLayerNotOverlapped;\n\n    const success = !inSamePass || isNotOverlapped || bgUsage0 === bgUsage1;\n    t.expectValidationError(() => {\n      encoder.finish();\n    }, !success);\n  });\n\ng.test('subresources,depth_stencil_texture_in_bind_groups')\n  .desc(\n    `\n  Test that when one depth stencil texture subresource is bound to different bind groups, we can\n  always bind these two bind groups in either the same or different render pass encoder as the depth\n  stencil texture can only be bound as TEXTURE_BINDING in the bind group.`\n  )\n  .params(u =>\n    u\n      .combine('view0Levels', [\n        { base: 0, count: 1 },\n        { base: 1, count: 1 },\n        { base: 1, count: 2 },\n      ])\n      .combine('view0Layers', [\n        { base: 0, count: 1 },\n        { base: 1, count: 1 },\n        { base: 1, count: 2 },\n      ])\n      .combine('view1Levels', [\n        { base: 0, count: 1 },\n        { base: 1, count: 1 },\n        { base: 1, count: 2 },\n      ])\n      .combine('view1Layers', [\n        { base: 0, count: 1 },\n        { base: 1, count: 1 },\n        { base: 1, count: 2 },\n      ])\n      .combine('aspect0', ['depth-only', 'stencil-only'] as const)\n      .combine('aspect1', ['depth-only', 'stencil-only'] as const)\n      .combine('inSamePass', [true, false])\n  )\n  .fn(t => {\n    const { view0Levels, view0Layers, view1Levels, view1Layers, aspect0, aspect1, inSamePass } =\n      t.params;\n\n    const texture = t.device.createTexture({\n      format: 'depth24plus-stencil8',\n      usage: GPUTextureUsage.TEXTURE_BINDING,\n      size: [kTextureSize, kTextureSize, kTextureLayers],\n      mipLevelCount: kTextureLevels,\n    });\n    const bindGroupView0 = texture.createView({\n      dimension: '2d-array',\n      baseArrayLayer: view0Layers.base,\n      arrayLayerCount: view0Layers.count,\n      baseMipLevel: view0Levels.base,\n      mipLevelCount: view0Levels.count,\n      aspect: aspect0,\n    });\n    const bindGroupView1 = texture.createView({\n      dimension: '2d-array',\n      baseArrayLayer: view1Layers.base,\n      arrayLayerCount: view1Layers.count,\n      baseMipLevel: view1Levels.base,\n      mipLevelCount: view1Levels.count,\n      aspect: aspect1,\n    });\n\n    const sampleType0 = aspect0 === 'depth-only' ? 'depth' : 'uint';\n    const sampleType1 = aspect1 === 'depth-only' ? 'depth' : 'uint';\n    const bindGroup0 = t.createBindGroupForTest(bindGroupView0, 'texture', sampleType0);\n    const bindGroup1 = t.createBindGroupForTest(bindGroupView1, 'texture', sampleType1);\n\n    const colorTexture = t.device.createTexture({\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n      size: [kTextureSize, kTextureSize, 1],\n      mipLevelCount: 1,\n    });\n    const colorAttachment = t.getColorAttachment(colorTexture);\n    const encoder = t.device.createCommandEncoder();\n    const renderPass = encoder.beginRenderPass({\n      colorAttachments: [colorAttachment],\n    });\n    if (inSamePass) {\n      renderPass.setBindGroup(0, bindGroup0);\n      renderPass.setBindGroup(1, bindGroup1);\n      renderPass.end();\n    } else {\n      renderPass.setBindGroup(0, bindGroup0);\n      renderPass.end();\n\n      const renderPass2 = encoder.beginRenderPass({\n        colorAttachments: [colorAttachment],\n      });\n      renderPass2.setBindGroup(1, bindGroup1);\n      renderPass2.end();\n    }\n\n    t.expectValidationError(() => {\n      encoder.finish();\n    }, false);\n  });\n"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,+CAA+C;AAC7E,SAASC,MAAM,EAAEC,WAAW,QAAQ,oCAAoC;AACxE,SAASC,cAAc,QAAQ,0BAA0B;;AAEzD,MAAMC,CAAC,SAASD,cAAc,CAAC;EAC7BE,kBAAkBA;EAChBC,OAAmB;EACnBC,qBAAgD;EAClB;IAC9B,MAAMC,IAAI,GAAGF,OAAO,CAACG,UAAU,CAACF,qBAAqB,CAAC;;IAEtD,OAAO;MACLC,IAAI;MACJE,UAAU,EAAE,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,CAAC,CAAC;MAC9CC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;IACX,CAAC;EACH;;EAEAC,sBAAsBA;EACpBC,WAA2B;EAC3BC,YAAmC;EACnCC,UAAsC;EACtC;IACA,MAAMC,oBAA6C,GAAG;MACpDC,OAAO,EAAE,CAAC;MACVC,UAAU,EAAEC,cAAc,CAACC;IAC7B,CAAC;IACD,QAAQN,YAAY;MAClB,KAAK,SAAS;QACZE,oBAAoB,CAACf,OAAO,GAAG,EAAEoB,aAAa,EAAE,UAAU,EAAEN,UAAU,CAAC,CAAC;QACxE;MACF,KAAK,SAAS;QACZC,oBAAoB,CAACM,cAAc,GAAG;UACpCC,MAAM,EAAE,YAAY;UACpBC,MAAM,EAAE,YAAY;UACpBH,aAAa,EAAE;QACjB,CAAC;QACD;MACF;QACExB,WAAW,CAAC,CAAC;QACb;IACJ;IACA,MAAM4B,MAAM,GAAG,IAAI,CAACC,MAAM,CAACC,qBAAqB,CAAC;MAC/CC,OAAO,EAAE,CAACZ,oBAAoB;IAChC,CAAC,CAAC;IACF,OAAO,IAAI,CAACU,MAAM,CAACG,eAAe,CAAC;MACjCJ,MAAM;MACNG,OAAO,EAAE,CAAC,EAAEX,OAAO,EAAE,CAAC,EAAEa,QAAQ,EAAEjB,WAAW,CAAC,CAAC;IACjD,CAAC,CAAC;EACJ;;EAEAkB,oBAAoBA,CAACC,MAAc,EAAEC,IAAY,EAAEC,MAAc,EAAEC,IAAY,EAAW;IACxFvC,MAAM,CAACoC,MAAM,IAAIC,IAAI,IAAIC,MAAM,IAAIC,IAAI,CAAC;IACxC;IACA;IACA;IACA,OAAOF,IAAI,GAAGC,MAAM,IAAIC,IAAI,GAAGH,MAAM;EACvC;AACF;;AAEA,OAAO,MAAMzB,CAAC,GAAGZ,aAAa,CAACI,CAAC,CAAC;;AAEjC,MAAMqC,YAAY,GAAG,EAAE;AACvB,MAAMC,cAAc,GAAG,CAAC;AACxB,MAAMC,cAAc,GAAG,CAAC;;AAExB/B,CAAC,CAACgC,IAAI,CAAC,gCAAgC,CAAC;AACrCC,IAAI;EACF;AACL;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzBA,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzBA,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzBA,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzBA,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACpCC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,UAAU,IAAID,CAAC,CAACE,MAAM,KAAKF,CAAC,CAACG,MAAM;AACtD,CAAC;AACAC,EAAE,CAAC,CAAAJ,CAAC,KAAI;EACP,MAAM,EAAEK,MAAM,EAAEH,MAAM,EAAEI,MAAM,EAAEH,MAAM,EAAEF,UAAU,CAAC,CAAC,GAAGD,CAAC,CAACJ,MAAM;;EAE/D,MAAMxC,OAAO,GAAG4C,CAAC,CAACnB,MAAM,CAAC0B,aAAa,CAAC;IACrC5B,MAAM,EAAE,YAAY;IACpB6B,KAAK,EAAEC,eAAe,CAACC,iBAAiB;IACxCC,IAAI,EAAE,CAACpB,YAAY,EAAEA,YAAY,EAAEE,cAAc,CAAC;IAClDmB,aAAa,EAAEpB;EACjB,CAAC,CAAC;;EAEF,MAAMqB,gBAAgB,GAAGb,CAAC,CAAC7C,kBAAkB,CAACC,OAAO,EAAE;IACrD0D,SAAS,EAAE,IAAI;IACfC,cAAc,EAAEV,MAAM;IACtBW,eAAe,EAAE,CAAC;IAClBC,YAAY,EAAEf,MAAM;IACpBU,aAAa,EAAE;EACjB,CAAC,CAAC;EACF,MAAMM,gBAAgB,GAAGlB,CAAC,CAAC7C,kBAAkB,CAACC,OAAO,EAAE;IACrD0D,SAAS,EAAE,IAAI;IACfC,cAAc,EAAET,MAAM;IACtBW,YAAY,EAAEd,MAAM;IACpBS,aAAa,EAAE;EACjB,CAAC,CAAC;EACF,MAAMO,OAAO,GAAGnB,CAAC,CAACnB,MAAM,CAACuC,oBAAoB,CAAC,CAAC;EAC/C,IAAInB,UAAU,EAAE;IACd,MAAMoB,UAAU,GAAGF,OAAO,CAACG,eAAe,CAAC;MACzCC,gBAAgB,EAAE,CAACV,gBAAgB,EAAEK,gBAAgB;IACvD,CAAC,CAAC;IACFG,UAAU,CAACG,GAAG,CAAC,CAAC;EAClB,CAAC,MAAM;IACL,MAAMC,WAAW,GAAGN,OAAO,CAACG,eAAe,CAAC;MAC1CC,gBAAgB,EAAE,CAACV,gBAAgB;IACrC,CAAC,CAAC;IACFY,WAAW,CAACD,GAAG,CAAC,CAAC;IACjB,MAAME,WAAW,GAAGP,OAAO,CAACG,eAAe,CAAC;MAC1CC,gBAAgB,EAAE,CAACL,gBAAgB;IACrC,CAAC,CAAC;IACFQ,WAAW,CAACF,GAAG,CAAC,CAAC;EACnB;;EAEA,MAAMG,OAAO,GAAG1B,UAAU,GAAGI,MAAM,KAAKC,MAAM,GAAG,IAAI;EACrDN,CAAC,CAAC4B,qBAAqB,CAAC,MAAM;IAC5BT,OAAO,CAACU,MAAM,CAAC,CAAC;EAClB,CAAC,EAAE,CAACF,OAAO,CAAC;AACd,CAAC,CAAC;;AAEJjE,CAAC,CAACgC,IAAI,CAAC,8CAA8C,CAAC;AACnDC,IAAI;EACF;AACL;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,sBAAsB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvCA,OAAO,CAAC,sBAAsB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvCgC,iBAAiB,CAAC;AACjB,EAAEC,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,EAAED,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,EAAED,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAChC,CAAC;AACDF,iBAAiB,CAAC;AACjB,EAAEG,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,EAAED,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,EAAED,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAChC,CAAC;AACDpC,OAAO,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,CAAU,CAAC;AACnDC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACmC,OAAO,KAAK,SAAS,IAAInC,CAAC,CAACgC,YAAY,GAAG,CAAC,CAAC;AAC1DlC,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC;AACxC,CAAC;AACAM,EAAE,CAAC,CAAAJ,CAAC,KAAI;EACP,MAAM;IACJoC,oBAAoB;IACpBC,oBAAoB;IACpBN,OAAO;IACPC,YAAY;IACZC,OAAO;IACPC,YAAY;IACZC,OAAO;IACPlC;EACF,CAAC,GAAGD,CAAC,CAACJ,MAAM;;EAEZ,MAAMxC,OAAO,GAAG4C,CAAC,CAACnB,MAAM,CAAC0B,aAAa,CAAC;IACrC5B,MAAM,EAAE,YAAY;IACpB6B,KAAK;IACHC,eAAe,CAACC,iBAAiB;IACjCD,eAAe,CAAC6B,eAAe;IAC/B7B,eAAe,CAAC8B,eAAe;IACjC5B,IAAI,EAAE,CAACpB,YAAY,EAAEA,YAAY,EAAEE,cAAc,CAAC;IAClDmB,aAAa,EAAEpB;EACjB,CAAC,CAAC;EACF,MAAMgD,aAAa,GAAGpF,OAAO,CAACG,UAAU,CAAC;IACvCuD,SAAS,EAAE,UAAU;IACrBC,cAAc,EAAEkB,OAAO;IACvBjB,eAAe,EAAEkB,YAAY;IAC7BjB,YAAY,EAAEc,OAAO;IACrBnB,aAAa,EAAEoB;EACjB,CAAC,CAAC;EACF,MAAMS,SAAS,GAAGzC,CAAC,CAACjC,sBAAsB,CAACyE,aAAa,EAAEL,OAAO,EAAE,OAAO,CAAC;;EAE3E,MAAMO,eAAe,GAAG1C,CAAC,CAAC7C,kBAAkB,CAACC,OAAO,EAAE;IACpD0D,SAAS,EAAE,IAAI;IACfC,cAAc,EAAEsB,oBAAoB;IACpCrB,eAAe,EAAE,CAAC;IAClBC,YAAY,EAAEmB,oBAAoB;IAClCxB,aAAa,EAAE;EACjB,CAAC,CAAC;;EAEF,MAAMO,OAAO,GAAGnB,CAAC,CAACnB,MAAM,CAACuC,oBAAoB,CAAC,CAAC;EAC/C,MAAMC,UAAU,GAAGF,OAAO,CAACG,eAAe,CAAC;IACzCC,gBAAgB,EAAE,CAACmB,eAAe;EACpC,CAAC,CAAC;EACF,IAAIzC,UAAU,EAAE;IACdoB,UAAU,CAACsB,YAAY,CAAC,CAAC,EAAEF,SAAS,CAAC;IACrCpB,UAAU,CAACG,GAAG,CAAC,CAAC;EAClB,CAAC,MAAM;IACLH,UAAU,CAACG,GAAG,CAAC,CAAC;;IAEhB,MAAMoB,QAAQ,GAAG5C,CAAC,CAACnB,MAAM,CAAC0B,aAAa,CAAC;MACtC5B,MAAM,EAAE,YAAY;MACpB6B,KAAK,EAAEC,eAAe,CAACC,iBAAiB;MACxCC,IAAI,EAAE,CAACpB,YAAY,EAAEA,YAAY,EAAE,CAAC,CAAC;MACrCqB,aAAa,EAAE;IACjB,CAAC,CAAC;IACF,MAAMM,gBAAgB,GAAGlB,CAAC,CAAC7C,kBAAkB,CAACyF,QAAQ,CAAC;IACvD,MAAMlB,WAAW,GAAGP,OAAO,CAACG,eAAe,CAAC;MAC1CC,gBAAgB,EAAE,CAACL,gBAAgB;IACrC,CAAC,CAAC;IACFQ,WAAW,CAACiB,YAAY,CAAC,CAAC,EAAEF,SAAS,CAAC;IACtCf,WAAW,CAACF,GAAG,CAAC,CAAC;EACnB;;EAEA,MAAMqB,uBAAuB,GAAG7C,CAAC,CAACd,oBAAoB;IACpDkD,oBAAoB;IACpBA,oBAAoB;IACpBL,OAAO;IACPA,OAAO,GAAGC,YAAY,GAAG;EAC3B,CAAC;EACD,MAAMc,yBAAyB,GAAG9C,CAAC,CAACd,oBAAoB;IACtDmD,oBAAoB;IACpBA,oBAAoB;IACpBJ,OAAO;IACPA,OAAO,GAAGC,YAAY,GAAG;EAC3B,CAAC;EACD,MAAMa,eAAe,GAAGF,uBAAuB,IAAIC,yBAAyB;;EAE5E,MAAMnB,OAAO,GAAG1B,UAAU,GAAG8C,eAAe,GAAG,IAAI;EACnD/C,CAAC,CAAC4B,qBAAqB,CAAC,MAAM;IAC5BT,OAAO,CAACU,MAAM,CAAC,CAAC;EAClB,CAAC,EAAE,CAACF,OAAO,CAAC;AACd,CAAC,CAAC;;AAEJjE,CAAC,CAACgC,IAAI,CAAC,sDAAsD,CAAC;AAC3DC,IAAI;EACF;AACL;AACA;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1BA,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1BgC,iBAAiB,CAAC;AACjB,EAAEC,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,EAAED,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,EAAED,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAChC,CAAC;AACDF,iBAAiB,CAAC;AACjB,EAAEG,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,EAAED,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,EAAED,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAChC,CAAC;AACDc,aAAa,CAAC,CAAC;AACflD,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACpCA,OAAO,CAAC,UAAU,EAAE,CAAC,YAAY,EAAE,cAAc,CAAU,CAAC;AAC5DA,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC;AACxC,CAAC;AACAM,EAAE,CAAC,CAAAJ,CAAC,KAAI;EACP,MAAM;IACJiD,OAAO;IACPC,OAAO;IACPnB,OAAO;IACPC,YAAY;IACZC,OAAO;IACPC,YAAY;IACZiB,UAAU;IACVC,QAAQ;IACRnD;EACF,CAAC,GAAGD,CAAC,CAACJ,MAAM;;EAEZ,MAAMxC,OAAO,GAAG4C,CAAC,CAACnB,MAAM,CAAC0B,aAAa,CAAC;IACrC5B,MAAM,EAAE,sBAAsB;IAC9B6B,KAAK,EAAEC,eAAe,CAACC,iBAAiB,GAAGD,eAAe,CAAC6B,eAAe;IAC1E3B,IAAI,EAAE,CAACpB,YAAY,EAAEA,YAAY,EAAEE,cAAc,CAAC;IAClDmB,aAAa,EAAEpB;EACjB,CAAC,CAAC;EACF,MAAMgD,aAAa,GAAGpF,OAAO,CAACG,UAAU,CAAC;IACvCuD,SAAS,EAAE,UAAU;IACrBC,cAAc,EAAEkB,OAAO;IACvBjB,eAAe,EAAEkB,YAAY;IAC7BjB,YAAY,EAAEc,OAAO;IACrBnB,aAAa,EAAEoB,YAAY;IAC3BqB,MAAM,EAAED;EACV,CAAC,CAAC;EACF,MAAMlF,UAAU,GAAGkF,QAAQ,KAAK,YAAY,GAAG,OAAO,GAAG,MAAM;EAC/D,MAAMX,SAAS,GAAGzC,CAAC,CAACjC,sBAAsB,CAACyE,aAAa,EAAE,SAAS,EAAEtE,UAAU,CAAC;;EAEhF,MAAMoF,cAAc,GAAGlG,OAAO,CAACG,UAAU,CAAC;IACxCuD,SAAS,EAAE,IAAI;IACfC,cAAc,EAAEmC,OAAO;IACvBlC,eAAe,EAAE,CAAC;IAClBC,YAAY,EAAEgC,OAAO;IACrBrC,aAAa,EAAE;EACjB,CAAC,CAAC;EACF,MAAM2C,sBAA2D,GAAG;IAClEjG,IAAI,EAAEgG,cAAc;IACpBE,aAAa,EAAEL,UAAU;IACzBM,WAAW,EAAEN,UAAU,GAAGO,SAAS,GAAG,MAAM;IAC5CC,YAAY,EAAER,UAAU,GAAGO,SAAS,GAAG,OAAO;IAC9CE,eAAe,EAAET,UAAU;IAC3BU,aAAa,EAAEV,UAAU,GAAGO,SAAS,GAAG,MAAM;IAC9CI,cAAc,EAAEX,UAAU,GAAGO,SAAS,GAAG;EAC3C,CAAC;;EAED,MAAMvC,OAAO,GAAGnB,CAAC,CAACnB,MAAM,CAACuC,oBAAoB,CAAC,CAAC;EAC/C,MAAMC,UAAU,GAAGF,OAAO,CAACG,eAAe,CAAC;IACzCC,gBAAgB,EAAE,EAAE;IACpBgC;EACF,CAAC,CAAC;EACF,IAAItD,UAAU,EAAE;IACdoB,UAAU,CAACsB,YAAY,CAAC,CAAC,EAAEF,SAAS,CAAC;IACrCpB,UAAU,CAACG,GAAG,CAAC,CAAC;EAClB,CAAC,MAAM;IACLH,UAAU,CAACG,GAAG,CAAC,CAAC;;IAEhB,MAAMoB,QAAQ,GAAG5C,CAAC,CAACnB,MAAM,CAAC0B,aAAa,CAAC;MACtC5B,MAAM,EAAE,YAAY;MACpB6B,KAAK,EAAEC,eAAe,CAACC,iBAAiB;MACxCC,IAAI,EAAE,CAACpB,YAAY,EAAEA,YAAY,EAAE,CAAC,CAAC;MACrCqB,aAAa,EAAE;IACjB,CAAC,CAAC;IACF,MAAMM,gBAAgB,GAAGlB,CAAC,CAAC7C,kBAAkB,CAACyF,QAAQ,CAAC;IACvD,MAAMlB,WAAW,GAAGP,OAAO,CAACG,eAAe,CAAC;MAC1CC,gBAAgB,EAAE,CAACL,gBAAgB;IACrC,CAAC,CAAC;IACFQ,WAAW,CAACiB,YAAY,CAAC,CAAC,EAAEF,SAAS,CAAC;IACtCf,WAAW,CAACF,GAAG,CAAC,CAAC;EACnB;;EAEA,MAAMqB,uBAAuB,GAAG7C,CAAC,CAACd,oBAAoB;IACpD+D,OAAO;IACPA,OAAO;IACPlB,OAAO;IACPA,OAAO,GAAGC,YAAY,GAAG;EAC3B,CAAC;EACD,MAAMc,yBAAyB,GAAG9C,CAAC,CAACd,oBAAoB;IACtDgE,OAAO;IACPA,OAAO;IACPjB,OAAO;IACPA,OAAO,GAAGC,YAAY,GAAG;EAC3B,CAAC;EACD,MAAMa,eAAe,GAAGF,uBAAuB,IAAIC,yBAAyB;;EAE5E,MAAMnB,OAAO,GAAG,CAAC1B,UAAU,IAAI8C,eAAe,IAAII,UAAU;EAC5DnD,CAAC,CAAC4B,qBAAqB,CAAC,MAAM;IAC5BT,OAAO,CAACU,MAAM,CAAC,CAAC;EAClB,CAAC,EAAE,CAACF,OAAO,CAAC;AACd,CAAC,CAAC;;AAEJjE,CAAC,CAACgC,IAAI,CAAC,mCAAmC,CAAC;AACxCC,IAAI;EACF;AACL;AACA;AACA;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,WAAW,EAAE;AACpB,EAAEiE,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACtB,CAAC;AACDlE,OAAO,CAAC,WAAW,EAAE;AACpB,EAAEiE,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACtB,CAAC;AACDlE,OAAO,CAAC,WAAW,EAAE;AACpB,EAAEiE,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACtB,CAAC;AACDlE,OAAO,CAAC,WAAW,EAAE;AACpB,EAAEiE,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACtB,CAAC;AACDlE,OAAO,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,SAAS,CAAU,CAAC;AACpDA,OAAO,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,SAAS,CAAU,CAAC;AACpDC,MAAM;EACL,CAAAC,CAAC;EACEA,CAAC,CAACiE,QAAQ,KAAK,SAAS,IAAIjE,CAAC,CAACkE,SAAS,CAACF,KAAK,GAAG,CAAC;EACjDhE,CAAC,CAACmE,QAAQ,KAAK,SAAS,IAAInE,CAAC,CAACoE,SAAS,CAACJ,KAAK,GAAG;AACrD,CAAC;AACAlE,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC;AACxC,CAAC;AACAM,EAAE,CAAC,CAAAJ,CAAC,KAAI;EACP,MAAM,EAAEkE,SAAS,EAAEG,SAAS,EAAED,SAAS,EAAEE,SAAS,EAAEL,QAAQ,EAAEE,QAAQ,EAAElE,UAAU,CAAC,CAAC,GAAGD,CAAC,CAACJ,MAAM;;EAE/F,MAAMxC,OAAO,GAAG4C,CAAC,CAACnB,MAAM,CAAC0B,aAAa,CAAC;IACrC5B,MAAM,EAAE,YAAY;IACpB6B,KAAK,EAAEC,eAAe,CAAC8B,eAAe,GAAG9B,eAAe,CAAC6B,eAAe;IACxE3B,IAAI,EAAE,CAACpB,YAAY,EAAEA,YAAY,EAAEE,cAAc,CAAC;IAClDmB,aAAa,EAAEpB;EACjB,CAAC,CAAC;EACF,MAAM+E,GAAG,GAAGnH,OAAO,CAACG,UAAU,CAAC;IAC7BuD,SAAS,EAAE,UAAU;IACrBC,cAAc,EAAEsD,SAAS,CAACN,IAAI;IAC9B/C,eAAe,EAAEqD,SAAS,CAACL,KAAK;IAChC/C,YAAY,EAAEiD,SAAS,CAACH,IAAI;IAC5BnD,aAAa,EAAEsD,SAAS,CAACF;EAC3B,CAAC,CAAC;EACF,MAAMQ,GAAG,GAAGpH,OAAO,CAACG,UAAU,CAAC;IAC7BuD,SAAS,EAAE,UAAU;IACrBC,cAAc,EAAEuD,SAAS,CAACP,IAAI;IAC9B/C,eAAe,EAAEsD,SAAS,CAACN,KAAK;IAChC/C,YAAY,EAAEmD,SAAS,CAACL,IAAI;IAC5BnD,aAAa,EAAEwD,SAAS,CAACJ;EAC3B,CAAC,CAAC;EACF,MAAMS,UAAU,GAAGzE,CAAC,CAACjC,sBAAsB,CAACwG,GAAG,EAAEN,QAAQ,EAAE,OAAO,CAAC;EACnE,MAAMS,UAAU,GAAG1E,CAAC,CAACjC,sBAAsB,CAACyG,GAAG,EAAEL,QAAQ,EAAE,OAAO,CAAC;;EAEnE,MAAMQ,YAAY,GAAG3E,CAAC,CAACnB,MAAM,CAAC0B,aAAa,CAAC;IAC1C5B,MAAM,EAAE,YAAY;IACpB6B,KAAK,EAAEC,eAAe,CAACC,iBAAiB;IACxCC,IAAI,EAAE,CAACpB,YAAY,EAAEA,YAAY,EAAE,CAAC,CAAC;IACrCqB,aAAa,EAAE;EACjB,CAAC,CAAC;EACF,MAAM8B,eAAe,GAAG1C,CAAC,CAAC7C,kBAAkB,CAACwH,YAAY,CAAC;EAC1D,MAAMxD,OAAO,GAAGnB,CAAC,CAACnB,MAAM,CAACuC,oBAAoB,CAAC,CAAC;EAC/C,MAAMC,UAAU,GAAGF,OAAO,CAACG,eAAe,CAAC;IACzCC,gBAAgB,EAAE,CAACmB,eAAe;EACpC,CAAC,CAAC;EACF,IAAIzC,UAAU,EAAE;IACdoB,UAAU,CAACsB,YAAY,CAAC,CAAC,EAAE8B,UAAU,CAAC;IACtCpD,UAAU,CAACsB,YAAY,CAAC,CAAC,EAAE+B,UAAU,CAAC;IACtCrD,UAAU,CAACG,GAAG,CAAC,CAAC;EAClB,CAAC,MAAM;IACLH,UAAU,CAACsB,YAAY,CAAC,CAAC,EAAE8B,UAAU,CAAC;IACtCpD,UAAU,CAACG,GAAG,CAAC,CAAC;;IAEhB,MAAME,WAAW,GAAGP,OAAO,CAACG,eAAe,CAAC;MAC1CC,gBAAgB,EAAE,CAACmB,eAAe;IACpC,CAAC,CAAC;IACFhB,WAAW,CAACiB,YAAY,CAAC,CAAC,EAAE+B,UAAU,CAAC;IACvChD,WAAW,CAACF,GAAG,CAAC,CAAC;EACnB;;EAEA,MAAMqB,uBAAuB,GAAG7C,CAAC,CAACd,oBAAoB;IACpDgF,SAAS,CAACH,IAAI;IACdG,SAAS,CAACH,IAAI,GAAGG,SAAS,CAACF,KAAK,GAAG,CAAC;IACpCI,SAAS,CAACL,IAAI;IACdK,SAAS,CAACL,IAAI,GAAGK,SAAS,CAACJ,KAAK,GAAG;EACrC,CAAC;EACD,MAAMlB,yBAAyB,GAAG9C,CAAC,CAACd,oBAAoB;IACtDmF,SAAS,CAACN,IAAI;IACdM,SAAS,CAACN,IAAI,GAAGM,SAAS,CAACL,KAAK,GAAG,CAAC;IACpCM,SAAS,CAACP,IAAI;IACdO,SAAS,CAACP,IAAI,GAAGO,SAAS,CAACN,KAAK,GAAG;EACrC,CAAC;EACD,MAAMjB,eAAe,GAAGF,uBAAuB,IAAIC,yBAAyB;;EAE5E,MAAMnB,OAAO,GAAG,CAAC1B,UAAU,IAAI8C,eAAe,IAAIkB,QAAQ,KAAKE,QAAQ;EACvEnE,CAAC,CAAC4B,qBAAqB,CAAC,MAAM;IAC5BT,OAAO,CAACU,MAAM,CAAC,CAAC;EAClB,CAAC,EAAE,CAACF,OAAO,CAAC;AACd,CAAC,CAAC;;AAEJjE,CAAC,CAACgC,IAAI,CAAC,mDAAmD,CAAC;AACxDC,IAAI;EACF;AACL;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,aAAa,EAAE;AACtB,EAAEiE,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACtB,CAAC;AACDlE,OAAO,CAAC,aAAa,EAAE;AACtB,EAAEiE,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACtB,CAAC;AACDlE,OAAO,CAAC,aAAa,EAAE;AACtB,EAAEiE,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACtB,CAAC;AACDlE,OAAO,CAAC,aAAa,EAAE;AACtB,EAAEiE,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACtB,CAAC;AACDlE,OAAO,CAAC,SAAS,EAAE,CAAC,YAAY,EAAE,cAAc,CAAU,CAAC;AAC3DA,OAAO,CAAC,SAAS,EAAE,CAAC,YAAY,EAAE,cAAc,CAAU,CAAC;AAC3DA,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC;AACxC,CAAC;AACAM,EAAE,CAAC,CAAAJ,CAAC,KAAI;EACP,MAAM,EAAE4E,WAAW,EAAEC,WAAW,EAAEC,WAAW,EAAEC,WAAW,EAAEC,OAAO,EAAEC,OAAO,EAAEhF,UAAU,CAAC,CAAC;EACxFD,CAAC,CAACJ,MAAM;;EAEV,MAAMxC,OAAO,GAAG4C,CAAC,CAACnB,MAAM,CAAC0B,aAAa,CAAC;IACrC5B,MAAM,EAAE,sBAAsB;IAC9B6B,KAAK,EAAEC,eAAe,CAAC6B,eAAe;IACtC3B,IAAI,EAAE,CAACpB,YAAY,EAAEA,YAAY,EAAEE,cAAc,CAAC;IAClDmB,aAAa,EAAEpB;EACjB,CAAC,CAAC;EACF,MAAM0F,cAAc,GAAG9H,OAAO,CAACG,UAAU,CAAC;IACxCuD,SAAS,EAAE,UAAU;IACrBC,cAAc,EAAE8D,WAAW,CAACd,IAAI;IAChC/C,eAAe,EAAE6D,WAAW,CAACb,KAAK;IAClC/C,YAAY,EAAE2D,WAAW,CAACb,IAAI;IAC9BnD,aAAa,EAAEgE,WAAW,CAACZ,KAAK;IAChCX,MAAM,EAAE2B;EACV,CAAC,CAAC;EACF,MAAMG,cAAc,GAAG/H,OAAO,CAACG,UAAU,CAAC;IACxCuD,SAAS,EAAE,UAAU;IACrBC,cAAc,EAAEgE,WAAW,CAAChB,IAAI;IAChC/C,eAAe,EAAE+D,WAAW,CAACf,KAAK;IAClC/C,YAAY,EAAE6D,WAAW,CAACf,IAAI;IAC9BnD,aAAa,EAAEkE,WAAW,CAACd,KAAK;IAChCX,MAAM,EAAE4B;EACV,CAAC,CAAC;;EAEF,MAAMG,WAAW,GAAGJ,OAAO,KAAK,YAAY,GAAG,OAAO,GAAG,MAAM;EAC/D,MAAMK,WAAW,GAAGJ,OAAO,KAAK,YAAY,GAAG,OAAO,GAAG,MAAM;EAC/D,MAAMR,UAAU,GAAGzE,CAAC,CAACjC,sBAAsB,CAACmH,cAAc,EAAE,SAAS,EAAEE,WAAW,CAAC;EACnF,MAAMV,UAAU,GAAG1E,CAAC,CAACjC,sBAAsB,CAACoH,cAAc,EAAE,SAAS,EAAEE,WAAW,CAAC;;EAEnF,MAAMV,YAAY,GAAG3E,CAAC,CAACnB,MAAM,CAAC0B,aAAa,CAAC;IAC1C5B,MAAM,EAAE,YAAY;IACpB6B,KAAK,EAAEC,eAAe,CAACC,iBAAiB;IACxCC,IAAI,EAAE,CAACpB,YAAY,EAAEA,YAAY,EAAE,CAAC,CAAC;IACrCqB,aAAa,EAAE;EACjB,CAAC,CAAC;EACF,MAAM8B,eAAe,GAAG1C,CAAC,CAAC7C,kBAAkB,CAACwH,YAAY,CAAC;EAC1D,MAAMxD,OAAO,GAAGnB,CAAC,CAACnB,MAAM,CAACuC,oBAAoB,CAAC,CAAC;EAC/C,MAAMC,UAAU,GAAGF,OAAO,CAACG,eAAe,CAAC;IACzCC,gBAAgB,EAAE,CAACmB,eAAe;EACpC,CAAC,CAAC;EACF,IAAIzC,UAAU,EAAE;IACdoB,UAAU,CAACsB,YAAY,CAAC,CAAC,EAAE8B,UAAU,CAAC;IACtCpD,UAAU,CAACsB,YAAY,CAAC,CAAC,EAAE+B,UAAU,CAAC;IACtCrD,UAAU,CAACG,GAAG,CAAC,CAAC;EAClB,CAAC,MAAM;IACLH,UAAU,CAACsB,YAAY,CAAC,CAAC,EAAE8B,UAAU,CAAC;IACtCpD,UAAU,CAACG,GAAG,CAAC,CAAC;;IAEhB,MAAME,WAAW,GAAGP,OAAO,CAACG,eAAe,CAAC;MAC1CC,gBAAgB,EAAE,CAACmB,eAAe;IACpC,CAAC,CAAC;IACFhB,WAAW,CAACiB,YAAY,CAAC,CAAC,EAAE+B,UAAU,CAAC;IACvChD,WAAW,CAACF,GAAG,CAAC,CAAC;EACnB;;EAEAxB,CAAC,CAAC4B,qBAAqB,CAAC,MAAM;IAC5BT,OAAO,CAACU,MAAM,CAAC,CAAC;EAClB,CAAC,EAAE,KAAK,CAAC;AACX,CAAC,CAAC"}