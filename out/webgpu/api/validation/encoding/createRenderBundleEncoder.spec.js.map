{"version":3,"file":"createRenderBundleEncoder.spec.js","names":["description","makeTestGroup","range","kMaxColorAttachments","kAllTextureFormats","kDepthStencilFormats","kTextureFormatInfo","kRenderableColorTextureFormats","ValidationTest","g","test","desc","params","u","beginSubcases","combine","i","fn","t","colorFormatCount","expectValidationError","device","createRenderBundleEncoder","colorFormats","Array","fill","limits","maxColorAttachments","beforeAllSubcases","skipIfTextureFormatNotSupported","format","info","shouldError","colorRender","byteCost","maxColorAttachmentBytesPerSample","combineWithParams","formats","_shouldError","undefined","depthStencilFormat","selectDeviceForTextureFormatOrSkipTestCase","attachment","colorRenderable","depthStencil","depth","stencil","depthReadOnly","stencilReadOnly"],"sources":["../../../../../src/webgpu/api/validation/encoding/createRenderBundleEncoder.spec.ts"],"sourcesContent":["export const description = `\ncreateRenderBundleEncoder validation tests.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { range } from '../../../../common/util/util.js';\nimport { kMaxColorAttachments } from '../../../capability_info.js';\nimport {\n  kAllTextureFormats,\n  kDepthStencilFormats,\n  kTextureFormatInfo,\n  kRenderableColorTextureFormats,\n} from '../../../format_info.js';\nimport { ValidationTest } from '../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('attachment_state,limits,maxColorAttachments')\n  .desc(`Tests that attachment state must have <= device.limits.maxColorAttachments.`)\n  .params(u =>\n    u.beginSubcases().combine(\n      'colorFormatCount',\n      range(kMaxColorAttachments + 1, i => i + 1) // 1-9\n    )\n  )\n  .fn(t => {\n    const { colorFormatCount } = t.params;\n    t.expectValidationError(() => {\n      t.device.createRenderBundleEncoder({\n        colorFormats: Array(colorFormatCount).fill('r8unorm'),\n      });\n    }, colorFormatCount > t.device.limits.maxColorAttachments);\n  });\n\ng.test('attachment_state,limits,maxColorAttachmentBytesPerSample,aligned')\n  .desc(\n    `\n    Tests that the total color attachment bytes per sample <=\n    device.limits.maxColorAttachmentBytesPerSample when using the same format (aligned) for multiple\n    attachments.\n    `\n  )\n  .params(u =>\n    u\n      .combine('format', kRenderableColorTextureFormats)\n      .beginSubcases()\n      .combine(\n        'colorFormatCount',\n        range(kMaxColorAttachments, i => i + 1)\n      )\n  )\n  .beforeAllSubcases(t => {\n    t.skipIfTextureFormatNotSupported(t.params.format);\n  })\n  .fn(t => {\n    const { format, colorFormatCount } = t.params;\n    const info = kTextureFormatInfo[format];\n    const shouldError =\n      !info.colorRender ||\n      info.colorRender.byteCost * colorFormatCount >\n        t.device.limits.maxColorAttachmentBytesPerSample;\n\n    t.expectValidationError(() => {\n      t.device.createRenderBundleEncoder({\n        colorFormats: Array(colorFormatCount).fill(format),\n      });\n    }, shouldError);\n  });\n\ng.test('attachment_state,limits,maxColorAttachmentBytesPerSample,unaligned')\n  .desc(\n    `\n    Tests that the total color attachment bytes per sample <=\n    device.limits.maxColorAttachmentBytesPerSample when using various sets of (potentially)\n    unaligned formats.\n    `\n  )\n  .params(u =>\n    u.combineWithParams([\n      // Alignment causes the first 1 byte R8Unorm to become 4 bytes. So even though\n      // 1+4+8+16+1 < 32, the 4 byte alignment requirement of R32Float makes the first R8Unorm\n      // become 4 and 4+4+8+16+1 > 32. Re-ordering this so the R8Unorm's are at the end, however\n      // is allowed: 4+8+16+1+1 < 32.\n      {\n        formats: [\n          'r8unorm',\n          'r32float',\n          'rgba8unorm',\n          'rgba32float',\n          'r8unorm',\n        ] as GPUTextureFormat[],\n        _shouldError: true,\n      },\n      {\n        formats: [\n          'r32float',\n          'rgba8unorm',\n          'rgba32float',\n          'r8unorm',\n          'r8unorm',\n        ] as GPUTextureFormat[],\n        _shouldError: false,\n      },\n    ])\n  )\n  .fn(t => {\n    const { formats, _shouldError } = t.params;\n\n    t.expectValidationError(() => {\n      t.device.createRenderBundleEncoder({\n        colorFormats: formats,\n      });\n    }, _shouldError);\n  });\n\ng.test('attachment_state,empty_color_formats')\n  .desc(`Tests that if no colorFormats are given, a depthStencilFormat must be specified.`)\n  .params(u =>\n    u.beginSubcases().combine('depthStencilFormat', [undefined, 'depth24plus-stencil8'] as const)\n  )\n  .fn(t => {\n    const { depthStencilFormat } = t.params;\n    t.expectValidationError(() => {\n      t.device.createRenderBundleEncoder({\n        colorFormats: [],\n        depthStencilFormat,\n      });\n    }, depthStencilFormat === undefined);\n  });\n\ng.test('valid_texture_formats')\n  .desc(\n    `\n    Tests that createRenderBundleEncoder only accepts valid formats for its attachments.\n      - colorFormats\n      - depthStencilFormat\n    `\n  )\n  .params(u =>\n    u //\n      .combine('format', kAllTextureFormats)\n      .beginSubcases()\n      .combine('attachment', ['color', 'depthStencil'])\n  )\n  .beforeAllSubcases(t => {\n    const { format } = t.params;\n    t.selectDeviceForTextureFormatOrSkipTestCase(format);\n  })\n  .fn(t => {\n    const { format, attachment } = t.params;\n\n    const colorRenderable = kTextureFormatInfo[format].colorRender;\n\n    const depthStencil = kTextureFormatInfo[format].depth || kTextureFormatInfo[format].stencil;\n\n    switch (attachment) {\n      case 'color': {\n        t.expectValidationError(() => {\n          t.device.createRenderBundleEncoder({\n            colorFormats: [format],\n          });\n        }, !colorRenderable);\n\n        break;\n      }\n      case 'depthStencil': {\n        t.expectValidationError(() => {\n          t.device.createRenderBundleEncoder({\n            colorFormats: [],\n            depthStencilFormat: format,\n          });\n        }, !depthStencil);\n\n        break;\n      }\n    }\n  });\n\ng.test('depth_stencil_readonly')\n  .desc(\n    `\n    Tests that createRenderBundleEncoder validation of depthReadOnly and stencilReadOnly\n      - With depth-only formats\n      - With stencil-only formats\n      - With depth-stencil-combined formats\n    `\n  )\n  .params(u =>\n    u //\n      .combine('depthStencilFormat', kDepthStencilFormats)\n      .beginSubcases()\n      .combine('depthReadOnly', [false, true])\n      .combine('stencilReadOnly', [false, true])\n  )\n  .beforeAllSubcases(t => {\n    const { depthStencilFormat } = t.params;\n    t.selectDeviceForTextureFormatOrSkipTestCase(depthStencilFormat);\n  })\n  .fn(t => {\n    const { depthStencilFormat, depthReadOnly, stencilReadOnly } = t.params;\n\n    let shouldError = false;\n    if (\n      kTextureFormatInfo[depthStencilFormat].depth &&\n      kTextureFormatInfo[depthStencilFormat].stencil &&\n      depthReadOnly !== stencilReadOnly\n    ) {\n      shouldError = true;\n    }\n\n    t.expectValidationError(() => {\n      t.device.createRenderBundleEncoder({\n        colorFormats: [],\n        depthStencilFormat,\n        depthReadOnly,\n        stencilReadOnly,\n      });\n    }, shouldError);\n  });\n\ng.test('depth_stencil_readonly_with_undefined_depth')\n  .desc(\n    `\n    Tests that createRenderBundleEncoder validation of depthReadOnly and stencilReadOnly is ignored\n    if there is no depthStencilFormat set.\n    `\n  )\n  .params(u =>\n    u //\n      .beginSubcases()\n      .combine('depthReadOnly', [false, true])\n      .combine('stencilReadOnly', [false, true])\n  )\n  .fn(t => {\n    const { depthReadOnly, stencilReadOnly } = t.params;\n\n    t.device.createRenderBundleEncoder({\n      colorFormats: ['bgra8unorm'],\n      depthReadOnly,\n      stencilReadOnly,\n    });\n  });\n"],"mappings":"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"}