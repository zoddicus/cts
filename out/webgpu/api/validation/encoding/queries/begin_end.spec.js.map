{"version":3,"file":"begin_end.spec.js","names":["description","makeTestGroup","ValidationTest","beginRenderPassWithQuerySet","createQuerySetWithType","g","test","desc","paramsSubcasesOnly","begin","end","fn","t","params","occlusionQuerySet","encoder","createEncoder","i","beginOcclusionQuery","j","endOcclusionQuery","validateFinishAndSubmit","calls","_valid","u","combine","querySet","device","createCommandEncoder","pass","isOnSameRenderPass","otherPass","expectValidationError","finish","nest","unimplemented"],"sources":["../../../../../../src/webgpu/api/validation/encoding/queries/begin_end.spec.ts"],"sourcesContent":["export const description = `\nValidation for encoding begin/endable queries.\n\nTODO: pipeline statistics queries are removed from core; consider moving tests to another suite.\nTODO: tests for pipeline statistics queries:\n- balance: {\n    - begin 0, end 1\n    - begin 1, end 0\n    - begin 1, end 1\n    - begin 2, end 2\n    - }\n    - x= {\n        - render pass + pipeline statistics\n        - compute pass + pipeline statistics\n        - }\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { ValidationTest } from '../../validation_test.js';\n\nimport { beginRenderPassWithQuerySet, createQuerySetWithType } from './common.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('occlusion_query,begin_end_balance')\n  .desc(\n    `\nTests that begin/end occlusion queries mismatch on render pass:\n- begin n queries, then end m queries, for various n and m.\n  `\n  )\n  .paramsSubcasesOnly([\n    { begin: 0, end: 1 },\n    { begin: 1, end: 0 },\n    { begin: 1, end: 1 }, // control case\n    { begin: 1, end: 2 },\n    { begin: 2, end: 1 },\n  ] as const)\n  .fn(t => {\n    const { begin, end } = t.params;\n\n    const occlusionQuerySet = createQuerySetWithType(t, 'occlusion', 2);\n\n    const encoder = t.createEncoder('render pass', { occlusionQuerySet });\n    for (let i = 0; i < begin; i++) {\n      encoder.encoder.beginOcclusionQuery(i);\n    }\n    for (let j = 0; j < end; j++) {\n      encoder.encoder.endOcclusionQuery();\n    }\n    encoder.validateFinishAndSubmit(begin === end, true);\n  });\n\ng.test('occlusion_query,begin_end_invalid_nesting')\n  .desc(\n    `\nTests the invalid nesting of begin/end occlusion queries:\n- begin index 0, end, begin index 0, end (control case)\n- begin index 0, begin index 0, end, end\n- begin index 0, begin index 1, end, end\n  `\n  )\n  .paramsSubcasesOnly([\n    { calls: [0, 'end', 1, 'end'], _valid: true }, // control case\n    { calls: [0, 0, 'end', 'end'], _valid: false },\n    { calls: [0, 1, 'end', 'end'], _valid: false },\n  ] as const)\n  .fn(t => {\n    const { calls, _valid } = t.params;\n\n    const occlusionQuerySet = createQuerySetWithType(t, 'occlusion', 2);\n\n    const encoder = t.createEncoder('render pass', { occlusionQuerySet });\n    for (const i of calls) {\n      if (i !== 'end') {\n        encoder.encoder.beginOcclusionQuery(i);\n      } else {\n        encoder.encoder.endOcclusionQuery();\n      }\n    }\n    encoder.validateFinishAndSubmit(_valid, true);\n  });\n\ng.test('occlusion_query,disjoint_queries_with_same_query_index')\n  .desc(\n    `\nTests that two disjoint occlusion queries cannot be begun with same query index on same render pass:\n- begin index 0, end, begin index 0, end\n- call on {same (invalid), different (control case)} render pass\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('isOnSameRenderPass', [false, true]))\n  .fn(t => {\n    const querySet = createQuerySetWithType(t, 'occlusion', 1);\n\n    const encoder = t.device.createCommandEncoder();\n    const pass = beginRenderPassWithQuerySet(t, encoder, querySet);\n    pass.beginOcclusionQuery(0);\n    pass.endOcclusionQuery();\n\n    if (t.params.isOnSameRenderPass) {\n      pass.beginOcclusionQuery(0);\n      pass.endOcclusionQuery();\n      pass.end();\n    } else {\n      pass.end();\n      const otherPass = beginRenderPassWithQuerySet(t, encoder, querySet);\n      otherPass.beginOcclusionQuery(0);\n      otherPass.endOcclusionQuery();\n      otherPass.end();\n    }\n\n    t.expectValidationError(() => {\n      encoder.finish();\n    }, t.params.isOnSameRenderPass);\n  });\n\ng.test('nesting')\n  .desc(\n    `\nTests that whether it's allowed to nest various types of queries:\n- call {occlusion, pipeline-statistics, timestamp} query in same type or other type.\n  `\n  )\n  .paramsSubcasesOnly([\n    { begin: 'occlusion', nest: 'timestamp', end: 'occlusion', _valid: true },\n    { begin: 'occlusion', nest: 'occlusion', end: 'occlusion', _valid: false },\n    { begin: 'occlusion', nest: 'pipeline-statistics', end: 'occlusion', _valid: true },\n    {\n      begin: 'occlusion',\n      nest: 'pipeline-statistics',\n      end: 'pipeline-statistics',\n      _valid: true,\n    },\n    {\n      begin: 'pipeline-statistics',\n      nest: 'timestamp',\n      end: 'pipeline-statistics',\n      _valid: true,\n    },\n    {\n      begin: 'pipeline-statistics',\n      nest: 'pipeline-statistics',\n      end: 'pipeline-statistics',\n      _valid: false,\n    },\n    {\n      begin: 'pipeline-statistics',\n      nest: 'occlusion',\n      end: 'pipeline-statistics',\n      _valid: true,\n    },\n    { begin: 'pipeline-statistics', nest: 'occlusion', end: 'occlusion', _valid: true },\n    { begin: 'timestamp', nest: 'occlusion', end: 'occlusion', _valid: true },\n    {\n      begin: 'timestamp',\n      nest: 'pipeline-statistics',\n      end: 'pipeline-statistics',\n      _valid: true,\n    },\n  ] as const)\n  .unimplemented();\n"],"mappings":"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"}