{"version":3,"file":"compute_pass.spec.js","names":["description","makeTestGroup","kBufferUsages","kLimitInfo","GPUConst","kResourceStates","ValidationTest","F","createComputePipeline","state","createNoOpComputePipeline","createErrorComputePipeline","createIndirectBuffer","data","descriptor","size","byteLength","usage","GPUBufferUsage","INDIRECT","COPY_DST","device","pushErrorScope","buffer","createBuffer","popErrorScope","queue","writeBuffer","destroy","g","test","desc","params","u","beginSubcases","combine","fn","t","pipeline","encoder","validateFinishAndSubmitGivenState","createEncoder","setPipeline","paramsSubcasesOnly","beforeAllSubcases","selectMismatchedDeviceOrSkipTestCase","undefined","mismatched","sourceDevice","mismatchedDevice","layout","compute","module","createShaderModule","code","entryPoint","validateFinish","kMaxDispatch","maxComputeWorkgroupsPerDimension","default","dispatchType","largeDimIndex","smallDimValue","largeDimValue","workSizes","validateFinishAndSubmit","x","y","z","dispatchWorkgroups","dispatchWorkgroupsIndirect","Uint32Array","shouldError","kBufferData","fill","BYTES_PER_ELEMENT","offset","finishShouldError","trackForCleanup","unless","bufferUsage0","bufferUsage1","BufferUsage","MAP_READ","MAP_WRITE","bufferUsage","createPipelineLayout","bindGroupLayouts","success"],"sources":["../../../../../../src/webgpu/api/validation/encoding/cmds/compute_pass.spec.ts"],"sourcesContent":["export const description = `\nAPI validation test for compute pass\n\nDoes **not** test usage scopes (resource_usages/) or programmable pass stuff (programmable_pass).\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { kBufferUsages, kLimitInfo } from '../../../../capability_info.js';\nimport { GPUConst } from '../../../../constants.js';\nimport { kResourceStates, ResourceState } from '../../../../gpu_test.js';\nimport { ValidationTest } from '../../validation_test.js';\n\nclass F extends ValidationTest {\n  createComputePipeline(state: 'valid' | 'invalid'): GPUComputePipeline {\n    if (state === 'valid') {\n      return this.createNoOpComputePipeline();\n    }\n\n    return this.createErrorComputePipeline();\n  }\n\n  createIndirectBuffer(state: ResourceState, data: Uint32Array): GPUBuffer {\n    const descriptor: GPUBufferDescriptor = {\n      size: data.byteLength,\n      usage: GPUBufferUsage.INDIRECT | GPUBufferUsage.COPY_DST,\n    };\n\n    if (state === 'invalid') {\n      descriptor.usage = 0xffff; // Invalid GPUBufferUsage\n    }\n\n    this.device.pushErrorScope('validation');\n    const buffer = this.device.createBuffer(descriptor);\n    void this.device.popErrorScope();\n\n    if (state === 'valid') {\n      this.queue.writeBuffer(buffer, 0, data);\n    }\n\n    if (state === 'destroyed') {\n      buffer.destroy();\n    }\n\n    return buffer;\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('set_pipeline')\n  .desc(\n    `\nsetPipeline should generate an error iff using an 'invalid' pipeline.\n`\n  )\n  .params(u => u.beginSubcases().combine('state', ['valid', 'invalid'] as const))\n  .fn(t => {\n    const { state } = t.params;\n    const pipeline = t.createComputePipeline(state);\n\n    const { encoder, validateFinishAndSubmitGivenState } = t.createEncoder('compute pass');\n    encoder.setPipeline(pipeline);\n    validateFinishAndSubmitGivenState(state);\n  });\n\ng.test('pipeline,device_mismatch')\n  .desc('Tests setPipeline cannot be called with a compute pipeline created from another device')\n  .paramsSubcasesOnly(u => u.combine('mismatched', [true, false]))\n  .beforeAllSubcases(t => {\n    t.selectMismatchedDeviceOrSkipTestCase(undefined);\n  })\n  .fn(t => {\n    const { mismatched } = t.params;\n    const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n    const pipeline = sourceDevice.createComputePipeline({\n      layout: 'auto',\n      compute: {\n        module: sourceDevice.createShaderModule({\n          code: '@compute @workgroup_size(1) fn main() {}',\n        }),\n        entryPoint: 'main',\n      },\n    });\n\n    const { encoder, validateFinish } = t.createEncoder('compute pass');\n    encoder.setPipeline(pipeline);\n    validateFinish(!mismatched);\n  });\n\nconst kMaxDispatch = kLimitInfo.maxComputeWorkgroupsPerDimension.default;\ng.test('dispatch_sizes')\n  .desc(\n    `Test 'direct' and 'indirect' dispatch with various sizes.\n\n  Only direct dispatches can produce validation errors.\n  Workgroup sizes:\n    - valid: { zero, one, just under limit }\n    - invalid: { just over limit, way over limit }\n\n  TODO: Verify that the invalid cases don't execute any invocations at all.\n`\n  )\n  .params(u =>\n    u\n      .combine('dispatchType', ['direct', 'indirect'] as const)\n      .combine('largeDimValue', [0, 1, kMaxDispatch, kMaxDispatch + 1, 0x7fff_ffff, 0xffff_ffff])\n      .beginSubcases()\n      .combine('largeDimIndex', [0, 1, 2] as const)\n      .combine('smallDimValue', [0, 1])\n  )\n  .fn(t => {\n    const { dispatchType, largeDimIndex, smallDimValue, largeDimValue } = t.params;\n\n    const pipeline = t.createNoOpComputePipeline();\n\n    const workSizes = [smallDimValue, smallDimValue, smallDimValue];\n    workSizes[largeDimIndex] = largeDimValue;\n\n    const { encoder, validateFinishAndSubmit } = t.createEncoder('compute pass');\n    encoder.setPipeline(pipeline);\n    if (dispatchType === 'direct') {\n      const [x, y, z] = workSizes;\n      encoder.dispatchWorkgroups(x, y, z);\n    } else if (dispatchType === 'indirect') {\n      encoder.dispatchWorkgroupsIndirect(\n        t.createIndirectBuffer('valid', new Uint32Array(workSizes)),\n        0\n      );\n    }\n\n    const shouldError =\n      dispatchType === 'direct' &&\n      (workSizes[0] > kMaxDispatch || workSizes[1] > kMaxDispatch || workSizes[2] > kMaxDispatch);\n\n    validateFinishAndSubmit(!shouldError, true);\n  });\n\nconst kBufferData = new Uint32Array(6).fill(1);\ng.test('indirect_dispatch_buffer_state')\n  .desc(\n    `\nTest dispatchWorkgroupsIndirect validation by submitting various dispatches with a no-op pipeline\nand an indirectBuffer with 6 elements.\n- indirectBuffer: {'valid', 'invalid', 'destroyed'}\n- indirectOffset:\n  - valid, within the buffer: {beginning, middle, end} of the buffer\n  - invalid, non-multiple of 4\n  - invalid, the last element is outside the buffer\n`\n  )\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('state', kResourceStates)\n      .combine('offset', [\n        // valid (for 'valid' buffers)\n        0,\n        Uint32Array.BYTES_PER_ELEMENT,\n        kBufferData.byteLength - 3 * Uint32Array.BYTES_PER_ELEMENT,\n        // invalid, non-multiple of 4 offset\n        1,\n        // invalid, last element outside buffer\n        kBufferData.byteLength - 2 * Uint32Array.BYTES_PER_ELEMENT,\n      ])\n  )\n  .fn(t => {\n    const { state, offset } = t.params;\n    const pipeline = t.createNoOpComputePipeline();\n    const buffer = t.createIndirectBuffer(state, kBufferData);\n\n    const { encoder, validateFinishAndSubmit } = t.createEncoder('compute pass');\n    encoder.setPipeline(pipeline);\n    encoder.dispatchWorkgroupsIndirect(buffer, offset);\n\n    const finishShouldError =\n      state === 'invalid' ||\n      offset % 4 !== 0 ||\n      offset + 3 * Uint32Array.BYTES_PER_ELEMENT > kBufferData.byteLength;\n    validateFinishAndSubmit(!finishShouldError, state !== 'destroyed');\n  });\n\ng.test('indirect_dispatch_buffer,device_mismatch')\n  .desc(\n    `Tests dispatchWorkgroupsIndirect cannot be called with an indirect buffer created from another device`\n  )\n  .paramsSubcasesOnly(u => u.combine('mismatched', [true, false]))\n  .beforeAllSubcases(t => {\n    t.selectMismatchedDeviceOrSkipTestCase(undefined);\n  })\n  .fn(t => {\n    const { mismatched } = t.params;\n\n    const pipeline = t.createNoOpComputePipeline();\n\n    const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n    const buffer = sourceDevice.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.INDIRECT,\n    });\n    t.trackForCleanup(buffer);\n\n    const { encoder, validateFinish } = t.createEncoder('compute pass');\n    encoder.setPipeline(pipeline);\n    encoder.dispatchWorkgroupsIndirect(buffer, 0);\n    validateFinish(!mismatched);\n  });\n\ng.test('indirect_dispatch_buffer,usage')\n  .desc(\n    `\n    Tests dispatchWorkgroupsIndirect generates a validation error if the buffer usage does not\n    contain INDIRECT usage.\n  `\n  )\n  .paramsSubcasesOnly(u =>\n    u\n      // If bufferUsage0 and bufferUsage1 are the same, the usage being test is a single usage.\n      // Otherwise, it's a combined usage.\n      .combine('bufferUsage0', kBufferUsages)\n      .combine('bufferUsage1', kBufferUsages)\n      .unless(\n        ({ bufferUsage0, bufferUsage1 }) =>\n          ((bufferUsage0 | bufferUsage1) &\n            (GPUConst.BufferUsage.MAP_READ | GPUConst.BufferUsage.MAP_WRITE)) !==\n          0\n      )\n  )\n  .fn(t => {\n    const { bufferUsage0, bufferUsage1 } = t.params;\n\n    const bufferUsage = bufferUsage0 | bufferUsage1;\n\n    const layout = t.device.createPipelineLayout({ bindGroupLayouts: [] });\n    const pipeline = t.createNoOpComputePipeline(layout);\n\n    const buffer = t.device.createBuffer({\n      size: 16,\n      usage: bufferUsage,\n    });\n    t.trackForCleanup(buffer);\n\n    const success = (GPUBufferUsage.INDIRECT & bufferUsage) !== 0;\n\n    const { encoder, validateFinish } = t.createEncoder('compute pass');\n    encoder.setPipeline(pipeline);\n\n    encoder.dispatchWorkgroupsIndirect(buffer, 0);\n    validateFinish(success);\n  });\n"],"mappings":"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"}