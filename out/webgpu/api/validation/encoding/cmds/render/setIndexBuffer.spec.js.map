{"version":3,"file":"setIndexBuffer.spec.js","names":["description","makeTestGroup","GPUConst","kResourceStates","ValidationTest","kRenderEncodeTypeParams","buildBufferOffsetAndSizeOOBTestParams","g","test","desc","paramsSubcasesOnly","combine","fn","t","encoderType","state","params","indexBuffer","createBufferWithState","size","usage","GPUBufferUsage","INDEX","encoder","validateFinishAndSubmitGivenState","createEncoder","setIndexBuffer","beforeAllSubcases","selectMismatchedDeviceOrSkipTestCase","undefined","mismatched","sourceDevice","mismatchedDevice","device","trackForCleanup","createBuffer","validateFinish","BufferUsage","COPY_DST","createBufferTracked","expand","p","indexFormat","offset","alignment","Uint16Array","BYTES_PER_ELEMENT","Uint32Array","_valid"],"sources":["../../../../../../../src/webgpu/api/validation/encoding/cmds/render/setIndexBuffer.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for setIndexBuffer on render pass and render bundle.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUConst } from '../../../../../constants.js';\nimport { kResourceStates } from '../../../../../gpu_test.js';\nimport { ValidationTest } from '../../../validation_test.js';\n\nimport { kRenderEncodeTypeParams, buildBufferOffsetAndSizeOOBTestParams } from './render.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('index_buffer_state')\n  .desc(\n    `\nTests index buffer must be valid.\n  `\n  )\n  .paramsSubcasesOnly(kRenderEncodeTypeParams.combine('state', kResourceStates))\n  .fn(t => {\n    const { encoderType, state } = t.params;\n    const indexBuffer = t.createBufferWithState(state, {\n      size: 16,\n      usage: GPUBufferUsage.INDEX,\n    });\n\n    const { encoder, validateFinishAndSubmitGivenState } = t.createEncoder(encoderType);\n    encoder.setIndexBuffer(indexBuffer, 'uint32');\n    validateFinishAndSubmitGivenState(state);\n  });\n\ng.test('index_buffer,device_mismatch')\n  .desc('Tests setIndexBuffer cannot be called with an index buffer created from another device')\n  .paramsSubcasesOnly(kRenderEncodeTypeParams.combine('mismatched', [true, false]))\n  .beforeAllSubcases(t => {\n    t.selectMismatchedDeviceOrSkipTestCase(undefined);\n  })\n  .fn(t => {\n    const { encoderType, mismatched } = t.params;\n    const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n    const indexBuffer = t.trackForCleanup(\n      sourceDevice.createBuffer({\n        size: 16,\n        usage: GPUBufferUsage.INDEX,\n      })\n    );\n\n    const { encoder, validateFinish } = t.createEncoder(encoderType);\n    encoder.setIndexBuffer(indexBuffer, 'uint32');\n    validateFinish(!mismatched);\n  });\n\ng.test('index_buffer_usage')\n  .desc(\n    `\nTests index buffer must have 'Index' usage.\n  `\n  )\n  .paramsSubcasesOnly(\n    kRenderEncodeTypeParams.combine('usage', [\n      GPUConst.BufferUsage.INDEX, // control case\n      GPUConst.BufferUsage.COPY_DST,\n      GPUConst.BufferUsage.COPY_DST | GPUConst.BufferUsage.INDEX,\n    ] as const)\n  )\n  .fn(t => {\n    const { encoderType, usage } = t.params;\n    const indexBuffer = t.createBufferTracked({\n      size: 16,\n      usage,\n    });\n\n    const { encoder, validateFinish } = t.createEncoder(encoderType);\n    encoder.setIndexBuffer(indexBuffer, 'uint32');\n    validateFinish((usage & GPUBufferUsage.INDEX) !== 0);\n  });\n\ng.test('offset_alignment')\n  .desc(\n    `\nTests offset must be a multiple of index formatâ€™s byte size.\n  `\n  )\n  .paramsSubcasesOnly(\n    kRenderEncodeTypeParams\n      .combine('indexFormat', ['uint16', 'uint32'] as const)\n      .expand('offset', p => {\n        return p.indexFormat === 'uint16' ? ([0, 1, 2] as const) : ([0, 2, 4] as const);\n      })\n  )\n  .fn(t => {\n    const { encoderType, indexFormat, offset } = t.params;\n    const indexBuffer = t.createBufferTracked({\n      size: 16,\n      usage: GPUBufferUsage.INDEX,\n    });\n\n    const { encoder, validateFinish } = t.createEncoder(encoderType);\n    encoder.setIndexBuffer(indexBuffer, indexFormat, offset);\n\n    const alignment =\n      indexFormat === 'uint16' ? Uint16Array.BYTES_PER_ELEMENT : Uint32Array.BYTES_PER_ELEMENT;\n    validateFinish(offset % alignment === 0);\n  });\n\ng.test('offset_and_size_oob')\n  .desc(\n    `\nTests offset and size cannot be larger than index buffer size.\n  `\n  )\n  .paramsSubcasesOnly(buildBufferOffsetAndSizeOOBTestParams(4, 256))\n  .fn(t => {\n    const { encoderType, offset, size, _valid } = t.params;\n    const indexBuffer = t.createBufferTracked({\n      size: 256,\n      usage: GPUBufferUsage.INDEX,\n    });\n\n    const { encoder, validateFinish } = t.createEncoder(encoderType);\n    encoder.setIndexBuffer(indexBuffer, 'uint32', offset, size);\n    validateFinish(_valid);\n  });\n"],"mappings":"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"}