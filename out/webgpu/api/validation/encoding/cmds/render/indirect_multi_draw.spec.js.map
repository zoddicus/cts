{"version":3,"file":"indirect_multi_draw.spec.js","names":["description","kUnitCaseParamsBuilder","makeTestGroup","GPUConst","kMaxUnsignedLongValue","kMaxUnsignedLongLongValue","kResourceStates","ValidationTest","kIndirectMultiDrawTestParams","combine","F","makeIndexBuffer","createBufferTracked","size","usage","GPUBufferUsage","INDEX","g","test","desc","beforeAllSubcases","t","selectDeviceOrSkipTestCase","paramsSubcasesOnly","filter","p","useDrawCountBuffer","drawCountState","indirectState","fn","indexed","params","indirectBuffer","createBufferWithState","INDIRECT","drawCountBuffer","undefined","encoder","validateFinishAndSubmit","createEncoder","setPipeline","createNoOpRenderPipeline","setIndexBuffer","multiDrawIndexedIndirect","multiDrawIndirect","shouldBeValid","submitShouldSucceedIfValid","combineWithParams","indirectMismatched","drawCountMismatched","selectMismatchedDeviceOrSkipTestCase","indirectDevice","mismatchedDevice","device","drawCountDevice","trackForCleanup","createBuffer","validateFinish","BufferUsage","VERTEX","indirectUsage","drawCountUsage","shouldSucceed","indirectOffset","drawCountOffset","u","expandWithParams","drawParamsSize","maxDrawCount","offset","exactRequiredSize","bufferSize","paramsSize","valid","kDrawCountSize"],"sources":["../../../../../../../src/webgpu/api/validation/encoding/cmds/render/indirect_multi_draw.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for multiDrawIndirect/multiDrawIndexedIndirect on render pass.\n`;\n\nimport { kUnitCaseParamsBuilder } from '../../../../../../common/framework/params_builder.js';\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport {\n  GPUConst,\n  kMaxUnsignedLongValue,\n  kMaxUnsignedLongLongValue,\n} from '../../../../../constants.js';\nimport { kResourceStates } from '../../../../../gpu_test.js';\nimport { ValidationTest } from '../../../validation_test.js';\n\nconst kIndirectMultiDrawTestParams = kUnitCaseParamsBuilder\n  .combine('indexed', [true, false] as const)\n  .combine('useDrawCountBuffer', [true, false] as const);\n\nclass F extends ValidationTest {\n  makeIndexBuffer(): GPUBuffer {\n    return this.createBufferTracked({\n      size: 16,\n      usage: GPUBufferUsage.INDEX,\n    });\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('buffers_state')\n  .desc(\n    `\nTests indirect and draw count buffers must be valid.\n  `\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('chromium-experimental-multi-draw-indirect' as GPUFeatureName);\n  })\n\n  .paramsSubcasesOnly(\n    kIndirectMultiDrawTestParams\n      .combine('indirectState', kResourceStates)\n      .combine('drawCountState', kResourceStates)\n      // drawCountState only matters if useDrawCountBuffer=true\n      .filter(p => p.useDrawCountBuffer || p.drawCountState === 'valid')\n      // Filter out a few unnecessary cases that would hit two errors in the same API call\n      .filter(\n        p =>\n          p.indirectState === 'valid' ||\n          p.drawCountState === 'valid' ||\n          p.indirectState !== p.drawCountState\n      )\n  )\n  .fn(t => {\n    const { indexed, indirectState, useDrawCountBuffer, drawCountState } = t.params;\n    const indirectBuffer = t.createBufferWithState(indirectState, {\n      size: 256,\n      usage: GPUBufferUsage.INDIRECT,\n    });\n    const drawCountBuffer = useDrawCountBuffer\n      ? t.createBufferWithState(drawCountState, {\n          size: 256,\n          usage: GPUBufferUsage.INDIRECT,\n        })\n      : undefined;\n\n    const { encoder, validateFinishAndSubmit } = t.createEncoder('render pass');\n    encoder.setPipeline(t.createNoOpRenderPipeline());\n    if (indexed) {\n      encoder.setIndexBuffer(t.makeIndexBuffer(), 'uint32');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (encoder as any).multiDrawIndexedIndirect(indirectBuffer, 0, 1, drawCountBuffer);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (encoder as any).multiDrawIndirect(indirectBuffer, 0, 1, drawCountBuffer);\n    }\n\n    const shouldBeValid =\n      indirectState !== 'invalid' && (!drawCountBuffer || drawCountState !== 'invalid');\n    const submitShouldSucceedIfValid =\n      indirectState !== 'destroyed' && (!drawCountBuffer || drawCountState !== 'destroyed');\n    validateFinishAndSubmit(shouldBeValid, submitShouldSucceedIfValid);\n  });\n\ng.test('buffers,device_mismatch')\n  .desc(\n    'Tests multiDraw(Indexed)Indirect cannot be called with buffers created from another device'\n  )\n  .paramsSubcasesOnly(\n    kIndirectMultiDrawTestParams\n      .combineWithParams([\n        { indirectMismatched: false, drawCountMismatched: false }, // control case\n        { indirectMismatched: true, drawCountMismatched: false },\n        { indirectMismatched: false, drawCountMismatched: true },\n      ])\n      // drawCountMismatched only matters if useDrawCountBuffer=true\n      .filter(p => p.useDrawCountBuffer || !p.drawCountMismatched)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('chromium-experimental-multi-draw-indirect' as GPUFeatureName);\n    t.selectMismatchedDeviceOrSkipTestCase(undefined);\n  })\n  .fn(t => {\n    const { indexed, useDrawCountBuffer, indirectMismatched, drawCountMismatched } = t.params;\n\n    const indirectDevice = indirectMismatched ? t.mismatchedDevice : t.device;\n    const drawCountDevice = drawCountMismatched ? t.mismatchedDevice : t.device;\n\n    const indirectBuffer = t.trackForCleanup(\n      indirectDevice.createBuffer({\n        size: 256,\n        usage: GPUBufferUsage.INDIRECT,\n      })\n    );\n    const drawCountBuffer = useDrawCountBuffer\n      ? t.trackForCleanup(\n          drawCountDevice.createBuffer({\n            size: 256,\n            usage: GPUBufferUsage.INDIRECT,\n          })\n        )\n      : undefined;\n\n    const { encoder, validateFinish } = t.createEncoder('render pass');\n    encoder.setPipeline(t.createNoOpRenderPipeline());\n    if (indexed) {\n      encoder.setIndexBuffer(t.makeIndexBuffer(), 'uint32');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (encoder as any).multiDrawIndexedIndirect(indirectBuffer, 0, 1, drawCountBuffer);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (encoder as any).multiDrawIndirect(indirectBuffer, 0, 1, drawCountBuffer);\n    }\n    validateFinish(!indirectMismatched && !drawCountMismatched);\n  });\n\ng.test('indirect_buffer_usage')\n  .desc(\n    `\nTests indirect and draw count buffers must have 'Indirect' usage.\n  `\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('chromium-experimental-multi-draw-indirect' as GPUFeatureName);\n  })\n  .paramsSubcasesOnly(\n    kIndirectMultiDrawTestParams\n      .combine('indirectUsage', [\n        GPUConst.BufferUsage.INDIRECT,\n        GPUConst.BufferUsage.VERTEX,\n        GPUConst.BufferUsage.VERTEX | GPUConst.BufferUsage.INDIRECT,\n      ] as const)\n      .combine('drawCountUsage', [\n        GPUConst.BufferUsage.INDIRECT,\n        GPUConst.BufferUsage.VERTEX,\n        GPUConst.BufferUsage.VERTEX | GPUConst.BufferUsage.INDIRECT,\n      ] as const)\n  )\n  .fn(t => {\n    const { indexed, indirectUsage, useDrawCountBuffer, drawCountUsage } = t.params;\n\n    const indirectBuffer = t.createBufferTracked({\n      size: 256,\n      usage: indirectUsage,\n    });\n    const drawCountBuffer = useDrawCountBuffer\n      ? t.createBufferTracked({\n          size: 256,\n          usage: drawCountUsage,\n        })\n      : undefined;\n\n    const { encoder, validateFinish } = t.createEncoder('render pass');\n    encoder.setPipeline(t.createNoOpRenderPipeline());\n    if (indexed) {\n      encoder.setIndexBuffer(t.makeIndexBuffer(), 'uint32');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (encoder as any).multiDrawIndexedIndirect(indirectBuffer, 0, 1, drawCountBuffer);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (encoder as any).multiDrawIndirect(indirectBuffer, 0, 1, drawCountBuffer);\n    }\n    const shouldSucceed =\n      (indirectUsage & GPUBufferUsage.INDIRECT) !== 0 &&\n      (!drawCountBuffer || drawCountUsage & GPUBufferUsage.INDIRECT) !== 0;\n    validateFinish(shouldSucceed);\n  });\n\ng.test('offsets_alignment')\n  .desc(\n    `\nTests indirect and draw count offsets must be a multiple of 4.\n  `\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('chromium-experimental-multi-draw-indirect' as GPUFeatureName);\n  })\n  .paramsSubcasesOnly(\n    kIndirectMultiDrawTestParams.combineWithParams([\n      // Valid\n      { indirectOffset: 0, drawCountOffset: 0 },\n      { indirectOffset: 4, drawCountOffset: 0 },\n      { indirectOffset: 0, drawCountOffset: 4 },\n      // Invalid\n      { indirectOffset: 2, drawCountOffset: 0 },\n      { indirectOffset: 6, drawCountOffset: 0 },\n      { indirectOffset: 0, drawCountOffset: 2 },\n      { indirectOffset: 0, drawCountOffset: 6 },\n    ] as const)\n  )\n  .fn(t => {\n    const { indexed, indirectOffset, useDrawCountBuffer, drawCountOffset } = t.params;\n\n    const indirectBuffer = t.createBufferTracked({\n      size: 256,\n      usage: GPUBufferUsage.INDIRECT,\n    });\n    const drawCountBuffer = useDrawCountBuffer\n      ? t.createBufferTracked({\n          size: 256,\n          usage: GPUBufferUsage.INDIRECT,\n        })\n      : undefined;\n\n    const { encoder, validateFinish } = t.createEncoder('render pass');\n    encoder.setPipeline(t.createNoOpRenderPipeline());\n    if (indexed) {\n      encoder.setIndexBuffer(t.makeIndexBuffer(), 'uint32');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (encoder as any).multiDrawIndexedIndirect(\n        indirectBuffer,\n        indirectOffset,\n        1,\n        drawCountBuffer,\n        drawCountOffset\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (encoder as any).multiDrawIndirect(\n        indirectBuffer,\n        indirectOffset,\n        1,\n        drawCountBuffer,\n        drawCountOffset\n      );\n    }\n\n    // We need to figure out if https://github.com/gpuweb/gpuweb/pull/2315/files#r1773031950 applies.\n    validateFinish(indirectOffset % 4 === 0 && (!useDrawCountBuffer || drawCountOffset % 4 === 0));\n  });\n\ng.test('indirectBuffer_range')\n  .desc(\n    `\nTests multi indirect draw calls with various indirect offsets and buffer sizes without draw count buffer.\n`\n  )\n  .paramsSubcasesOnly(u =>\n    u\n      .combine('indexed', [true, false] as const) //\n      .expandWithParams(function* (p) {\n        const drawParamsSize = p.indexed ? 20 : 16;\n\n        // Simple OOB test cases, using a delta from the exact required size\n        for (const { maxDrawCount, offset } of [\n          { maxDrawCount: 1, offset: 0 },\n          { maxDrawCount: 1, offset: 4 },\n          { maxDrawCount: 1, offset: drawParamsSize + 4 },\n          { maxDrawCount: 2, offset: 0 },\n          { maxDrawCount: 6, offset: drawParamsSize },\n        ]) {\n          const exactRequiredSize = offset + maxDrawCount * drawParamsSize;\n          yield { offset, maxDrawCount, bufferSize: exactRequiredSize };\n          yield { offset, maxDrawCount, bufferSize: exactRequiredSize - 1 };\n        }\n\n        // Additional test cases\n        // - Buffer size is 0\n        yield { offset: 0, maxDrawCount: 1, bufferSize: 0 };\n        // - Buffer size is unaligned (OK)\n        yield { offset: 0, maxDrawCount: 1, bufferSize: drawParamsSize + 1 };\n        // - In-bounds, but non-multiple of 4 offset\n        yield { offset: 2, maxDrawCount: 1, bufferSize: drawParamsSize + 8 };\n        yield { offset: 6, maxDrawCount: 1, bufferSize: drawParamsSize + 8 };\n        // - Out of bounds, (offset + (drawParamsSize * maxDrawCount)) may overflow\n        yield { offset: kMaxUnsignedLongLongValue, maxDrawCount: 1, bufferSize: 1024 };\n        yield { offset: 0, maxDrawCount: kMaxUnsignedLongValue, bufferSize: 1024 };\n      })\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('chromium-experimental-multi-draw-indirect' as GPUFeatureName);\n  })\n  .fn(t => {\n    const { indexed, offset, maxDrawCount, bufferSize } = t.params;\n\n    const indirectBuffer = t.createBufferTracked({\n      size: bufferSize,\n      usage: GPUBufferUsage.INDIRECT,\n    });\n\n    const { encoder, validateFinish } = t.createEncoder('render pass');\n    encoder.setPipeline(t.createNoOpRenderPipeline());\n    if (indexed) {\n      encoder.setIndexBuffer(t.makeIndexBuffer(), 'uint32');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (encoder as any).multiDrawIndexedIndirect(indirectBuffer, offset, maxDrawCount);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (encoder as any).multiDrawIndirect(indirectBuffer, offset, maxDrawCount);\n    }\n\n    const paramsSize = indexed ? 20 : 16;\n    const exactRequiredSize = offset + maxDrawCount * paramsSize;\n    const valid = offset % 4 === 0 && bufferSize >= exactRequiredSize;\n    validateFinish(valid);\n  });\n\ng.test('drawCountBuffer_range')\n  .desc(\n    `\nTests multi indirect draw calls with various draw count offsets, and draw count buffer sizes.\n  `\n  )\n  .paramsSubcasesOnly(u =>\n    u\n      .combine('indexed', [true, false] as const) //\n      .combineWithParams([\n        // In bounds\n        { offset: 0, bufferSize: 4 },\n        { offset: 0, bufferSize: 5 },\n        // In bounds, but non-multiple of 4 offset\n        { offset: 2, bufferSize: 8 },\n        // Out of bounds, offset too big for drawCountBuffer\n        { offset: 4, bufferSize: 7 },\n        // Out of bounds, (offset + kDrawCountSize) may overflow\n        { offset: kMaxUnsignedLongLongValue, bufferSize: 1024 },\n      ])\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('chromium-experimental-multi-draw-indirect' as GPUFeatureName);\n  })\n  .fn(t => {\n    const { indexed, bufferSize, offset } = t.params;\n\n    const indirectBuffer = t.createBufferTracked({\n      size: indexed ? 20 : 16,\n      usage: GPUBufferUsage.INDIRECT,\n    });\n    const drawCountBuffer = t.createBufferTracked({\n      size: bufferSize,\n      usage: GPUBufferUsage.INDIRECT,\n    });\n\n    const { encoder, validateFinish } = t.createEncoder('render pass');\n    encoder.setPipeline(t.createNoOpRenderPipeline());\n    if (indexed) {\n      encoder.setIndexBuffer(t.makeIndexBuffer(), 'uint32');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (encoder as any).multiDrawIndexedIndirect(indirectBuffer, 0, 1, drawCountBuffer, offset);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (encoder as any).multiDrawIndirect(indirectBuffer, 0, 1, drawCountBuffer, offset);\n    }\n\n    const kDrawCountSize = 4;\n    const valid = offset % 4 === 0 && offset + kDrawCountSize <= bufferSize;\n    validateFinish(valid);\n  });\n"],"mappings":"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"}