{"version":3,"file":"setVertexBuffer.spec.js","names":["description","makeTestGroup","kLimitInfo","GPUConst","kResourceStates","ValidationTest","kRenderEncodeTypeParams","buildBufferOffsetAndSizeOOBTestParams","g","test","desc","paramsSubcasesOnly","combine","maxVertexBuffers","default","fn","t","encoderType","slot","params","vertexBuffer","createBufferWithState","size","usage","GPUBufferUsage","VERTEX","encoder","validateFinish","createEncoder","setVertexBuffer","state","validateFinishAndSubmitGivenState","beforeAllSubcases","selectMismatchedDeviceOrSkipTestCase","undefined","mismatched","sourceDevice","mismatchedDevice","device","createBuffer","trackForCleanup","BufferUsage","COPY_DST","offset","finish","_valid"],"sources":["../../../../../../../src/webgpu/api/validation/encoding/cmds/render/setVertexBuffer.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for setVertexBuffer on render pass and render bundle.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { kLimitInfo } from '../../../../../capability_info.js';\nimport { GPUConst } from '../../../../../constants.js';\nimport { kResourceStates } from '../../../../../gpu_test.js';\nimport { ValidationTest } from '../../../validation_test.js';\n\nimport { kRenderEncodeTypeParams, buildBufferOffsetAndSizeOOBTestParams } from './render.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('slot')\n  .desc(\n    `\nTests slot must be less than the maxVertexBuffers in device limits.\n  `\n  )\n  .paramsSubcasesOnly(\n    kRenderEncodeTypeParams.combine('slot', [\n      0,\n      kLimitInfo.maxVertexBuffers.default - 1,\n      kLimitInfo.maxVertexBuffers.default,\n    ] as const)\n  )\n  .fn(t => {\n    const { encoderType, slot } = t.params;\n    const vertexBuffer = t.createBufferWithState('valid', {\n      size: 16,\n      usage: GPUBufferUsage.VERTEX,\n    });\n\n    const { encoder, validateFinish } = t.createEncoder(encoderType);\n    encoder.setVertexBuffer(slot, vertexBuffer);\n    validateFinish(slot < kLimitInfo.maxVertexBuffers.default);\n  });\n\ng.test('vertex_buffer_state')\n  .desc(\n    `\nTests vertex buffer must be valid.\n  `\n  )\n  .paramsSubcasesOnly(kRenderEncodeTypeParams.combine('state', kResourceStates))\n  .fn(t => {\n    const { encoderType, state } = t.params;\n    const vertexBuffer = t.createBufferWithState(state, {\n      size: 16,\n      usage: GPUBufferUsage.VERTEX,\n    });\n\n    const { encoder, validateFinishAndSubmitGivenState } = t.createEncoder(encoderType);\n    encoder.setVertexBuffer(0, vertexBuffer);\n    validateFinishAndSubmitGivenState(state);\n  });\n\ng.test('vertex_buffer,device_mismatch')\n  .desc('Tests setVertexBuffer cannot be called with a vertex buffer created from another device')\n  .paramsSubcasesOnly(kRenderEncodeTypeParams.combine('mismatched', [true, false]))\n  .beforeAllSubcases(t => {\n    t.selectMismatchedDeviceOrSkipTestCase(undefined);\n  })\n  .fn(t => {\n    const { encoderType, mismatched } = t.params;\n    const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n    const vertexBuffer = sourceDevice.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.VERTEX,\n    });\n    t.trackForCleanup(vertexBuffer);\n\n    const { encoder, validateFinish } = t.createEncoder(encoderType);\n    encoder.setVertexBuffer(0, vertexBuffer);\n    validateFinish(!mismatched);\n  });\n\ng.test('vertex_buffer_usage')\n  .desc(\n    `\nTests vertex buffer must have 'Vertex' usage.\n  `\n  )\n  .paramsSubcasesOnly(\n    kRenderEncodeTypeParams.combine('usage', [\n      GPUConst.BufferUsage.VERTEX, // control case\n      GPUConst.BufferUsage.COPY_DST,\n      GPUConst.BufferUsage.COPY_DST | GPUConst.BufferUsage.VERTEX,\n    ] as const)\n  )\n  .fn(t => {\n    const { encoderType, usage } = t.params;\n    const vertexBuffer = t.device.createBuffer({\n      size: 16,\n      usage,\n    });\n\n    const { encoder, validateFinish } = t.createEncoder(encoderType);\n    encoder.setVertexBuffer(0, vertexBuffer);\n    validateFinish((usage & GPUBufferUsage.VERTEX) !== 0);\n  });\n\ng.test('offset_alignment')\n  .desc(\n    `\nTests offset must be a multiple of 4.\n  `\n  )\n  .paramsSubcasesOnly(kRenderEncodeTypeParams.combine('offset', [0, 2, 4] as const))\n  .fn(t => {\n    const { encoderType, offset } = t.params;\n    const vertexBuffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.VERTEX,\n    });\n\n    const { encoder, validateFinish: finish } = t.createEncoder(encoderType);\n    encoder.setVertexBuffer(0, vertexBuffer, offset);\n    finish(offset % 4 === 0);\n  });\n\ng.test('offset_and_size_oob')\n  .desc(\n    `\nTests offset and size cannot be larger than vertex buffer size.\n  `\n  )\n  .paramsSubcasesOnly(buildBufferOffsetAndSizeOOBTestParams(4, 256))\n  .fn(t => {\n    const { encoderType, offset, size, _valid } = t.params;\n    const vertexBuffer = t.device.createBuffer({\n      size: 256,\n      usage: GPUBufferUsage.VERTEX,\n    });\n\n    const { encoder, validateFinish } = t.createEncoder(encoderType);\n    encoder.setVertexBuffer(0, vertexBuffer, offset, size);\n    validateFinish(_valid);\n  });\n"],"mappings":"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"}