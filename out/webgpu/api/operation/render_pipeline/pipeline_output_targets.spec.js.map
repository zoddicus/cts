{"version":3,"file":"pipeline_output_targets.spec.js","names":["description","makeTestGroup","range","kLimitInfo","kRenderableColorTextureFormats","kTextureFormatInfo","GPUTest","TextureTestMixin","getFragmentShaderCodeWithOutput","getPlainTypeInfo","kTexelRepresentationInfo","kVertexShader","g","attachmentsIntWriteValues","R","G","B","A","attachmentsFloatWriteValues","test","desc","params","u","combine","beginSubcases","filter","t","pixelByteCost","format","colorRender","byteCost","undefined","attachmentCount","maxColorAttachmentBytesPerSample","default","expand","p","i","beforeAllSubcases","info","skipIfTextureFormatNotSupported","selectDeviceOrSkipTestCase","feature","fn","emptyAttachmentId","componentCount","componentOrder","length","writeValues","color","type","renderTargets","device","createTexture","size","width","height","depthOrArrayLayers","usage","GPUTextureUsage","COPY_SRC","RENDER_ATTACHMENT","pipeline","createRenderPipeline","layout","vertex","module","createShaderModule","code","entryPoint","fragment","values","plainType","targets","primitive","topology","encoder","createCommandEncoder","pass","beginRenderPass","colorAttachments","view","createView","storeOp","clearValue","r","b","a","loadOp","setPipeline","draw","end","queue","submit","finish","expectSinglePixelComparisonsAreOkInTexture","texture","coord","x","y","exp","renderTarget","expectSingleColor","combineWithParams","_result","output","colorSrcFactor","colorDstFactor","alphaSrcFactor","alphaDstFactor","blend","srcFactor","dstFactor","operation","alpha"],"sources":["../../../../../src/webgpu/api/operation/render_pipeline/pipeline_output_targets.spec.ts"],"sourcesContent":["export const description = `\n- Test pipeline outputs with different color attachment number, formats, component counts, etc.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { range } from '../../../../common/util/util.js';\nimport { kLimitInfo } from '../../../capability_info.js';\nimport { kRenderableColorTextureFormats, kTextureFormatInfo } from '../../../format_info.js';\nimport { GPUTest, TextureTestMixin } from '../../../gpu_test.js';\nimport { getFragmentShaderCodeWithOutput, getPlainTypeInfo } from '../../../util/shader.js';\nimport { kTexelRepresentationInfo } from '../../../util/texture/texel_data.js';\n\nconst kVertexShader = `\n@vertex fn main(\n@builtin(vertex_index) VertexIndex : u32\n) -> @builtin(position) vec4<f32> {\n  var pos : array<vec2<f32>, 3> = array<vec2<f32>, 3>(\n      vec2<f32>(-1.0, -3.0),\n      vec2<f32>(3.0, 1.0),\n      vec2<f32>(-1.0, 1.0));\n  return vec4<f32>(pos[VertexIndex], 0.0, 1.0);\n}\n`;\n\nexport const g = makeTestGroup(TextureTestMixin(GPUTest));\n\n// Values to write into each attachment\n// We make values different for each attachment index and each channel\n// to make sure they didn't get mixed up\nconst attachmentsIntWriteValues = [\n  { R: 1, G: 2, B: 3, A: 4 },\n  { R: 5, G: 6, B: 7, A: 8 },\n  { R: 9, G: 10, B: 11, A: 12 },\n  { R: 13, G: 14, B: 15, A: 16 },\n];\nconst attachmentsFloatWriteValues = [\n  { R: 0.12, G: 0.34, B: 0.56, A: 0 },\n  { R: 0.78, G: 0.9, B: 0.19, A: 1 },\n  { R: 0.28, G: 0.37, B: 0.46, A: 0.3 },\n  { R: 0.55, G: 0.64, B: 0.73, A: 1 },\n];\n\ng.test('color,attachments')\n  .desc(`Test that pipeline with sparse color attachments write values correctly.`)\n  .params(u =>\n    u\n      .combine('format', kRenderableColorTextureFormats)\n      .beginSubcases()\n      .combine('attachmentCount', [2, 3, 4])\n      .filter(t => {\n        // We only need to test formats that have a valid color attachment bytes per sample.\n        const pixelByteCost = kTextureFormatInfo[t.format].colorRender?.byteCost;\n        return (\n          pixelByteCost !== undefined &&\n          pixelByteCost * t.attachmentCount <= kLimitInfo.maxColorAttachmentBytesPerSample.default\n        );\n      })\n      .expand('emptyAttachmentId', p => range(p.attachmentCount, i => i))\n  )\n  .beforeAllSubcases(t => {\n    const info = kTextureFormatInfo[t.params.format];\n    t.skipIfTextureFormatNotSupported(t.params.format);\n    t.selectDeviceOrSkipTestCase(info.feature);\n  })\n  .fn(t => {\n    const { format, attachmentCount, emptyAttachmentId } = t.params;\n    const componentCount = kTexelRepresentationInfo[format].componentOrder.length;\n    const info = kTextureFormatInfo[format];\n\n    const writeValues =\n      info.color.type === 'sint' || info.color.type === 'uint'\n        ? attachmentsIntWriteValues\n        : attachmentsFloatWriteValues;\n\n    const renderTargets = range(attachmentCount, () =>\n      t.device.createTexture({\n        format,\n        size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n        usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT,\n      })\n    );\n    const pipeline = t.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: {\n        module: t.device.createShaderModule({\n          code: kVertexShader,\n        }),\n        entryPoint: 'main',\n      },\n      fragment: {\n        module: t.device.createShaderModule({\n          code: getFragmentShaderCodeWithOutput(\n            range(attachmentCount, i =>\n              i === emptyAttachmentId\n                ? null\n                : {\n                    values: [\n                      writeValues[i].R,\n                      writeValues[i].G,\n                      writeValues[i].B,\n                      writeValues[i].A,\n                    ],\n                    plainType: getPlainTypeInfo(info.color.type),\n                    componentCount,\n                  }\n            )\n          ),\n        }),\n        entryPoint: 'main',\n        targets: range(attachmentCount, i => (i === emptyAttachmentId ? null : { format })),\n      },\n      primitive: { topology: 'triangle-list' },\n    });\n\n    const encoder = t.device.createCommandEncoder();\n    const pass = encoder.beginRenderPass({\n      colorAttachments: range(attachmentCount, i =>\n        i === emptyAttachmentId\n          ? null\n          : {\n              view: renderTargets[i].createView(),\n              storeOp: 'store',\n              clearValue: { r: 0.5, g: 0.5, b: 0.5, a: 0.5 },\n              loadOp: 'clear',\n            }\n      ),\n    });\n    pass.setPipeline(pipeline);\n    pass.draw(3);\n    pass.end();\n    t.device.queue.submit([encoder.finish()]);\n\n    for (let i = 0; i < attachmentCount; i++) {\n      if (i === emptyAttachmentId) {\n        continue;\n      }\n      t.expectSinglePixelComparisonsAreOkInTexture({ texture: renderTargets[i] }, [\n        { coord: { x: 0, y: 0 }, exp: writeValues[i] },\n      ]);\n    }\n  });\n\ng.test('color,component_count')\n  .desc(\n    `Test that extra components of the output (e.g. f32, vec2<f32>, vec3<f32>, vec4<f32>) are discarded.`\n  )\n  .params(u =>\n    u\n      .combine('format', kRenderableColorTextureFormats)\n      .beginSubcases()\n      .combine('componentCount', [1, 2, 3, 4])\n      .filter(x => x.componentCount >= kTexelRepresentationInfo[x.format].componentOrder.length)\n  )\n  .beforeAllSubcases(t => {\n    const info = kTextureFormatInfo[t.params.format];\n    t.skipIfTextureFormatNotSupported(t.params.format);\n    t.selectDeviceOrSkipTestCase(info.feature);\n  })\n  .fn(t => {\n    const { format, componentCount } = t.params;\n    const info = kTextureFormatInfo[format];\n\n    // expected RGBA values\n    // extra channels are discarded\n    const values = [0, 1, 0, 1];\n\n    const renderTarget = t.device.createTexture({\n      format,\n      size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n      usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n\n    const pipeline = t.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: {\n        module: t.device.createShaderModule({\n          code: kVertexShader,\n        }),\n        entryPoint: 'main',\n      },\n      fragment: {\n        module: t.device.createShaderModule({\n          code: getFragmentShaderCodeWithOutput([\n            {\n              values,\n              plainType: getPlainTypeInfo(info.color.type),\n              componentCount,\n            },\n          ]),\n        }),\n        entryPoint: 'main',\n        targets: [{ format }],\n      },\n      primitive: { topology: 'triangle-list' },\n    });\n\n    const encoder = t.device.createCommandEncoder();\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: renderTarget.createView(),\n          storeOp: 'store',\n          clearValue: { r: 1.0, g: 0.0, b: 0.0, a: 1.0 },\n          loadOp: 'clear',\n        },\n      ],\n    });\n    pass.setPipeline(pipeline);\n    pass.draw(3);\n    pass.end();\n    t.device.queue.submit([encoder.finish()]);\n\n    t.expectSingleColor(renderTarget, format, {\n      size: [1, 1, 1],\n      exp: { R: values[0], G: values[1], B: values[2], A: values[3] },\n    });\n  });\n\ng.test('color,component_count,blend')\n  .desc(\n    `Test that blending behaves correctly when:\n- fragment output has no alpha, but the src alpha is not used for the blend operation indicated by blend factors\n- attachment format has no alpha, and the dst alpha should be assumed as 1\n\nThe attachment has a load value of [1, 0, 0, 1]\n`\n  )\n  .params(u =>\n    u\n      .combine('format', ['r8unorm', 'rg8unorm', 'rgba8unorm', 'bgra8unorm'] as const)\n      .beginSubcases()\n      // _result is expected values in the color attachment (extra channels are discarded)\n      // output is the fragment shader output vector\n      // 0.498 -> 0x7f, 0.502 -> 0x80\n      .combineWithParams([\n        // fragment output has no alpha\n        {\n          _result: [0, 0, 0, 0],\n          output: [0],\n          colorSrcFactor: 'one',\n          colorDstFactor: 'zero',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'zero',\n        },\n        {\n          _result: [0, 0, 0, 0],\n          output: [0],\n          colorSrcFactor: 'dst-alpha',\n          colorDstFactor: 'zero',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'zero',\n        },\n        {\n          _result: [1, 0, 0, 0],\n          output: [0],\n          colorSrcFactor: 'one-minus-dst-alpha',\n          colorDstFactor: 'dst-alpha',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'one',\n        },\n        {\n          _result: [0.498, 0, 0, 0],\n          output: [0.498],\n          colorSrcFactor: 'dst-alpha',\n          colorDstFactor: 'zero',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'one',\n        },\n        {\n          _result: [0, 1, 0, 0],\n          output: [0, 1],\n          colorSrcFactor: 'one',\n          colorDstFactor: 'zero',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'zero',\n        },\n        {\n          _result: [0, 1, 0, 0],\n          output: [0, 1],\n          colorSrcFactor: 'dst-alpha',\n          colorDstFactor: 'zero',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'zero',\n        },\n        {\n          _result: [1, 0, 0, 0],\n          output: [0, 1],\n          colorSrcFactor: 'one-minus-dst-alpha',\n          colorDstFactor: 'dst-alpha',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'one',\n        },\n        {\n          _result: [0, 1, 0, 0],\n          output: [0, 1, 0],\n          colorSrcFactor: 'one',\n          colorDstFactor: 'zero',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'zero',\n        },\n        {\n          _result: [0, 1, 0, 0],\n          output: [0, 1, 0],\n          colorSrcFactor: 'dst-alpha',\n          colorDstFactor: 'zero',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'zero',\n        },\n        {\n          _result: [1, 0, 0, 0],\n          output: [0, 1, 0],\n          colorSrcFactor: 'one-minus-dst-alpha',\n          colorDstFactor: 'dst-alpha',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'one',\n        },\n        // fragment output has alpha\n        {\n          _result: [0.502, 1, 0, 0.498],\n          output: [0, 1, 0, 0.498],\n          colorSrcFactor: 'one',\n          colorDstFactor: 'one-minus-src-alpha',\n          alphaSrcFactor: 'one',\n          alphaDstFactor: 'zero',\n        },\n        {\n          _result: [0.502, 0.498, 0, 0.498],\n          output: [0, 1, 0, 0.498],\n          colorSrcFactor: 'src-alpha',\n          colorDstFactor: 'one-minus-src-alpha',\n          alphaSrcFactor: 'one',\n          alphaDstFactor: 'zero',\n        },\n        {\n          _result: [0, 1, 0, 0.498],\n          output: [0, 1, 0, 0.498],\n          colorSrcFactor: 'dst-alpha',\n          colorDstFactor: 'zero',\n          alphaSrcFactor: 'one',\n          alphaDstFactor: 'zero',\n        },\n        {\n          _result: [0, 1, 0, 0.498],\n          output: [0, 1, 0, 0.498],\n          colorSrcFactor: 'dst-alpha',\n          colorDstFactor: 'zero',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'src',\n        },\n        {\n          _result: [1, 0, 0, 1],\n          output: [0, 1, 0, 0.498],\n          colorSrcFactor: 'one-minus-dst-alpha',\n          colorDstFactor: 'dst-alpha',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'dst-alpha',\n        },\n      ] as const)\n      .filter(x => x.output.length >= kTexelRepresentationInfo[x.format].componentOrder.length)\n  )\n  .beforeAllSubcases(t => {\n    const info = kTextureFormatInfo[t.params.format];\n    t.selectDeviceOrSkipTestCase(info.feature);\n  })\n  .fn(t => {\n    const {\n      format,\n      _result,\n      output,\n      colorSrcFactor,\n      colorDstFactor,\n      alphaSrcFactor,\n      alphaDstFactor,\n    } = t.params;\n    const componentCount = output.length;\n    const info = kTextureFormatInfo[format];\n\n    const renderTarget = t.device.createTexture({\n      format,\n      size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n      usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n\n    const pipeline = t.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: {\n        module: t.device.createShaderModule({\n          code: kVertexShader,\n        }),\n        entryPoint: 'main',\n      },\n      fragment: {\n        module: t.device.createShaderModule({\n          code: getFragmentShaderCodeWithOutput([\n            {\n              values: output,\n              plainType: getPlainTypeInfo(info.color.type),\n              componentCount,\n            },\n          ]),\n        }),\n        entryPoint: 'main',\n        targets: [\n          {\n            format,\n            blend: {\n              color: {\n                srcFactor: colorSrcFactor,\n                dstFactor: colorDstFactor,\n                operation: 'add',\n              },\n              alpha: {\n                srcFactor: alphaSrcFactor,\n                dstFactor: alphaDstFactor,\n                operation: 'add',\n              },\n            },\n          },\n        ],\n      },\n      primitive: { topology: 'triangle-list' },\n    });\n\n    const encoder = t.device.createCommandEncoder();\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: renderTarget.createView(),\n          storeOp: 'store',\n          clearValue: { r: 1.0, g: 0.0, b: 0.0, a: 1.0 },\n          loadOp: 'clear',\n        },\n      ],\n    });\n    pass.setPipeline(pipeline);\n    pass.draw(3);\n    pass.end();\n    t.device.queue.submit([encoder.finish()]);\n\n    t.expectSingleColor(renderTarget, format, {\n      size: [1, 1, 1],\n      exp: { R: _result[0], G: _result[1], B: _result[2], A: _result[3] },\n    });\n  });\n"],"mappings":"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"}