{"version":3,"file":"reflection.spec.js","names":["description","makeTestGroup","GPUConst","GPUTest","g","test","desc","paramsSubcasesOnly","u","combine","size","usage","BufferUsage","VERTEX","STORAGE","COPY_SRC","UNIFORM","MAP_READ","COPY_DST","MAP_WRITE","invalid","fn","t","descriptor","params","expectValidationError","buffer","device","createBuffer","expect","width","height","format","TextureUsage","TEXTURE_BINDING","depthOrArrayLayers","RENDER_ATTACHMENT","mipLevelCount","dimension","sampleCount","Array","isArray","texture","createTexture","type","count","querySet","createQuerySet"],"sources":["../../../../src/webgpu/api/operation/reflection.spec.ts"],"sourcesContent":["export const description = `\nTests that object attributes which reflect the object's creation properties are properly set.\n`;\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { GPUConst } from '../../constants.js';\nimport { GPUTest } from '../../gpu_test.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('buffer_reflection_attributes')\n  .desc(`For every buffer attribute, the corresponding descriptor value is carried over.`)\n  .paramsSubcasesOnly(u =>\n    u.combine('descriptor', [\n      { size: 4, usage: GPUConst.BufferUsage.VERTEX },\n      {\n        size: 16,\n        usage:\n          GPUConst.BufferUsage.STORAGE |\n          GPUConst.BufferUsage.COPY_SRC |\n          GPUConst.BufferUsage.UNIFORM,\n      },\n      { size: 32, usage: GPUConst.BufferUsage.MAP_READ | GPUConst.BufferUsage.COPY_DST },\n      {\n        size: 32,\n        usage: GPUConst.BufferUsage.MAP_READ | GPUConst.BufferUsage.MAP_WRITE,\n        invalid: true,\n      },\n    ] as const)\n  )\n  .fn(t => {\n    const { descriptor } = t.params;\n\n    t.expectValidationError(() => {\n      const buffer = t.device.createBuffer(descriptor);\n\n      t.expect(buffer.size === descriptor.size);\n      t.expect(buffer.usage === descriptor.usage);\n    }, descriptor.invalid === true);\n  });\n\ng.test('texture_reflection_attributes')\n  .desc(`For every texture attribute, the corresponding descriptor value is carried over.`)\n  .paramsSubcasesOnly(u =>\n    u.combine('descriptor', [\n      {\n        size: { width: 4, height: 4 },\n        format: 'rgba8unorm',\n        usage: GPUConst.TextureUsage.TEXTURE_BINDING,\n      },\n      {\n        size: { width: 8, height: 8, depthOrArrayLayers: 8 },\n        format: 'bgra8unorm',\n        usage: GPUConst.TextureUsage.RENDER_ATTACHMENT | GPUConst.TextureUsage.COPY_SRC,\n      },\n      {\n        size: [4, 4],\n        format: 'rgba8unorm',\n        usage: GPUConst.TextureUsage.TEXTURE_BINDING,\n        mipLevelCount: 2,\n      },\n      {\n        size: [16, 16, 16],\n        format: 'rgba8unorm',\n        usage: GPUConst.TextureUsage.TEXTURE_BINDING,\n        dimension: '3d',\n      },\n      {\n        size: [32],\n        format: 'rgba8unorm',\n        usage: GPUConst.TextureUsage.TEXTURE_BINDING,\n        dimension: '1d',\n      },\n      {\n        size: { width: 4, height: 4 },\n        format: 'rgba8unorm',\n        usage: GPUConst.TextureUsage.RENDER_ATTACHMENT,\n        sampleCount: 4,\n      },\n      {\n        size: { width: 4, height: 4 },\n        format: 'rgba8unorm',\n        usage: GPUConst.TextureUsage.TEXTURE_BINDING,\n        sampleCount: 4,\n        invalid: true,\n      },\n    ] as const)\n  )\n  .fn(t => {\n    const { descriptor } = t.params;\n\n    let width: number;\n    let height: number;\n    let depthOrArrayLayers: number;\n    if (Array.isArray(descriptor.size)) {\n      width = descriptor.size[0];\n      height = descriptor.size[1] || 1;\n      depthOrArrayLayers = descriptor.size[2] || 1;\n    } else {\n      width = (descriptor.size as GPUExtent3DDict).width;\n      height = (descriptor.size as GPUExtent3DDict).height || 1;\n      depthOrArrayLayers = (descriptor.size as GPUExtent3DDict).depthOrArrayLayers || 1;\n    }\n\n    t.expectValidationError(() => {\n      const texture = t.device.createTexture(descriptor);\n\n      t.expect(texture.width === width);\n      t.expect(texture.height === height);\n      t.expect(texture.depthOrArrayLayers === depthOrArrayLayers);\n      t.expect(texture.format === descriptor.format);\n      t.expect(texture.usage === descriptor.usage);\n      t.expect(texture.dimension === (descriptor.dimension || '2d'));\n      t.expect(texture.mipLevelCount === (descriptor.mipLevelCount || 1));\n      t.expect(texture.sampleCount === (descriptor.sampleCount || 1));\n    }, descriptor.invalid === true);\n  });\n\ng.test('query_set_reflection_attributes')\n  .desc(`For every queue attribute, the corresponding descriptor value is carried over.`)\n  .paramsSubcasesOnly(u =>\n    u.combine('descriptor', [\n      { type: 'occlusion', count: 4 },\n      { type: 'occlusion', count: 16 },\n      { type: 'occlusion', count: 8193, invalid: true },\n    ] as const)\n  )\n  .fn(t => {\n    const { descriptor } = t.params;\n\n    t.expectValidationError(() => {\n      const querySet = t.device.createQuerySet(descriptor);\n\n      t.expect(querySet.type === descriptor.type);\n      t.expect(querySet.count === descriptor.count);\n    }, descriptor.invalid === true);\n  });\n"],"mappings":"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"}