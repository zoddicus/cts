{"version":3,"file":"reflection.spec.js","names":["description","makeTestGroup","GPUConst","GPUTest","g","extractValuePropertyKeys","obj","key","kBufferSubcases","size","usage","BufferUsage","VERTEX","STORAGE","COPY_SRC","UNIFORM","MAP_READ","COPY_DST","INDEX","label","MAP_WRITE","invalid","test","desc","paramsSubcasesOnly","u","combine","fn","t","descriptor","params","expectValidationError","buffer","device","createBuffer","expect","filter","p","trackForCleanup","buffer2","bufferAsObject","buffer2AsObject","keys","includes","kTextureSubcases","width","height","format","TextureUsage","TEXTURE_BINDING","depthOrArrayLayers","RENDER_ATTACHMENT","mipLevelCount","dimension","sampleCount","Array","isArray","texture","createTexture","textureWithSize","texture2","textureAsObject","texture2AsObject","k","kQuerySetSubcases","type","count","querySet","createQuerySet","querySet2","querySetAsObject","querySet2AsObject"],"sources":["../../../../src/webgpu/api/operation/reflection.spec.ts"],"sourcesContent":["export const description = `\nTests that object attributes which reflect the object's creation properties are properly set.\n`;\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { GPUConst } from '../../constants.js';\nimport { GPUTest } from '../../gpu_test.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nfunction* extractValuePropertyKeys(obj: { [k: string]: unknown }) {\n  for (const key in obj) {\n    if (typeof obj[key] !== 'function') {\n      yield key;\n    }\n  }\n}\n\nconst kBufferSubcases: readonly {\n  size: number;\n  usage: GPUBufferUsageFlags;\n  label?: string;\n  invalid?: boolean;\n}[] = [\n  { size: 4, usage: GPUConst.BufferUsage.VERTEX },\n  {\n    size: 16,\n    usage:\n      GPUConst.BufferUsage.STORAGE | GPUConst.BufferUsage.COPY_SRC | GPUConst.BufferUsage.UNIFORM,\n  },\n  { size: 32, usage: GPUConst.BufferUsage.MAP_READ | GPUConst.BufferUsage.COPY_DST },\n  { size: 40, usage: GPUConst.BufferUsage.INDEX, label: 'some label' },\n  {\n    size: 32,\n    usage: GPUConst.BufferUsage.MAP_READ | GPUConst.BufferUsage.MAP_WRITE,\n    invalid: true,\n  },\n] as const;\n\ng.test('buffer_reflection_attributes')\n  .desc(`For every buffer attribute, the corresponding descriptor value is carried over.`)\n  .paramsSubcasesOnly(u => u.combine('descriptor', kBufferSubcases))\n  .fn(t => {\n    const { descriptor } = t.params;\n\n    t.expectValidationError(() => {\n      const buffer = t.device.createBuffer(descriptor);\n\n      t.expect(buffer.size === descriptor.size);\n      t.expect(buffer.usage === descriptor.usage);\n    }, descriptor.invalid === true);\n  });\n\ng.test('buffer_creation_from_reflection')\n  .desc(\n    `\n    Check that you can create a buffer from a buffer's reflection.\n    This check is to insure that as WebGPU develops this path doesn't\n    suddenly break because of new reflection.\n  `\n  )\n  .paramsSubcasesOnly(u =>\n    u.combine('descriptor', kBufferSubcases).filter(p => !p.descriptor.invalid)\n  )\n\n  .fn(t => {\n    const { descriptor } = t.params;\n\n    const buffer = t.device.createBuffer(descriptor);\n    t.trackForCleanup(buffer);\n    const buffer2 = t.device.createBuffer(buffer);\n    t.trackForCleanup(buffer2);\n\n    const bufferAsObject = buffer as unknown as { [k: string]: unknown };\n    const buffer2AsObject = buffer2 as unknown as { [k: string]: unknown };\n    const keys = [...extractValuePropertyKeys(bufferAsObject)];\n\n    // Sanity check\n    t.expect(keys.includes('size'));\n    t.expect(keys.includes('usage'));\n    t.expect(keys.includes('label'));\n\n    for (const key of keys) {\n      t.expect(bufferAsObject[key] === buffer2AsObject[key], key);\n    }\n  });\n\nconst kTextureSubcases: readonly {\n  size: GPUExtent3D;\n  format: GPUTextureFormat;\n  usage: GPUTextureUsageFlags;\n  mipLevelCount?: number;\n  label?: string;\n  dimension?: GPUTextureDimension;\n  sampleCount?: number;\n  invalid?: boolean;\n}[] = [\n  {\n    size: { width: 4, height: 4 },\n    format: 'rgba8unorm',\n    usage: GPUConst.TextureUsage.TEXTURE_BINDING,\n  },\n  {\n    size: { width: 4, height: 4 },\n    format: 'rgba8unorm',\n    usage: GPUConst.TextureUsage.TEXTURE_BINDING,\n    label: 'some label',\n  },\n  {\n    size: { width: 8, height: 8, depthOrArrayLayers: 8 },\n    format: 'bgra8unorm',\n    usage: GPUConst.TextureUsage.RENDER_ATTACHMENT | GPUConst.TextureUsage.COPY_SRC,\n  },\n  {\n    size: [4, 4],\n    format: 'rgba8unorm',\n    usage: GPUConst.TextureUsage.TEXTURE_BINDING,\n    mipLevelCount: 2,\n  },\n  {\n    size: [16, 16, 16],\n    format: 'rgba8unorm',\n    usage: GPUConst.TextureUsage.TEXTURE_BINDING,\n    dimension: '3d',\n  },\n  {\n    size: [32],\n    format: 'rgba8unorm',\n    usage: GPUConst.TextureUsage.TEXTURE_BINDING,\n    dimension: '1d',\n  },\n  {\n    size: { width: 4, height: 4 },\n    format: 'rgba8unorm',\n    usage: GPUConst.TextureUsage.RENDER_ATTACHMENT,\n    sampleCount: 4,\n  },\n  {\n    size: { width: 4, height: 4 },\n    format: 'rgba8unorm',\n    usage: GPUConst.TextureUsage.TEXTURE_BINDING,\n    sampleCount: 4,\n    invalid: true,\n  },\n] as const;\n\ng.test('texture_reflection_attributes')\n  .desc(`For every texture attribute, the corresponding descriptor value is carried over.`)\n  .paramsSubcasesOnly(u => u.combine('descriptor', kTextureSubcases))\n  .fn(t => {\n    const { descriptor } = t.params;\n\n    let width: number;\n    let height: number;\n    let depthOrArrayLayers: number;\n    if (Array.isArray(descriptor.size)) {\n      width = descriptor.size[0];\n      height = descriptor.size[1] || 1;\n      depthOrArrayLayers = descriptor.size[2] || 1;\n    } else {\n      width = (descriptor.size as GPUExtent3DDict).width;\n      height = (descriptor.size as GPUExtent3DDict).height || 1;\n      depthOrArrayLayers = (descriptor.size as GPUExtent3DDict).depthOrArrayLayers || 1;\n    }\n\n    t.expectValidationError(() => {\n      const texture = t.device.createTexture(descriptor);\n\n      t.expect(texture.width === width);\n      t.expect(texture.height === height);\n      t.expect(texture.depthOrArrayLayers === depthOrArrayLayers);\n      t.expect(texture.format === descriptor.format);\n      t.expect(texture.usage === descriptor.usage);\n      t.expect(texture.dimension === (descriptor.dimension || '2d'));\n      t.expect(texture.mipLevelCount === (descriptor.mipLevelCount || 1));\n      t.expect(texture.sampleCount === (descriptor.sampleCount || 1));\n    }, descriptor.invalid === true);\n  });\n\ninterface TextureWithSize extends GPUTexture {\n  size: GPUExtent3D;\n}\n\ng.test('texture_creation_from_reflection')\n  .desc(\n    `\n    Check that you can create a texture from a texture's reflection.\n    This check is to insure that as WebGPU develops this path doesn't\n    suddenly break because of new reflection.\n  `\n  )\n  .paramsSubcasesOnly(u =>\n    u.combine('descriptor', kTextureSubcases).filter(p => !p.descriptor.invalid)\n  )\n  .fn(t => {\n    const { descriptor } = t.params;\n\n    const texture = t.device.createTexture(descriptor);\n    t.trackForCleanup(texture);\n    const textureWithSize = texture as TextureWithSize;\n    textureWithSize.size = [texture.width, texture.height, texture.depthOrArrayLayers];\n    const texture2 = t.device.createTexture(textureWithSize);\n    t.trackForCleanup(texture2);\n\n    const textureAsObject = texture as unknown as { [k: string]: unknown };\n    const texture2AsObject = texture2 as unknown as { [k: string]: unknown };\n    const keys = [...extractValuePropertyKeys(textureAsObject)].filter(k => k !== 'size');\n\n    // Sanity check\n    t.expect(keys.includes('format'));\n    t.expect(keys.includes('usage'));\n    t.expect(keys.includes('label'));\n\n    for (const key of keys) {\n      t.expect(textureAsObject[key] === texture2AsObject[key], key);\n    }\n\n    // MAINTENANCE_TODO: Check this if it is made possible by a spec change.\n    //\n    //     texture3 = t.device.createTexture({\n    //       ...texture,\n    //       size: [texture.width, texture.height, texture.depthOrArrayLayers],\n    //     });\n    //\n    // and this\n    //\n    //     texture3 = t.device.createTexture({\n    //       size: [texture.width, texture.height, texture.depthOrArrayLayers],\n    //       ...texture,\n    //     });\n  });\n\nconst kQuerySetSubcases: readonly {\n  type: GPUQueryType;\n  count: number;\n  label?: string;\n  invalid?: boolean;\n}[] = [\n  { type: 'occlusion', count: 4 },\n  { type: 'occlusion', count: 16 },\n  { type: 'occlusion', count: 32, label: 'some label' },\n  { type: 'occlusion', count: 8193, invalid: true },\n] as const;\n\ng.test('query_set_reflection_attributes')\n  .desc(`For every queue attribute, the corresponding descriptor value is carried over.`)\n  .paramsSubcasesOnly(u => u.combine('descriptor', kQuerySetSubcases))\n  .fn(t => {\n    const { descriptor } = t.params;\n\n    t.expectValidationError(() => {\n      const querySet = t.device.createQuerySet(descriptor);\n\n      t.expect(querySet.type === descriptor.type);\n      t.expect(querySet.count === descriptor.count);\n    }, descriptor.invalid === true);\n  });\n\ng.test('query_set_creation_from_reflection')\n  .desc(\n    `\n    Check that you can create a queryset from a queryset's reflection.\n    This check is to insure that as WebGPU develops this path doesn't\n    suddenly break because of new reflection.\n  `\n  )\n  .paramsSubcasesOnly(u =>\n    u.combine('descriptor', kQuerySetSubcases).filter(p => !p.descriptor.invalid)\n  )\n  .fn(t => {\n    const { descriptor } = t.params;\n\n    const querySet = t.device.createQuerySet(descriptor);\n    t.trackForCleanup(querySet);\n    const querySet2 = t.device.createQuerySet(querySet);\n    t.trackForCleanup(querySet2);\n\n    const querySetAsObject = querySet as unknown as { [k: string]: unknown };\n    const querySet2AsObject = querySet2 as unknown as { [k: string]: unknown };\n    const keys = [...extractValuePropertyKeys(querySetAsObject)];\n\n    // Sanity check\n    t.expect(keys.includes('type'));\n    t.expect(keys.includes('count'));\n    t.expect(keys.includes('label'));\n\n    for (const key of keys) {\n      t.expect(querySetAsObject[key] === querySet2AsObject[key], key);\n    }\n  });\n"],"mappings":"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"}