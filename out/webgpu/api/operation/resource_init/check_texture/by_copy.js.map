{"version":3,"file":"by_copy.js","names":["assert","kTextureFormatInfo","virtualMipSize","checkContentsByBufferCopy","t","params","texture","state","subresourceRange","level","mipLevel","layer","each","format","expectSingleColor","size","textureWidth","textureHeight","textureDepth","dimension","slice","layout","aspect","exp","stateToTexelComponents","checkContentsByTextureCopy","width","height","depth","dst","device","createTexture","usage","GPUTextureUsage","COPY_DST","COPY_SRC","trackForCleanup","commandEncoder","createCommandEncoder","copyTextureToTexture","origin","x","y","z","depthOrArrayLayers","queue","submit","finish"],"sources":["../../../../../../src/webgpu/api/operation/resource_init/check_texture/by_copy.ts"],"sourcesContent":["import { assert } from '../../../../../common/util/util.js';\nimport { kTextureFormatInfo, EncodableTextureFormat } from '../../../../format_info.js';\nimport { virtualMipSize } from '../../../../util/texture/base.js';\nimport { CheckContents } from '../texture_zero.spec.js';\n\nexport const checkContentsByBufferCopy: CheckContents = (\n  t,\n  params,\n  texture,\n  state,\n  subresourceRange\n) => {\n  for (const { level: mipLevel, layer } of subresourceRange.each()) {\n    assert(params.format in kTextureFormatInfo);\n    const format = params.format as EncodableTextureFormat;\n\n    t.expectSingleColor(texture, format, {\n      size: [t.textureWidth, t.textureHeight, t.textureDepth],\n      dimension: params.dimension,\n      slice: params.dimension === '2d' ? layer : 0,\n      layout: { mipLevel, aspect: params.aspect },\n      exp: t.stateToTexelComponents[state],\n    });\n  }\n};\n\nexport const checkContentsByTextureCopy: CheckContents = (\n  t,\n  params,\n  texture,\n  state,\n  subresourceRange\n) => {\n  for (const { level, layer } of subresourceRange.each()) {\n    assert(params.format in kTextureFormatInfo);\n    const format = params.format as EncodableTextureFormat;\n\n    const [width, height, depth] = virtualMipSize(\n      params.dimension,\n      [t.textureWidth, t.textureHeight, t.textureDepth],\n      level\n    );\n\n    const dst = t.device.createTexture({\n      dimension: params.dimension,\n      size: [width, height, depth],\n      format: params.format,\n      usage: GPUTextureUsage.COPY_DST | GPUTextureUsage.COPY_SRC,\n    });\n    t.trackForCleanup(dst);\n\n    const commandEncoder = t.device.createCommandEncoder();\n    commandEncoder.copyTextureToTexture(\n      { texture, mipLevel: level, origin: { x: 0, y: 0, z: layer } },\n      { texture: dst, mipLevel: 0 },\n      { width, height, depthOrArrayLayers: depth }\n    );\n    t.queue.submit([commandEncoder.finish()]);\n\n    t.expectSingleColor(dst, format, {\n      size: [width, height, depth],\n      exp: t.stateToTexelComponents[state],\n      layout: { mipLevel: 0, aspect: params.aspect },\n    });\n  }\n};\n"],"mappings":"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"}