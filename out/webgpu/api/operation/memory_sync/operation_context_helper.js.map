{"version":3,"file":"operation_context_helper.js","names":["assert","unreachable","kOperationBoundaries","kOperationContexts","combineContexts","as","bs","result","a","b","push","queueContexts","commandBufferContexts","filter","c","kBoundaryInfo","contexts","pass","dispatch","draw","OperationContextHelper","currentContext","commandBuffers","renderBundles","kTextureSize","kTextureFormat","constructor","t","device","queue","ensureSubmit","ensureContext","flushCommandBuffers","popContext","commandEncoder","undefined","commandBuffer","finish","computePassEncoder","end","renderPassEncoder","renderBundleEncoder","renderBundle","makeDummyAttachment","texture","trackForCleanup","createTexture","format","size","usage","GPUTextureUsage","RENDER_ATTACHMENT","view","createView","loadOp","storeOp","context","ancestorContext","Math","min","indexOf","flushRenderBundles","GPURenderBundle","createCommandEncoder","beginComputePass","beginRenderPass","colorAttachments","createRenderBundleEncoder","colorFormats","length","executeBundles","submit","ensureBoundary","boundary"],"sources":["../../../../../src/webgpu/api/operation/memory_sync/operation_context_helper.ts"],"sourcesContent":["import { assert, unreachable } from '../../../../common/util/util.js';\nimport { EncodableTextureFormat } from '../../../format_info.js';\nimport { GPUTest } from '../../../gpu_test.js';\n\n/**\n * Boundary between the first operation, and the second operation.\n */\nexport const kOperationBoundaries = [\n  'queue-op', // Operations are performed in different queue operations (submit, writeTexture).\n  'command-buffer', // Operations are in different command buffers.\n  'pass', // Operations are in different passes.\n  'execute-bundles', // Operations are in different executeBundles(...) calls\n  'render-bundle', // Operations are in different render bundles.\n  'dispatch', // Operations are in different dispatches.\n  'draw', // Operations are in different draws.\n] as const;\nexport type OperationBoundary = (typeof kOperationBoundaries)[number];\n\n/**\n * Context a particular operation is permitted in.\n * These contexts should be sorted such that the first is the most top-level\n * context, and the last is most nested (inside a render bundle, in a render pass, ...).\n */\nexport const kOperationContexts = [\n  'queue', // Operation occurs on the GPUQueue object\n  'command-encoder', // Operation may be encoded in a GPUCommandEncoder.\n  'compute-pass-encoder', // Operation may be encoded in a GPUComputePassEncoder.\n  'render-pass-encoder', // Operation may be encoded in a GPURenderPassEncoder.\n  'render-bundle-encoder', // Operation may be encoded in a GPURenderBundleEncoder.\n] as const;\nexport type OperationContext = (typeof kOperationContexts)[number];\n\ninterface BoundaryInfo {\n  readonly contexts: [OperationContext, OperationContext][];\n  // Add fields as needed\n}\n\nfunction combineContexts(\n  as: readonly OperationContext[],\n  bs: readonly OperationContext[]\n): [OperationContext, OperationContext][] {\n  const result: [OperationContext, OperationContext][] = [];\n  for (const a of as) {\n    for (const b of bs) {\n      result.push([a, b]);\n    }\n  }\n  return result;\n}\n\nconst queueContexts = combineContexts(kOperationContexts, kOperationContexts);\nconst commandBufferContexts = combineContexts(\n  kOperationContexts.filter(c => c !== 'queue'),\n  kOperationContexts.filter(c => c !== 'queue')\n);\n\n/**\n * Mapping of OperationBoundary => to a set of OperationContext pairs.\n * The boundary is capable of separating operations in those two contexts.\n */\nexport const kBoundaryInfo: {\n  readonly [k in OperationBoundary]: BoundaryInfo;\n} = {\n  'queue-op': {\n    contexts: queueContexts,\n  },\n  'command-buffer': {\n    contexts: commandBufferContexts,\n  },\n  pass: {\n    contexts: [\n      ['compute-pass-encoder', 'compute-pass-encoder'],\n      ['compute-pass-encoder', 'render-pass-encoder'],\n      ['render-pass-encoder', 'compute-pass-encoder'],\n      ['render-pass-encoder', 'render-pass-encoder'],\n      ['render-bundle-encoder', 'render-pass-encoder'],\n      ['render-pass-encoder', 'render-bundle-encoder'],\n      ['render-bundle-encoder', 'render-bundle-encoder'],\n    ],\n  },\n  'execute-bundles': {\n    contexts: [['render-bundle-encoder', 'render-bundle-encoder']],\n  },\n  'render-bundle': {\n    contexts: [\n      ['render-bundle-encoder', 'render-pass-encoder'],\n      ['render-pass-encoder', 'render-bundle-encoder'],\n      ['render-bundle-encoder', 'render-bundle-encoder'],\n    ],\n  },\n  dispatch: {\n    contexts: [['compute-pass-encoder', 'compute-pass-encoder']],\n  },\n  draw: {\n    contexts: [\n      ['render-pass-encoder', 'render-pass-encoder'],\n      ['render-bundle-encoder', 'render-pass-encoder'],\n      ['render-pass-encoder', 'render-bundle-encoder'],\n    ],\n  },\n};\n\nexport class OperationContextHelper {\n  // We start at the queue context which is top-level.\n  protected currentContext: OperationContext = 'queue';\n\n  // Set based on the current context.\n  queue: GPUQueue;\n  commandEncoder?: GPUCommandEncoder;\n  computePassEncoder?: GPUComputePassEncoder;\n  renderPassEncoder?: GPURenderPassEncoder;\n  renderBundleEncoder?: GPURenderBundleEncoder;\n\n  protected t: GPUTest;\n  protected device: GPUDevice;\n\n  protected commandBuffers: GPUCommandBuffer[] = [];\n  protected renderBundles: GPURenderBundle[] = [];\n\n  public readonly kTextureSize = [4, 4] as const;\n  public readonly kTextureFormat: EncodableTextureFormat = 'rgba8unorm';\n\n  constructor(t: GPUTest) {\n    this.t = t;\n    this.device = t.device;\n    this.queue = t.device.queue;\n  }\n\n  // Ensure that all encoded commands are finished and submitted.\n  ensureSubmit() {\n    this.ensureContext('queue');\n    this.flushCommandBuffers();\n  }\n\n  private popContext(): GPURenderBundle | GPUCommandBuffer | null {\n    switch (this.currentContext) {\n      case 'queue':\n        unreachable();\n        break;\n      case 'command-encoder': {\n        assert(this.commandEncoder !== undefined);\n        const commandBuffer = this.commandEncoder.finish();\n        this.commandEncoder = undefined;\n        this.currentContext = 'queue';\n        return commandBuffer;\n      }\n      case 'compute-pass-encoder':\n        assert(this.computePassEncoder !== undefined);\n        this.computePassEncoder.end();\n        this.computePassEncoder = undefined;\n        this.currentContext = 'command-encoder';\n        break;\n      case 'render-pass-encoder':\n        assert(this.renderPassEncoder !== undefined);\n        this.renderPassEncoder.end();\n        this.renderPassEncoder = undefined;\n        this.currentContext = 'command-encoder';\n        break;\n      case 'render-bundle-encoder': {\n        assert(this.renderBundleEncoder !== undefined);\n        const renderBundle = this.renderBundleEncoder.finish();\n        this.renderBundleEncoder = undefined;\n        this.currentContext = 'render-pass-encoder';\n        return renderBundle;\n      }\n    }\n    return null;\n  }\n\n  private makeDummyAttachment(): GPURenderPassColorAttachment {\n    const texture = this.t.trackForCleanup(\n      this.device.createTexture({\n        format: this.kTextureFormat,\n        size: this.kTextureSize,\n        usage: GPUTextureUsage.RENDER_ATTACHMENT,\n      })\n    );\n    return {\n      view: texture.createView(),\n      loadOp: 'load',\n      storeOp: 'store',\n    };\n  }\n\n  ensureContext(context: OperationContext) {\n    // Find the common ancestor. So we can transition from currentContext -> context.\n    const ancestorContext =\n      kOperationContexts[\n        Math.min(\n          kOperationContexts.indexOf(context),\n          kOperationContexts.indexOf(this.currentContext)\n        )\n      ];\n\n    // Pop the context until we're at the common ancestor.\n    while (this.currentContext !== ancestorContext) {\n      // About to pop the render pass encoder. Execute any outstanding render bundles.\n      if (this.currentContext === 'render-pass-encoder') {\n        this.flushRenderBundles();\n      }\n\n      const result = this.popContext();\n      if (result) {\n        if (result instanceof GPURenderBundle) {\n          this.renderBundles.push(result);\n        } else {\n          this.commandBuffers.push(result);\n        }\n      }\n    }\n\n    if (this.currentContext === context) {\n      return;\n    }\n\n    switch (context) {\n      case 'queue':\n        unreachable();\n        break;\n      case 'command-encoder':\n        assert(this.currentContext === 'queue');\n        this.commandEncoder = this.device.createCommandEncoder();\n        break;\n      case 'compute-pass-encoder':\n        switch (this.currentContext) {\n          case 'queue':\n            this.commandEncoder = this.device.createCommandEncoder();\n          // fallthrough\n          case 'command-encoder':\n            assert(this.commandEncoder !== undefined);\n            this.computePassEncoder = this.commandEncoder.beginComputePass();\n            break;\n          case 'compute-pass-encoder':\n          case 'render-bundle-encoder':\n          case 'render-pass-encoder':\n            unreachable();\n        }\n        break;\n      case 'render-pass-encoder':\n        switch (this.currentContext) {\n          case 'queue':\n            this.commandEncoder = this.device.createCommandEncoder();\n          // fallthrough\n          case 'command-encoder':\n            assert(this.commandEncoder !== undefined);\n            this.renderPassEncoder = this.commandEncoder.beginRenderPass({\n              colorAttachments: [this.makeDummyAttachment()],\n            });\n            break;\n          case 'render-pass-encoder':\n          case 'render-bundle-encoder':\n          case 'compute-pass-encoder':\n            unreachable();\n        }\n        break;\n      case 'render-bundle-encoder':\n        switch (this.currentContext) {\n          case 'queue':\n            this.commandEncoder = this.device.createCommandEncoder();\n          // fallthrough\n          case 'command-encoder':\n            assert(this.commandEncoder !== undefined);\n            this.renderPassEncoder = this.commandEncoder.beginRenderPass({\n              colorAttachments: [this.makeDummyAttachment()],\n            });\n          // fallthrough\n          case 'render-pass-encoder':\n            this.renderBundleEncoder = this.device.createRenderBundleEncoder({\n              colorFormats: [this.kTextureFormat],\n            });\n            break;\n          case 'render-bundle-encoder':\n          case 'compute-pass-encoder':\n            unreachable();\n        }\n        break;\n    }\n    this.currentContext = context;\n  }\n\n  private flushRenderBundles() {\n    assert(this.renderPassEncoder !== undefined);\n    if (this.renderBundles.length) {\n      this.renderPassEncoder.executeBundles(this.renderBundles);\n      this.renderBundles = [];\n    }\n  }\n\n  private flushCommandBuffers() {\n    if (this.commandBuffers.length) {\n      this.queue.submit(this.commandBuffers);\n      this.commandBuffers = [];\n    }\n  }\n\n  ensureBoundary(boundary: OperationBoundary) {\n    switch (boundary) {\n      case 'command-buffer':\n        this.ensureContext('queue');\n        break;\n      case 'queue-op':\n        this.ensureContext('queue');\n        // Submit any GPUCommandBuffers so the next one is in a separate submit.\n        this.flushCommandBuffers();\n        break;\n      case 'dispatch':\n        // Nothing to do to separate dispatches.\n        assert(this.currentContext === 'compute-pass-encoder');\n        break;\n      case 'draw':\n        // Nothing to do to separate draws.\n        assert(\n          this.currentContext === 'render-pass-encoder' ||\n            this.currentContext === 'render-bundle-encoder'\n        );\n        break;\n      case 'pass':\n        this.ensureContext('command-encoder');\n        break;\n      case 'render-bundle':\n        this.ensureContext('render-pass-encoder');\n        break;\n      case 'execute-bundles':\n        this.ensureContext('render-pass-encoder');\n        // Execute any GPURenderBundles so the next one is in a separate executeBundles.\n        this.flushRenderBundles();\n        break;\n    }\n  }\n}\n"],"mappings":"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"}