{"version":3,"file":"state_tracking.spec.js","names":["description","makeTestGroup","GPUConst","kProgrammableEncoderTypes","ProgrammableStateTest","g","kBufferUsage","BufferUsage","COPY_SRC","STORAGE","test","desc","params","u","combine","beginSubcases","a","b","out","fn","t","encoderType","groupIndices","pipeline","createBindingStatePipeline","makeBufferWithContents","Int32Array","bindGroups","createBindGroup","encoder","validateFinishAndSubmit","createEncoder","setPipeline","setBindGroup","dispatchOrDraw","expectGPUBufferValuesEqual","setOrder","bindingName","combineWithParams","setBefore","setAfter","ab","badOut","c","pipelineA","pipelineB","outA","outB"],"sources":["../../../../../../src/webgpu/api/operation/command_buffer/programmable/state_tracking.spec.ts"],"sourcesContent":["export const description = `\nEnsure state is set correctly. Tries to stress state caching (setting different states multiple\ntimes in different orders) for setBindGroup and setPipeline.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUConst } from '../../../../constants.js';\nimport { kProgrammableEncoderTypes } from '../../../../util/command_buffer_maker.js';\n\nimport { ProgrammableStateTest } from './programmable_state_test.js';\n\nexport const g = makeTestGroup(ProgrammableStateTest);\n\nconst kBufferUsage = GPUConst.BufferUsage.COPY_SRC | GPUConst.BufferUsage.STORAGE;\n\ng.test('bind_group_indices')\n  .desc(\n    `\n    Test that bind group indices can be declared in any order, regardless of their order in the shader.\n    - Test places the value of buffer a - buffer b into the out buffer, then reads the result.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('encoderType', kProgrammableEncoderTypes)\n      .beginSubcases()\n      .combine('groupIndices', [\n        { a: 0, b: 1, out: 2 },\n        { a: 1, b: 2, out: 0 },\n        { a: 2, b: 0, out: 1 },\n        { a: 0, b: 2, out: 1 },\n        { a: 2, b: 1, out: 0 },\n        { a: 1, b: 0, out: 2 },\n      ])\n  )\n  .fn(t => {\n    const { encoderType, groupIndices } = t.params;\n\n    const pipeline = t.createBindingStatePipeline(encoderType, groupIndices);\n\n    const out = t.makeBufferWithContents(new Int32Array([0]), kBufferUsage);\n    const bindGroups = {\n      a: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([3]), kBufferUsage),\n        'read-only-storage'\n      ),\n      b: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([2]), kBufferUsage),\n        'read-only-storage'\n      ),\n      out: t.createBindGroup(out, 'storage'),\n    };\n\n    const { encoder, validateFinishAndSubmit } = t.createEncoder(encoderType);\n\n    t.setPipeline(encoder, pipeline);\n    encoder.setBindGroup(groupIndices.a, bindGroups.a);\n    encoder.setBindGroup(groupIndices.b, bindGroups.b);\n    encoder.setBindGroup(groupIndices.out, bindGroups.out);\n    t.dispatchOrDraw(encoder);\n    validateFinishAndSubmit(true, true);\n\n    t.expectGPUBufferValuesEqual(out, new Int32Array([1]));\n  });\n\ng.test('bind_group_order')\n  .desc(\n    `\n    Test that the order in which you set the bind groups doesn't matter.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('encoderType', kProgrammableEncoderTypes)\n      .beginSubcases()\n      .combine('setOrder', [\n        ['a', 'b', 'out'],\n        ['b', 'out', 'a'],\n        ['out', 'a', 'b'],\n        ['b', 'a', 'out'],\n        ['a', 'out', 'b'],\n        ['out', 'b', 'a'],\n      ] as const)\n  )\n  .fn(t => {\n    const { encoderType, setOrder } = t.params;\n\n    const groupIndices = { a: 0, b: 1, out: 2 };\n    const pipeline = t.createBindingStatePipeline(encoderType, groupIndices);\n\n    const out = t.makeBufferWithContents(new Int32Array([0]), kBufferUsage);\n    const bindGroups = {\n      a: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([3]), kBufferUsage),\n        'read-only-storage'\n      ),\n      b: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([2]), kBufferUsage),\n        'read-only-storage'\n      ),\n      out: t.createBindGroup(out, 'storage'),\n    };\n\n    const { encoder, validateFinishAndSubmit } = t.createEncoder(encoderType);\n    t.setPipeline(encoder, pipeline);\n\n    for (const bindingName of setOrder) {\n      encoder.setBindGroup(groupIndices[bindingName], bindGroups[bindingName]);\n    }\n\n    t.dispatchOrDraw(encoder);\n    validateFinishAndSubmit(true, true);\n\n    t.expectGPUBufferValuesEqual(out, new Int32Array([1]));\n  });\n\ng.test('bind_group_before_pipeline')\n  .desc(\n    `\n    Test that setting bind groups prior to setting the pipeline is still valid.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('encoderType', kProgrammableEncoderTypes)\n      .beginSubcases()\n      .combineWithParams([\n        { setBefore: ['a', 'b'], setAfter: ['out'] },\n        { setBefore: ['a'], setAfter: ['b', 'out'] },\n        { setBefore: ['out', 'b'], setAfter: ['a'] },\n        { setBefore: ['a', 'b', 'out'], setAfter: [] },\n      ] as const)\n  )\n  .fn(t => {\n    const { encoderType, setBefore, setAfter } = t.params;\n    const groupIndices = { a: 0, b: 1, out: 2 };\n    const pipeline = t.createBindingStatePipeline(encoderType, groupIndices);\n\n    const out = t.makeBufferWithContents(new Int32Array([0]), kBufferUsage);\n    const bindGroups = {\n      a: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([3]), kBufferUsage),\n        'read-only-storage'\n      ),\n      b: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([2]), kBufferUsage),\n        'read-only-storage'\n      ),\n      out: t.createBindGroup(out, 'storage'),\n    };\n\n    const { encoder, validateFinishAndSubmit } = t.createEncoder(encoderType);\n\n    for (const bindingName of setBefore) {\n      encoder.setBindGroup(groupIndices[bindingName], bindGroups[bindingName]);\n    }\n\n    t.setPipeline(encoder, pipeline);\n\n    for (const bindingName of setAfter) {\n      encoder.setBindGroup(groupIndices[bindingName], bindGroups[bindingName]);\n    }\n\n    t.dispatchOrDraw(encoder);\n    validateFinishAndSubmit(true, true);\n\n    t.expectGPUBufferValuesEqual(out, new Int32Array([1]));\n  });\n\ng.test('one_bind_group_multiple_slots')\n  .desc(\n    `\n    Test that a single bind group may be bound to more than one slot.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('encoderType', kProgrammableEncoderTypes)\n  )\n  .fn(t => {\n    const { encoderType } = t.params;\n    const pipeline = t.createBindingStatePipeline(encoderType, { a: 0, b: 1, out: 2 });\n\n    const out = t.makeBufferWithContents(new Int32Array([1]), kBufferUsage);\n    const bindGroups = {\n      ab: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([3]), kBufferUsage),\n        'read-only-storage'\n      ),\n      out: t.createBindGroup(out, 'storage'),\n    };\n\n    const { encoder, validateFinishAndSubmit } = t.createEncoder(encoderType);\n    t.setPipeline(encoder, pipeline);\n\n    encoder.setBindGroup(0, bindGroups.ab);\n    encoder.setBindGroup(1, bindGroups.ab);\n    encoder.setBindGroup(2, bindGroups.out);\n\n    t.dispatchOrDraw(encoder);\n    validateFinishAndSubmit(true, true);\n\n    t.expectGPUBufferValuesEqual(out, new Int32Array([0]));\n  });\n\ng.test('bind_group_multiple_sets')\n  .desc(\n    `\n    Test that the last bind group set to a given slot is used when dispatching.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('encoderType', kProgrammableEncoderTypes)\n  )\n  .fn(t => {\n    const { encoderType } = t.params;\n    const pipeline = t.createBindingStatePipeline(encoderType, { a: 0, b: 1, out: 2 });\n\n    const badOut = t.makeBufferWithContents(new Int32Array([-1]), kBufferUsage);\n    const out = t.makeBufferWithContents(new Int32Array([0]), kBufferUsage);\n    const bindGroups = {\n      a: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([3]), kBufferUsage),\n        'read-only-storage'\n      ),\n      b: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([2]), kBufferUsage),\n        'read-only-storage'\n      ),\n      c: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([5]), kBufferUsage),\n        'read-only-storage'\n      ),\n      badOut: t.createBindGroup(badOut, 'storage'),\n      out: t.createBindGroup(out, 'storage'),\n    };\n\n    const { encoder, validateFinishAndSubmit } = t.createEncoder(encoderType);\n\n    encoder.setBindGroup(1, bindGroups.c);\n\n    t.setPipeline(encoder, pipeline);\n\n    encoder.setBindGroup(0, bindGroups.c);\n    encoder.setBindGroup(0, bindGroups.a);\n\n    encoder.setBindGroup(2, bindGroups.badOut);\n\n    encoder.setBindGroup(1, bindGroups.b);\n    encoder.setBindGroup(2, bindGroups.out);\n\n    t.dispatchOrDraw(encoder);\n    validateFinishAndSubmit(true, true);\n\n    t.expectGPUBufferValuesEqual(out, new Int32Array([1]));\n    t.expectGPUBufferValuesEqual(badOut, new Int32Array([-1]));\n  });\n\ng.test('compatible_pipelines')\n  .desc('Test that bind groups can be shared between compatible pipelines.')\n  .params(u =>\n    u //\n      .combine('encoderType', kProgrammableEncoderTypes)\n  )\n  .fn(t => {\n    const { encoderType } = t.params;\n    const pipelineA = t.createBindingStatePipeline(encoderType, { a: 0, b: 1, out: 2 });\n    const pipelineB = t.createBindingStatePipeline(\n      encoderType,\n      { a: 0, b: 1, out: 2 },\n      'a.value + b.value'\n    );\n\n    const outA = t.makeBufferWithContents(new Int32Array([0]), kBufferUsage);\n    const outB = t.makeBufferWithContents(new Int32Array([0]), kBufferUsage);\n    const bindGroups = {\n      a: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([3]), kBufferUsage),\n        'read-only-storage'\n      ),\n      b: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([2]), kBufferUsage),\n        'read-only-storage'\n      ),\n      outA: t.createBindGroup(outA, 'storage'),\n      outB: t.createBindGroup(outB, 'storage'),\n    };\n\n    const { encoder, validateFinishAndSubmit } = t.createEncoder(encoderType);\n    encoder.setBindGroup(0, bindGroups.a);\n    encoder.setBindGroup(1, bindGroups.b);\n\n    t.setPipeline(encoder, pipelineA);\n    encoder.setBindGroup(2, bindGroups.outA);\n    t.dispatchOrDraw(encoder);\n\n    t.setPipeline(encoder, pipelineB);\n    encoder.setBindGroup(2, bindGroups.outB);\n    t.dispatchOrDraw(encoder);\n\n    validateFinishAndSubmit(true, true);\n\n    t.expectGPUBufferValuesEqual(outA, new Int32Array([1]));\n    t.expectGPUBufferValuesEqual(outB, new Int32Array([5]));\n  });\n"],"mappings":"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"}