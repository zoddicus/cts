{"version":3,"file":"labels.spec.js","names":["description","makeTestGroup","keysOf","getGPU","GPUTest","g","kTestFunctions","createBuffer","t","label","buffer","device","size","usage","GPUBufferUsage","COPY_DST","expect","destroy","requestDevice","gpu","rec","adapter","requestAdapter","createTexture","texture","format","GPUTextureUsage","RENDER_ATTACHMENT","createSampler","sampler","createBindGroupLayout","bindGroupLayout","entries","createPipelineLayout","pipelineLayout","bindGroupLayouts","createBindGroup","layout","bindGroup","createShaderModule","shaderModule","code","createComputePipeline","module","computePipeline","compute","entryPoint","createRenderPipeline","renderPipeline","vertex","createComputePipelineAsync","createRenderPipelineAsync","createCommandEncoder","encoder","createRenderBundleEncoder","colorFormats","createQuerySet","querySet","type","count","beginRenderPass","label2","renderPass","colorAttachments","view","createView","loadOp","storeOp","end","finish","beginComputePass","computePass","commandBuffer","test","desc","params","u","combine","beginSubcases","fn","name","result","Promise","pipeline","layout1","getBindGroupLayout","layout2"],"sources":["../../../../src/webgpu/api/operation/labels.spec.ts"],"sourcesContent":["export const description = `\nTests for object labels.\n`;\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { keysOf } from '../../../common/util/data_tables.js';\nimport { getGPU } from '../../../common/util/navigator_gpu.js';\nimport { GPUTest } from '../../gpu_test.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ntype TestFunction = (t: GPUTest, label: string) => Promise<void> | void;\nconst kTestFunctions: { [name: string]: TestFunction } = {\n  createBuffer: (t: GPUTest, label: string) => {\n    const buffer = t.device.createBuffer({ size: 16, usage: GPUBufferUsage.COPY_DST, label });\n    t.expect(buffer.label === label);\n    buffer.destroy();\n    t.expect(buffer.label === label);\n  },\n\n  requestDevice: async (t: GPUTest, label: string) => {\n    const gpu = getGPU(t.rec);\n    const adapter = await gpu.requestAdapter();\n    t.expect(!!adapter);\n    const device = await adapter!.requestDevice({ label });\n    t.expect(!!device);\n    t.expect(device.label === label);\n    device.destroy();\n    t.expect(device.label === label);\n  },\n\n  createTexture: (t: GPUTest, label: string) => {\n    const texture = t.device.createTexture({\n      label,\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n    t.expect(texture.label === label);\n    texture.destroy();\n    t.expect(texture.label === label);\n  },\n\n  createSampler: (t: GPUTest, label: string) => {\n    const sampler = t.device.createSampler({ label });\n    t.expect(sampler.label === label);\n  },\n\n  createBindGroupLayout: (t: GPUTest, label: string) => {\n    const bindGroupLayout = t.device.createBindGroupLayout({ label, entries: [] });\n    t.expect(bindGroupLayout.label === label);\n  },\n\n  createPipelineLayout: (t: GPUTest, label: string) => {\n    const pipelineLayout = t.device.createPipelineLayout({ label, bindGroupLayouts: [] });\n    t.expect(pipelineLayout.label === label);\n  },\n\n  createBindGroup: (t: GPUTest, label: string) => {\n    const layout = t.device.createBindGroupLayout({ entries: [] });\n    const bindGroup = t.device.createBindGroup({ label, layout, entries: [] });\n    t.expect(bindGroup.label === label);\n  },\n\n  createShaderModule: (t: GPUTest, label: string) => {\n    const shaderModule = t.device.createShaderModule({\n      label,\n      code: `\n        @vertex fn vs() -> @builtin(position) vec4f {\n         return vec4f(0, 0, 0, 1);\n        }\n      `,\n    });\n    t.expect(shaderModule.label === label);\n  },\n\n  createComputePipeline: (t: GPUTest, label: string) => {\n    const module = t.device.createShaderModule({\n      code: `\n        @compute @workgroup_size(1u) fn foo() {}\n      `,\n    });\n    const computePipeline = t.device.createComputePipeline({\n      label,\n      layout: 'auto',\n      compute: {\n        module,\n        entryPoint: 'foo',\n      },\n    });\n    t.expect(computePipeline.label === label);\n  },\n\n  createRenderPipeline: (t: GPUTest, label: string) => {\n    const module = t.device.createShaderModule({\n      code: `\n        @vertex fn foo() -> @builtin(position) vec4f {\n         return vec4f(0, 0, 0, 1);\n        }\n      `,\n    });\n    const renderPipeline = t.device.createRenderPipeline({\n      label,\n      layout: 'auto',\n      vertex: {\n        module,\n        entryPoint: 'foo',\n      },\n    });\n    t.expect(renderPipeline.label === label);\n  },\n\n  createComputePipelineAsync: async (t: GPUTest, label: string) => {\n    const module = t.device.createShaderModule({\n      code: `\n        @compute @workgroup_size(1u) fn foo() {}\n      `,\n    });\n    const computePipeline = await t.device.createComputePipelineAsync({\n      label,\n      layout: 'auto',\n      compute: {\n        module,\n        entryPoint: 'foo',\n      },\n    });\n    t.expect(computePipeline.label === label);\n  },\n\n  createRenderPipelineAsync: async (t: GPUTest, label: string) => {\n    const module = t.device.createShaderModule({\n      label,\n      code: `\n        @vertex fn foo() -> @builtin(position) vec4f {\n         return vec4f(0, 0, 0, 1);\n        }\n      `,\n    });\n    const renderPipeline = await t.device.createRenderPipelineAsync({\n      label,\n      layout: 'auto',\n      vertex: {\n        module,\n        entryPoint: 'foo',\n      },\n    });\n    t.expect(renderPipeline.label === label);\n  },\n\n  createCommandEncoder: (t: GPUTest, label: string) => {\n    const encoder = t.device.createCommandEncoder({ label });\n    t.expect(encoder.label === label);\n  },\n\n  createRenderBundleEncoder: (t: GPUTest, label: string) => {\n    const encoder = t.device.createRenderBundleEncoder({\n      label,\n      colorFormats: ['rgba8unorm'],\n    });\n    t.expect(encoder.label === label);\n  },\n\n  createQuerySet: (t: GPUTest, label: string) => {\n    const querySet = t.device.createQuerySet({\n      label,\n      type: 'occlusion',\n      count: 1,\n    });\n    t.expect(querySet.label === label);\n    querySet.destroy();\n    t.expect(querySet.label === label);\n  },\n\n  beginRenderPass: (t: GPUTest, label: string) => {\n    const texture = t.device.createTexture({\n      label,\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n    const label2 = `${label}-2`;\n    const encoder = t.device.createCommandEncoder();\n    encoder.label = label2;\n    const renderPass = encoder.beginRenderPass({\n      label,\n      colorAttachments: [{ view: texture.createView(), loadOp: 'clear', storeOp: 'store' }],\n    });\n    t.expect(renderPass.label === label);\n    renderPass.end();\n    t.expect(renderPass.label === label);\n    encoder.finish();\n    t.expect(renderPass.label === label);\n    t.expect(encoder.label === label2);\n    texture.destroy();\n  },\n\n  beginComputePass: (t: GPUTest, label: string) => {\n    const label2 = `${label}-2`;\n    const encoder = t.device.createCommandEncoder();\n    encoder.label = label2;\n    const computePass = encoder.beginComputePass({ label });\n    t.expect(computePass.label === label);\n    computePass.end();\n    t.expect(computePass.label === label);\n    encoder.finish();\n    t.expect(computePass.label === label);\n    t.expect(encoder.label === label2);\n  },\n\n  finish: (t: GPUTest, label: string) => {\n    const encoder = t.device.createCommandEncoder();\n    const commandBuffer = encoder.finish({ label });\n    t.expect(commandBuffer.label === label);\n  },\n\n  createView: (t: GPUTest, label: string) => {\n    const texture = t.device.createTexture({\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n    const view = texture.createView({ label });\n    t.expect(view.label === label);\n    texture.destroy();\n    t.expect(view.label === label);\n  },\n};\n\ng.test('object_has_descriptor_label')\n  .desc(\n    `\n  For every create function, the descriptor.label is carried over to the object.label.\n\n  TODO: test importExternalTexture\n  TODO: make a best effort and generating an error that is likely to use label. There's nothing to check for\n        but it may surface bugs related to unusual labels.\n    `\n  )\n  .params(u =>\n    u\n      .combine('name', keysOf(kTestFunctions))\n      .beginSubcases()\n      .combine('label', ['label', '\\0', 'null\\0in\\0label', 'ðŸŒžðŸ‘†'])\n  )\n  .fn(async t => {\n    const { name, label } = t.params;\n    const result = kTestFunctions[name](t, label);\n    if (result instanceof Promise) {\n      await result;\n    }\n  });\n\ng.test('wrappers_do_not_share_labels')\n  .desc('test that different wrapper objects for the same GPU object do not share labels')\n  .fn(t => {\n    const module = t.device.createShaderModule({\n      code: `\n        @group(0) @binding(0) var<uniform> pos: vec4f;\n        @vertex fn main() -> @builtin(position) vec4f {\n          return pos;\n        }\n      `,\n    });\n    const pipeline = t.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: {\n        module,\n        entryPoint: 'main',\n      },\n    });\n    const layout1 = pipeline.getBindGroupLayout(0);\n    const layout2 = pipeline.getBindGroupLayout(0);\n    t.expect(layout1 !== layout2);\n\n    layout1.label = 'foo';\n    layout2.label = 'bar';\n\n    t.expect(layout1.label === 'foo');\n    t.expect(layout2.label === 'bar');\n  });\n"],"mappings":"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"}