{"version":3,"file":"shader_module.spec.js","names":["description","makeTestGroup","keysOf","kCompatModeUnsupportedStorageTextureFormats","CompatibilityTest","g","test","desc","fn","t","expectGPUErrorInCompatibilityMode","device","createShaderModule","code","params","u","combineWithParams","success","interpolate","combine","format","kDepthTextureTypeToParams","texture_depth_2d","texture_depth_2d_array","texture_depth_multisampled_2d","kDepthTextureTypes","type"],"sources":["../../../../../../src/webgpu/compat/api/validation/shader_module/shader_module.spec.ts"],"sourcesContent":["export const description = `\nTests limitations of createShaderModule in compat mode.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../../common/util/data_tables.js';\nimport { kCompatModeUnsupportedStorageTextureFormats } from '../../../../format_info.js';\nimport { CompatibilityTest } from '../../../compatibility_test.js';\n\nexport const g = makeTestGroup(CompatibilityTest);\n\ng.test('sample_mask')\n  .desc(`Tests that you can not create a shader module that uses sample_mask in compat mode.`)\n  .fn(t => {\n    t.expectGPUErrorInCompatibilityMode(\n      'validation',\n      () =>\n        t.device.createShaderModule({\n          code: `\n            @vertex fn vs() -> @builtin(position) vec4f {\n                return vec4f(1);\n            }\n            struct Output {\n                @builtin(sample_mask) mask_out: u32,\n                @location(0) color : vec4f,\n            }\n            @fragment fn fsWithSampleMaskUsage() -> Output {\n                var o: Output;\n                // We need to make sure this sample_mask isn't optimized out even if its value equals \"no op\".\n                o.mask_out = 0xFFFFFFFFu;\n                o.color = vec4f(1.0, 1.0, 1.0, 1.0);\n                return o;\n            }\n          `,\n        }),\n      true\n    );\n  });\n\ng.test('sample_index')\n  .desc(`Tests that you can not create a shader module that uses sample_index in compat mode.`)\n  .fn(t => {\n    t.expectGPUErrorInCompatibilityMode(\n      'validation',\n      () =>\n        t.device.createShaderModule({\n          code: `\n            @vertex fn vs() -> @builtin(position) vec4f {\n                return vec4f(1);\n            }\n            @fragment fn fsWithSampleIndexUsage(@builtin(sample_index) sampleIndex: u32) -> @location(0) vec4f {\n                _ = sampleIndex;\n                return vec4f(0);\n            }\n              `,\n        }),\n      true\n    );\n  });\n\ng.test('interpolate')\n  .desc(\n    `Tests that you can not create a shader module that uses interpolate(linear), interpolate(...,sample),\n     interpolate(flat), nor interpolate(flat, first) in compat mode.`\n  )\n  .params(u =>\n    u.combineWithParams([\n      { success: true, interpolate: '' },\n      { success: true, interpolate: '@interpolate(linear)' },\n      { success: false, interpolate: '@interpolate(linear, sample)' },\n      { success: false, interpolate: '@interpolate(perspective, sample)' },\n      { success: false, interpolate: '@interpolate(flat)' },\n      { success: false, interpolate: '@interpolate(flat, first)' },\n      { success: true, interpolate: '@interpolate(flat, either)' },\n    ] as const)\n  )\n  .fn(t => {\n    const { interpolate, success } = t.params;\n\n    t.expectGPUErrorInCompatibilityMode(\n      'validation',\n      () =>\n        t.device.createShaderModule({\n          code: `\n            struct Vertex {\n                @builtin(position) pos: vec4f,\n                @location(0) ${interpolate} color : vec4f,\n            };\n            @vertex fn vs() -> Vertex {\n                var v: Vertex;\n                v.pos = vec4f(1);\n                v.color = vec4f(1);\n                return v;\n            }\n            @fragment fn fsWithInterpolationUsage(v: Vertex) -> @location(0) vec4f {\n                return v.color;\n            }\n            `,\n        }),\n      !success\n    );\n  });\n\ng.test('unsupportedStorageTextureFormats')\n  .desc(\n    `Tests that you can not create a shader module with unsupported storage texture formats in compat mode.`\n  )\n  .params(u => u.combine('format', kCompatModeUnsupportedStorageTextureFormats))\n  .fn(t => {\n    const { format } = t.params;\n\n    t.expectGPUErrorInCompatibilityMode(\n      'validation',\n      () =>\n        t.device.createShaderModule({\n          code: `\n            @group(0) @binding(0) var s: texture_storage_2d<${format}, read>;\n            @compute @workgroup_size(1) fn cs() {\n                _ = textureLoad(s, vec2u(0));\n            }\n          `,\n        }),\n      true\n    );\n  });\n\nconst kDepthTextureTypeToParams = {\n  texture_depth_2d: 'vec2u(0), 0',\n  texture_depth_2d_array: 'vec2u(0), 0, 0',\n  texture_depth_multisampled_2d: 'vec2u(0), 0',\n} as const;\nconst kDepthTextureTypes = keysOf(kDepthTextureTypeToParams);\n\ng.test('textureLoad_with_depth_textures')\n  .desc(\n    `Tests that you can not create a shader module that uses textureLoad with a depth texture in compat mode.`\n  )\n  .params(u => u.combine('type', kDepthTextureTypes))\n  .fn(t => {\n    const { type } = t.params;\n    const params = kDepthTextureTypeToParams[type];\n\n    t.expectGPUErrorInCompatibilityMode(\n      'validation',\n      () =>\n        t.device.createShaderModule({\n          code: `\n            @group(0) @binding(0) var t: ${type};\n            @compute @workgroup_size(1) fn cs() {\n                _ = textureLoad(t, ${params});\n            }\n          `,\n        }),\n      true\n    );\n  });\n"],"mappings":"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"}