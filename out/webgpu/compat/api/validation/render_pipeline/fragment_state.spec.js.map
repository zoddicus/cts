{"version":3,"file":"fragment_state.spec.js","names":["description","makeTestGroup","keysOf","CompatibilityTest","g","cases","default","targets","noBlendTarget0","blend","noBlendTarget1","colorOperation","color","operation","colorSrcFactor","srcFactor","colorDstFactor","dstFactor","alphaOperation","alpha","alphaSrcFactor","alphaDstFactor","writeMask","GPUColorWrite","GREEN","caseNames","test","desc","params","u","combine","fn","t","caseName","module","device","createShaderModule","code","format","pipelineDescriptor","layout","vertex","entryPoint","fragment","isValid","expectGPUError","createRenderPipeline"],"sources":["../../../../../../src/webgpu/compat/api/validation/render_pipeline/fragment_state.spec.ts"],"sourcesContent":["export const description = `\nTests that you can not create a render pipeline with different per target blend state or write mask in compat mode.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../../common/util/data_tables.js';\nimport { CompatibilityTest } from '../../../compatibility_test.js';\n\nexport const g = makeTestGroup(CompatibilityTest);\n\ntype ThreeColorTargets = [GPUColorTargetState, GPUColorTargetState | null, GPUColorTargetState];\n\nconst cases = {\n  default(targets: ThreeColorTargets) {\n    return true;\n  },\n  noBlendTarget0(targets: ThreeColorTargets) {\n    delete targets[0].blend;\n    return false;\n  },\n  noBlendTarget1(targets: ThreeColorTargets) {\n    delete targets[2].blend;\n    return false;\n  },\n  colorOperation(targets: ThreeColorTargets) {\n    targets[2].blend!.color.operation = 'subtract';\n    return false;\n  },\n  colorSrcFactor(targets: ThreeColorTargets) {\n    targets[2].blend!.color.srcFactor = 'src-alpha';\n    return false;\n  },\n  colorDstFactor(targets: ThreeColorTargets) {\n    targets[2].blend!.color.dstFactor = 'dst-alpha';\n    return false;\n  },\n  alphaOperation(targets: ThreeColorTargets) {\n    targets[2].blend!.alpha.operation = 'subtract';\n    return false;\n  },\n  alphaSrcFactor(targets: ThreeColorTargets) {\n    targets[2].blend!.alpha.srcFactor = 'src-alpha';\n    return false;\n  },\n  alphaDstFactor(targets: ThreeColorTargets) {\n    targets[2].blend!.alpha.dstFactor = 'dst-alpha';\n    return false;\n  },\n  writeMask(targets: ThreeColorTargets) {\n    targets[2].writeMask = GPUColorWrite.GREEN;\n    return false;\n  },\n};\nconst caseNames = keysOf(cases);\n\ng.test('colorState')\n  .desc(\n    `\nTests that you can not create a render pipeline with different per target blend state or write mask in compat mode.\n\n- Test no blend state vs some blend state\n- Test different operation, srcFactor, dstFactor for color and alpha\n- Test different writeMask\n    `\n  )\n  .params(u => u.combine('caseName', caseNames))\n  .fn(t => {\n    const { caseName } = t.params;\n\n    const module = t.device.createShaderModule({\n      code: `\n        @vertex fn vs() -> @builtin(position) vec4f {\n            return vec4f(0);\n        }\n\n        struct FragmentOut {\n            @location(0) fragColor0 : vec4f,\n            @location(1) fragColor1 : vec4f,\n            @location(2) fragColor2 : vec4f,\n        }\n\n        @fragment fn fs() -> FragmentOut {\n            var output : FragmentOut;\n            output.fragColor0 = vec4f(0);\n            output.fragColor1 = vec4f(0);\n            output.fragColor2 = vec4f(0);\n            return output;\n        }\n      `,\n    });\n\n    const targets: ThreeColorTargets = [\n      {\n        format: 'rgba8unorm',\n        blend: {\n          color: {},\n          alpha: {},\n        },\n      },\n      null,\n      {\n        format: 'rgba8unorm',\n        blend: {\n          color: {},\n          alpha: {},\n        },\n      },\n    ];\n\n    const pipelineDescriptor: GPURenderPipelineDescriptor = {\n      layout: 'auto',\n      vertex: {\n        module,\n        entryPoint: 'vs',\n      },\n      fragment: {\n        module,\n        entryPoint: 'fs',\n        targets,\n      },\n    };\n    const isValid = cases[caseName](targets);\n    t.expectGPUError(\n      'validation',\n      () => t.device.createRenderPipeline(pipelineDescriptor),\n      !isValid\n    );\n  });\n"],"mappings":"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"}