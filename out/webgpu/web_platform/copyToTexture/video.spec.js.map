{"version":3,"file":"video.spec.js","names":["description","makeTestGroup","GPUTest","TextureTestMixin","startPlayingAndWaitForVideo","getVideoElement","getVideoFrameFromVideoElement","kVideoExpectations","kFormat","g","test","desc","params","u","combineWithParams","combine","fn","t","videoName","sourceType","srcDoFlipYDuringCopy","VideoFrame","skip","videoElement","source","width","height","codedWidth","codedHeight","videoWidth","videoHeight","dstTexture","device","createTexture","format","size","depthOrArrayLayers","usage","GPUTextureUsage","COPY_SRC","COPY_DST","RENDER_ATTACHMENT","queue","copyExternalImageToTexture","origin","x","y","flipY","texture","colorSpace","premultipliedAlpha","expectSinglePixelComparisonsAreOkInTexture","coord","exp","_blueExpectation","_greenExpectation","_yellowExpectation","_redExpectation","close"],"sources":["../../../../src/webgpu/web_platform/copyToTexture/video.spec.ts"],"sourcesContent":["export const description = `\ncopyToTexture with HTMLVideoElement and VideoFrame.\n\n- videos with various encodings/formats (webm vp8, webm vp9, ogg theora, mp4), color spaces\n  (bt.601, bt.709, bt.2020)\n`;\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { GPUTest, TextureTestMixin } from '../../gpu_test.js';\nimport {\n  startPlayingAndWaitForVideo,\n  getVideoElement,\n  getVideoFrameFromVideoElement,\n  kVideoExpectations,\n} from '../../web_platform/util.js';\n\nconst kFormat = 'rgba8unorm';\n\nexport const g = makeTestGroup(TextureTestMixin(GPUTest));\n\ng.test('copy_from_video')\n  .desc(\n    `\nTest HTMLVideoElement and VideoFrame can be copied to WebGPU texture correctly.\n\nIt creates HTMLVideoElement with videos under Resource folder.\n\n  Then call copyExternalImageToTexture() to do a full copy to the 0 mipLevel\n  of dst texture, and read the contents out to compare with the ImageBitmap contents.\n\n  If 'flipY' in 'GPUImageCopyExternalImage' is set to 'true', copy will ensure the result\n  is flipped.\n\n  The tests covers:\n  - Video comes from different color spaces.\n  - Valid 'flipY' config in 'GPUImageCopyExternalImage' (named 'srcDoFlipYDuringCopy' in cases)\n  - TODO: partial copy tests should be added\n  - TODO: all valid dstColorFormat tests should be added.\n  - TODO: dst color space tests need to be added\n`\n  )\n  .params(u =>\n    u //\n      .combineWithParams(kVideoExpectations)\n      .combine('sourceType', ['VideoElement', 'VideoFrame'] as const)\n      .combine('srcDoFlipYDuringCopy', [true, false])\n  )\n  .fn(async t => {\n    const { videoName, sourceType, srcDoFlipYDuringCopy } = t.params;\n\n    if (sourceType === 'VideoFrame' && typeof VideoFrame === 'undefined') {\n      t.skip('WebCodec is not supported');\n    }\n\n    const videoElement = getVideoElement(t, videoName);\n\n    await startPlayingAndWaitForVideo(videoElement, async () => {\n      let source, width, height;\n      if (sourceType === 'VideoFrame') {\n        source = await getVideoFrameFromVideoElement(t, videoElement);\n        width = source.codedWidth;\n        height = source.codedHeight;\n      } else {\n        source = videoElement;\n        width = source.videoWidth;\n        height = source.videoHeight;\n      }\n\n      const dstTexture = t.device.createTexture({\n        format: kFormat,\n        size: { width, height, depthOrArrayLayers: 1 },\n        usage:\n          GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST | GPUTextureUsage.RENDER_ATTACHMENT,\n      });\n\n      t.queue.copyExternalImageToTexture(\n        {\n          source,\n          origin: { x: 0, y: 0 },\n          flipY: srcDoFlipYDuringCopy,\n        },\n        {\n          texture: dstTexture,\n          origin: { x: 0, y: 0 },\n          colorSpace: 'srgb',\n          premultipliedAlpha: true,\n        },\n        { width, height, depthOrArrayLayers: 1 }\n      );\n\n      if (srcDoFlipYDuringCopy) {\n        t.expectSinglePixelComparisonsAreOkInTexture({ texture: dstTexture }, [\n          // Top-left should be blue.\n          { coord: { x: width * 0.25, y: height * 0.25 }, exp: t.params._blueExpectation },\n          // Top-right should be green.\n          { coord: { x: width * 0.75, y: height * 0.25 }, exp: t.params._greenExpectation },\n          // Bottom-left should be yellow.\n          { coord: { x: width * 0.25, y: height * 0.75 }, exp: t.params._yellowExpectation },\n          // Bottom-right should be red.\n          { coord: { x: width * 0.75, y: height * 0.75 }, exp: t.params._redExpectation },\n        ]);\n      } else {\n        t.expectSinglePixelComparisonsAreOkInTexture({ texture: dstTexture }, [\n          // Top-left should be yellow.\n          { coord: { x: width * 0.25, y: height * 0.25 }, exp: t.params._yellowExpectation },\n          // Top-right should be red.\n          { coord: { x: width * 0.75, y: height * 0.25 }, exp: t.params._redExpectation },\n          // Bottom-left should be blue.\n          { coord: { x: width * 0.25, y: height * 0.75 }, exp: t.params._blueExpectation },\n          // Bottom-right should be green.\n          { coord: { x: width * 0.75, y: height * 0.75 }, exp: t.params._greenExpectation },\n        ]);\n      }\n\n      if (source instanceof VideoFrame) {\n        source.close();\n      }\n    });\n  });\n"],"mappings":"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"}