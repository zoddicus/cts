{"version":3,"file":"worker.js","names":["getGPU","setDefaultRequestAdapterOptions","assert","objectEquals","iterRange","basicTest","adapter","requestAdapter","device","requestDevice","kOffset","pipeline","createComputePipeline","layout","compute","module","createShaderModule","code","entryPoint","kNumElements","kBufferSize","buffer","createBuffer","size","usage","GPUBufferUsage","STORAGE","COPY_SRC","resultBuffer","MAP_READ","COPY_DST","bindGroup","createBindGroup","getBindGroupLayout","entries","binding","resource","encoder","createCommandEncoder","pass","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","end","copyBufferToBuffer","queue","submit","finish","expected","Uint32Array","x","mapAsync","GPUMapMode","READ","actual","getMappedRange","destroy","self","onmessage","ev","defaultRequestAdapterOptions","data","error","undefined","err","toString","postMessage"],"sources":["../../../../src/webgpu/web_platform/worker/worker.ts"],"sourcesContent":["import { getGPU, setDefaultRequestAdapterOptions } from '../../../common/util/navigator_gpu.js';\nimport { assert, objectEquals, iterRange } from '../../../common/util/util.js';\n\nasync function basicTest() {\n  const adapter = await getGPU(null).requestAdapter();\n  assert(adapter !== null, 'Failed to get adapter.');\n\n  const device = await adapter.requestDevice();\n  assert(device !== null, 'Failed to get device.');\n\n  const kOffset = 1230000;\n  const pipeline = device.createComputePipeline({\n    layout: 'auto',\n    compute: {\n      module: device.createShaderModule({\n        code: `\n          struct Buffer { data: array<u32>, };\n\n          @group(0) @binding(0) var<storage, read_write> buffer: Buffer;\n          @compute @workgroup_size(1u) fn main(\n              @builtin(global_invocation_id) id: vec3<u32>) {\n            buffer.data[id.x] = id.x + ${kOffset}u;\n          }\n        `,\n      }),\n      entryPoint: 'main',\n    },\n  });\n\n  const kNumElements = 64;\n  const kBufferSize = kNumElements * 4;\n  const buffer = device.createBuffer({\n    size: kBufferSize,\n    usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC,\n  });\n\n  const resultBuffer = device.createBuffer({\n    size: kBufferSize,\n    usage: GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST,\n  });\n\n  const bindGroup = device.createBindGroup({\n    layout: pipeline.getBindGroupLayout(0),\n    entries: [{ binding: 0, resource: { buffer } }],\n  });\n\n  const encoder = device.createCommandEncoder();\n\n  const pass = encoder.beginComputePass();\n  pass.setPipeline(pipeline);\n  pass.setBindGroup(0, bindGroup);\n  pass.dispatchWorkgroups(kNumElements);\n  pass.end();\n\n  encoder.copyBufferToBuffer(buffer, 0, resultBuffer, 0, kBufferSize);\n\n  device.queue.submit([encoder.finish()]);\n\n  const expected = new Uint32Array([...iterRange(kNumElements, x => x + kOffset)]);\n\n  await resultBuffer.mapAsync(GPUMapMode.READ);\n  const actual = new Uint32Array(resultBuffer.getMappedRange());\n\n  assert(objectEquals(actual, expected), 'compute pipeline ran');\n\n  resultBuffer.destroy();\n  buffer.destroy();\n  device.destroy();\n}\n\nself.onmessage = async (ev: MessageEvent) => {\n  const defaultRequestAdapterOptions: GPURequestAdapterOptions =\n    ev.data.defaultRequestAdapterOptions;\n  setDefaultRequestAdapterOptions(defaultRequestAdapterOptions);\n\n  let error = undefined;\n  try {\n    await basicTest();\n  } catch (err: unknown) {\n    error = (err as Error).toString();\n  }\n  self.postMessage({ error });\n};\n"],"mappings":"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"}