{"version":3,"file":"worker.spec.js","names":["description","Fixture","makeTestGroup","assert","g","isNode","process","versions","node","undefined","isServiceWorker","globalThis","constructor","name","test","desc","fn","t","skipIf","url","launchDedicatedWorker","result","error","launchSharedWorker","launchServiceWorker"],"sources":["../../../../src/webgpu/web_platform/worker/worker.spec.ts"],"sourcesContent":["export const description = `\nTests WebGPU is available in a dedicated worker and a shared worker.\n\nNote: Any CTS test can be run in a worker by passing ?worker=dedicated, ?worker=shared,\n?worker=service as a query parameter. The tests in this file are specifically to check\nthat WebGPU is available in each worker type. When run in combination with a ?worker flag,\nthey will test workers created from other workers (where APIs exist to do so).\n\nTODO[2]: Figure out how to make these tests run in service workers (not actually\nimportant unless service workers gain the ability to launch other workers).\n`;\n\nimport { Fixture } from '../../../common/framework/fixture.js';\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { assert } from '../../../common/util/util.js';\n\nexport const g = makeTestGroup(Fixture);\n\nconst isNode = typeof process !== 'undefined' && process?.versions?.node !== undefined;\n\n// [1]: we load worker_launcher dynamically because ts-node support\n// is using commonjs which doesn't support import.meta. Further,\n// we need to put the url in a string and pass the string to import\n// otherwise typescript tries to parse the file which again, fails.\n// worker_launcher.js is excluded in node.tsconfig.json.\n\n// [2]: That hack does not work in Service Workers.\nconst isServiceWorker = globalThis.constructor.name === 'ServiceWorkerGlobalScope';\n\ng.test('dedicated_worker')\n  .desc(`test WebGPU is available in dedicated workers and check for basic functionality`)\n  .fn(async t => {\n    t.skipIf(isNode, 'node does not support 100% compatible workers');\n\n    t.skipIf(isServiceWorker, 'Service workers do not support this import() hack'); // [2]\n    const url = './worker_launcher.js';\n    const { launchDedicatedWorker } = await import(url); // [1]\n\n    const result = await launchDedicatedWorker();\n    assert(result.error === undefined, `should be no error from worker but was: ${result.error}`);\n  });\n\ng.test('shared_worker')\n  .desc(`test WebGPU is available in shared workers and check for basic functionality`)\n  .fn(async t => {\n    t.skipIf(isNode, 'node does not support 100% compatible workers');\n\n    t.skipIf(isServiceWorker, 'Service workers do not support this import() hack'); // [2]\n    const url = './worker_launcher.js';\n    const { launchSharedWorker } = await import(url); // [1]\n\n    const result = await launchSharedWorker();\n    assert(result.error === undefined, `should be no error from worker but was: ${result.error}`);\n  });\n\ng.test('service_worker')\n  .desc(`test WebGPU is available in service workers and check for basic functionality`)\n  .fn(async t => {\n    t.skipIf(isNode, 'node does not support 100% compatible workers');\n\n    t.skipIf(isServiceWorker, 'Service workers do not support this import() hack'); // [2]\n    const url = './worker_launcher.js';\n    const { launchServiceWorker } = await import(url); // [1]\n\n    const result = await launchServiceWorker();\n    assert(result.error === undefined, `should be no error from worker but was: ${result.error}`);\n  });\n"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,SAASC,OAAO,QAAQ,sCAAsC;AAC9D,SAASC,aAAa,QAAQ,yCAAyC;AACvE,SAASC,MAAM,QAAQ,8BAA8B;;AAErD,OAAO,MAAMC,CAAC,GAAGF,aAAa,CAACD,OAAO,CAAC;;AAEvC,MAAMI,MAAM,GAAG,OAAOC,OAAO,KAAK,WAAW,IAAIA,OAAO,EAAEC,QAAQ,EAAEC,IAAI,KAAKC,SAAS;;AAEtF;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMC,eAAe,GAAGC,UAAU,CAACC,WAAW,CAACC,IAAI,KAAK,0BAA0B;;AAElFT,CAAC,CAACU,IAAI,CAAC,kBAAkB,CAAC;AACvBC,IAAI,CAAE,iFAAgF,CAAC;AACvFC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACbA,CAAC,CAACC,MAAM,CAACb,MAAM,EAAE,+CAA+C,CAAC;;EAEjEY,CAAC,CAACC,MAAM,CAACR,eAAe,EAAE,mDAAmD,CAAC,CAAC,CAAC;EAChF,MAAMS,GAAG,GAAG,sBAAsB;EAClC,MAAM,EAAEC,qBAAqB,CAAC,CAAC,GAAG,MAAM,MAAM,CAACD,GAAG,CAAC,CAAC,CAAC;;EAErD,MAAME,MAAM,GAAG,MAAMD,qBAAqB,CAAC,CAAC;EAC5CjB,MAAM,CAACkB,MAAM,CAACC,KAAK,KAAKb,SAAS,EAAG,2CAA0CY,MAAM,CAACC,KAAM,EAAC,CAAC;AAC/F,CAAC,CAAC;;AAEJlB,CAAC,CAACU,IAAI,CAAC,eAAe,CAAC;AACpBC,IAAI,CAAE,8EAA6E,CAAC;AACpFC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACbA,CAAC,CAACC,MAAM,CAACb,MAAM,EAAE,+CAA+C,CAAC;;EAEjEY,CAAC,CAACC,MAAM,CAACR,eAAe,EAAE,mDAAmD,CAAC,CAAC,CAAC;EAChF,MAAMS,GAAG,GAAG,sBAAsB;EAClC,MAAM,EAAEI,kBAAkB,CAAC,CAAC,GAAG,MAAM,MAAM,CAACJ,GAAG,CAAC,CAAC,CAAC;;EAElD,MAAME,MAAM,GAAG,MAAME,kBAAkB,CAAC,CAAC;EACzCpB,MAAM,CAACkB,MAAM,CAACC,KAAK,KAAKb,SAAS,EAAG,2CAA0CY,MAAM,CAACC,KAAM,EAAC,CAAC;AAC/F,CAAC,CAAC;;AAEJlB,CAAC,CAACU,IAAI,CAAC,gBAAgB,CAAC;AACrBC,IAAI,CAAE,+EAA8E,CAAC;AACrFC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACbA,CAAC,CAACC,MAAM,CAACb,MAAM,EAAE,+CAA+C,CAAC;;EAEjEY,CAAC,CAACC,MAAM,CAACR,eAAe,EAAE,mDAAmD,CAAC,CAAC,CAAC;EAChF,MAAMS,GAAG,GAAG,sBAAsB;EAClC,MAAM,EAAEK,mBAAmB,CAAC,CAAC,GAAG,MAAM,MAAM,CAACL,GAAG,CAAC,CAAC,CAAC;;EAEnD,MAAME,MAAM,GAAG,MAAMG,mBAAmB,CAAC,CAAC;EAC1CrB,MAAM,CAACkB,MAAM,CAACC,KAAK,KAAKb,SAAS,EAAG,2CAA0CY,MAAM,CAACC,KAAM,EAAC,CAAC;AAC/F,CAAC,CAAC"}