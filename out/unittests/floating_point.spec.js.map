{"version":3,"file":"floating_point.spec.js","names":["description","makeTestGroup","objectEquals","unreachable","kValue","FP","FPInterval","map2DArray","oneULPF32","oneULPF16","oneULPF64","reinterpretU16AsF16","reinterpretU32AsF32","reinterpretU64AsF64","UnitTest","g","kFPTraitForULP","abstract","f32","f16","kUnboundedBounds","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","kUnboundedInterval","toParam","kPlusNULPFunctions","x","n","kPlusOneULPFunctions","kMinusNULPFunctions","kMinusOneULPFunctions","applyError","expected","error","unpack","Array","length","begin","end","test","params","u","combine","beginSubcases","expandWithParams","p","constants","trait","cases","input","positive","max","negative","min","infinity","push","fn","t","i","expect","bounds","value","NaN","subnormal","toInterval","got","contains","lhs","rhs","intervals","nearest_max","nearest_min","map","spanIntervals","e","fromParam","isVector","toVector","a","isMatrix","toMatrix","kSmallAbsoluteErrorValue","kLargeAbsoluteErrorValue","kSubnormalAbsoluteErrorValue","smallErr","largeErr","subnormalErr","absoluteErrorInterval","toExponential","kCorrectlyRoundedNormalCases","kCorrectlyRoundedF64NormalCases","correctlyRoundedInterval","kULPErrorValue","ULPValue","plusOneULP","plusNULP","minusOneULP","minusNULP","num_ulp","ulpInterval","kConstantCorrectlyRoundedExpectation","absInterval","kAcosIntervalCases","acosInterval","kAcoshAlternativeIntervalCases","acoshAlternativeInterval","kAcoshPrimaryIntervalCases","acoshPrimaryInterval","kAsinIntervalInheritedCases","abs_error","Math","asin","asinInterval","kAsinhIntervalCases","asinhInterval","kAtanIntervalCases","pi","third","quarter","sixth","ulp_error","oneULP","atanInterval","kAtanhIntervalCases","atanhInterval","kCeilIntervalCases","ceilInterval","kCosIntervalThirdPiCases","whole","_","cosInterval","kCoshIntervalCases","coshInterval","kDegreesIntervalCases","three_quarters","half","f64","degreesInterval","kExpIntervalCases","abs","expInterval","kExp2IntervalCases","exp2Interval","kFloorIntervalCases","floorInterval","kFractIntervalCases","less_than_one","fractInterval","kInverseSqrtIntervalCases","inverseSqrtInterval","kRootSumSquareExpectionInterval","lengthInterval","kLogIntervalCases","logInterval","kLog2IntervalCases","log2Interval","negationInterval","paramsSubcasesOnly","quantizeToF16Interval","kRadiansIntervalCases","radiansInterval","kRoundIntervalCases","roundInterval","saturateInterval","signInterval","sinInterval","kSinhIntervalCases","sinhInterval","kSqrtIntervalCases","sqrtInterval","kTanIntervalCases","tanInterval","kTanhIntervalCases","tanhInterval","truncInterval","kAdditionInterval64BitsNormalCases","y","additionInterval","kAtan2IntervalCases","atan2Interval","distanceInterval","kDivisionInterval64BitsNormalCases","fp","divisionInterval","kLdexpIntervalCases","i32","ldexpInterval","maxInterval","minInterval","kMultiplicationInterval64BitsNormalCases","multiplicationInterval","kPowIntervalCases","powInterval","kRemainderCases","remainderInterval","edge","stepInterval","kSubtractionInterval64BitsNormalCases","subtractionInterval","z","clampMedianInterval","clampMinMaxInterval","kFmaIntervalCases","fmaInterval","join","kMixImpreciseIntervalCases","mixImpreciseInterval","kMixPreciseIntervalCases","mixPreciseInterval","kSmoothStepIntervalCases","low","high","smoothStepInterval","unpack2x16floatInterval","kZeroBounds","kOneBoundsSnorm","kNegOneBoundsSnorm","kHalfBounds2x16snorm","kNegHalfBounds2x16snorm","unpack2x16snormInterval","kOneBounds","kHalfBounds","unpack2x16unormInterval","kNegOneBounds","kNegHalfBounds","unpack4x8snormInterval","unpack4x8unormInterval","kDotIntervalCases","dotInterval","kNormalizeIntervalCases","normalizeInterval","kCrossIntervalCases","crossInterval","kReflectIntervalCases","reflectInterval","JSON","stringify","combineWithParams","determinantInterval","transposeInterval","additionMatrixMatrixInterval","subtractionMatrixMatrixInterval","multiplicationMatrixMatrixInterval","kMultiplicationMatrixScalarIntervalCases","matrix","scalar","multiplicationMatrixScalarInterval","vector","multiplicationMatrixVectorInterval","multiplicationVectorMatrixInterval","undefined","faceForwardIntervals","fract","modfInterval","kNegativeOneBounds","kRefractIntervalCases","s","r","refractInterval"],"sources":["../../src/unittests/floating_point.spec.ts"],"sourcesContent":["export const description = `\nFloating Point unit tests.\n`;\n\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { objectEquals, unreachable } from '../common/util/util.js';\nimport { kValue } from '../webgpu/util/constants.js';\nimport { FP, FPInterval, FPIntervalParam, IntervalBounds } from '../webgpu/util/floating_point.js';\nimport { map2DArray, oneULPF32, oneULPF16, oneULPF64 } from '../webgpu/util/math.js';\nimport {\n  reinterpretU16AsF16,\n  reinterpretU32AsF32,\n  reinterpretU64AsF64,\n} from '../webgpu/util/reinterpret.js';\n\nimport { UnitTest } from './unit_test.js';\n\nexport const g = makeTestGroup(UnitTest);\n\n/**\n * For ULP purposes, abstract float behaves like f32, so need to swizzle it in\n * for expectations.\n */\nconst kFPTraitForULP = {\n  abstract: 'f32',\n  f32: 'f32',\n  f16: 'f16',\n} as const;\n\n/** Bounds indicating an expectation of unbounded error */\nconst kUnboundedBounds: IntervalBounds = [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY];\n\n/** Interval from kUnboundedBounds */\nconst kUnboundedInterval = {\n  f32: FP.f32.toParam(kUnboundedBounds),\n  f16: FP.f16.toParam(kUnboundedBounds),\n  abstract: FP.abstract.toParam(kUnboundedBounds),\n};\n\n/** @returns a number N * ULP greater than the provided number */\nconst kPlusNULPFunctions = {\n  f32: (x: number, n: number) => {\n    return x + n * oneULPF32(x);\n  },\n  f16: (x: number, n: number) => {\n    return x + n * oneULPF16(x);\n  },\n  abstract: (x: number, n: number) => {\n    return x + n * oneULPF64(x);\n  },\n};\n\n/** @returns a number one ULP greater than the provided number */\nconst kPlusOneULPFunctions = {\n  f32: (x: number): number => {\n    return kPlusNULPFunctions['f32'](x, 1);\n  },\n  f16: (x: number): number => {\n    return kPlusNULPFunctions['f16'](x, 1);\n  },\n  abstract: (x: number): number => {\n    return kPlusNULPFunctions['abstract'](x, 1);\n  },\n};\n\n/** @returns a number N * ULP less than the provided number */\nconst kMinusNULPFunctions = {\n  f32: (x: number, n: number) => {\n    return x - n * oneULPF32(x);\n  },\n  f16: (x: number, n: number) => {\n    return x - n * oneULPF16(x);\n  },\n  abstract: (x: number, n: number) => {\n    return x - n * oneULPF64(x);\n  },\n};\n\n/** @returns a number one ULP less than the provided number */\nconst kMinusOneULPFunctions = {\n  f32: (x: number): number => {\n    return kMinusNULPFunctions['f32'](x, 1);\n  },\n  f16: (x: number): number => {\n    return kMinusNULPFunctions['f16'](x, 1);\n  },\n  abstract: (x: number): number => {\n    return kMinusNULPFunctions['abstract'](x, 1);\n  },\n};\n\n/** @returns the expected IntervalBounds adjusted by the given error function\n *\n * @param expected the bounds to be adjusted\n * @param error error function to adjust the bounds via\n */\nfunction applyError(\n  expected: number | IntervalBounds,\n  error: (n: number) => number\n): IntervalBounds {\n  // Avoiding going through FPInterval to avoid tying this to a specific kind\n  const unpack = (n: number | IntervalBounds): [number, number] => {\n    if (expected instanceof Array) {\n      switch (expected.length) {\n        case 1:\n          return [expected[0], expected[0]];\n        case 2:\n          return [expected[0], expected[1]];\n      }\n      unreachable(`Tried to unpack an IntervalBounds with length other than 1 or 2`);\n    } else {\n      // TS doesn't narrow this to number automatically\n      return [n as number, n as number];\n    }\n  };\n\n  let [begin, end] = unpack(expected);\n\n  begin -= error(begin);\n  end += error(end);\n\n  if (begin === end) {\n    return [begin];\n  }\n  return [begin, end];\n}\n\n// FPInterval\n\ninterface ConstructorCase {\n  input: IntervalBounds;\n  expected: IntervalBounds;\n}\n\ng.test('constructor')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ConstructorCase>(p => {\n        const constants = FP[p.trait].constants();\n        // prettier-ignore\n        const cases: ConstructorCase[] = [\n          // Common cases\n          { input: [0, 10], expected: [0, 10] },\n          { input: [-5, 0], expected: [-5, 0] },\n          { input: [-5, 10], expected: [-5, 10] },\n          { input: [0], expected: [0] },\n          { input: [10], expected: [10] },\n          { input: [-5], expected: [-5] },\n          { input: [2.5], expected: [2.5] },\n          { input: [-1.375], expected: [-1.375] },\n          { input: [-1.375, 2.5], expected: [-1.375, 2.5] },\n\n          // Edges\n          { input: [0, constants.positive.max], expected: [0, constants.positive.max] },\n          { input: [constants.negative.min, 0], expected: [constants.negative.min, 0] },\n          { input: [constants.negative.min, constants.positive.max], expected: [constants.negative.min, constants.positive.max] },\n\n          // Infinities\n          { input: [0, constants.positive.infinity], expected: [0, Number.POSITIVE_INFINITY] },\n          { input: [constants.negative.infinity, 0], expected: [Number.NEGATIVE_INFINITY, 0] },\n          { input: [constants.negative.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n        ];\n\n        // Note: Out of range values are limited to infinities for abstract float, due to abstract\n        // float and 'number' both being f64. So there are no separate OOR tests for abstract float,\n        // otherwise the testing framework will consider them duplicated.\n        if (p.trait !== 'abstract') {\n          // prettier-ignore\n          cases.push(...[\n            // Out of range\n            { input: [0, 2 * constants.positive.max], expected: [0, 2 * constants.positive.max] },\n            { input: [2 * constants.negative.min, 0], expected: [2 * constants.negative.min, 0] },\n            { input: [2 * constants.negative.min, 2 * constants.positive.max], expected: [2 * constants.negative.min, 2 * constants.positive.max] },\n          ] as ConstructorCase[]);\n        }\n\n        return cases;\n      })\n  )\n  .fn(t => {\n    const i = new FPInterval(t.params.trait, ...t.params.input);\n    t.expect(\n      objectEquals(i.bounds(), t.params.expected),\n      `new FPInterval('${t.params.trait}', [${t.params.input}]) returned ${i}. Expected [${t.params.expected}]`\n    );\n  });\n\ninterface ContainsNumberCase {\n  bounds: number | IntervalBounds;\n  value: number;\n  expected: boolean;\n}\n\ng.test('contains_number')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ContainsNumberCase>(p => {\n        const constants = FP[p.trait].constants();\n        // prettier-ignore\n        const cases: ContainsNumberCase[] = [\n          // Common usage\n          { bounds: [0, 10], value: 0, expected: true },\n          { bounds: [0, 10], value: 10, expected: true },\n          { bounds: [0, 10], value: 5, expected: true },\n          { bounds: [0, 10], value: -5, expected: false },\n          { bounds: [0, 10], value: 50, expected: false },\n          { bounds: [0, 10], value: Number.NaN, expected: false },\n          { bounds: [-5, 10], value: 0, expected: true },\n          { bounds: [-5, 10], value: 10, expected: true },\n          { bounds: [-5, 10], value: 5, expected: true },\n          { bounds: [-5, 10], value: -5, expected: true },\n          { bounds: [-5, 10], value: -6, expected: false },\n          { bounds: [-5, 10], value: 50, expected: false },\n          { bounds: [-5, 10], value: -10, expected: false },\n          { bounds: [-1.375, 2.5], value: -10, expected: false },\n          { bounds: [-1.375, 2.5], value: 0.5, expected: true },\n          { bounds: [-1.375, 2.5], value: 10, expected: false },\n\n          // Point\n          { bounds: 0, value: 0, expected: true },\n          { bounds: 0, value: 10, expected: false },\n          { bounds: 0, value: -1000, expected: false },\n          { bounds: 10, value: 10, expected: true },\n          { bounds: 10, value: 0, expected: false },\n          { bounds: 10, value: -10, expected: false },\n          { bounds: 10, value: 11, expected: false },\n\n          // Upper infinity\n          { bounds: [0, constants.positive.infinity], value: constants.positive.min, expected: true },\n          { bounds: [0, constants.positive.infinity], value: constants.positive.max, expected: true },\n          { bounds: [0, constants.positive.infinity], value: constants.positive.infinity, expected: true },\n          { bounds: [0, constants.positive.infinity], value: constants.negative.min, expected: false },\n          { bounds: [0, constants.positive.infinity], value: constants.negative.max, expected: false },\n          { bounds: [0, constants.positive.infinity], value: constants.negative.infinity, expected: false },\n\n          // Lower infinity\n          { bounds: [constants.negative.infinity, 0], value: constants.positive.min, expected: false },\n          { bounds: [constants.negative.infinity, 0], value: constants.positive.max, expected: false },\n          { bounds: [constants.negative.infinity, 0], value: constants.positive.infinity, expected: false },\n          { bounds: [constants.negative.infinity, 0], value: constants.negative.min, expected: true },\n          { bounds: [constants.negative.infinity, 0], value: constants.negative.max, expected: true },\n          { bounds: [constants.negative.infinity, 0], value: constants.negative.infinity, expected: true },\n\n          // Full infinity\n          { bounds: [constants.negative.infinity, constants.positive.infinity], value: constants.positive.min, expected: true },\n          { bounds: [constants.negative.infinity, constants.positive.infinity], value: constants.positive.max, expected: true },\n          { bounds: [constants.negative.infinity, constants.positive.infinity], value: constants.positive.infinity, expected: true },\n          { bounds: [constants.negative.infinity, constants.positive.infinity], value: constants.negative.min, expected: true },\n          { bounds: [constants.negative.infinity, constants.positive.infinity], value: constants.negative.max, expected: true },\n          { bounds: [constants.negative.infinity, constants.positive.infinity], value: constants.negative.infinity, expected: true },\n          { bounds: [constants.negative.infinity, constants.positive.infinity], value: Number.NaN, expected: true },\n\n          // Maximum f32 boundary\n          { bounds: [0, constants.positive.max], value: constants.positive.min, expected: true },\n          { bounds: [0, constants.positive.max], value: constants.positive.max, expected: true },\n          { bounds: [0, constants.positive.max], value: constants.positive.infinity, expected: false },\n          { bounds: [0, constants.positive.max], value: constants.negative.min, expected: false },\n          { bounds: [0, constants.positive.max], value: constants.negative.max, expected: false },\n          { bounds: [0, constants.positive.max], value: constants.negative.infinity, expected: false },\n\n          // Minimum f32 boundary\n          { bounds: [constants.negative.min, 0], value: constants.positive.min, expected: false },\n          { bounds: [constants.negative.min, 0], value: constants.positive.max, expected: false },\n          { bounds: [constants.negative.min, 0], value: constants.positive.infinity, expected: false },\n          { bounds: [constants.negative.min, 0], value: constants.negative.min, expected: true },\n          { bounds: [constants.negative.min, 0], value: constants.negative.max, expected: true },\n          { bounds: [constants.negative.min, 0], value: constants.negative.infinity, expected: false },\n\n          // Subnormals\n          { bounds: [0, constants.positive.min], value: constants.positive.subnormal.min, expected: true },\n          { bounds: [0, constants.positive.min], value: constants.positive.subnormal.max, expected: true },\n          { bounds: [0, constants.positive.min], value: constants.negative.subnormal.min, expected: false },\n          { bounds: [0, constants.positive.min], value: constants.negative.subnormal.max, expected: false },\n          { bounds: [constants.negative.max, 0], value: constants.positive.subnormal.min, expected: false },\n          { bounds: [constants.negative.max, 0], value: constants.positive.subnormal.max, expected: false },\n          { bounds: [constants.negative.max, 0], value: constants.negative.subnormal.min, expected: true },\n          { bounds: [constants.negative.max, 0], value: constants.negative.subnormal.max, expected: true },\n          { bounds: [0, constants.positive.subnormal.min], value: constants.positive.subnormal.min, expected: true },\n          { bounds: [0, constants.positive.subnormal.min], value: constants.positive.subnormal.max, expected: false },\n          { bounds: [0, constants.positive.subnormal.min], value: constants.negative.subnormal.min, expected: false },\n          { bounds: [0, constants.positive.subnormal.min], value: constants.negative.subnormal.max, expected: false },\n          { bounds: [constants.negative.subnormal.max, 0], value: constants.positive.subnormal.min, expected: false },\n          { bounds: [constants.negative.subnormal.max, 0], value: constants.positive.subnormal.max, expected: false },\n          { bounds: [constants.negative.subnormal.max, 0], value: constants.negative.subnormal.min, expected: false },\n          { bounds: [constants.negative.subnormal.max, 0], value: constants.negative.subnormal.max, expected: true },\n        ];\n\n        // Note: Out of range values are limited to infinities for abstract float, due to abstract\n        // float and 'number' both being f64. So there are no separate OOR tests for abstract float,\n        // otherwise the testing framework will consider them duplicated.\n        if (p.trait !== 'abstract') {\n          // prettier-ignore\n          cases.push(...[\n            // Out of range high\n            { bounds: [0, 2 * constants.positive.max], value: constants.positive.min, expected: true },\n            { bounds: [0, 2 * constants.positive.max], value: constants.positive.max, expected: true },\n            { bounds: [0, 2 * constants.positive.max], value: constants.positive.infinity, expected: false },\n            { bounds: [0, 2 * constants.positive.max], value: constants.negative.min, expected: false },\n            { bounds: [0, 2 * constants.positive.max], value: constants.negative.max, expected: false },\n            { bounds: [0, 2 * constants.positive.max], value: constants.negative.infinity, expected: false },\n\n            // Out of range low\n            { bounds: [2 * constants.negative.min, 0], value: constants.positive.min, expected: false },\n            { bounds: [2 * constants.negative.min, 0], value: constants.positive.max, expected: false },\n            { bounds: [2 * constants.negative.min, 0], value: constants.positive.infinity, expected: false },\n            { bounds: [2 * constants.negative.min, 0], value: constants.negative.min, expected: true },\n            { bounds: [2 * constants.negative.min, 0], value: constants.negative.max, expected: true },\n            { bounds: [2 * constants.negative.min, 0], value: constants.negative.infinity, expected: false },\n          ] as ContainsNumberCase[]);\n        }\n\n        return cases;\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const i = trait.toInterval(t.params.bounds);\n    const value = t.params.value;\n    const expected = t.params.expected;\n\n    const got = i.contains(value);\n    t.expect(expected === got, `${i}.contains(${value}) returned ${got}. Expected ${expected}`);\n  });\n\ninterface ContainsIntervalCase {\n  lhs: number | IntervalBounds;\n  rhs: number | IntervalBounds;\n  expected: boolean;\n}\n\ng.test('contains_interval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ContainsIntervalCase>(p => {\n        const constants = FP[p.trait].constants();\n        // prettier-ignore\n        const cases: ContainsIntervalCase[] = [\n          // Common usage\n          { lhs: [-10, 10], rhs: 0, expected: true },\n          { lhs: [-10, 10], rhs: [-1, 0], expected: true },\n          { lhs: [-10, 10], rhs: [0, 2], expected: true },\n          { lhs: [-10, 10], rhs: [-1, 2], expected: true },\n          { lhs: [-10, 10], rhs: [0, 10], expected: true },\n          { lhs: [-10, 10], rhs: [-10, 2], expected: true },\n          { lhs: [-10, 10], rhs: [-10, 10], expected: true },\n          { lhs: [-10, 10], rhs: [-100, 10], expected: false },\n\n          // Upper infinity\n          { lhs: [0, constants.positive.infinity], rhs: 0, expected: true },\n          { lhs: [0, constants.positive.infinity], rhs: [-1, 0], expected: false },\n          { lhs: [0, constants.positive.infinity], rhs: [0, 1], expected: true },\n          { lhs: [0, constants.positive.infinity], rhs: [0, constants.positive.max], expected: true },\n          { lhs: [0, constants.positive.infinity], rhs: [0, constants.positive.infinity], expected: true },\n          { lhs: [0, constants.positive.infinity], rhs: [100, constants.positive.infinity], expected: true },\n          { lhs: [0, constants.positive.infinity], rhs: [Number.NEGATIVE_INFINITY, constants.positive.infinity], expected: false },\n\n          // Lower infinity\n          { lhs: [constants.negative.infinity, 0], rhs: 0, expected: true },\n          { lhs: [constants.negative.infinity, 0], rhs: [-1, 0], expected: true },\n          { lhs: [constants.negative.infinity, 0], rhs: [constants.negative.min, 0], expected: true },\n          { lhs: [constants.negative.infinity, 0], rhs: [0, 1], expected: false },\n          { lhs: [constants.negative.infinity, 0], rhs: [constants.negative.infinity, 0], expected: true },\n          { lhs: [constants.negative.infinity, 0], rhs: [constants.negative.infinity, -100 ], expected: true },\n          { lhs: [constants.negative.infinity, 0], rhs: [constants.negative.infinity, constants.positive.infinity], expected: false },\n\n          // Full infinity\n          { lhs: [constants.negative.infinity, constants.positive.infinity], rhs: 0, expected: true },\n          { lhs: [constants.negative.infinity, constants.positive.infinity], rhs: [-1, 0], expected: true },\n          { lhs: [constants.negative.infinity, constants.positive.infinity], rhs: [0, 1], expected: true },\n          { lhs: [constants.negative.infinity, constants.positive.infinity], rhs: [0, constants.positive.infinity], expected: true },\n          { lhs: [constants.negative.infinity, constants.positive.infinity], rhs: [100, constants.positive.infinity], expected: true },\n          { lhs: [constants.negative.infinity, constants.positive.infinity], rhs: [constants.negative.infinity, 0], expected: true },\n          { lhs: [constants.negative.infinity, constants.positive.infinity], rhs: [constants.negative.infinity, -100 ], expected: true },\n          { lhs: [constants.negative.infinity, constants.positive.infinity], rhs: [constants.negative.infinity, constants.positive.infinity], expected: true },\n\n          // Maximum boundary\n          { lhs: [0, constants.positive.max], rhs: 0, expected: true },\n          { lhs: [0, constants.positive.max], rhs: [-1, 0], expected: false },\n          { lhs: [0, constants.positive.max], rhs: [0, 1], expected: true },\n          { lhs: [0, constants.positive.max], rhs: [0, constants.positive.max], expected: true },\n          { lhs: [0, constants.positive.max], rhs: [0, constants.positive.infinity], expected: false },\n          { lhs: [0, constants.positive.max], rhs: [100, constants.positive.infinity], expected: false },\n          { lhs: [0, constants.positive.max], rhs: [constants.negative.infinity, constants.positive.infinity], expected: false },\n\n          // Minimum boundary\n          { lhs: [constants.negative.min, 0], rhs: [0, 0], expected: true },\n          { lhs: [constants.negative.min, 0], rhs: [-1, 0], expected: true },\n          { lhs: [constants.negative.min, 0], rhs: [constants.negative.min, 0], expected: true },\n          { lhs: [constants.negative.min, 0], rhs: [0, 1], expected: false },\n          { lhs: [constants.negative.min, 0], rhs: [constants.negative.infinity, 0], expected: false },\n          { lhs: [constants.negative.min, 0], rhs: [constants.negative.infinity, -100 ], expected: false },\n          { lhs: [constants.negative.min, 0], rhs: [constants.negative.infinity, constants.positive.infinity], expected: false },\n        ];\n\n        // Note: Out of range values are limited to infinities for abstract float, due to abstract\n        // float and 'number' both being f64. So there are no separate OOR tests for abstract float,\n        // otherwise the testing framework will consider them duplicated.\n        if (p.trait !== 'abstract') {\n          // prettier-ignore\n          cases.push(...[\n            // Out of range high\n            { lhs: [0, 2 * constants.positive.max], rhs: 0, expected: true },\n            { lhs: [0, 2 * constants.positive.max], rhs: [-1, 0], expected: false },\n            { lhs: [0, 2 * constants.positive.max], rhs: [0, 1], expected: true },\n            { lhs: [0, 2 * constants.positive.max], rhs: [0, constants.positive.max], expected: true },\n            { lhs: [0, 2 * constants.positive.max], rhs: [0, constants.positive.infinity], expected: false },\n            { lhs: [0, 2 * constants.positive.max], rhs: [100, constants.positive.infinity], expected: false },\n            { lhs: [0, 2 * constants.positive.max], rhs: [constants.negative.infinity, constants.positive.infinity], expected: false },\n\n            // Out of range low\n            { lhs: [2 * constants.negative.min, 0], rhs: 0, expected: true },\n            { lhs: [2 * constants.negative.min, 0], rhs: [-1, 0], expected: true },\n            { lhs: [2 * constants.negative.min, 0], rhs: [constants.negative.min, 0], expected: true },\n            { lhs: [2 * constants.negative.min, 0], rhs: [0, 1], expected: false },\n            { lhs: [2 * constants.negative.min, 0], rhs: [constants.negative.infinity, 0], expected: false },\n            { lhs: [2 * constants.negative.min, 0], rhs: [constants.negative.infinity, -100 ], expected: false },\n            { lhs: [2 * constants.negative.min, 0], rhs: [constants.negative.infinity, constants.positive.infinity], expected: false },\n          ] as ContainsIntervalCase[]);\n        }\n\n        return cases;\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const lhs = trait.toInterval(t.params.lhs);\n    const rhs = trait.toInterval(t.params.rhs);\n    const expected = t.params.expected;\n\n    const got = lhs.contains(rhs);\n    t.expect(expected === got, `${lhs}.contains(${rhs}) returned ${got}. Expected ${expected}`);\n  });\n\n// Utilities\n\ninterface SpanIntervalsCase {\n  intervals: (number | IntervalBounds)[];\n  expected: number | IntervalBounds;\n}\n\ng.test('spanIntervals')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<SpanIntervalsCase>(p => {\n        const constants = FP[p.trait].constants();\n        // prettier-ignore\n        return [\n          // Single Intervals\n          { intervals: [[0, 10]], expected: [0, 10] },\n          { intervals: [[0, constants.positive.max]], expected: [0, constants.positive.max] },\n          { intervals: [[0, constants.positive.nearest_max]], expected: [0, constants.positive.nearest_max] },\n          { intervals: [[0, constants.positive.infinity]], expected: [0, Number.POSITIVE_INFINITY] },\n          { intervals: [[constants.negative.min, 0]], expected: [constants.negative.min, 0] },\n          { intervals: [[constants.negative.nearest_min, 0]], expected: [constants.negative.nearest_min, 0] },\n          { intervals: [[constants.negative.infinity, 0]], expected: [Number.NEGATIVE_INFINITY, 0] },\n\n          // Double Intervals\n          { intervals: [[0, 1], [2, 5]], expected: [0, 5] },\n          { intervals: [[2, 5], [0, 1]], expected: [0, 5] },\n          { intervals: [[0, 2], [1, 5]], expected: [0, 5] },\n          { intervals: [[0, 5], [1, 2]], expected: [0, 5] },\n          { intervals: [[constants.negative.infinity, 0], [0, constants.positive.infinity]], expected: kUnboundedBounds },\n\n          // Multiple Intervals\n          { intervals: [[0, 1], [2, 3], [4, 5]], expected: [0, 5] },\n          { intervals: [[0, 1], [4, 5], [2, 3]], expected: [0, 5] },\n          { intervals: [[0, 1], [0, 1], [0, 1]], expected: [0, 1] },\n\n          // Point Intervals\n          { intervals: [1], expected: 1 },\n          { intervals: [1, 2], expected: [1, 2] },\n          { intervals: [-10, 2], expected: [-10, 2] },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const intervals = t.params.intervals.map(i => trait.toInterval(i));\n    const expected = trait.toInterval(t.params.expected);\n\n    const got = trait.spanIntervals(...intervals);\n    t.expect(\n      objectEquals(got, expected),\n      `${t.params.trait}.span({${intervals}}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface isVectorCase {\n  input: (number | IntervalBounds | FPIntervalParam)[];\n  expected: boolean;\n}\n\ng.test('isVector')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<isVectorCase>(p => {\n        const trait = FP[p.trait];\n        return [\n          // numbers\n          { input: [1, 2], expected: false },\n          { input: [1, 2, 3], expected: false },\n          { input: [1, 2, 3, 4], expected: false },\n\n          // IntervalBounds\n          { input: [[1], [2]], expected: false },\n          { input: [[1], [2], [3]], expected: false },\n          { input: [[1], [2], [3], [4]], expected: false },\n          {\n            input: [\n              [1, 2],\n              [2, 3],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [1, 2],\n              [2, 3],\n              [3, 4],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [1, 2],\n              [2, 3],\n              [3, 4],\n              [4, 5],\n            ],\n            expected: false,\n          },\n\n          // FPInterval, valid dimensions\n          { input: [trait.toParam([1]), trait.toParam([2])], expected: true },\n          { input: [trait.toParam([1, 2]), trait.toParam([2, 3])], expected: true },\n          {\n            input: [trait.toParam([1]), trait.toParam([2]), trait.toParam([3])],\n            expected: true,\n          },\n          {\n            input: [trait.toParam([1, 2]), trait.toParam([2, 3]), trait.toParam([3, 4])],\n            expected: true,\n          },\n          {\n            input: [trait.toParam([1]), trait.toParam([2]), trait.toParam([3]), trait.toParam([4])],\n            expected: true,\n          },\n          {\n            input: [\n              trait.toParam([1, 2]),\n              trait.toParam([2, 3]),\n              trait.toParam([3, 4]),\n              trait.toParam([4, 5]),\n            ],\n            expected: true,\n          },\n\n          // FPInterval, invalid dimensions\n          { input: [trait.toParam([1])], expected: false },\n          {\n            input: [\n              trait.toParam([1]),\n              trait.toParam([2]),\n              trait.toParam([3]),\n              trait.toParam([4]),\n              trait.toParam([5]),\n            ],\n            expected: false,\n          },\n\n          // Mixed\n          { input: [1, [2]], expected: false },\n          { input: [1, [2], trait.toParam([3])], expected: false },\n          { input: [1, trait.toParam([2]), [3], 4], expected: false },\n          { input: [trait.toParam(1), 2], expected: false },\n          { input: [trait.toParam(1), [2]], expected: false },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const input = t.params.input.map(e => trait.fromParam(e));\n    const expected = t.params.expected;\n\n    const got = trait.isVector(input);\n    t.expect(\n      got === expected,\n      `${t.params.trait}.isVector([${input}]) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface toVectorCase {\n  input: (number | IntervalBounds | FPIntervalParam)[];\n  expected: (number | IntervalBounds)[];\n}\n\ng.test('toVector')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<toVectorCase>(p => {\n        const trait = FP[p.trait];\n        return [\n          // numbers\n          { input: [1, 2], expected: [1, 2] },\n          { input: [1, 2, 3], expected: [1, 2, 3] },\n          { input: [1, 2, 3, 4], expected: [1, 2, 3, 4] },\n\n          // IntervalBounds\n          { input: [[1], [2]], expected: [1, 2] },\n          { input: [[1], [2], [3]], expected: [1, 2, 3] },\n          { input: [[1], [2], [3], [4]], expected: [1, 2, 3, 4] },\n          {\n            input: [\n              [1, 2],\n              [2, 3],\n            ],\n            expected: [\n              [1, 2],\n              [2, 3],\n            ],\n          },\n          {\n            input: [\n              [1, 2],\n              [2, 3],\n              [3, 4],\n            ],\n            expected: [\n              [1, 2],\n              [2, 3],\n              [3, 4],\n            ],\n          },\n          {\n            input: [\n              [1, 2],\n              [2, 3],\n              [3, 4],\n              [4, 5],\n            ],\n            expected: [\n              [1, 2],\n              [2, 3],\n              [3, 4],\n              [4, 5],\n            ],\n          },\n\n          // FPInterval\n          { input: [trait.toParam([1]), trait.toParam([2])], expected: [1, 2] },\n          {\n            input: [trait.toParam([1, 2]), trait.toParam([2, 3])],\n            expected: [\n              [1, 2],\n              [2, 3],\n            ],\n          },\n          {\n            input: [trait.toParam([1]), trait.toParam([2]), trait.toParam([3])],\n            expected: [1, 2, 3],\n          },\n          {\n            input: [trait.toParam([1, 2]), trait.toParam([2, 3]), trait.toParam([3, 4])],\n            expected: [\n              [1, 2],\n              [2, 3],\n              [3, 4],\n            ],\n          },\n          {\n            input: [trait.toParam([1]), trait.toParam([2]), trait.toParam([3]), trait.toParam([4])],\n            expected: [1, 2, 3, 4],\n          },\n          {\n            input: [\n              trait.toParam([1, 2]),\n              trait.toParam([2, 3]),\n              trait.toParam([3, 4]),\n              trait.toParam([4, 5]),\n            ],\n            expected: [\n              [1, 2],\n              [2, 3],\n              [3, 4],\n              [4, 5],\n            ],\n          },\n\n          // Mixed\n          { input: [1, [2]], expected: [1, 2] },\n          { input: [1, [2], trait.toParam([3])], expected: [1, 2, 3] },\n          { input: [1, trait.toParam([2]), [3], 4], expected: [1, 2, 3, 4] },\n          {\n            input: [1, [2], [2, 3], kUnboundedInterval[p.trait]],\n            expected: [1, 2, [2, 3], kUnboundedBounds],\n          },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const input = t.params.input.map(e => trait.fromParam(e));\n    const expected = t.params.expected.map(e => trait.toInterval(e));\n\n    const got = trait.toVector(input);\n    t.expect(\n      objectEquals(got, expected),\n      `${t.params.trait}.toVector([${input}]) returned [${got}]. Expected [${expected}]`\n    );\n  });\n\ninterface isMatrixCase {\n  input: (number | IntervalBounds | FPIntervalParam)[][];\n  expected: boolean;\n}\n\ng.test('isMatrix')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<isMatrixCase>(p => {\n        const trait = FP[p.trait];\n        return [\n          // numbers\n          {\n            input: [\n              [1, 2],\n              [3, 4],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n              [7, 8],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [1, 2, 3],\n              [4, 5, 6],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n              [10, 11, 12],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n              [13, 14, 15, 16],\n            ],\n            expected: false,\n          },\n\n          // IntervalBounds\n          {\n            input: [\n              [[1], [2]],\n              [[3], [4]],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [[1], [2]],\n              [[3], [4]],\n              [[5], [6]],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [[1], [2]],\n              [[3], [4]],\n              [[5], [6]],\n              [[7], [8]],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [[1], [2], [3]],\n              [[4], [5], [6]],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [[1], [2], [3]],\n              [[4], [5], [6]],\n              [[7], [8], [9]],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [[1], [2], [3]],\n              [[4], [5], [6]],\n              [[7], [8], [9]],\n              [[10], [11], [12]],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [[1], [2], [3], [4]],\n              [[5], [6], [7], [8]],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [[1], [2], [3], [4]],\n              [[5], [6], [7], [8]],\n              [[9], [10], [11], [12]],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [[1], [2], [3], [4]],\n              [[5], [6], [7], [8]],\n              [[9], [10], [11], [12]],\n              [[13], [14], [15], [16]],\n            ],\n            expected: false,\n          },\n\n          // FPInterval, valid dimensions\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2)],\n              [trait.toParam(3), trait.toParam(4)],\n            ],\n            expected: true,\n          },\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2)],\n              [trait.toParam(3), trait.toParam(4)],\n              [trait.toParam(5), trait.toParam(6)],\n            ],\n            expected: true,\n          },\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2)],\n              [trait.toParam(3), trait.toParam(4)],\n              [trait.toParam(5), trait.toParam(6)],\n              [trait.toParam(7), trait.toParam(8)],\n            ],\n            expected: true,\n          },\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2), trait.toParam(3)],\n              [trait.toParam(4), trait.toParam(5), trait.toParam(6)],\n            ],\n            expected: true,\n          },\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2), trait.toParam(3)],\n              [trait.toParam(4), trait.toParam(5), trait.toParam(6)],\n              [trait.toParam(7), trait.toParam(8), trait.toParam(9)],\n            ],\n            expected: true,\n          },\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2), trait.toParam(3)],\n              [trait.toParam(4), trait.toParam(5), trait.toParam(6)],\n              [trait.toParam(7), trait.toParam(8), trait.toParam(9)],\n              [trait.toParam(10), trait.toParam(11), trait.toParam(12)],\n            ],\n            expected: true,\n          },\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2), trait.toParam(3), trait.toParam(4)],\n              [trait.toParam(5), trait.toParam(6), trait.toParam(7), trait.toParam(8)],\n            ],\n            expected: true,\n          },\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2), trait.toParam(3), trait.toParam(4)],\n              [trait.toParam(5), trait.toParam(6), trait.toParam(7), trait.toParam(8)],\n              [trait.toParam(9), trait.toParam(10), trait.toParam(11), trait.toParam(12)],\n            ],\n            expected: true,\n          },\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2), trait.toParam(3), trait.toParam(4)],\n              [trait.toParam(5), trait.toParam(6), trait.toParam(7), trait.toParam(8)],\n              [trait.toParam(9), trait.toParam(10), trait.toParam(11), trait.toParam(12)],\n              [trait.toParam(13), trait.toParam(14), trait.toParam(15), trait.toParam(16)],\n            ],\n            expected: true,\n          },\n          {\n            input: [\n              [trait.toParam([1, 2]), trait.toParam([2, 3])],\n              [trait.toParam([3, 4]), trait.toParam([4, 5])],\n            ],\n            expected: true,\n          },\n          {\n            input: [\n              [trait.toParam([1, 2]), trait.toParam([2, 3])],\n              [trait.toParam([3, 4]), trait.toParam([4, 5])],\n              [trait.toParam([5, 6]), trait.toParam([6, 7])],\n            ],\n            expected: true,\n          },\n          {\n            input: [\n              [trait.toParam([1, 2]), trait.toParam([2, 3])],\n              [trait.toParam([3, 4]), trait.toParam([4, 5])],\n              [trait.toParam([5, 6]), trait.toParam([6, 7])],\n              [trait.toParam([7, 8]), trait.toParam([8, 9])],\n            ],\n            expected: true,\n          },\n          {\n            input: [\n              [trait.toParam([1, 2]), trait.toParam([2, 3]), trait.toParam([3, 4])],\n              [trait.toParam([4, 5]), trait.toParam([5, 6]), trait.toParam([6, 7])],\n            ],\n            expected: true,\n          },\n          {\n            input: [\n              [trait.toParam([1, 2]), trait.toParam([2, 3]), trait.toParam([3, 4])],\n              [trait.toParam([4, 5]), trait.toParam([5, 6]), trait.toParam([6, 7])],\n              [trait.toParam([7, 8]), trait.toParam([8, 9]), trait.toParam([9, 10])],\n            ],\n            expected: true,\n          },\n          {\n            input: [\n              [trait.toParam([1, 2]), trait.toParam([2, 3]), trait.toParam([3, 4])],\n              [trait.toParam([4, 5]), trait.toParam([5, 6]), trait.toParam([6, 7])],\n              [trait.toParam([7, 8]), trait.toParam([8, 9]), trait.toParam([9, 10])],\n              [trait.toParam([10, 11]), trait.toParam([11, 12]), trait.toParam([12, 13])],\n            ],\n            expected: true,\n          },\n          {\n            input: [\n              [\n                trait.toParam([1, 2]),\n                trait.toParam([2, 3]),\n                trait.toParam([3, 4]),\n                trait.toParam([4, 5]),\n              ],\n              [\n                trait.toParam([5, 6]),\n                trait.toParam([6, 7]),\n                trait.toParam([7, 8]),\n                trait.toParam([8, 9]),\n              ],\n            ],\n            expected: true,\n          },\n          {\n            input: [\n              [\n                trait.toParam([1, 2]),\n                trait.toParam([2, 3]),\n                trait.toParam([3, 4]),\n                trait.toParam([4, 5]),\n              ],\n              [\n                trait.toParam([5, 6]),\n                trait.toParam([6, 7]),\n                trait.toParam([7, 8]),\n                trait.toParam([8, 9]),\n              ],\n              [\n                trait.toParam([9, 10]),\n                trait.toParam([10, 11]),\n                trait.toParam([11, 12]),\n                trait.toParam([12, 13]),\n              ],\n            ],\n            expected: true,\n          },\n          {\n            input: [\n              [\n                trait.toParam([1, 2]),\n                trait.toParam([2, 3]),\n                trait.toParam([3, 4]),\n                trait.toParam([4, 5]),\n              ],\n              [\n                trait.toParam([5, 6]),\n                trait.toParam([6, 7]),\n                trait.toParam([7, 8]),\n                trait.toParam([8, 9]),\n              ],\n              [\n                trait.toParam([9, 10]),\n                trait.toParam([10, 11]),\n                trait.toParam([11, 12]),\n                trait.toParam([12, 13]),\n              ],\n              [\n                trait.toParam([13, 14]),\n                trait.toParam([14, 15]),\n                trait.toParam([15, 16]),\n                trait.toParam([16, 17]),\n              ],\n            ],\n            expected: true,\n          },\n\n          // FPInterval, invalid dimensions\n          { input: [[trait.toParam(1)]], expected: false },\n          {\n            input: [[trait.toParam(1)], [trait.toParam(3), trait.toParam(4)]],\n            expected: false,\n          },\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2)],\n              [trait.toParam(3), trait.toParam(4), trait.toParam(5)],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2)],\n              [trait.toParam(3), trait.toParam(4)],\n              [trait.toParam(5)],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2)],\n              [trait.toParam(3), trait.toParam(4)],\n              [trait.toParam(5), trait.toParam(6)],\n              [trait.toParam(7), trait.toParam(8)],\n              [trait.toParam(9), trait.toParam(10)],\n            ],\n            expected: false,\n          },\n\n          // Mixed\n          {\n            input: [\n              [1, [2]],\n              [3, 4],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [[1], [2]],\n              [[3], 4],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [1, 2],\n              [trait.toParam([3]), 4],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [[1], trait.toParam([2])],\n              [trait.toParam([3]), trait.toParam([4])],\n            ],\n            expected: false,\n          },\n          {\n            input: [\n              [trait.toParam(1), [2]],\n              [3, 4],\n            ],\n            expected: false,\n          },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const input = t.params.input.map(a => a.map(e => trait.fromParam(e)));\n    const expected = t.params.expected;\n\n    const got = trait.isMatrix(input);\n    t.expect(\n      got === expected,\n      `${t.params.trait}.isMatrix([${input}]) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface toMatrixCase {\n  input: (number | IntervalBounds | FPIntervalParam)[][];\n  expected: (number | IntervalBounds)[][];\n}\n\ng.test('toMatrix')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<toMatrixCase>(p => {\n        const trait = FP[p.trait];\n        return [\n          // numbers\n          {\n            input: [\n              [1, 2],\n              [3, 4],\n            ],\n            expected: [\n              [1, 2],\n              [3, 4],\n            ],\n          },\n          {\n            input: [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n            ],\n            expected: [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n            ],\n          },\n          {\n            input: [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n              [7, 8],\n            ],\n            expected: [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n              [7, 8],\n            ],\n          },\n          {\n            input: [\n              [1, 2, 3],\n              [4, 5, 6],\n            ],\n            expected: [\n              [1, 2, 3],\n              [4, 5, 6],\n            ],\n          },\n          {\n            input: [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n            ],\n            expected: [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n            ],\n          },\n          {\n            input: [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n              [10, 11, 12],\n            ],\n            expected: [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n              [10, 11, 12],\n            ],\n          },\n          {\n            input: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n            ],\n            expected: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n            ],\n          },\n          {\n            input: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n            ],\n            expected: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n            ],\n          },\n          {\n            input: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n              [13, 14, 15, 16],\n            ],\n            expected: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n              [13, 14, 15, 16],\n            ],\n          },\n\n          // IntervalBounds\n          {\n            input: [\n              [[1], [2]],\n              [[3], [4]],\n            ],\n            expected: [\n              [1, 2],\n              [3, 4],\n            ],\n          },\n          {\n            input: [\n              [[1], [2]],\n              [[3], [4]],\n              [[5], [6]],\n            ],\n            expected: [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n            ],\n          },\n          {\n            input: [\n              [[1], [2]],\n              [[3], [4]],\n              [[5], [6]],\n              [[7], [8]],\n            ],\n            expected: [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n              [7, 8],\n            ],\n          },\n          {\n            input: [\n              [[1], [2], [3]],\n              [[4], [5], [6]],\n            ],\n            expected: [\n              [1, 2, 3],\n              [4, 5, 6],\n            ],\n          },\n          {\n            input: [\n              [[1], [2], [3]],\n              [[4], [5], [6]],\n              [[7], [8], [9]],\n            ],\n            expected: [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n            ],\n          },\n          {\n            input: [\n              [[1], [2], [3]],\n              [[4], [5], [6]],\n              [[7], [8], [9]],\n              [[10], [11], [12]],\n            ],\n            expected: [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n              [10, 11, 12],\n            ],\n          },\n          {\n            input: [\n              [[1], [2], [3], [4]],\n              [[5], [6], [7], [8]],\n            ],\n            expected: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n            ],\n          },\n          {\n            input: [\n              [[1], [2], [3], [4]],\n              [[5], [6], [7], [8]],\n              [[9], [10], [11], [12]],\n            ],\n            expected: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n            ],\n          },\n          {\n            input: [\n              [[1], [2], [3], [4]],\n              [[5], [6], [7], [8]],\n              [[9], [10], [11], [12]],\n              [[13], [14], [15], [16]],\n            ],\n            expected: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n              [13, 14, 15, 16],\n            ],\n          },\n\n          // FPInterval\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2)],\n              [trait.toParam(3), trait.toParam(4)],\n            ],\n            expected: [\n              [1, 2],\n              [3, 4],\n            ],\n          },\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2)],\n              [trait.toParam(3), trait.toParam(4)],\n              [trait.toParam(5), trait.toParam(6)],\n            ],\n            expected: [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n            ],\n          },\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2)],\n              [trait.toParam(3), trait.toParam(4)],\n              [trait.toParam(5), trait.toParam(6)],\n              [trait.toParam(7), trait.toParam(8)],\n            ],\n            expected: [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n              [7, 8],\n            ],\n          },\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2), trait.toParam(3)],\n              [trait.toParam(4), trait.toParam(5), trait.toParam(6)],\n            ],\n            expected: [\n              [1, 2, 3],\n              [4, 5, 6],\n            ],\n          },\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2), trait.toParam(3)],\n              [trait.toParam(4), trait.toParam(5), trait.toParam(6)],\n              [trait.toParam(7), trait.toParam(8), trait.toParam(9)],\n            ],\n            expected: [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n            ],\n          },\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2), trait.toParam(3)],\n              [trait.toParam(4), trait.toParam(5), trait.toParam(6)],\n              [trait.toParam(7), trait.toParam(8), trait.toParam(9)],\n              [trait.toParam(10), trait.toParam(11), trait.toParam(12)],\n            ],\n            expected: [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n              [10, 11, 12],\n            ],\n          },\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2), trait.toParam(3), trait.toParam(4)],\n              [trait.toParam(5), trait.toParam(6), trait.toParam(7), trait.toParam(8)],\n            ],\n            expected: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n            ],\n          },\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2), trait.toParam(3), trait.toParam(4)],\n              [trait.toParam(5), trait.toParam(6), trait.toParam(7), trait.toParam(8)],\n              [trait.toParam(9), trait.toParam(10), trait.toParam(11), trait.toParam(12)],\n            ],\n            expected: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n            ],\n          },\n          {\n            input: [\n              [trait.toParam(1), trait.toParam(2), trait.toParam(3), trait.toParam(4)],\n              [trait.toParam(5), trait.toParam(6), trait.toParam(7), trait.toParam(8)],\n              [trait.toParam(9), trait.toParam(10), trait.toParam(11), trait.toParam(12)],\n              [trait.toParam(13), trait.toParam(14), trait.toParam(15), trait.toParam(16)],\n            ],\n            expected: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n              [13, 14, 15, 16],\n            ],\n          },\n\n          {\n            input: [\n              [trait.toParam([1, 2]), trait.toParam([2, 3])],\n              [trait.toParam([3, 4]), trait.toParam([4, 5])],\n            ],\n            expected: [\n              [\n                [1, 2],\n                [2, 3],\n              ],\n              [\n                [3, 4],\n                [4, 5],\n              ],\n            ],\n          },\n          {\n            input: [\n              [trait.toParam([1, 2]), trait.toParam([2, 3])],\n              [trait.toParam([3, 4]), trait.toParam([4, 5])],\n              [trait.toParam([5, 6]), trait.toParam([6, 7])],\n            ],\n            expected: [\n              [\n                [1, 2],\n                [2, 3],\n              ],\n              [\n                [3, 4],\n                [4, 5],\n              ],\n              [\n                [5, 6],\n                [6, 7],\n              ],\n            ],\n          },\n          {\n            input: [\n              [trait.toParam([1, 2]), trait.toParam([2, 3])],\n              [trait.toParam([3, 4]), trait.toParam([4, 5])],\n              [trait.toParam([5, 6]), trait.toParam([6, 7])],\n              [trait.toParam([7, 8]), trait.toParam([8, 9])],\n            ],\n            expected: [\n              [\n                [1, 2],\n                [2, 3],\n              ],\n              [\n                [3, 4],\n                [4, 5],\n              ],\n              [\n                [5, 6],\n                [6, 7],\n              ],\n              [\n                [7, 8],\n                [8, 9],\n              ],\n            ],\n          },\n          {\n            input: [\n              [trait.toParam([1, 2]), trait.toParam([2, 3]), trait.toParam([3, 4])],\n              [trait.toParam([4, 5]), trait.toParam([5, 6]), trait.toParam([6, 7])],\n            ],\n            expected: [\n              [\n                [1, 2],\n                [2, 3],\n                [3, 4],\n              ],\n              [\n                [4, 5],\n                [5, 6],\n                [6, 7],\n              ],\n            ],\n          },\n          {\n            input: [\n              [trait.toParam([1, 2]), trait.toParam([2, 3]), trait.toParam([3, 4])],\n              [trait.toParam([4, 5]), trait.toParam([5, 6]), trait.toParam([6, 7])],\n              [trait.toParam([7, 8]), trait.toParam([8, 9]), trait.toParam([9, 10])],\n            ],\n            expected: [\n              [\n                [1, 2],\n                [2, 3],\n                [3, 4],\n              ],\n              [\n                [4, 5],\n                [5, 6],\n                [6, 7],\n              ],\n              [\n                [7, 8],\n                [8, 9],\n                [9, 10],\n              ],\n            ],\n          },\n          {\n            input: [\n              [trait.toParam([1, 2]), trait.toParam([2, 3]), trait.toParam([3, 4])],\n              [trait.toParam([4, 5]), trait.toParam([5, 6]), trait.toParam([6, 7])],\n              [trait.toParam([7, 8]), trait.toParam([8, 9]), trait.toParam([9, 10])],\n              [trait.toParam([10, 11]), trait.toParam([11, 12]), trait.toParam([12, 13])],\n            ],\n            expected: [\n              [\n                [1, 2],\n                [2, 3],\n                [3, 4],\n              ],\n              [\n                [4, 5],\n                [5, 6],\n                [6, 7],\n              ],\n              [\n                [7, 8],\n                [8, 9],\n                [9, 10],\n              ],\n              [\n                [10, 11],\n                [11, 12],\n                [12, 13],\n              ],\n            ],\n          },\n          {\n            input: [\n              [\n                trait.toParam([1, 2]),\n                trait.toParam([2, 3]),\n                trait.toParam([3, 4]),\n                trait.toParam([4, 5]),\n              ],\n              [\n                trait.toParam([5, 6]),\n                trait.toParam([6, 7]),\n                trait.toParam([7, 8]),\n                trait.toParam([8, 9]),\n              ],\n            ],\n            expected: [\n              [\n                [1, 2],\n                [2, 3],\n                [3, 4],\n                [4, 5],\n              ],\n              [\n                [5, 6],\n                [6, 7],\n                [7, 8],\n                [8, 9],\n              ],\n            ],\n          },\n          {\n            input: [\n              [\n                trait.toParam([1, 2]),\n                trait.toParam([2, 3]),\n                trait.toParam([3, 4]),\n                trait.toParam([4, 5]),\n              ],\n              [\n                trait.toParam([5, 6]),\n                trait.toParam([6, 7]),\n                trait.toParam([7, 8]),\n                trait.toParam([8, 9]),\n              ],\n              [\n                trait.toParam([9, 10]),\n                trait.toParam([10, 11]),\n                trait.toParam([11, 12]),\n                trait.toParam([12, 13]),\n              ],\n            ],\n            expected: [\n              [\n                [1, 2],\n                [2, 3],\n                [3, 4],\n                [4, 5],\n              ],\n              [\n                [5, 6],\n                [6, 7],\n                [7, 8],\n                [8, 9],\n              ],\n              [\n                [9, 10],\n                [10, 11],\n                [11, 12],\n                [12, 13],\n              ],\n            ],\n          },\n          {\n            input: [\n              [\n                trait.toParam([1, 2]),\n                trait.toParam([2, 3]),\n                trait.toParam([3, 4]),\n                trait.toParam([4, 5]),\n              ],\n              [\n                trait.toParam([5, 6]),\n                trait.toParam([6, 7]),\n                trait.toParam([7, 8]),\n                trait.toParam([8, 9]),\n              ],\n              [\n                trait.toParam([9, 10]),\n                trait.toParam([10, 11]),\n                trait.toParam([11, 12]),\n                trait.toParam([12, 13]),\n              ],\n              [\n                trait.toParam([13, 14]),\n                trait.toParam([14, 15]),\n                trait.toParam([15, 16]),\n                trait.toParam([16, 17]),\n              ],\n            ],\n            expected: [\n              [\n                [1, 2],\n                [2, 3],\n                [3, 4],\n                [4, 5],\n              ],\n              [\n                [5, 6],\n                [6, 7],\n                [7, 8],\n                [8, 9],\n              ],\n              [\n                [9, 10],\n                [10, 11],\n                [11, 12],\n                [12, 13],\n              ],\n              [\n                [13, 14],\n                [14, 15],\n                [15, 16],\n                [16, 17],\n              ],\n            ],\n          },\n\n          // Mixed\n          {\n            input: [\n              [1, [2]],\n              [3, 4],\n            ],\n            expected: [\n              [1, 2],\n              [3, 4],\n            ],\n          },\n          {\n            input: [\n              [[1], [2]],\n              [[3], 4],\n            ],\n            expected: [\n              [1, 2],\n              [3, 4],\n            ],\n          },\n          {\n            input: [\n              [1, 2],\n              [trait.toParam([3]), 4],\n            ],\n            expected: [\n              [1, 2],\n              [3, 4],\n            ],\n          },\n          {\n            input: [\n              [[1], trait.toParam([2])],\n              [trait.toParam([3]), trait.toParam([4])],\n            ],\n            expected: [\n              [1, 2],\n              [3, 4],\n            ],\n          },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const input = map2DArray(t.params.input, e => trait.fromParam(e));\n    const expected = map2DArray(t.params.expected, e => trait.toInterval(e));\n\n    const got = trait.toMatrix(input);\n    t.expect(\n      objectEquals(got, expected),\n      `${t.params.trait}.toMatrix([${input}]) returned [${got}]. Expected [${expected}]`\n    );\n  });\n\n// API - Fundamental Error Intervals\n\ninterface AbsoluteErrorCase {\n  value: number;\n  error: number;\n  expected: number | IntervalBounds;\n}\n\n// Special values used for testing absolute error interval\n// A small absolute error value is a representable value x that much smaller than 1.0,\n// but 1.0 +/- x is still exactly representable.\nconst kSmallAbsoluteErrorValue = {\n  f32: 2 ** -11, // Builtin cos and sin has a absolute error 2**-11 for f32\n  f16: 2 ** -7, // Builtin cos and sin has a absolute error 2**-7 for f16\n} as const;\n// A large absolute error value is a representable value x that much smaller than maximum\n// positive, but positive.max - x is still exactly representable.\nconst kLargeAbsoluteErrorValue = {\n  f32: 2 ** 110, // f32.positive.max - 2**110 = 3.4028104e+38 = 0x7f7fffbf in f32\n  f16: 2 ** 10, // f16.positive.max - 2**10 = 64480 = 0x7bdf in f16\n} as const;\n// A subnormal absolute error value is a subnormal representable value x of kind, which ensures\n// that positive.subnormal.min +/- x is still exactly representable.\nconst kSubnormalAbsoluteErrorValue = {\n  f32: 2 ** -140, // f32 0x00000200\n  f16: 2 ** -20, // f16 0x0010\n} as const;\n\ng.test('absoluteErrorInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<AbsoluteErrorCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        const smallErr = kSmallAbsoluteErrorValue[p.trait];\n        const largeErr = kLargeAbsoluteErrorValue[p.trait];\n        const subnormalErr = kSubnormalAbsoluteErrorValue[p.trait];\n        // prettier-ignore\n        return [\n          // Edge Cases\n          // 1. Interval around infinity would be kUnboundedBounds\n          { value: constants.positive.infinity, error: 0, expected: kUnboundedBounds },\n          { value: constants.positive.infinity, error: largeErr, expected: kUnboundedBounds },\n          { value: constants.positive.infinity, error: 1, expected: kUnboundedBounds },\n          { value: constants.negative.infinity, error: 0, expected: kUnboundedBounds },\n          { value: constants.negative.infinity, error: largeErr, expected: kUnboundedBounds },\n          { value: constants.negative.infinity, error: 1, expected: kUnboundedBounds },\n          // 2. Interval around largest finite positive/negative\n          { value: constants.positive.max, error: 0, expected: constants.positive.max },\n          { value: constants.positive.max, error: largeErr, expected: kUnboundedBounds},\n          { value: constants.positive.max, error: constants.positive.max, expected: kUnboundedBounds},\n          { value: constants.negative.min, error: 0, expected: constants.negative.min },\n          { value: constants.negative.min, error: largeErr, expected: kUnboundedBounds},\n          { value: constants.negative.min, error: constants.positive.max, expected: kUnboundedBounds},\n          // 3. Interval around small but normal center, center should not get flushed.\n          { value: constants.positive.min, error: 0, expected: constants.positive.min },\n          { value: constants.positive.min, error: smallErr, expected: [constants.positive.min - smallErr, constants.positive.min + smallErr]},\n          { value: constants.positive.min, error: 1, expected: [constants.positive.min - 1, constants.positive.min + 1]},\n          { value: constants.negative.max, error: 0, expected: constants.negative.max },\n          { value: constants.negative.max, error: smallErr, expected: [constants.negative.max - smallErr, constants.negative.max + smallErr]},\n          { value: constants.negative.max, error: 1, expected: [constants.negative.max - 1, constants.negative.max + 1] },\n          // 4. Subnormals, center can be flushed to 0.0\n          { value: constants.positive.subnormal.max, error: 0, expected: [0, constants.positive.subnormal.max] },\n          { value: constants.positive.subnormal.max, error: subnormalErr, expected: [-subnormalErr, constants.positive.subnormal.max + subnormalErr]},\n          { value: constants.positive.subnormal.max, error: smallErr, expected: [-smallErr, constants.positive.subnormal.max + smallErr]},\n          { value: constants.positive.subnormal.max, error: 1, expected: [-1, constants.positive.subnormal.max + 1]},\n          { value: constants.positive.subnormal.min, error: 0, expected: [0, constants.positive.subnormal.min] },\n          { value: constants.positive.subnormal.min, error: subnormalErr, expected: [-subnormalErr, constants.positive.subnormal.min + subnormalErr]},\n          { value: constants.positive.subnormal.min, error: smallErr, expected: [-smallErr, constants.positive.subnormal.min + smallErr]},\n          { value: constants.positive.subnormal.min, error: 1, expected: [-1, constants.positive.subnormal.min + 1] },\n          { value: constants.negative.subnormal.min, error: 0, expected: [constants.negative.subnormal.min, 0] },\n          { value: constants.negative.subnormal.min, error: subnormalErr, expected: [constants.negative.subnormal.min - subnormalErr, subnormalErr] },\n          { value: constants.negative.subnormal.min, error: smallErr, expected: [constants.negative.subnormal.min - smallErr, smallErr] },\n          { value: constants.negative.subnormal.min, error: 1, expected: [constants.negative.subnormal.min - 1, 1] },\n          { value: constants.negative.subnormal.max, error: 0, expected: [constants.negative.subnormal.max, 0] },\n          { value: constants.negative.subnormal.max, error: subnormalErr, expected: [constants.negative.subnormal.max - subnormalErr, subnormalErr] },\n          { value: constants.negative.subnormal.max, error: smallErr, expected: [constants.negative.subnormal.max - smallErr, smallErr] },\n          { value: constants.negative.subnormal.max, error: 1, expected: [constants.negative.subnormal.max - 1, 1] },\n\n          // 64-bit subnormals, expected to be treated as 0.0 or smallest subnormal of kind.\n          { value: reinterpretU64AsF64(0x0000_0000_0000_0001n), error: 0, expected: [0, constants.positive.subnormal.min] },\n          { value: reinterpretU64AsF64(0x0000_0000_0000_0001n), error: subnormalErr, expected: [-subnormalErr, constants.positive.subnormal.min + subnormalErr] },\n          // Note that f32 minimum subnormal is so smaller than 1.0, adding them together may result in the f64 results 1.0.\n          { value: reinterpretU64AsF64(0x0000_0000_0000_0001n), error: 1, expected: [-1, constants.positive.subnormal.min + 1] },\n          { value: reinterpretU64AsF64(0x0000_0000_0000_0002n), error: 0, expected: [0, constants.positive.subnormal.min] },\n          { value: reinterpretU64AsF64(0x0000_0000_0000_0002n), error: subnormalErr, expected: [-subnormalErr, constants.positive.subnormal.min + subnormalErr] },\n          { value: reinterpretU64AsF64(0x0000_0000_0000_0002n), error: 1, expected: [-1, constants.positive.subnormal.min + 1] },\n          { value: reinterpretU64AsF64(0x800f_ffff_ffff_ffffn), error: 0, expected: [constants.negative.subnormal.max, 0] },\n          { value: reinterpretU64AsF64(0x800f_ffff_ffff_ffffn), error: subnormalErr, expected: [constants.negative.subnormal.max - subnormalErr, subnormalErr] },\n          { value: reinterpretU64AsF64(0x800f_ffff_ffff_ffffn), error: 1, expected: [constants.negative.subnormal.max - 1, 1] },\n          { value: reinterpretU64AsF64(0x800f_ffff_ffff_fffen), error: 0, expected: [constants.negative.subnormal.max, 0] },\n          { value: reinterpretU64AsF64(0x800f_ffff_ffff_fffen), error: subnormalErr, expected: [constants.negative.subnormal.max - subnormalErr, subnormalErr] },\n          { value: reinterpretU64AsF64(0x800f_ffff_ffff_fffen), error: 1, expected: [constants.negative.subnormal.max - 1, 1] },\n\n          // Zero\n          { value: 0, error: 0, expected: 0 },\n          { value: 0, error: smallErr, expected: [-smallErr, smallErr] },\n          { value: 0, error: 1, expected: [-1, 1] },\n\n          // Two\n          { value: 2, error: 0, expected: 2 },\n          { value: 2, error: smallErr, expected: [2 - smallErr, 2 + smallErr] },\n          { value: 2, error: 1, expected: [1, 3] },\n          { value: -2, error: 0, expected: -2 },\n          { value: -2, error: smallErr, expected: [-2 - smallErr, -2 + smallErr] },\n          { value: -2, error: 1, expected: [-3, -1] },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.absoluteErrorInterval(t.params.value, t.params.error);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.absoluteErrorInterval(${t.params.value}, ${\n        t.params.error\n      }) returned ${got} (${got.begin.toExponential()}, ${got.end.toExponential()}). Expected ${expected}`\n    );\n  });\n\ninterface CorrectlyRoundedCase {\n  value: number;\n  expected: number | IntervalBounds;\n}\n\n// Correctly rounded cases that input values are exactly representable normal values of target type\n// prettier-ignore\nconst kCorrectlyRoundedNormalCases = {\n  f32: [\n    { value: 0, expected: [0, 0] },\n    { value: reinterpretU32AsF32(0x03800000), expected: reinterpretU32AsF32(0x03800000) },\n    { value: reinterpretU32AsF32(0x03800001), expected: reinterpretU32AsF32(0x03800001) },\n    { value: reinterpretU32AsF32(0x83800000), expected: reinterpretU32AsF32(0x83800000) },\n    { value: reinterpretU32AsF32(0x83800001), expected: reinterpretU32AsF32(0x83800001) },\n  ] as CorrectlyRoundedCase[],\n  f16: [\n    { value: 0, expected: [0, 0] },\n    { value: reinterpretU16AsF16(0x0c00), expected: reinterpretU16AsF16(0x0c00) },\n    { value: reinterpretU16AsF16(0x0c01), expected: reinterpretU16AsF16(0x0c01) },\n    { value: reinterpretU16AsF16(0x8c00), expected: reinterpretU16AsF16(0x8c00) },\n    { value: reinterpretU16AsF16(0x8c01), expected: reinterpretU16AsF16(0x8c01) },\n  ] as CorrectlyRoundedCase[],\n} as const;\n\n// 64-bit normals that fall between two conjunction normal values in target type\nconst kCorrectlyRoundedF64NormalCases = [\n  {\n    value: reinterpretU64AsF64(0x3ff0_0000_0000_0001n),\n    expected: {\n      f32: [reinterpretU32AsF32(0x3f800000), reinterpretU32AsF32(0x3f800001)],\n      f16: [reinterpretU16AsF16(0x3c00), reinterpretU16AsF16(0x3c01)],\n    },\n  },\n  {\n    value: reinterpretU64AsF64(0x3ff0_0000_0000_0002n),\n    expected: {\n      f32: [reinterpretU32AsF32(0x3f800000), reinterpretU32AsF32(0x3f800001)],\n      f16: [reinterpretU16AsF16(0x3c00), reinterpretU16AsF16(0x3c01)],\n    },\n  },\n  {\n    value: reinterpretU64AsF64(0x3ff0_0800_0000_0010n),\n    expected: {\n      f32: [reinterpretU32AsF32(0x3f804000), reinterpretU32AsF32(0x3f804001)],\n      f16: [reinterpretU16AsF16(0x3c02), reinterpretU16AsF16(0x3c03)],\n    },\n  },\n  {\n    value: reinterpretU64AsF64(0x3ff0_1000_0000_0020n),\n    expected: {\n      f32: [reinterpretU32AsF32(0x3f808000), reinterpretU32AsF32(0x3f808001)],\n      f16: [reinterpretU16AsF16(0x3c04), reinterpretU16AsF16(0x3c05)],\n    },\n  },\n  {\n    value: reinterpretU64AsF64(0xbff0_0000_0000_0001n),\n    expected: {\n      f32: [reinterpretU32AsF32(0xbf800001), reinterpretU32AsF32(0xbf800000)],\n      f16: [reinterpretU16AsF16(0xbc01), reinterpretU16AsF16(0xbc00)],\n    },\n  },\n  {\n    value: reinterpretU64AsF64(0xbff0_0000_0000_0002n),\n    expected: {\n      f32: [reinterpretU32AsF32(0xbf800001), reinterpretU32AsF32(0xbf800000)],\n      f16: [reinterpretU16AsF16(0xbc01), reinterpretU16AsF16(0xbc00)],\n    },\n  },\n  {\n    value: reinterpretU64AsF64(0xbff0_0800_0000_0010n),\n    expected: {\n      f32: [reinterpretU32AsF32(0xbf804001), reinterpretU32AsF32(0xbf804000)],\n      f16: [reinterpretU16AsF16(0xbc03), reinterpretU16AsF16(0xbc02)],\n    },\n  },\n  {\n    value: reinterpretU64AsF64(0xbff0_1000_0000_0020n),\n    expected: {\n      f32: [reinterpretU32AsF32(0xbf808001), reinterpretU32AsF32(0xbf808000)],\n      f16: [reinterpretU16AsF16(0xbc05), reinterpretU16AsF16(0xbc04)],\n    },\n  },\n] as const;\n\ng.test('correctlyRoundedInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<CorrectlyRoundedCase>(p => {\n        const constants = FP[p.trait].constants();\n        // prettier-ignore\n        return [\n          // Edge Cases\n          { value: constants.positive.infinity, expected: kUnboundedBounds },\n          { value: constants.negative.infinity, expected: kUnboundedBounds },\n          { value: constants.positive.max, expected: constants.positive.max },\n          { value: constants.negative.min, expected: constants.negative.min },\n          { value: constants.positive.min, expected: constants.positive.min },\n          { value: constants.negative.max, expected: constants.negative.max },\n\n          // Subnormals\n          { value: constants.positive.subnormal.min, expected: [0, constants.positive.subnormal.min] },\n          { value: constants.positive.subnormal.max, expected: [0, constants.positive.subnormal.max] },\n          { value: constants.negative.subnormal.min, expected: [constants.negative.subnormal.min, 0] },\n          { value: constants.negative.subnormal.max, expected: [constants.negative.subnormal.max, 0] },\n\n          // 64-bit subnormals should be rounded down to 0 or up to smallest subnormal\n          { value: reinterpretU64AsF64(0x0000_0000_0000_0001n), expected: [0, constants.positive.subnormal.min] },\n          { value: reinterpretU64AsF64(0x0000_0000_0000_0002n), expected: [0, constants.positive.subnormal.min] },\n          { value: reinterpretU64AsF64(0x800f_ffff_ffff_ffffn), expected: [constants.negative.subnormal.max, 0] },\n          { value: reinterpretU64AsF64(0x800f_ffff_ffff_fffen), expected: [constants.negative.subnormal.max, 0] },\n\n          // Normals\n          ...kCorrectlyRoundedNormalCases[p.trait],\n\n          // 64-bit normals that fall between two conjunction normal values in target type\n          ...kCorrectlyRoundedF64NormalCases.map(t => { return {value: t.value, expected: t.expected[p.trait]} as CorrectlyRoundedCase;}),\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.correctlyRoundedInterval(t.params.value);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.correctlyRoundedInterval(${t.params.value}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface ULPCase {\n  value: number;\n  num_ulp: number;\n  expected: number | IntervalBounds;\n}\n\n// Special values used for testing ULP error interval\nconst kULPErrorValue = {\n  f32: 4096, // 4096 ULP is required for atan accuracy on f32\n  f16: 5, // 5 ULP is required for atan accuracy on f16\n};\n\ng.test('ulpInterval')\n  .params(u =>\n    u\n      .combine('trait', ['abstract', 'f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ULPCase>(p => {\n        const trait = kFPTraitForULP[p.trait];\n        const constants = FP[trait].constants();\n        const ULPValue = kULPErrorValue[trait];\n        const plusOneULP = kPlusOneULPFunctions[trait];\n        const plusNULP = kPlusNULPFunctions[trait];\n        const minusOneULP = kMinusOneULPFunctions[trait];\n        const minusNULP = kMinusNULPFunctions[trait];\n        // prettier-ignore\n        return [\n          // Edge Cases\n          { value: constants.positive.infinity, num_ulp: 0, expected: kUnboundedBounds },\n          { value: constants.positive.infinity, num_ulp: 1, expected: kUnboundedBounds },\n          { value: constants.positive.infinity, num_ulp: ULPValue, expected: kUnboundedBounds },\n          { value: constants.negative.infinity, num_ulp: 0, expected: kUnboundedBounds },\n          { value: constants.negative.infinity, num_ulp: 1, expected: kUnboundedBounds },\n          { value: constants.negative.infinity, num_ulp: ULPValue, expected: kUnboundedBounds },\n          { value: constants.positive.max, num_ulp: 0, expected: constants.positive.max },\n          { value: constants.positive.max, num_ulp: 1, expected: kUnboundedBounds },\n          { value: constants.positive.max, num_ulp: ULPValue, expected: kUnboundedBounds },\n          { value: constants.positive.min, num_ulp: 0, expected: constants.positive.min },\n          { value: constants.positive.min, num_ulp: 1, expected: [0, plusOneULP(constants.positive.min)] },\n          { value: constants.positive.min, num_ulp: ULPValue, expected: [0, plusNULP(constants.positive.min, ULPValue)] },\n          { value: constants.negative.min, num_ulp: 0, expected: constants.negative.min },\n          { value: constants.negative.min, num_ulp: 1, expected: kUnboundedBounds },\n          { value: constants.negative.min, num_ulp: ULPValue, expected: kUnboundedBounds },\n          { value: constants.negative.max, num_ulp: 0, expected: constants.negative.max },\n          { value: constants.negative.max, num_ulp: 1, expected: [minusOneULP(constants.negative.max), 0] },\n          { value: constants.negative.max, num_ulp: ULPValue, expected: [minusNULP(constants.negative.max, ULPValue), 0] },\n\n          // Subnormals\n          { value: constants.positive.subnormal.max, num_ulp: 0, expected: [0, constants.positive.subnormal.max] },\n          { value: constants.positive.subnormal.max, num_ulp: 1, expected: [minusOneULP(0), plusOneULP(constants.positive.subnormal.max)] },\n          { value: constants.positive.subnormal.max, num_ulp: ULPValue, expected: [minusNULP(0, ULPValue), plusNULP(constants.positive.subnormal.max, ULPValue)] },\n          { value: constants.positive.subnormal.min, num_ulp: 0, expected: [0, constants.positive.subnormal.min] },\n          { value: constants.positive.subnormal.min, num_ulp: 1, expected: [minusOneULP(0), plusOneULP(constants.positive.subnormal.min)] },\n          { value: constants.positive.subnormal.min, num_ulp: ULPValue, expected: [minusNULP(0, ULPValue), plusNULP(constants.positive.subnormal.min, ULPValue)] },\n          { value: constants.negative.subnormal.min, num_ulp: 0, expected: [constants.negative.subnormal.min, 0] },\n          { value: constants.negative.subnormal.min, num_ulp: 1, expected: [minusOneULP(constants.negative.subnormal.min), plusOneULP(0)] },\n          { value: constants.negative.subnormal.min, num_ulp: ULPValue, expected: [minusNULP(constants.negative.subnormal.min, ULPValue), plusNULP(0, ULPValue)] },\n          { value: constants.negative.subnormal.max, num_ulp: 0, expected: [constants.negative.subnormal.max, 0] },\n          { value: constants.negative.subnormal.max, num_ulp: 1, expected: [minusOneULP(constants.negative.subnormal.max), plusOneULP(0)] },\n          { value: constants.negative.subnormal.max, num_ulp: ULPValue, expected: [minusNULP(constants.negative.subnormal.max, ULPValue), plusNULP(0, ULPValue)] },\n\n          // 64-bit subnormals\n          { value: reinterpretU64AsF64(0x0000_0000_0000_0001n), num_ulp: 0, expected: [0, constants.positive.subnormal.min] },\n          { value: reinterpretU64AsF64(0x0000_0000_0000_0001n), num_ulp: 1, expected: [minusOneULP(0), plusOneULP(constants.positive.subnormal.min)] },\n          { value: reinterpretU64AsF64(0x0000_0000_0000_0001n), num_ulp: ULPValue, expected: [minusNULP(0, ULPValue), plusNULP(constants.positive.subnormal.min, ULPValue)] },\n          { value: reinterpretU64AsF64(0x0000_0000_0000_0002n), num_ulp: 0, expected: [0, constants.positive.subnormal.min] },\n          { value: reinterpretU64AsF64(0x0000_0000_0000_0002n), num_ulp: 1, expected: [minusOneULP(0), plusOneULP(constants.positive.subnormal.min)] },\n          { value: reinterpretU64AsF64(0x0000_0000_0000_0002n), num_ulp: ULPValue, expected: [minusNULP(0, ULPValue), plusNULP(constants.positive.subnormal.min, ULPValue)] },\n          { value: reinterpretU64AsF64(0x800f_ffff_ffff_ffffn), num_ulp: 0, expected: [constants.negative.subnormal.max, 0] },\n          { value: reinterpretU64AsF64(0x800f_ffff_ffff_ffffn), num_ulp: 1, expected: [minusOneULP(constants.negative.subnormal.max), plusOneULP(0)] },\n          { value: reinterpretU64AsF64(0x800f_ffff_ffff_ffffn), num_ulp: ULPValue, expected: [minusNULP(constants.negative.subnormal.max, ULPValue), plusNULP(0, ULPValue)] },\n          { value: reinterpretU64AsF64(0x800f_ffff_ffff_fffen), num_ulp: 0, expected: [constants.negative.subnormal.max, 0] },\n          { value: reinterpretU64AsF64(0x800f_ffff_ffff_fffen), num_ulp: 1, expected: [minusOneULP(constants.negative.subnormal.max), plusOneULP(0)] },\n          { value: reinterpretU64AsF64(0x800f_ffff_ffff_fffen), num_ulp: ULPValue, expected: [minusNULP(constants.negative.subnormal.max, ULPValue), plusNULP(0, ULPValue)] },\n\n          // Zero\n          { value: 0, num_ulp: 0, expected: 0 },\n          { value: 0, num_ulp: 1, expected: [minusOneULP(0), plusOneULP(0)] },\n          { value: 0, num_ulp: ULPValue, expected: [minusNULP(0, ULPValue), plusNULP(0, ULPValue)] },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.ulpInterval(t.params.value, t.params.num_ulp);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.ulpInterval(${t.params.value}, ${t.params.num_ulp}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// API - Acceptance Intervals\n// List of frequently used JS number in test cases, which are not exactly representable in f32 or f16.\ntype ConstantNumberFrequentlyUsedInCases = '0.1' | '-0.1' | '1.9' | '-1.9';\n\n// Correctly rounded expectation of frequently used JS Number value in test cases\nconst kConstantCorrectlyRoundedExpectation = {\n  f32: {\n    // 0.1 falls between f32 0x3DCCCCCC and 0x3DCCCCCD\n    '0.1': [reinterpretU32AsF32(0x3dcccccc), reinterpretU32AsF32(0x3dcccccd)],\n    // -0.1 falls between f32 0xBDCCCCCD and 0xBDCCCCCC\n    '-0.1': [reinterpretU32AsF32(0xbdcccccd), reinterpretU32AsF32(0xbdcccccc)],\n    // 1.9 falls between f32 0x3FF33333 and 0x3FF33334\n    '1.9': [reinterpretU32AsF32(0x3ff33333), reinterpretU32AsF32(0x3ff33334)],\n    // -1.9 falls between f32 0xBFF33334 and 0xBFF33333\n    '-1.9': [reinterpretU32AsF32(0xbff33334), reinterpretU32AsF32(0xbff33333)],\n  } as { [value in ConstantNumberFrequentlyUsedInCases]: IntervalBounds },\n  f16: {\n    // 0.1 falls between f16 0x2E66 and 0x2E67\n    '0.1': [reinterpretU16AsF16(0x2e66), reinterpretU16AsF16(0x2e67)],\n    // -0.1 falls between f16 0xAE67 and 0xAE66\n    '-0.1': [reinterpretU16AsF16(0xae67), reinterpretU16AsF16(0xae66)],\n    // 1.9 falls between f16 0x3F99 and 0x3F9A\n    '1.9': [reinterpretU16AsF16(0x3f99), reinterpretU16AsF16(0x3f9a)],\n    // 1.9 falls between f16 0xBF9A and 0xBF99\n    '-1.9': [reinterpretU16AsF16(0xbf9a), reinterpretU16AsF16(0xbf99)],\n  } as { [value in ConstantNumberFrequentlyUsedInCases]: IntervalBounds },\n  // Since abstract is actually f64 and JS number is also f64, the JS number value will map to\n  // identical abstracty value without rounded.\n  abstract: {\n    '0.1': 0.1,\n    '-0.1': -0.1,\n    '1.9': 1.9,\n    '-1.9': -1.9,\n  } as { [value in ConstantNumberFrequentlyUsedInCases]: number },\n} as const;\n\ninterface ScalarToIntervalCase {\n  input: number;\n  expected: number | IntervalBounds;\n}\n\ng.test('absInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const constants = FP[p.trait].constants();\n        // prettier-ignore\n        return [\n          // Common usages\n          { input: 1, expected: 1 },\n          { input: -1, expected: 1 },\n          // abs(+/-0.1) is correctly rounded interval of 0.1\n          { input: 0.1, expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1']},\n          { input: -0.1, expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1']},\n          // abs(+/-1.9) is correctly rounded interval of 1.9\n          { input: 1.9, expected: kConstantCorrectlyRoundedExpectation[p.trait]['1.9']},\n          { input: -1.9, expected: kConstantCorrectlyRoundedExpectation[p.trait]['1.9']},\n\n          // Edge cases\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.positive.max, expected: constants.positive.max },\n          { input: constants.positive.min, expected: constants.positive.min },\n          { input: constants.negative.min, expected: constants.positive.max },\n          { input: constants.negative.max, expected: constants.positive.min },\n\n          // Subnormals\n          { input: constants.positive.subnormal.max, expected: [0, constants.positive.subnormal.max] },\n          { input: constants.positive.subnormal.min, expected: [0, constants.positive.subnormal.min] },\n          { input: constants.negative.subnormal.min, expected: [0, constants.positive.subnormal.max] },\n          { input: constants.negative.subnormal.max, expected: [0, constants.positive.subnormal.min] },\n\n          // Zero\n          { input: 0, expected: 0 },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.absInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.absInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Acos expectation intervals are bounded by both inherited atan2(sqrt(1.0 - x*x), x) and absolute error.\n// Atan2 introduce 4096ULP for f32 and 5ULP for f16, and sqrt inherited from 1.0/inverseSqrt.\n// prettier-ignore\nconst kAcosIntervalCases = {\n  f32: [\n    { input: kPlusOneULPFunctions['f32'](-1), expected: [reinterpretU32AsF32(0x4048fa32), reinterpretU32AsF32(0x40491bdb)] },  // ~π\n    { input: -1/2, expected: [reinterpretU32AsF32(0x4005fa90), reinterpretU32AsF32(0x40061a93)] },  // ~2π/3\n    { input: 1/2, expected: [reinterpretU32AsF32(0x3f85fa8f), reinterpretU32AsF32(0x3f861a94)] },  // ~π/3\n    // Input case to get smallest well-defined expected result, the expectation interval is bounded\n    // by ULP (lower boundary) and absolute error (upper boundary).\n    // f32 1.0-1ULP=0x3F7FFFFF=0.9999999403953552,\n    // acos(0.9999999403953552)=3.4526698478747995220159699019994e-4 rounded to f32 0x39B504F3 or 0x39B504F4,\n    // absolute error interval upper boundary 0x39B504F4+6.77e-5=0.00041296700619608164 i.e. f64 0x3F3B_106F_C933_4FB9.\n    { input: kMinusOneULPFunctions['f32'](1), expected: [reinterpretU64AsF64(0x3f2f_fdff_6000_0000n), reinterpretU64AsF64(0x3f3b_106f_c933_4fb9n)] },  // ~0.0003\n  ] as ScalarToIntervalCase[],\n  f16: [\n    { input: kPlusOneULPFunctions['f16'](-1), expected: [reinterpretU16AsF16(0x4233), reinterpretU16AsF16(0x4243)] },  // ~π\n    { input: -1/2, expected: [reinterpretU16AsF16(0x402a), reinterpretU16AsF16(0x4037)] },  // ~2π/3\n    { input: 1/2, expected: [reinterpretU16AsF16(0x3c29), reinterpretU16AsF16(0x3c38)] },  // ~π/3\n    // Input case to get smallest well-defined expected result, the expectation interval is bounded\n    // by ULP (lower boundary) and absolute error (upper boundary).\n    // f16 1.0-1ULP=0x3BFF=0.99951171875,\n    // acos(0.99951171875)=0.03125127170547389912035676677648 rounded to f16 0x2800 or 0x2801,\n    // absolute error interval upper boundary 0x2801+3.91e-3=0.035190517578125 i.e. f64 0x3FA2_047D_D441_3554.\n    { input: kMinusOneULPFunctions['f16'](1), expected: [reinterpretU16AsF16(0x259d), reinterpretU64AsF64(0x3fa2_047d_d441_3554n)] },  // ~0.03\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('acosInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          // The acceptance interval @ x = -1 and 1 is kUnboundedBounds, because\n          // sqrt(1 - x*x) = sqrt(0), and sqrt is defined in terms of inverseqrt\n          // The acceptance interval @ x = 0 is kUnboundedBounds, because atan2 is not\n          // well-defined/implemented at 0.\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.min, expected: kUnboundedBounds },\n          { input: -1, expected: kUnboundedBounds },\n          { input: 0, expected: kUnboundedBounds },\n          { input: 1, expected: kUnboundedBounds },\n          { input: constants.positive.max, expected: kUnboundedBounds },\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n\n          // Cases that bounded by absolute error and inherited from atan2(sqrt(1-x*x), x). Note that\n          // even x is very close to 1.0 and the expected result is close to 0.0, the expected\n          // interval is still bounded by ULP as well as absolute error, specifically lower boundary\n          // comes from ULP error and upper boundary comes from absolute error in those cases.\n          ...kAcosIntervalCases[p.trait],\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.acosInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.acosInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Some of these are hard coded, since the error intervals are difficult to express in a closed\n// human-readable form due to the inherited nature of the errors.\n// prettier-ignore\nconst kAcoshAlternativeIntervalCases = {\n  f32: [\n    { input: 1.1, expected: [reinterpretU64AsF64(0x3fdc_6368_8000_0000n), reinterpretU64AsF64(0x3fdc_636f_2000_0000n)] },  // ~0.443..., differs from the primary in the later digits\n    { input: 10, expected: [reinterpretU64AsF64(0x4007_f21e_4000_0000n), reinterpretU64AsF64(0x4007_f21f_6000_0000n)] },  // ~2.993...\n  ] as ScalarToIntervalCase[],\n  f16: [\n    { input: 1.1, expected: [reinterpretU64AsF64(0x3fdb_bc00_0000_0000n), reinterpretU64AsF64(0x3fdd_1000_0000_0000n)] },  // ~0.443..., differs from the primary in the later digits\n    { input: 10, expected: [reinterpretU64AsF64(0x4007_e000_0000_0000n), reinterpretU64AsF64(0x4008_0400_0000_0000n)] },  // ~2.993...\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('acoshAlternativeInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          ...kAcoshAlternativeIntervalCases[p.trait],\n\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.min, expected: kUnboundedBounds },\n          { input: -1, expected: kUnboundedBounds },\n          { input: 0, expected: kUnboundedBounds },\n          { input: 1, expected: kUnboundedBounds },  // 1/0 occurs in inverseSqrt in this formulation\n          { input: constants.positive.max, expected: kUnboundedBounds },\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.acoshAlternativeInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.acoshAlternativeInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Some of these are hard coded, since the error intervals are difficult to express in a closed\n// human-readable form due to the inherited nature of the errors.\n// prettier-ignore\nconst kAcoshPrimaryIntervalCases = {\n  f32: [\n    { input: 1.1, expected: [reinterpretU64AsF64(0x3fdc_6368_2000_0000n), reinterpretU64AsF64(0x3fdc_636f_8000_0000n)] }, // ~0.443..., differs from the alternative in the later digits\n    { input: 10, expected: [reinterpretU64AsF64(0x4007_f21e_4000_0000n), reinterpretU64AsF64(0x4007_f21f_6000_0000n)] },  // ~2.993...\n  ] as ScalarToIntervalCase[],\n  f16: [\n    { input: 1.1, expected: [reinterpretU64AsF64(0x3fdb_bc00_0000_0000n), reinterpretU64AsF64(0x3fdd_1c00_0000_0000n)] },  // ~0.443..., differs from the primary in the later digits\n    { input: 10, expected: [reinterpretU64AsF64(0x4007_e000_0000_0000n), reinterpretU64AsF64(0x4008_0400_0000_0000n)] },  // ~2.993...\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('acoshPrimaryInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          ...kAcoshPrimaryIntervalCases[p.trait],\n\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.min, expected: kUnboundedBounds },\n          { input: -1, expected: kUnboundedBounds },\n          { input: 0, expected: kUnboundedBounds },\n          { input: 1, expected: kUnboundedBounds },  // 1/0 occurs in inverseSqrt in this formulation\n          { input: constants.positive.max, expected: kUnboundedBounds },\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.acoshPrimaryInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.acoshPrimaryInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Asin cases that bounded by inherited atan2(x, sqrt(1.0 - x*x)) rather than absolute error.\n// Atan2 introduce 4096ULP for f32 and 5ULP for f16, and sqrt inherited from 1.0/inverseSqrt.\n// prettier-ignore\nconst kAsinIntervalInheritedCases = {\n  f32: [\n    { input: -1/2, expected: [reinterpretU32AsF32(0xbf061a96), reinterpretU32AsF32(0xbf05fa8e)] },  // ~-π/6\n    { input: 1/2, expected: [reinterpretU32AsF32(0x3f05fa8e), reinterpretU32AsF32(0x3f061a96)] },  // ~π/6\n  ] as ScalarToIntervalCase[],\n  f16: [\n    { input: -1/2, expected: [reinterpretU16AsF16(0xb83a), reinterpretU16AsF16(0xb827)] },  // ~-π/6\n    { input: 1/2, expected: [reinterpretU16AsF16(0x3827), reinterpretU16AsF16(0x383a)] },  // ~π/6\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('asinInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        const abs_error = p.trait === 'f32' ? 6.77e-5 : 3.91e-3;\n        // prettier-ignore\n        return [\n          // The acceptance interval @ x = -1 and 1 is kUnboundedBounds, because\n          // sqrt(1 - x*x) = sqrt(0), and sqrt is defined in terms of inversqrt.\n          // The acceptance interval @ x = 0 is kUnboundedBounds, because atan2 is not\n          // well-defined/implemented at 0.\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.min, expected: kUnboundedBounds },\n          { input: -1, expected: kUnboundedBounds },\n          // Subnormal input may get flushed to 0, and result in kUnboundedBounds.\n          { input: constants.negative.subnormal.min, expected: kUnboundedBounds },\n          { input: 0, expected: kUnboundedBounds },\n          { input: constants.positive.subnormal.max, expected: kUnboundedBounds },\n          { input: 1, expected: kUnboundedBounds },\n          { input: constants.positive.max, expected: kUnboundedBounds },\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n\n          // When input near 0, the expected result is bounded by absolute error rather than ULP\n          // error. Away from 0 the atan2 inherited error should be larger.\n          { input: constants.negative.max, expected: trait.absoluteErrorInterval(Math.asin(constants.negative.max), abs_error).bounds() },  // ~0\n          { input: constants.positive.min, expected: trait.absoluteErrorInterval(Math.asin(constants.positive.min), abs_error).bounds() },  // ~0\n\n          // Cases that inherited from atan2(x, sqrt(1-x*x))\n          ...kAsinIntervalInheritedCases[p.trait],\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.asinInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.asinInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Some of these are hard coded, since the error intervals are difficult to express in a closed\n// human-readable form due to the inherited nature of the errors.\n// prettier-ignore\nconst kAsinhIntervalCases = {\n  f32: [\n    { input: -1, expected: [reinterpretU64AsF64(0xbfec_343a_8000_0000n), reinterpretU64AsF64(0xbfec_3432_8000_0000n)] },  // ~-0.88137...\n    { input: 0, expected: [reinterpretU64AsF64(0xbeaa_0000_2000_0000n), reinterpretU64AsF64(0x3eb1_ffff_d000_0000n)] },  // ~0\n    { input: 1, expected: [reinterpretU64AsF64(0x3fec_3435_4000_0000n), reinterpretU64AsF64(0x3fec_3437_8000_0000n)] },  // ~0.88137...\n  ] as ScalarToIntervalCase[],\n  f16: [\n    { input: -1, expected: [reinterpretU64AsF64(0xbfec_b800_0000_0000n), reinterpretU64AsF64(0xbfeb_b800_0000_0000n)] },  // ~-0.88137...\n    { input: 0, expected: [reinterpretU64AsF64(0xbf85_0200_0000_0000n), reinterpretU64AsF64(0x3f89_fa00_0000_0000n)] },  // ~0\n    { input: 1, expected: [reinterpretU64AsF64(0x3fec_1000_0000_0000n), reinterpretU64AsF64(0x3fec_5400_0000_0000n)] },  // ~0.88137...\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('asinhInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          ...kAsinhIntervalCases[p.trait],\n\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.min, expected: kUnboundedBounds },\n          { input: constants.positive.max, expected: kUnboundedBounds },\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.asinhInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.asinhInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// prettier-ignore\nconst kAtanIntervalCases = {\n  f32: [\n    // x=-√3=-1.7320508... quantized to f32 0xBFDDB3D7,\n    // atan(0xBFDDB3D7)=-1.0471975434247854181546378047331 ~ -pi/3 rounded to f32 0xBF860A92 or 0xBF860A91,\n    // kValue.f32.negative.pi.third is 0xBF860A92.\n    { input: reinterpretU32AsF32(0xbfddb3d7), expected: [kValue.f32.negative.pi.third, kPlusOneULPFunctions['f32'](kValue.f32.negative.pi.third)] },\n    // atan(-1)=-0.78539816339744830961566084581988 ~ -pi/4 rounded to f32 0xBF490FDB or 0xBF490FDA,\n    // kValue.f32.negative.pi.quarter is 0xBF490FDB.\n    { input: -1, expected: [kValue.f32.negative.pi.quarter, kPlusOneULPFunctions['f32'](kValue.f32.negative.pi.quarter)] },\n    // x=-1/√3=-0.577350269... quantized to f32 0xBF13CD3A,\n    // atan(0xBF13CD3A)=-0.52359876782648663982267459646249 ~ -pi/6 rounded to f32 0xBF060A92 or 0xBF060A91,\n    // kValue.f32.negative.pi.sixth is 0xBF060A92.\n    { input: reinterpretU32AsF32(0xbf13cd3a), expected: [kValue.f32.negative.pi.sixth, kPlusOneULPFunctions['f32'](kValue.f32.negative.pi.sixth)] },\n    // x=1/√3=0.577350269... quantized to f32 0x3F13CD3A.\n    { input: reinterpretU32AsF32(0x3f13cd3a), expected: [kMinusOneULPFunctions['f32'](kValue.f32.positive.pi.sixth), kValue.f32.positive.pi.sixth] },\n    { input: 1, expected: [kMinusOneULPFunctions['f32'](kValue.f32.positive.pi.quarter), kValue.f32.positive.pi.quarter] },\n    // x=√3=1.7320508... quantized to f32 0x3FDDB3D7.\n    { input: reinterpretU32AsF32(0x3fddb3d7), expected: [kMinusOneULPFunctions['f32'](kValue.f32.positive.pi.third), kValue.f32.positive.pi.third] },\n  ] as ScalarToIntervalCase[],\n  f16: [\n    // x=-√3=-1.7320508... quantized to f16 0xBEED,\n    // atan(0xBEED)=-1.0470461377318847079113932677171 ~ -pi/3 rounded to f16 0xBC31 or 0xBC30,\n    // kValue.f16.negative.pi.third is 0xBC30.\n    { input: reinterpretU16AsF16(0xbeed), expected: [kMinusOneULPFunctions['f16'](kValue.f16.negative.pi.third), kValue.f16.negative.pi.third] },\n    // atan(-1)=-0.78539816339744830961566084581988 ~ -pi/4 rounded to f16 0xBA49 or 0xBA48.\n    // kValue.f16.negative.pi.quarter is 0xBA48.\n    { input: -1, expected: [kMinusOneULPFunctions['f16'](kValue.f16.negative.pi.quarter), kValue.f16.negative.pi.quarter] },\n    // x=-1/√3=-0.577350269... quantized to f16 0xB89E,\n    // atan(0xB89E)=-0.52344738860166563645762619364966 ~ -pi/6 rounded to f16 0xB831 or 0xB830,\n    // kValue.f16.negative.pi.sixth is 0xB830.\n    { input: reinterpretU16AsF16(0xb89e), expected: [kMinusOneULPFunctions['f16'](kValue.f16.negative.pi.sixth), kValue.f16.negative.pi.sixth] },\n    // x=1/√3=0.577350269... quantized to f16 0x389E\n    { input: reinterpretU16AsF16(0x389e), expected: [kValue.f16.positive.pi.sixth, kPlusOneULPFunctions['f16'](kValue.f16.positive.pi.sixth)] },\n    { input: 1, expected: [kValue.f16.positive.pi.quarter, kPlusOneULPFunctions['f16'](kValue.f16.positive.pi.quarter)] },\n    // x=√3=1.7320508... quantized to f16 0x3EED\n    { input: reinterpretU16AsF16(0x3eed), expected: [kValue.f16.positive.pi.third, kPlusOneULPFunctions['f16'](kValue.f16.positive.pi.third)] },\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('atanInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const constants = FP[p.trait].constants();\n        // prettier-ignore\n        return [\n          { input: 0, expected: 0 },\n          ...kAtanIntervalCases[p.trait],\n\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n\n    const ulp_error = t.params.trait === 'f32' ? 4096 : 5;\n    const error = (n: number): number => {\n      return ulp_error * trait.oneULP(n);\n    };\n\n    const expected = trait.toInterval(applyError(t.params.expected, error));\n\n    const got = trait.atanInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.atanInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Some of these are hard coded, since the error intervals are difficult to express in a closed\n// human-readable form due to the inherited nature of the errors.\n// prettier-ignore\nconst kAtanhIntervalCases = {\n  f32: [\n    { input: -0.1, expected: [reinterpretU64AsF64(0xbfb9_af9a_6000_0000n), reinterpretU64AsF64(0xbfb9_af8c_c000_0000n)] },  // ~-0.1003...\n    { input: 0, expected: [reinterpretU64AsF64(0xbe96_0000_2000_0000n), reinterpretU64AsF64(0x3e98_0000_0000_0000n)] },  // ~0\n    { input: 0.1, expected: [reinterpretU64AsF64(0x3fb9_af8b_8000_0000n), reinterpretU64AsF64(0x3fb9_af9b_0000_0000n)] },  // ~0.1003...\n  ] as ScalarToIntervalCase[],\n  f16: [\n    { input: -0.1, expected: [reinterpretU64AsF64(0xbfbb_0c00_0000_0000n), reinterpretU64AsF64(0xbfb8_5800_0000_0000n)] },  // ~-0.1003...\n    { input: 0, expected: [reinterpretU64AsF64(0xbf73_0400_0000_0000n), reinterpretU64AsF64(0x3f74_0000_0000_0000n)] },  // ~0\n    { input: 0.1, expected: [reinterpretU64AsF64(0x3fb8_3800_0000_0000n), reinterpretU64AsF64(0x3fbb_2400_0000_0000n)] },  // ~0.1003...\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('atanhInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          ...kAtanhIntervalCases[p.trait],\n\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.min, expected: kUnboundedBounds },\n          { input: -1, expected: kUnboundedBounds },\n          { input: 1, expected: kUnboundedBounds },\n          { input: constants.positive.max, expected: kUnboundedBounds },\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.atanhInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.atanhInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Large but still representable integer\nconst kCeilIntervalCases = {\n  f32: [\n    { input: 2 ** 30, expected: 2 ** 30 },\n    { input: -(2 ** 30), expected: -(2 ** 30) },\n    { input: 0x80000000, expected: 0x80000000 }, // https://github.com/gpuweb/cts/issues/2766\n  ],\n  f16: [\n    { input: 2 ** 14, expected: 2 ** 14 },\n    { input: -(2 ** 14), expected: -(2 ** 14) },\n    { input: 0x8000, expected: 0x8000 }, // https://github.com/gpuweb/cts/issues/2766\n  ],\n} as const;\n\ng.test('ceilInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const constants = FP[p.trait].constants();\n        // prettier-ignore\n        return [\n          { input: 0, expected: 0 },\n          { input: 0.1, expected: 1 },\n          { input: 0.9, expected: 1 },\n          { input: 1.0, expected: 1 },\n          { input: 1.1, expected: 2 },\n          { input: 1.9, expected: 2 },\n          { input: -0.1, expected: 0 },\n          { input: -0.9, expected: 0 },\n          { input: -1.0, expected: -1 },\n          { input: -1.1, expected: -1 },\n          { input: -1.9, expected: -1 },\n\n          // Edge cases\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.positive.max, expected: constants.positive.max },\n          { input: constants.positive.min, expected: 1 },\n          { input: constants.negative.min, expected: constants.negative.min },\n          { input: constants.negative.max, expected: 0 },\n          ...kCeilIntervalCases[p.trait],\n\n          // 32-bit subnormals\n          { input: constants.positive.subnormal.max, expected: [0, 1] },\n          { input: constants.positive.subnormal.min, expected: [0, 1] },\n          { input: constants.negative.subnormal.min, expected: 0 },\n          { input: constants.negative.subnormal.max, expected: 0 },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.ceilInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.ceilInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Cos interval cases on x=π/3, the result of f32 and f16 is different because π/3 quantized to\n// different direction for two types.\nconst kCosIntervalThirdPiCases = {\n  // prettier-ignore\n  f32: [\n    // cos(-1.0471975803375244) = 0.499999974763\n    { input: kValue.f32.negative.pi.third, expected: [kMinusOneULPFunctions['f32'](1/2), 1/2] },\n    // cos(1.0471975803375244) = 0.499999974763\n    { input: kValue.f32.positive.pi.third, expected: [kMinusOneULPFunctions['f32'](1/2), 1/2] },\n  ],\n  f16: [\n    // cos(-1.046875) = 0.50027931\n    {\n      input: kValue.f16.negative.pi.third,\n      expected: FP['f16'].correctlyRoundedInterval(0.50027931).bounds(),\n    },\n    // cos(1.046875) = 0.50027931\n    {\n      input: kValue.f16.positive.pi.third,\n      expected: FP['f16'].correctlyRoundedInterval(0.50027931).bounds(),\n    },\n  ],\n};\n\ng.test('cosInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          // This test does not include some common cases. i.e. f(x = π/2) = 0,\n          // because the difference between true x and x as a f32 is sufficiently\n          // large, such that the high slope of f @ x causes the results to be\n          // substantially different, so instead of getting 0 you get a value on the\n          // order of 10^-8 away from 0, thus difficult to express in a\n          // human-readable manner.\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.min, expected: kUnboundedBounds },\n          { input: constants.negative.pi.whole, expected: [-1, kPlusOneULPFunctions[p.trait](-1)] },\n          { input: 0, expected: [1, 1] },\n          { input: constants.positive.pi.whole, expected: [-1, kPlusOneULPFunctions[p.trait](-1)] },\n          { input: constants.positive.max, expected: kUnboundedBounds },\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n\n          ...(kCosIntervalThirdPiCases[p.trait] as ScalarToIntervalCase[]),\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n\n    const error = (_: number): number => {\n      return t.params.trait === 'f32' ? 2 ** -11 : 2 ** -7;\n    };\n\n    const expected = trait.toInterval(applyError(t.params.expected, error));\n\n    const got = trait.cosInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.cosInterval(${t.params.input}) returned ${got}. Expected ${expected}, ===${t.params.expected}===`\n    );\n  });\n\n// Some of these are hard coded, since the error intervals are difficult to express in a closed\n// human-readable form due to the inherited nature of the errors.\n// prettier-ignore\nconst kCoshIntervalCases = {\n  f32: [\n    { input: -1, expected: [reinterpretU32AsF32(0x3fc583a4), reinterpretU32AsF32(0x3fc583b1)] },  // ~1.1543...\n    { input: 0, expected: [reinterpretU32AsF32(0x3f7ffffd), reinterpretU32AsF32(0x3f800002)] },  // ~1\n    { input: 1, expected: [reinterpretU32AsF32(0x3fc583a4), reinterpretU32AsF32(0x3fc583b1)] },  // ~1.1543...\n  ] as ScalarToIntervalCase[],\n  f16: [\n    { input: -1, expected: [reinterpretU16AsF16(0x3e27), reinterpretU16AsF16(0x3e30)] },  // ~1.1543...\n    { input: 0, expected: [reinterpretU16AsF16(0x3bff), reinterpretU16AsF16(0x3c01)] },  // ~1\n    { input: 1, expected: [reinterpretU16AsF16(0x3e27), reinterpretU16AsF16(0x3e30)] },  // ~1.1543...\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('coshInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          ...kCoshIntervalCases[p.trait],\n\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.min, expected: kUnboundedBounds },\n          { input: constants.positive.max, expected: kUnboundedBounds },\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.coshInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.coshInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// prettier-ignore\nconst kDegreesIntervalCases = {\n  f32: [\n    { input: kValue.f32.negative.pi.whole, expected: [kMinusOneULPFunctions['f32'](-180), kPlusOneULPFunctions['f32'](-180)] },\n    { input: kValue.f32.negative.pi.three_quarters, expected: [kMinusOneULPFunctions['f32'](-135), kPlusOneULPFunctions['f32'](-135)] },\n    { input: kValue.f32.negative.pi.half, expected: [kMinusOneULPFunctions['f32'](-90), kPlusOneULPFunctions['f32'](-90)] },\n    { input: kValue.f32.negative.pi.third, expected: [kMinusOneULPFunctions['f32'](-60), kPlusOneULPFunctions['f32'](-60)] },\n    { input: kValue.f32.negative.pi.quarter, expected: [kMinusOneULPFunctions['f32'](-45), kPlusOneULPFunctions['f32'](-45)] },\n    { input: kValue.f32.negative.pi.sixth, expected: [kMinusOneULPFunctions['f32'](-30), kPlusOneULPFunctions['f32'](-30)] },\n    { input: kValue.f32.positive.pi.sixth, expected: [kMinusOneULPFunctions['f32'](30), kPlusOneULPFunctions['f32'](30)] },\n    { input: kValue.f32.positive.pi.quarter, expected: [kMinusOneULPFunctions['f32'](45), kPlusOneULPFunctions['f32'](45)] },\n    { input: kValue.f32.positive.pi.third, expected: [kMinusOneULPFunctions['f32'](60), kPlusOneULPFunctions['f32'](60)] },\n    { input: kValue.f32.positive.pi.half, expected: [kMinusOneULPFunctions['f32'](90), kPlusOneULPFunctions['f32'](90)] },\n    { input: kValue.f32.positive.pi.three_quarters, expected: [kMinusOneULPFunctions['f32'](135), kPlusOneULPFunctions['f32'](135)] },\n    { input: kValue.f32.positive.pi.whole, expected: [kMinusOneULPFunctions['f32'](180), kPlusOneULPFunctions['f32'](180)] },\n  ] as ScalarToIntervalCase[],\n  f16: [\n    { input: kValue.f16.negative.pi.whole, expected: [-180, kPlusOneULPFunctions['f16'](-180)] },\n    { input: kValue.f16.negative.pi.three_quarters, expected: [-135, kPlusOneULPFunctions['f16'](-135)] },\n    { input: kValue.f16.negative.pi.half, expected: [-90, kPlusOneULPFunctions['f16'](-90)] },\n    { input: kValue.f16.negative.pi.third, expected: [-60, kPlusNULPFunctions['f16'](-60, 2)] },\n    { input: kValue.f16.negative.pi.quarter, expected: [-45, kPlusOneULPFunctions['f16'](-45)] },\n    { input: kValue.f16.negative.pi.sixth, expected: [-30, kPlusNULPFunctions['f16'](-30, 2)] },\n    { input: kValue.f16.positive.pi.sixth, expected: [kMinusNULPFunctions['f16'](30, 2), 30] },\n    { input: kValue.f16.positive.pi.quarter, expected: [kMinusOneULPFunctions['f16'](45), 45] },\n    { input: kValue.f16.positive.pi.third, expected: [kMinusNULPFunctions['f16'](60, 2), 60] },\n    { input: kValue.f16.positive.pi.half, expected: [kMinusOneULPFunctions['f16'](90), 90] },\n    { input: kValue.f16.positive.pi.three_quarters, expected: [kMinusOneULPFunctions['f16'](135), 135] },\n    { input: kValue.f16.positive.pi.whole, expected: [kMinusOneULPFunctions['f16'](180), 180] },\n  ] as ScalarToIntervalCase[],\n  abstract: [\n    { input: kValue.f64.negative.pi.whole, expected: -180 },\n    { input: kValue.f64.negative.pi.three_quarters, expected: -135 },\n    { input: kValue.f64.negative.pi.half, expected: -90 },\n    { input: kValue.f64.negative.pi.third, expected: kPlusOneULPFunctions['abstract'](-60) },\n    { input: kValue.f64.negative.pi.quarter, expected: -45 },\n    { input: kValue.f64.negative.pi.sixth, expected: kPlusOneULPFunctions['abstract'](-30) },\n    { input: kValue.f64.positive.pi.sixth, expected: kMinusOneULPFunctions['abstract'](30) },\n    { input: kValue.f64.positive.pi.quarter, expected: 45 },\n    { input: kValue.f64.positive.pi.third, expected: kMinusOneULPFunctions['abstract'](60) },\n    { input: kValue.f64.positive.pi.half, expected: 90 },\n    { input: kValue.f64.positive.pi.three_quarters, expected: 135 },\n    { input: kValue.f64.positive.pi.whole, expected: 180 },\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('degreesInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = p.trait;\n        const constants = FP[trait].constants();\n        // prettier-ignore\n        return [\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.min, expected: kUnboundedBounds },\n          { input: 0, expected: 0 },\n          { input: constants.positive.max, expected: kUnboundedBounds },\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          ...kDegreesIntervalCases[trait]\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.degreesInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.degreesInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// prettier-ignore\nconst kExpIntervalCases = {\n  f32: [\n    { input: 1, expected: [kValue.f32.positive.e, kPlusOneULPFunctions['f32'](kValue.f32.positive.e)] },\n    // exp(88) = 1.6516362549940018555283297962649e+38 = 0x7ef882b6/7.\n    { input: 88, expected: [reinterpretU32AsF32(0x7ef882b6), reinterpretU32AsF32(0x7ef882b7)] },\n    // exp(89) overflow f32.\n    { input: 89, expected: kUnboundedBounds },\n  ] as ScalarToIntervalCase[],\n  f16: [\n    { input: 1, expected: [kValue.f16.positive.e, kPlusOneULPFunctions['f16'](kValue.f16.positive.e)] },\n    // exp(11) = 59874.141715197818455326485792258 = 0x7b4f/0x7b50.\n    { input: 11, expected: [reinterpretU16AsF16(0x7b4f), reinterpretU16AsF16(0x7b50)] },\n    // exp(12) = 162754.79141900392080800520489849 overflow f16.\n    { input: 12, expected: kUnboundedBounds },\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('expInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = p.trait;\n        const constants = FP[trait].constants();\n        // prettier-ignore\n        return [\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: 0, expected: 1 },\n          ...kExpIntervalCases[trait],\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const error = (x: number): number => {\n      let ulp_error;\n      switch (t.params.trait) {\n        case 'f32': {\n          ulp_error = 3 + 2 * Math.abs(t.params.input);\n          break;\n        }\n        case 'f16': {\n          ulp_error = 1 + 2 * Math.abs(t.params.input);\n          break;\n        }\n      }\n      return ulp_error * trait.oneULP(x);\n    };\n\n    const expected = trait.toInterval(applyError(t.params.expected, error));\n    const got = trait.expInterval(t.params.input);\n\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.expInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// prettier-ignore\nconst kExp2IntervalCases = {\n  f32: [\n    // exp2(127) = 1.7014118346046923173168730371588e+38 = 0x7f000000, 3 + 2 * 127 = 258 ulps.\n    { input: 127, expected: reinterpretU32AsF32(0x7f000000) },\n    // exp2(128) overflow f32.\n    { input: 128, expected: kUnboundedBounds },\n  ] as ScalarToIntervalCase[],\n  f16: [\n    // exp2(15) = 32768 = 0x7800, 1 + 2 * 15 = 31 ulps\n    { input: 15, expected: reinterpretU16AsF16(0x7800) },\n    // exp2(16) = 65536 overflow f16.\n    { input: 16, expected: kUnboundedBounds },\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('exp2Interval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = p.trait;\n        const constants = FP[trait].constants();\n        // prettier-ignore\n        return [\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: 0, expected: 1 },\n          { input: 1, expected: 2 },\n          ...kExp2IntervalCases[trait],\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const error = (x: number): number => {\n      let ulp_error;\n      switch (t.params.trait) {\n        case 'f32': {\n          ulp_error = 3 + 2 * Math.abs(t.params.input);\n          break;\n        }\n        case 'f16': {\n          ulp_error = 1 + 2 * Math.abs(t.params.input);\n          break;\n        }\n      }\n      return ulp_error * trait.oneULP(x);\n    };\n\n    const expected = trait.toInterval(applyError(t.params.expected, error));\n\n    const got = trait.exp2Interval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.exp2Interval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Large but still representable integer\nconst kFloorIntervalCases = {\n  f32: [\n    { input: 2 ** 30, expected: 2 ** 30 },\n    { input: -(2 ** 30), expected: -(2 ** 30) },\n    { input: 0x80000000, expected: 0x80000000 }, // https://github.com/gpuweb/cts/issues/2766\n  ],\n  f16: [\n    { input: 2 ** 14, expected: 2 ** 14 },\n    { input: -(2 ** 14), expected: -(2 ** 14) },\n    { input: 0x8000, expected: 0x8000 }, // https://github.com/gpuweb/cts/issues/2766\n  ],\n  abstract: [\n    { input: 2 ** 62, expected: 2 ** 62 },\n    { input: -(2 ** 62), expected: -(2 ** 62) },\n    {\n      input: 0x8000_0000_0000_0000,\n      expected: 0x8000_0000_0000_0000,\n    }, // https://github.com/gpuweb/cts/issues/2766\n  ],\n} as const;\n\ng.test('floorInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const constants = FP[p.trait].constants();\n        // prettier-ignore\n        return [\n          { input: 0, expected: 0 },\n          { input: 0.1, expected: 0 },\n          { input: 0.9, expected: 0 },\n          { input: 1.0, expected: 1 },\n          { input: 1.1, expected: 1 },\n          { input: 1.9, expected: 1 },\n          { input: -0.1, expected: -1 },\n          { input: -0.9, expected: -1 },\n          { input: -1.0, expected: -1 },\n          { input: -1.1, expected: -2 },\n          { input: -1.9, expected: -2 },\n\n          // Edge cases\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.positive.max, expected: constants.positive.max },\n          { input: constants.positive.min, expected: 0 },\n          { input: constants.negative.min, expected: constants.negative.min },\n          { input: constants.negative.max, expected: -1 },\n          ...kFloorIntervalCases[p.trait],\n\n          // Subnormals\n          { input: constants.positive.subnormal.max, expected: 0 },\n          { input: constants.positive.subnormal.min, expected: 0 },\n          { input: constants.negative.subnormal.min, expected: [-1, 0] },\n          { input: constants.negative.subnormal.max, expected: [-1, 0] },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.floorInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.floorInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// prettier-ignore\nconst kFractIntervalCases = {\n  f32: [\n    { input: 0.1, expected: [kMinusOneULPFunctions['f32'](reinterpretU32AsF32(0x3dcccccd)), reinterpretU32AsF32(0x3dcccccd)] }, // ~0.1\n    { input: 0.9, expected: [reinterpretU32AsF32(0x3f666666), kPlusOneULPFunctions['f32'](reinterpretU32AsF32(0x3f666666))] },  // ~0.9\n    { input: 1.1, expected: [reinterpretU32AsF32(0x3dccccc0), reinterpretU32AsF32(0x3dccccd0)] }, // ~0.1\n    { input: -0.1, expected: [reinterpretU32AsF32(0x3f666666), kPlusOneULPFunctions['f32'](reinterpretU32AsF32(0x3f666666))] },  // ~0.9\n    { input: -0.9, expected: [reinterpretU32AsF32(0x3dccccc8), reinterpretU32AsF32(0x3dccccd0)] }, // ~0.1\n    { input: -1.1, expected: [reinterpretU32AsF32(0x3f666666), reinterpretU32AsF32(0x3f666668)] }, // ~0.9\n\n    // https://github.com/gpuweb/cts/issues/2766\n    { input: 0x80000000, expected: 0 },\n  ] as ScalarToIntervalCase[],\n  f16: [\n    { input: 0.1, expected: [reinterpretU16AsF16(0x2e66), reinterpretU16AsF16(0x2e67)] }, // ~0.1\n    { input: 0.9, expected: [reinterpretU16AsF16(0x3b33), reinterpretU16AsF16(0x3b34)] },  // ~0.9\n    { input: 1.1, expected: [reinterpretU16AsF16(0x2e60), reinterpretU16AsF16(0x2e70)] }, // ~0.1\n    { input: -0.1, expected: [reinterpretU16AsF16(0x3b33), reinterpretU16AsF16(0x3b34)] },  // ~0.9\n    { input: -0.9, expected: [reinterpretU16AsF16(0x2e60), reinterpretU16AsF16(0x2e68)] }, // ~0.1\n    { input: -1.1, expected: [reinterpretU16AsF16(0x3b32), reinterpretU16AsF16(0x3b34)] }, // ~0.9\n    { input: 658.5, expected: 0.5 },\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('fractInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const constants = FP[p.trait].constants();\n        // prettier-ignore\n        return [\n          { input: 0, expected: 0 },\n          { input: 1.0, expected: 0 },\n          { input: -1.0, expected: 0 },\n\n          ...kFractIntervalCases[p.trait],\n\n          // Edge cases\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.positive.max, expected: 0 },\n          { input: constants.positive.min, expected: constants.positive.min },\n          { input: constants.negative.min, expected: 0 },\n          { input: constants.negative.max, expected: [constants.positive.less_than_one, 1.0] },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.fractInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.fractInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// prettier-ignore\nconst kInverseSqrtIntervalCases = {\n  f32: [\n    // 0.04 rounded to f32 0x3D23D70A or 0x3D23D70B,\n    // 1/sqrt(0x3D23D70B)=4.9999998230487200185270893769213 rounded to f32 0x409FFFFF or 0x40A00000,\n    // 1/sqrt(0x3D23D70A)=5.0000000558793553117506910583908 rounded to f32 0x40A00000 or 0x40A00001.\n    { input: 0.04, expected: [reinterpretU32AsF32(0x409FFFFF), reinterpretU32AsF32(0x40A00001)] },  // ~5.0\n    // Maximium f32 0x7F7FFFFF = 3.4028234663852886e+38,\n    // 1/sqrt(0x7F7FFFFF)=5.4210110239862427800382690921791e-20 rounded to f32 0x1F800000 or 0x1F800001\n    { input: kValue.f32.positive.max, expected: [reinterpretU32AsF32(0x1f800000), reinterpretU32AsF32(0x1f800001)] },  // ~5.421...e-20\n  ] as ScalarToIntervalCase[],\n  f16: [\n    // 0.04 rounded to f16 0x291E or 0x291F,\n    // 1/sqrt(0x291F)=4.9994660279328446295684795818427 rounded to f16 0x44FF or 0x4500,\n    // 1/sqrt(0x291E)=5.001373857053206453045376503367 rounded to f16 0x4500 or 0x4501.\n    { input: 0.04, expected: [reinterpretU16AsF16(0x44FF), reinterpretU16AsF16(0x4501)] },  // ~5.0\n    // Maximium f16 0x7BFF = 65504,\n    // 1/sqrt(0x7BFF)=0.00390720402370454101997160826062 rounded to f16 0x1C00 or 0x1C01\n    { input: kValue.f16.positive.max, expected: [reinterpretU16AsF16(0x1c00), reinterpretU16AsF16(0x1c01)] },  // ~3.9072...e-3\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('inverseSqrtInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // Note that the 2 ULP error is not included here.\n        // prettier-ignore\n        return [\n          // Exactly representable cases\n          { input: 1, expected: 1 },\n          { input: 0.25, expected: 2 },\n          { input: 64, expected: 0.125 },\n\n          // Cases that input and/or result not exactly representable\n          ...kInverseSqrtIntervalCases[p.trait],\n          // 1/sqrt(100.0)=0.1, rounded to corresponding trait\n          { input: 100, expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1'] },  // ~0.1\n\n          // Out of definition domain\n          { input: -1, expected: kUnboundedBounds },\n          { input: 0, expected: kUnboundedBounds },\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n\n    const error = (n: number): number => {\n      return 2 * trait.oneULP(n);\n    };\n\n    const expected = trait.toInterval(applyError(t.params.expected, error));\n\n    const got = trait.inverseSqrtInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.inverseSqrtInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Expectation interval of 1/inverseSqrt(sum(x[i]^2)) on some special values array x for certain\n// float traits, used as expectation for `length` and `distance`.\n// These cases are hard coded, since the error intervals are difficult to express in a closed\n// human-readable form due to the inherited nature of the errors.\n// prettier-ignore\nconst kRootSumSquareExpectionInterval = {\n  f32: {\n    '[0.1]': [reinterpretU64AsF64(0x3fb9_9998_9000_0000n), reinterpretU64AsF64(0x3fb9_999a_7000_0000n)],  // ~0.1\n    '[1.0]' : [reinterpretU64AsF64(0x3fef_ffff_7000_0000n), reinterpretU64AsF64(0x3ff0_0000_9000_0000n)],  // ~1.0\n    '[10]' : [reinterpretU64AsF64(0x4023_ffff_7000_0000n), reinterpretU64AsF64(0x4024_0000_b000_0000n)],  // ~10\n    '[1.0, 1.0]' : [reinterpretU64AsF64(0x3ff6_a09d_b000_0000n), reinterpretU64AsF64(0x3ff6_a09f_1000_0000n)],  // ~√2\n    '[1.0, 1.0, 1.0]' : [reinterpretU64AsF64(0x3ffb_b67a_1000_0000n), reinterpretU64AsF64(0x3ffb_b67b_b000_0000n)],  // ~√3\n    '[1.0, 1.0, 1.0, 1.0]' : [reinterpretU64AsF64(0x3fff_ffff_7000_0000n), reinterpretU64AsF64(0x4000_0000_9000_0000n)],  // ~2\n  } as {[s: string]: IntervalBounds},\n  f16: {\n    '[0.1]': [reinterpretU64AsF64(0x3fb9_7e00_0000_0000n), reinterpretU64AsF64(0x3fb9_b600_0000_0000n)],  // ~0.1\n    '[1.0]' : [reinterpretU64AsF64(0x3fef_ee00_0000_0000n), reinterpretU64AsF64(0x3ff0_1200_0000_0000n)],  // ~1.0\n    '[10]' : [reinterpretU64AsF64(0x4023_ea00_0000_0000n), reinterpretU64AsF64(0x4024_1200_0000_0000n)],  // ~10\n    '[1.0, 1.0]' : [reinterpretU64AsF64(0x3ff6_8a00_0000_0000n), reinterpretU64AsF64(0x3ff6_b600_0000_0000n)],  // ~√2\n    '[1.0, 1.0, 1.0]' : [reinterpretU64AsF64(0x3ffb_9a00_0000_0000n), reinterpretU64AsF64(0x3ffb_d200_0000_0000n)],  // ~√3\n    '[1.0, 1.0, 1.0, 1.0]' : [reinterpretU64AsF64(0x3fff_ee00_0000_0000n), reinterpretU64AsF64(0x4000_1200_0000_0000n)],  // ~2\n  } as {[s: string]: IntervalBounds},\n} as const;\n\ng.test('lengthIntervalScalar')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          {input: 1.0, expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          {input: -1.0, expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          {input: 0.1, expected: kRootSumSquareExpectionInterval[p.trait]['[0.1]'] },  // ~0.1\n          {input: -0.1, expected: kRootSumSquareExpectionInterval[p.trait]['[0.1]'] },  // ~0.1\n          {input: 10.0, expected: kRootSumSquareExpectionInterval[p.trait]['[10]'] },  // ~10\n          {input: -10.0, expected: kRootSumSquareExpectionInterval[p.trait]['[10]'] },  // ~10\n\n          // length(0) = kUnboundedBounds, because length uses sqrt, which is defined as 1/inversesqrt\n          {input: 0, expected: kUnboundedBounds },\n\n          // Subnormal Cases\n          { input: constants.negative.subnormal.min, expected: kUnboundedBounds },\n          { input: constants.negative.subnormal.max, expected: kUnboundedBounds },\n          { input: constants.positive.subnormal.min, expected: kUnboundedBounds },\n          { input: constants.positive.subnormal.max, expected: kUnboundedBounds },\n\n          // Edge cases\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.min, expected: kUnboundedBounds },\n          { input: constants.negative.max, expected: kUnboundedBounds },\n          { input: constants.positive.min, expected: kUnboundedBounds },\n          { input: constants.positive.max, expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.lengthInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.lengthInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// prettier-ignore\nconst kLogIntervalCases = {\n  f32: [\n    // kValue.f32.positive.e is 0x402DF854 = 2.7182817459106445,\n    // log(0x402DF854) = 0.99999996963214000677592342891704 rounded to f32 0x3F7FFFFF or 0x3F800000 = 1.0\n    { input: kValue.f32.positive.e, expected: [kMinusOneULPFunctions['f32'](1.0), 1.0] },\n    // kValue.f32.positive.max is 0x7F7FFFFF = 3.4028234663852886e+38,\n    // log(0x7F7FFFFF) = 88.72283905206835305421152826479 rounded to f32 0x42B17217 or 0x42B17218.\n    { input: kValue.f32.positive.max, expected: [kMinusOneULPFunctions['f32'](reinterpretU32AsF32(0x42b17218)), reinterpretU32AsF32(0x42b17218)] },\n  ] as ScalarToIntervalCase[],\n  f16: [\n    // kValue.f16.positive.e is 0x416F = 2.716796875,\n    // log(0x416F) = 0.99945356688393512460279716546501 rounded to f16 0x3BFE or 0x3BFF.\n    { input: kValue.f16.positive.e, expected: [reinterpretU16AsF16(0x3bfe), reinterpretU16AsF16(0x3bff)] },\n    // kValue.f16.positive.max is 0x7BFF = 65504,\n    // log(0x7BFF) = 11.089866488461016076210728979771 rounded to f16 0x498B or 0x498C.\n    { input: kValue.f16.positive.max, expected: [reinterpretU16AsF16(0x498b), reinterpretU16AsF16(0x498c)] },\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('logInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        // prettier-ignore\n        return [\n          { input: -1, expected: kUnboundedBounds },\n          { input: 0, expected: kUnboundedBounds },\n          { input: 1, expected: 0 },\n          ...kLogIntervalCases[p.trait],\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const abs_error = t.params.trait === 'f32' ? 2 ** -21 : 2 ** -7;\n    const error = (n: number): number => {\n      if (t.params.input >= 0.5 && t.params.input <= 2.0) {\n        return abs_error;\n      }\n      return 3 * trait.oneULP(n);\n    };\n\n    const expected = trait.toInterval(applyError(t.params.expected, error));\n\n    const got = trait.logInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.logInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// prettier-ignore\nconst kLog2IntervalCases = {\n  f32: [\n    // kValue.f32.positive.max is 0x7F7FFFFF = 3.4028234663852886e+38,\n    // log2(0x7F7FFFFF) = 127.99999991400867200665269600978 rounded to f32 0x42FFFFFF or 0x43000000 = 128.0\n    { input: kValue.f32.positive.max, expected: [kMinusOneULPFunctions['f32'](128.0), 128.0] },\n  ] as ScalarToIntervalCase[],\n  f16: [\n    // kValue.f16.positive.max is 0x7BFF = 65504,\n    // log2(0x7BFF) = 15.999295387023410627258428389903 rounded to f16 0x4BFF or 0x4C00 = 16.0\n    { input: kValue.f16.positive.max, expected: [kMinusOneULPFunctions['f16'](16.0), 16.0] },\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('log2Interval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        // prettier-ignore\n        return [\n          { input: -1, expected: kUnboundedBounds },\n          { input: 0, expected: kUnboundedBounds },\n          { input: 1, expected: 0 },\n          { input: 2, expected: 1 },\n          { input: 16, expected: 4 },\n          ...kLog2IntervalCases[p.trait],\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const abs_error = t.params.trait === 'f32' ? 2 ** -21 : 2 ** -7;\n    const error = (n: number): number => {\n      if (t.params.input >= 0.5 && t.params.input <= 2.0) {\n        return abs_error;\n      }\n      return 3 * trait.oneULP(n);\n    };\n\n    const expected = trait.toInterval(applyError(t.params.expected, error));\n\n    const got = trait.log2Interval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.log2Interval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('negationInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          // Edge cases\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.positive.max, expected: constants.negative.min },\n          { input: constants.positive.min, expected: constants.negative.max },\n          { input: constants.negative.min, expected: constants.positive.max },\n          { input: constants.negative.max, expected: constants.positive.min },\n\n          // Normals\n          { input: 0, expected: 0 },\n          { input: 1.0, expected: -1.0 },\n          { input: -1.0, expected: 1 },\n          { input: 0.1, expected: kConstantCorrectlyRoundedExpectation[p.trait]['-0.1'] }, // ~-0.1\n          { input: 1.9, expected: kConstantCorrectlyRoundedExpectation[p.trait]['-1.9'] },  // ~-1.9\n          { input: -0.1, expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1'] }, // ~0.1\n          { input: -1.9, expected: kConstantCorrectlyRoundedExpectation[p.trait]['1.9'] },  // ~1.9\n\n          // Subnormals\n          { input: constants.positive.subnormal.max, expected: [constants.negative.subnormal.min, 0] },\n          { input: constants.positive.subnormal.min, expected: [constants.negative.subnormal.max, 0] },\n          { input: constants.negative.subnormal.min, expected: [0, constants.positive.subnormal.max] },\n          { input: constants.negative.subnormal.max, expected: [0, constants.positive.subnormal.min] },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.negationInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.negationInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('quantizeToF16Interval')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.negative.infinity, expected: kUnboundedBounds },\n      { input: kValue.f32.negative.min, expected: kUnboundedBounds },\n      { input: kValue.f16.negative.min, expected: kValue.f16.negative.min },\n      { input: -1.9, expected: kConstantCorrectlyRoundedExpectation['f16']['-1.9'] },  // ~-1.9\n      { input: -1, expected: -1 },\n      { input: -0.1, expected: kConstantCorrectlyRoundedExpectation['f16']['-0.1'] },  // ~-0.1\n      { input: kValue.f16.negative.max, expected: kValue.f16.negative.max },\n      { input: kValue.f16.negative.subnormal.min, expected: [kValue.f16.negative.subnormal.min, 0] },\n      { input: kValue.f16.negative.subnormal.max, expected: [kValue.f16.negative.subnormal.max, 0] },\n      { input: kValue.f32.negative.subnormal.max, expected: [kValue.f16.negative.subnormal.max, 0] },\n      { input: 0, expected: 0 },\n      { input: kValue.f32.positive.subnormal.min, expected: [0, kValue.f16.positive.subnormal.min] },\n      { input: kValue.f16.positive.subnormal.min, expected: [0, kValue.f16.positive.subnormal.min] },\n      { input: kValue.f16.positive.subnormal.max, expected: [0, kValue.f16.positive.subnormal.max] },\n      { input: kValue.f16.positive.min, expected: kValue.f16.positive.min },\n      { input: 0.1, expected: kConstantCorrectlyRoundedExpectation['f16']['0.1'] },  // ~0.1\n      { input: 1, expected: 1 },\n      { input: 1.9, expected: kConstantCorrectlyRoundedExpectation['f16']['1.9'] },  // ~1.9\n      { input: kValue.f16.positive.max, expected: kValue.f16.positive.max },\n      { input: kValue.f32.positive.max, expected: kUnboundedBounds },\n      { input: kValue.f32.positive.infinity, expected: kUnboundedBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.quantizeToF16Interval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.quantizeToF16Interval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// prettier-ignore\nconst kRadiansIntervalCases = {\n  f32: [\n    { input: -180, expected: [kMinusOneULPFunctions['f32'](kValue.f32.negative.pi.whole), kPlusOneULPFunctions['f32'](kValue.f32.negative.pi.whole)] },\n    { input: -135, expected: [kMinusOneULPFunctions['f32'](kValue.f32.negative.pi.three_quarters), kPlusOneULPFunctions['f32'](kValue.f32.negative.pi.three_quarters)] },\n    { input: -90, expected: [kMinusOneULPFunctions['f32'](kValue.f32.negative.pi.half), kPlusOneULPFunctions['f32'](kValue.f32.negative.pi.half)] },\n    { input: -60, expected: [kMinusOneULPFunctions['f32'](kValue.f32.negative.pi.third), kPlusOneULPFunctions['f32'](kValue.f32.negative.pi.third)] },\n    { input: -45, expected: [kMinusOneULPFunctions['f32'](kValue.f32.negative.pi.quarter), kPlusOneULPFunctions['f32'](kValue.f32.negative.pi.quarter)] },\n    { input: -30, expected: [kMinusOneULPFunctions['f32'](kValue.f32.negative.pi.sixth), kPlusOneULPFunctions['f32'](kValue.f32.negative.pi.sixth)] },\n    { input: 30, expected: [kMinusOneULPFunctions['f32'](kValue.f32.positive.pi.sixth), kPlusOneULPFunctions['f32'](kValue.f32.positive.pi.sixth)] },\n    { input: 45, expected: [kMinusOneULPFunctions['f32'](kValue.f32.positive.pi.quarter), kPlusOneULPFunctions['f32'](kValue.f32.positive.pi.quarter)] },\n    { input: 60, expected: [kMinusOneULPFunctions['f32'](kValue.f32.positive.pi.third), kPlusOneULPFunctions['f32'](kValue.f32.positive.pi.third)] },\n    { input: 90, expected: [kMinusOneULPFunctions['f32'](kValue.f32.positive.pi.half), kPlusOneULPFunctions['f32'](kValue.f32.positive.pi.half)] },\n    { input: 135, expected: [kMinusOneULPFunctions['f32'](kValue.f32.positive.pi.three_quarters), kPlusOneULPFunctions['f32'](kValue.f32.positive.pi.three_quarters)] },\n    { input: 180, expected: [kMinusOneULPFunctions['f32'](kValue.f32.positive.pi.whole), kPlusOneULPFunctions['f32'](kValue.f32.positive.pi.whole)] },\n  ] as ScalarToIntervalCase[],\n  f16: [\n    { input: -180, expected: [kMinusOneULPFunctions['f16'](kValue.f16.negative.pi.whole), kPlusOneULPFunctions['f16'](kValue.f16.negative.pi.whole)] },\n    { input: -135, expected: [kMinusOneULPFunctions['f16'](kValue.f16.negative.pi.three_quarters), kPlusOneULPFunctions['f16'](kValue.f16.negative.pi.three_quarters)] },\n    { input: -90, expected: [kMinusOneULPFunctions['f16'](kValue.f16.negative.pi.half), kPlusOneULPFunctions['f16'](kValue.f16.negative.pi.half)] },\n    { input: -60, expected: [kMinusOneULPFunctions['f16'](kValue.f16.negative.pi.third), kPlusOneULPFunctions['f16'](kValue.f16.negative.pi.third)] },\n    { input: -45, expected: [kMinusOneULPFunctions['f16'](kValue.f16.negative.pi.quarter), kPlusOneULPFunctions['f16'](kValue.f16.negative.pi.quarter)] },\n    { input: -30, expected: [kMinusOneULPFunctions['f16'](kValue.f16.negative.pi.sixth), kPlusOneULPFunctions['f16'](kValue.f16.negative.pi.sixth)] },\n    { input: 30, expected: [kMinusOneULPFunctions['f16'](kValue.f16.positive.pi.sixth), kPlusOneULPFunctions['f16'](kValue.f16.positive.pi.sixth)] },\n    { input: 45, expected: [kMinusOneULPFunctions['f16'](kValue.f16.positive.pi.quarter), kPlusOneULPFunctions['f16'](kValue.f16.positive.pi.quarter)] },\n    { input: 60, expected: [kMinusOneULPFunctions['f16'](kValue.f16.positive.pi.third), kPlusOneULPFunctions['f16'](kValue.f16.positive.pi.third)] },\n    { input: 90, expected: [kMinusOneULPFunctions['f16'](kValue.f16.positive.pi.half), kPlusOneULPFunctions['f16'](kValue.f16.positive.pi.half)] },\n    { input: 135, expected: [kMinusOneULPFunctions['f16'](kValue.f16.positive.pi.three_quarters), kPlusOneULPFunctions['f16'](kValue.f16.positive.pi.three_quarters)] },\n    { input: 180, expected: [kMinusOneULPFunctions['f16'](kValue.f16.positive.pi.whole), kPlusOneULPFunctions['f16'](kValue.f16.positive.pi.whole)] },\n  ] as ScalarToIntervalCase[],\n  abstract: [\n    { input: -180, expected: kValue.f64.negative.pi.whole },\n    { input: -135, expected: kValue.f64.negative.pi.three_quarters },\n    { input: -90, expected: kValue.f64.negative.pi.half },\n    { input: -60, expected: kValue.f64.negative.pi.third },\n    { input: -45, expected: kValue.f64.negative.pi.quarter },\n    { input: -30, expected: kValue.f64.negative.pi.sixth },\n    { input: 30, expected: kValue.f64.positive.pi.sixth },\n    { input: 45, expected: kValue.f64.positive.pi.quarter },\n    { input: 60, expected: kValue.f64.positive.pi.third },\n    { input: 90, expected: kValue.f64.positive.pi.half },\n    { input: 135, expected: kValue.f64.positive.pi.three_quarters },\n    { input: 180, expected: kValue.f64.positive.pi.whole },\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('radiansInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = p.trait;\n        const constants = FP[trait].constants();\n        // prettier-ignore\n        return [\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n          { input: 0, expected: 0 },\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          ...kRadiansIntervalCases[trait]\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.radiansInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.radiansInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Large but still representable integer\nconst kRoundIntervalCases = {\n  f32: [\n    { input: 2 ** 30, expected: 2 ** 30 },\n    { input: -(2 ** 30), expected: -(2 ** 30) },\n    { input: 0x8000_0000, expected: 0x8000_0000 }, // https://github.com/gpuweb/cts/issues/2766\n  ],\n  f16: [\n    { input: 2 ** 14, expected: 2 ** 14 },\n    { input: -(2 ** 14), expected: -(2 ** 14) },\n    { input: 0x8000, expected: 0x8000 }, // https://github.com/gpuweb/cts/issues/2766\n  ],\n  abstract: [\n    { input: 2 ** 62, expected: 2 ** 62 },\n    { input: -(2 ** 62), expected: -(2 ** 62) },\n    {\n      input: 0x8000_0000_0000_0000,\n      expected: 0x8000_0000_0000_0000,\n    }, // https://github.com/gpuweb/cts/issues/2766\n  ],\n} as const;\n\ng.test('roundInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const constants = FP[p.trait].constants();\n        // prettier-ignore\n        return [\n          { input: 0, expected: 0 },\n          { input: 0.1, expected: 0 },\n          { input: 0.5, expected: 0 },  // Testing tie breaking\n          { input: 0.9, expected: 1 },\n          { input: 1.0, expected: 1 },\n          { input: 1.1, expected: 1 },\n          { input: 1.5, expected: 2 },  // Testing tie breaking\n          { input: 1.9, expected: 2 },\n          { input: -0.1, expected: 0 },\n          { input: -0.5, expected: 0 },  // Testing tie breaking\n          { input: -0.9, expected: -1 },\n          { input: -1.0, expected: -1 },\n          { input: -1.1, expected: -1 },\n          { input: -1.5, expected: -2 },  // Testing tie breaking\n          { input: -1.9, expected: -2 },\n\n          // Edge cases\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.positive.max, expected: constants.positive.max },\n          { input: constants.positive.min, expected: 0 },\n          { input: constants.negative.min, expected: constants.negative.min },\n          { input: constants.negative.max, expected: 0 },\n          ...kRoundIntervalCases[p.trait],\n\n          // Subnormals\n          { input: constants.positive.subnormal.max, expected: 0 },\n          { input: constants.positive.subnormal.min, expected: 0 },\n          { input: constants.negative.subnormal.min, expected: 0 },\n          { input: constants.negative.subnormal.max, expected: 0 },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.roundInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.roundInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('saturateInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const constants = FP[p.trait].constants();\n        // prettier-ignore\n        return [\n          // Normals\n          { input: 0, expected: 0 },\n          { input: 0.1, expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1'] },\n          { input: 1, expected: 1.0 },\n          { input: -0.1, expected: 0 },\n          { input: -1, expected: 0 },\n          { input: -10, expected: 0 },\n          { input: 10, expected: 1.0 },\n          { input: 11.1, expected: 1.0 },\n          { input: constants.positive.max, expected: 1.0 },\n          { input: constants.positive.min, expected: constants.positive.min },\n          { input: constants.negative.max, expected: 0.0 },\n          { input: constants.negative.min, expected: 0.0 },\n\n          // Subnormals\n          { input: constants.positive.subnormal.max, expected: [0.0, constants.positive.subnormal.max] },\n          { input: constants.positive.subnormal.min, expected: [0.0, constants.positive.subnormal.min] },\n          { input: constants.negative.subnormal.min, expected: [constants.negative.subnormal.min, 0.0] },\n          { input: constants.negative.subnormal.max, expected: [constants.negative.subnormal.max, 0.0] },\n\n          // Infinities\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.saturateInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.saturationInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('signInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const constants = FP[p.trait].constants();\n        // prettier-ignore\n        return [\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.min, expected: -1 },\n          { input: -10, expected: -1 },\n          { input: -1, expected: -1 },\n          { input: -0.1, expected: -1 },\n          { input: constants.negative.max, expected:  -1 },\n          { input: constants.negative.subnormal.min, expected: [-1, 0] },\n          { input: constants.negative.subnormal.max, expected: [-1, 0] },\n          { input: 0, expected: 0 },\n          { input: constants.positive.subnormal.max, expected: [0, 1] },\n          { input: constants.positive.subnormal.min, expected: [0, 1] },\n          { input: constants.positive.min, expected: 1 },\n          { input: 0.1, expected: 1 },\n          { input: 1, expected: 1 },\n          { input: 10, expected: 1 },\n          { input: constants.positive.max, expected: 1 },\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.signInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.signInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('sinInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const constants = FP[p.trait].constants();\n        // prettier-ignore\n        return [\n          // This test does not include some common cases, i.e. f(x = -π|π) = 0,\n          // because the difference between true x and x as a f32 is sufficiently\n          // large, such that the high slope of f @ x causes the results to be\n          // substantially different, so instead of getting 0 you get a value on the\n          // order of 10^-8 away from it, thus difficult to express in a\n          // human-readable manner.\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.min, expected: kUnboundedBounds },\n          { input: constants.negative.pi.half, expected: [-1, kPlusOneULPFunctions[p.trait](-1)] },\n          { input: 0, expected: 0 },\n          { input: constants.positive.pi.half, expected: [kMinusOneULPFunctions[p.trait](1), 1] },\n          { input: constants.positive.max, expected: kUnboundedBounds },\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n\n    const error = (_: number): number => {\n      return t.params.trait === 'f32' ? 2 ** -11 : 2 ** -7;\n    };\n\n    const expected = trait.toInterval(applyError(t.params.expected, error));\n\n    const got = trait.sinInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.sinInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Some of these are hard coded, since the error intervals are difficult to express in a closed\n// human-readable form due to the inherited nature of the errors.\n// prettier-ignore\nconst kSinhIntervalCases = {\n  f32: [\n    { input: -1, expected: [reinterpretU32AsF32(0xbf966d05), reinterpretU32AsF32(0xbf966cf8)] },  // ~-1.175...\n    { input: 0, expected: [reinterpretU32AsF32(0xb4600000), reinterpretU32AsF32(0x34600000)] },  // ~0\n    { input: 1, expected: [reinterpretU32AsF32(0x3f966cf8), reinterpretU32AsF32(0x3f966d05)] },  // ~1.175...\n  ] as ScalarToIntervalCase[],\n  f16: [\n    { input: -1, expected: [reinterpretU16AsF16(0xbcb8), reinterpretU16AsF16(0xbcaf)] },  // ~-1.175...\n    { input: 0, expected: [reinterpretU16AsF16(0x9200), reinterpretU16AsF16(0x1200)] },  // ~0\n    { input: 1, expected: [reinterpretU16AsF16(0x3caf), reinterpretU16AsF16(0x3cb8)] },  // ~1.175...\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('sinhInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          ...kSinhIntervalCases[p.trait],\n\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.min, expected: kUnboundedBounds },\n          { input: constants.positive.max, expected: kUnboundedBounds },\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.sinhInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.sinhInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// For sqrt interval inherited from 1.0 / inverseSqrt(x), errors come from:\n//   1. Rounding of input x, if any;\n//   2. 2 ULP from inverseSqrt;\n//   3. And 2.5 ULP from division.\n// The last 2.5ULP is handled in test and not included in the expected values here.\n// prettier-ignore\nconst kSqrtIntervalCases = {\n  f32: [\n    // 0.01 rounded to f32 0x3C23D70A or 0x3C23D70B.\n    // For inverseSqrt interval, floor_f32(1.0/sqrt(0x3C23D70B))-2ULP=0x411FFFFD,\n    // ceil_f32(1.0/sqrt(0x3C23D70A))+2ULP=0x41200003.\n    // For division, 1.0/0x41200003=0.09999997138977868544997855067803 rounded to f32 0x3DCCCCC8 or 0x3DCCCCC9,\n    // 1.0/0x411FFFFD=0.100000028610237685454662304067 rounded to f32 0x3DCCCCD0 or 0x3DCCCCD1.\n    { input: 0.01, expected: [reinterpretU32AsF32(0x3DCCCCC8), reinterpretU32AsF32(0x3DCCCCD1)] },  // ~0.1\n    // For inverseSqrt interval, 1.0/sqrt(1.0)-2ULP=0x3F7FFFFE, 1.0/sqrt(1.0)+2ULP=0x3F800001.\n    // For division, 1.0/0x3F800001=0.9999998807907246108530328709735 rounded to f32 0x3F7FFFFE or 0x3F7FFFFF,\n    // 1.0/0x3F7FFFFE=1.0000001192093038108564210027667 rounded to f32 0x3F800001 or 0x3F800002.\n    { input: 1, expected: [reinterpretU32AsF32(0x3F7FFFFE), reinterpretU32AsF32(0x3F800002)] },  // ~1\n    // For inverseSqrt interval, 1.0/sqrt(4.0)-2ULP=0x3EFFFFFE, 1.0/sqrt(4.0)+2ULP=0x3F000001.\n    // For division, 1.0/0x3F000001=1.999999761581449221706065741947 rounded to f32 0x3FFFFFFE or 0x3FFFFFFF,\n    // 1.0/0x3EFFFFFE=2.0000002384186076217128420055334 rounded to f32 0x40000001 or 0x40000002.\n    { input: 4, expected: [reinterpretU32AsF32(0x3FFFFFFE), reinterpretU32AsF32(0x40000002)] },  // ~2\n    // For inverseSqrt interval, floor_f32(1.0/sqrt(100.0))-2ULP=0x3DCCCCCA,\n    // ceil_f32(1.0/sqrt(100.0))+2ULP=0x3DCCCCCF.\n    // For division, 1.0/0x3DCCCCCF=9.9999983608725376739278142322684 rounded to f32 0x411FFFFE or 0x411FFFFF,\n    // 1.0/0x3DCCCCCA=10.000002086163002207516386565905 rounded to f32 0x41200002 or 0x41200003.\n    { input: 100, expected: [reinterpretU32AsF32(0x411FFFFE), reinterpretU32AsF32(0x41200003)] },  // ~10\n  ] as ScalarToIntervalCase[],\n  f16: [\n    // 0.01 rounded to f16 0x211E or 0x211F.\n    // For inverseSqrt interval, floor_f16(1.0/sqrt(0x211F))-2ULP=0x48FD,\n    // ceil_f16(1.0/sqrt(0x211E))+2ULP=0x4903.\n    // For division, 1.0/0x4903=0.09976617303195635229929851909587 rounded to f16 0x2E62 or 0x2E63,\n    // 1.0/0x48FD=0.10023492560689115113547376664056 rounded to f16 0x2E6A or 0x2E6B.\n    { input: 0.01, expected: [reinterpretU16AsF16(0x2E62), reinterpretU16AsF16(0x2E6B)] },  // ~0.1\n    // For inverseSqrt interval, 1.0/sqrt(1.0)-2ULP=0x3BFE, 1.0/sqrt(1.0)+2ULP=0x3C01.\n    // For division, 1.0/0x3C01=0.99902439024390243902439024390244 rounded to f16 0x3BFE or 0x3BFF,\n    // 1.0/0x3BFE=1.000977517106549364613880742913 rounded to f16 0x3C01 or 0x3C02.\n    { input: 1, expected: [reinterpretU16AsF16(0x3BFE), reinterpretU16AsF16(0x3C02)] },  // ~1\n    // For inverseSqrt interval, 1.0/sqrt(4.0)-2ULP=0x37FE, 1.0/sqrt(4.0)+2ULP=0x3801.\n    // For division, 1.0/0x3801=1.9980487804878048780487804878049 rounded to f16 0x3FFE or 0x3FFF,\n    // 1.0/0x37FE=2.001955034213098729227761485826 rounded to f16 0x4001 or 0x4002.\n    { input: 4, expected: [reinterpretU16AsF16(0x3FFE), reinterpretU16AsF16(0x4002)] },  // ~2\n    // For inverseSqrt interval, floor_f16(1.0/sqrt(100.0))-2ULP=0x2E64,\n    // ceil_f16(1.0/sqrt(100.0))+2ULP=0x2E69.\n    // For division, 1.0/0x2E69=9.9841560024374942258493264279108 rounded to f16 0x48FD or 0x48FE,\n    // 1.0/0x2E64=10.014669926650366748166259168704 rounded to f16 0x4901 or 0x4902.\n    { input: 100, expected: [reinterpretU16AsF16(0x48FD), reinterpretU16AsF16(0x4902)] },  // ~10\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('sqrtInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          // Cases that input and/or result not exactly representable\n          ...kSqrtIntervalCases[p.trait],\n\n          // Cases out of definition domain\n          { input: -1, expected: kUnboundedBounds },\n          { input: 0, expected: kUnboundedBounds },\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n\n    // The expected error interval is inherited from 1.0 / inverseSqrt(x), the 2.5ULP for division\n    // is handled here.\n    const error = (n: number): number => {\n      return 2.5 * trait.oneULP(n);\n    };\n\n    const expected = trait.toInterval(applyError(t.params.expected, error));\n\n    const got = trait.sqrtInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `FP.${t.params.trait}.sqrtInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// All of these are hard coded, since the error intervals are difficult to express in a closed\n// human-readable form.\n// Some easy looking cases like f(x = -π|π) = 0 are actually quite difficult. This is because the\n// interval is calculated from the results of sin(x)/cos(x), which becomes very messy at x = -π|π,\n// since π is irrational, thus does not have an exact representation as a float.\n//\n// Even at 0, which has a precise f32/f16 value, there is still the problem that result of sin(0)\n// and cos(0) will be intervals due to the inherited nature of errors, so the proper interval will\n// be an interval calculated from dividing an interval by another interval and applying an error\n// function to that.\n//\n// This complexity is why the entire interval framework was developed.\n//\n// The examples here have been manually traced to confirm the expectation values are correct.\n// prettier-ignore\nconst kTanIntervalCases = {\n  f32: [\n    { input: kValue.f32.negative.pi.whole, expected: [reinterpretU64AsF64(0xbf40_02bc_9000_0000n), reinterpretU64AsF64(0x3f40_0144_f000_0000n)] },  // ~0.0\n    { input: kValue.f32.negative.pi.three_quarters, expected: [reinterpretU64AsF64(0x3fef_f4b1_3000_0000n), reinterpretU64AsF64(0x3ff0_05a9_9000_0000n)] },  // ~1.0\n    { input: kValue.f32.negative.pi.third, expected: [reinterpretU64AsF64(0xbffb_c16b_d000_0000n), reinterpretU64AsF64(0xbffb_ab8f_9000_0000n)] },  // ~-√3\n    { input: kValue.f32.negative.pi.quarter, expected: [reinterpretU64AsF64(0xbff0_05a9_b000_0000n), reinterpretU64AsF64(0xbfef_f4b1_5000_0000n)] },  // ~-1.0\n    { input: kValue.f32.negative.pi.sixth, expected: [reinterpretU64AsF64(0xbfe2_80f1_f000_0000n), reinterpretU64AsF64(0xbfe2_725e_d000_0000n)] },  // ~-1/√3\n    { input: 0, expected: [reinterpretU64AsF64(0xbf40_0200_b000_0000n), reinterpretU64AsF64(0x3f40_0200_b000_0000n)] },  // ~0.0\n    { input: kValue.f32.positive.pi.sixth, expected: [reinterpretU64AsF64(0x3fe2_725e_d000_0000n), reinterpretU64AsF64(0x3fe2_80f1_f000_0000n)] },  // ~1/√3\n    { input: kValue.f32.positive.pi.quarter, expected: [reinterpretU64AsF64(0x3fef_f4b1_5000_0000n), reinterpretU64AsF64(0x3ff0_05a9_b000_0000n)] },  // ~1.0\n    { input: kValue.f32.positive.pi.third, expected: [reinterpretU64AsF64(0x3ffb_ab8f_9000_0000n), reinterpretU64AsF64(0x3ffb_c16b_d000_0000n)] },  // ~√3\n    { input: kValue.f32.positive.pi.three_quarters, expected: [reinterpretU64AsF64(0xbff0_05a9_9000_0000n), reinterpretU64AsF64(0xbfef_f4b1_3000_0000n)] },  // ~-1.0\n    { input: kValue.f32.positive.pi.whole, expected: [reinterpretU64AsF64(0xbf40_0144_f000_0000n), reinterpretU64AsF64(0x3f40_02bc_9000_0000n)] },  // ~0.0\n  ] as ScalarToIntervalCase[],\n  f16: [\n    { input: kValue.f16.negative.pi.whole, expected: [reinterpretU64AsF64(0xbf7c_5600_0000_0000n), reinterpretU64AsF64(0x3f82_2e00_0000_0000n)] },  // ~0.0\n    { input: kValue.f16.negative.pi.three_quarters, expected: [reinterpretU64AsF64(0x3fef_4600_0000_0000n), reinterpretU64AsF64(0x3ff0_7200_0000_0000n)] },  // ~1.0\n    { input: kValue.f16.negative.pi.third, expected: [reinterpretU64AsF64(0xbffc_7600_0000_0000n), reinterpretU64AsF64(0xbffa_f600_0000_0000n)] },  // ~-√3\n    { input: kValue.f16.negative.pi.quarter, expected: [reinterpretU64AsF64(0xbff0_6600_0000_0000n), reinterpretU64AsF64(0xbfef_3600_0000_0000n)] },  // ~-1.0\n    { input: kValue.f16.negative.pi.sixth, expected: [reinterpretU64AsF64(0xbfe2_fe00_0000_0000n), reinterpretU64AsF64(0xbfe1_f600_0000_0000n)] },  // ~-1/√3\n    { input: 0, expected: [reinterpretU64AsF64(0xbf80_2e00_0000_0000n), reinterpretU64AsF64(0x3f80_2e00_0000_0000n)] },  // ~0.0\n    { input: kValue.f16.positive.pi.sixth, expected: [reinterpretU64AsF64(0x3fe1_f600_0000_0000n), reinterpretU64AsF64(0x3fe2_fe00_0000_0000n)] },  // ~1/√3\n    { input: kValue.f16.positive.pi.quarter, expected: [reinterpretU64AsF64(0x3fef_3600_0000_0000n), reinterpretU64AsF64(0x3ff0_6600_0000_0000n)] },  // ~1.0\n    { input: kValue.f16.positive.pi.third, expected: [reinterpretU64AsF64(0x3ffa_f600_0000_0000n), reinterpretU64AsF64(0x3ffc_7600_0000_0000n)] },  // ~√3\n    { input: kValue.f16.positive.pi.three_quarters, expected: [reinterpretU64AsF64(0xbff0_7200_0000_0000n), reinterpretU64AsF64(0xbfef_4600_0000_0000n)] },  // ~-1.0\n    { input: kValue.f16.positive.pi.whole, expected: [reinterpretU64AsF64(0xbf82_2e00_0000_0000n), reinterpretU64AsF64(0x3f7c_5600_0000_0000n)] },  // ~0.0\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('tanInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          ...kTanIntervalCases[p.trait],\n\n          // Cases that result in unbounded interval.\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.min, expected: kUnboundedBounds },\n          { input: constants.negative.pi.half, expected: kUnboundedBounds },\n          { input: constants.positive.pi.half, expected: kUnboundedBounds },\n          { input: constants.positive.max, expected: kUnboundedBounds },\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.tanInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.tanInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Some of these are hard coded, since the error intervals are difficult to express in a closed\n// human-readable form due to the inherited nature of the errors.\n// prettier-ignore\nconst kTanhIntervalCases = {\n  f32: [\n    { input: -1, expected: [reinterpretU64AsF64(0xbfe8_5efd_1000_0000n), reinterpretU64AsF64(0xbfe8_5ef8_9000_0000n)] },  // ~-0.7615...\n    { input: 0, expected: [reinterpretU64AsF64(0xbe8c_0000_b000_0000n), reinterpretU64AsF64(0x3e8c_0000_b000_0000n)] },  // ~0\n    { input: 1, expected: [reinterpretU64AsF64(0x3fe8_5ef8_9000_0000n), reinterpretU64AsF64(0x3fe8_5efd_1000_0000n)] },  // ~0.7615...\n  ] as ScalarToIntervalCase[],\n  f16: [\n    { input: -1, expected: [reinterpretU64AsF64(0xbfe8_9600_0000_0000n), reinterpretU64AsF64(0xbfe8_2e00_0000_0000n)] },  // ~-0.7615...\n    { input: 0, expected: [reinterpretU64AsF64(0xbf48_0e00_0000_0000n), reinterpretU64AsF64(0x3f48_0e00_0000_0000n)] },  // ~0\n    { input: 1, expected: [reinterpretU64AsF64(0x3fe8_2e00_0000_0000n), reinterpretU64AsF64(0x3fe8_9600_0000_0000n)] },  // ~0.7615...\n  ] as ScalarToIntervalCase[],\n} as const;\n\ng.test('tanhInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          ...kTanhIntervalCases[p.trait],\n\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.min, expected: kUnboundedBounds },\n          { input: constants.positive.max, expected: kUnboundedBounds },\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.tanhInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.tanhInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('truncInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          // Normals\n          { input: 0, expected: 0 },\n          { input: 0.1, expected: 0 },\n          { input: 0.9, expected: 0 },\n          { input: 1.0, expected: 1 },\n          { input: 1.1, expected: 1 },\n          { input: 1.9, expected: 1 },\n          { input: -0.1, expected: 0 },\n          { input: -0.9, expected: 0 },\n          { input: -1.0, expected: -1 },\n          { input: -1.1, expected: -1 },\n          { input: -1.9, expected: -1 },\n\n          // Subnormals\n          { input: constants.positive.subnormal.max, expected: 0 },\n          { input: constants.positive.subnormal.min, expected: 0 },\n          { input: constants.negative.subnormal.min, expected: 0 },\n          { input: constants.negative.subnormal.max, expected: 0 },\n\n          // Edge cases\n          { input: constants.positive.infinity, expected: kUnboundedBounds },\n          { input: constants.negative.infinity, expected: kUnboundedBounds },\n          { input: constants.positive.max, expected: constants.positive.max },\n          { input: constants.positive.min, expected: 0 },\n          { input: constants.negative.min, expected: constants.negative.min },\n          { input: constants.negative.max, expected: 0 },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.truncInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `FP.${t.params.trait}.truncInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface ScalarPairToIntervalCase {\n  // input is a pair of independent values, not a range, so should not be\n  // converted to a FPInterval.\n  input: [number, number];\n  expected: number | IntervalBounds;\n}\n\n// prettier-ignore\nconst kAdditionInterval64BitsNormalCases = {\n  f32: [\n    // 0.1 falls between f32 0x3DCCCCCC and 0x3DCCCCCD, -0.1 falls between f32 0xBDCCCCCD and 0xBDCCCCCC\n    // f32 0x3DCCCCCC+0x3DCCCCCC=0x3E4CCCCC, 0x3DCCCCCD+0x3DCCCCCD=0x3E4CCCCD\n    { input: [0.1, 0.1], expected: [reinterpretU32AsF32(0x3e4ccccc), reinterpretU32AsF32(0x3e4ccccd)] },  // ~0.2\n    // f32 0xBDCCCCCD+0xBDCCCCCD=0xBE4CCCCD, 0xBDCCCCCC+0xBDCCCCCC=0xBE4CCCCD\n    { input: [-0.1, -0.1], expected: [reinterpretU32AsF32(0xbe4ccccd), reinterpretU32AsF32(0xbe4ccccc)] },  // ~-0.2\n    // 0.1+(-0.1) expect f32 interval [0x3DCCCCCC+0xBDCCCCCD, 0x3DCCCCCD+0xBDCCCCCC]\n    { input: [0.1, -0.1], expected: [reinterpretU32AsF32(0x3dcccccc)+reinterpretU32AsF32(0xbdcccccd), reinterpretU32AsF32(0x3dcccccd)+reinterpretU32AsF32(0xbdcccccc)] },  // ~0.0\n    // -0.1+0.1 expect f32 interval [0xBDCCCCCD+0x3DCCCCCC, 0xBDCCCCCC+0x3DCCCCCD]\n    { input: [-0.1, 0.1], expected: [reinterpretU32AsF32(0xbdcccccd)+reinterpretU32AsF32(0x3dcccccc), reinterpretU32AsF32(0xbdcccccc)+reinterpretU32AsF32(0x3dcccccd)] },  // ~0.0\n  ] as ScalarPairToIntervalCase[],\n  f16: [\n    // 0.1 falls between f16 0x2E66 and 0x2E67, -0.1 falls between f16 0xAE67 and 0xAE66\n    // f16 0x2E66+0x2E66=0x3266, 0x2E67+0x2E67=0x3267\n    { input: [0.1, 0.1], expected: [reinterpretU16AsF16(0x3266), reinterpretU16AsF16(0x3267)] },  // ~0.2\n    // f16 0xAE67+0xAE67=0xB267, 0xAE66+0xAE66=0xB266\n    { input: [-0.1, -0.1], expected: [reinterpretU16AsF16(0xb267), reinterpretU16AsF16(0xb266)] },  // ~-0.2\n    // 0.1+(-0.1) expect f16 interval [0x2E66+0xAE67, 0x2E67+0xAE66]\n    { input: [0.1, -0.1], expected: [reinterpretU16AsF16(0x2e66)+reinterpretU16AsF16(0xae67), reinterpretU16AsF16(0x2e67)+reinterpretU16AsF16(0xae66)] },  // ~0.0\n    // -0.1+0.1 expect f16 interval [0xAE67+0x2E66, 0xAE66+0x2E67]\n    { input: [-0.1, 0.1], expected: [reinterpretU16AsF16(0xae67)+reinterpretU16AsF16(0x2e66), reinterpretU16AsF16(0xae66)+reinterpretU16AsF16(0x2e67)] },  // ~0.0\n  ] as ScalarPairToIntervalCase[],\n  abstract: [\n    // 0.1 isn't exactly representable in f64, but will be quantized to an\n    // exact value when storing to a 'number' (0x3FB999999999999A).\n    // This is why below the expectations are not intervals.\n    // f64 0x3FB999999999999A+0x3FB999999999999A = 0x3FC999999999999A\n    { input: [0.1, 0.1], expected: reinterpretU64AsF64(0x3FC999999999999An) },  // ~0.2\n    // f64 0xBFB999999999999A+0xBFB999999999999A = 0xBFC999999999999A\n    { input: [-0.1, -0.1], expected: reinterpretU64AsF64(0xBFC999999999999An) },  // ~-0.2\n    { input: [0.1, -0.1], expected: 0 },\n    { input: [-0.1, 0.1], expected: 0 },\n  ] as ScalarPairToIntervalCase[],\n} as const;\n\ng.test('additionInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarPairToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          // Representable normals\n          { input: [0, 0], expected: 0 },\n          { input: [1, 0], expected: 1 },\n          { input: [0, 1], expected: 1 },\n          { input: [-1, 0], expected: -1 },\n          { input: [0, -1], expected: -1 },\n          { input: [1, 1], expected: 2 },\n          { input: [1, -1], expected: 0 },\n          { input: [-1, 1], expected: 0 },\n          { input: [-1, -1], expected: -2 },\n\n          // 0.1 should be correctly rounded\n          { input: [0.1, 0], expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1'] },\n          { input: [0, 0.1], expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1'] },\n          // -0.1 should be correctly rounded\n          { input: [-0.1, 0], expected: kConstantCorrectlyRoundedExpectation[p.trait]['-0.1'] },\n          { input: [0, -0.1], expected: kConstantCorrectlyRoundedExpectation[p.trait]['-0.1'] },\n\n          // 64-bit normals that can not be exactly represented\n          ...kAdditionInterval64BitsNormalCases[p.trait],\n\n          // Subnormals\n          { input: [constants.positive.subnormal.max, 0], expected: [0, constants.positive.subnormal.max] },\n          { input: [0, constants.positive.subnormal.max], expected: [0, constants.positive.subnormal.max] },\n          { input: [constants.positive.subnormal.min, 0], expected: [0, constants.positive.subnormal.min] },\n          { input: [0, constants.positive.subnormal.min], expected: [0, constants.positive.subnormal.min] },\n          { input: [constants.negative.subnormal.max, 0], expected: [constants.negative.subnormal.max, 0] },\n          { input: [0, constants.negative.subnormal.max], expected: [constants.negative.subnormal.max, 0] },\n          { input: [constants.negative.subnormal.min, 0], expected: [constants.negative.subnormal.min, 0] },\n          { input: [0, constants.negative.subnormal.min], expected: [constants.negative.subnormal.min, 0] },\n\n          // Infinities\n          { input: [0, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, 0], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [0, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, 0], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, constants.negative.infinity], expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.additionInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.additionInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Cases for Atan2Interval. The positive x & y quadrant is tested in more detail, and the other\n// quadrants are spot checked that values are pointing in the right direction.\n// Note: atan2's parameters are labelled (y, x) instead of (x, y)\n// prettier-ignore\nconst kAtan2IntervalCases = {\n  // atan has 4096ULP error boundary for f32.\n  f32: [\n    // positive y, positive x\n    // √3 rounded to f32 0x3FDDB3D7, atan2(1, 0x3FDDB3D7)=0.52359877749051820266056630237827 ~ pi/6 rounded to f32 0x3F060A91 or 0x3F060A92,\n    // kValue.f32.positive.pi.sixth is 0x3F060A92.\n    { input: [1, reinterpretU32AsF32(0x3fddb3d7)], expected: [kMinusNULPFunctions['f32'](kValue.f32.positive.pi.sixth, 4097), kPlusNULPFunctions['f32'](kValue.f32.positive.pi.sixth, 4096)] },\n    // atan2(1, 1)=0.78539816339744830961566084581988 ~ pi/4 rounded to f32 0x3F490FDA or 0x3F490FDB,\n    // kValue.f32.positive.pi.quarter is 0x3F490FDB.\n    { input: [1, 1], expected: [kMinusNULPFunctions['f32'](kValue.f32.positive.pi.quarter, 4097), kPlusNULPFunctions['f32'](kValue.f32.positive.pi.quarter, 4096)] },\n    // √3 rounded to f32 0x3FDDB3D7, atan2(0x3FDDB3D7, 1) = 1.0471975493043784165707553892615 ~ pi/3 rounded to f32 0x3F860A91 or 0x3F860A92,\n    // kValue.f32.positive.pi.third is 0x3F860A92.\n    { input: [reinterpretU32AsF32(0x3fddb3d7), 1], expected: [kMinusNULPFunctions['f32'](kValue.f32.positive.pi.third, 4097), kPlusNULPFunctions['f32'](kValue.f32.positive.pi.third, 4096)] },\n\n    // positive y, negative x\n    // atan2(1, -1)=pi*3/4=2.3561944901923449288469825374591 rounded to f32 0x4016CBE3 or 0x4016CBE4,\n    // kValue.f32.positive.pi.three_quarters is 0x4016CBE4.\n    { input: [1, -1], expected: [kMinusNULPFunctions['f32'](kValue.f32.positive.pi.three_quarters, 4097), kPlusNULPFunctions['f32'](kValue.f32.positive.pi.three_quarters, 4096)] },\n\n    // negative y, negative x\n    // atan2(-1, -1)=-pi*3/4=-2.3561944901923449288469825374591 rounded to f32 0xC016CBE4 or 0xC016CBE3,\n    // kValue.f32.negative.pi.three_quarters is 0xC016CBE4.\n    { input: [-1, -1], expected: [kMinusNULPFunctions['f32'](kValue.f32.negative.pi.three_quarters, 4096), kPlusNULPFunctions['f32'](kValue.f32.negative.pi.three_quarters, 4097)] },\n\n    // negative y, positive x\n    // atan2(-1, 1)=-pi/4=-0.78539816339744830961566084581988 rounded to f32 0xBF490FDB or 0xBF490FDA,\n    // kValue.f32.negative.pi.quarter is 0xBF490FDB.\n    { input: [-1, 1], expected: [kMinusNULPFunctions['f32'](kValue.f32.negative.pi.quarter, 4096), kPlusNULPFunctions['f32'](kValue.f32.negative.pi.quarter, 4097)] },\n\n    // When y/x ~ 0, test that ULP applied to result of atan2, not the intermediate y/x value.\n    // y/x ~ 0, y<0, x<0, atan2(y,x) ~ -pi rounded to f32 0xC0490FDB or 0xC0490FDA,\n    // kValue.f32.negative.pi.whole is 0xC0490FDB.\n    {input: [kValue.f32.negative.max, -1], expected: [kMinusNULPFunctions['f32'](kValue.f32.negative.pi.whole, 4096), kPlusNULPFunctions['f32'](kValue.f32.negative.pi.whole, 4097)] },\n    // y/x ~ 0, y>0, x<0, atan2(y,x) ~ pi rounded to f32 0x40490FDA or 0x40490FDB,\n    // kValue.f32.positive.pi.whole is 0x40490FDB.\n    {input: [kValue.f32.positive.min, -1], expected: [kMinusNULPFunctions['f32'](kValue.f32.positive.pi.whole, 4097), kPlusNULPFunctions['f32'](kValue.f32.positive.pi.whole, 4096)] },\n  ] as ScalarPairToIntervalCase[],\n  // atan has 5ULP error boundary for f16.\n  f16: [\n    // positive y, positive x\n    // √3 rounded to f16 0x3EED, atan2(1, 0x3EED)=0.52375018906301191131992842392268 ~ pi/6 rounded to f16 0x3830 or 0x3831,\n    // kValue.f16.positive.pi.sixth is 0x3830.\n    { input: [1, reinterpretU16AsF16(0x3eed)], expected: [kMinusNULPFunctions['f16'](kValue.f16.positive.pi.sixth, 5), kPlusNULPFunctions['f16'](kValue.f16.positive.pi.sixth, 6)] },\n    // atan2(1, 1)=0.78539816339744830961566084581988 ~ pi/4 rounded to f16 0x3A48 or 0x3A49,\n    // kValue.f16.positive.pi.quarter is 0x3A48.\n    { input: [1, 1], expected: [kMinusNULPFunctions['f16'](kValue.f16.positive.pi.quarter, 5), kPlusNULPFunctions['f16'](kValue.f16.positive.pi.quarter, 6)] },\n    // √3 rounded to f16 0x3EED, atan2(0x3EED, 1) = 1.0470461377318847079113932677171 ~ pi/3 rounded to f16 0x3C30 or 0x3C31,\n    // kValue.f16.positive.pi.third is 0x3C30.\n    { input: [reinterpretU16AsF16(0x3eed), 1], expected: [kMinusNULPFunctions['f16'](kValue.f16.positive.pi.third, 5), kPlusNULPFunctions['f16'](kValue.f16.positive.pi.third, 6)] },\n\n    // positive y, negative x\n    // atan2(1, -1)=pi*3/4=2.3561944901923449288469825374591 rounded to f16 0x40B6 or 0x40B7,\n    // kValue.f16.positive.pi.three_quarters is 0x40B6.\n    { input: [1, -1], expected: [kMinusNULPFunctions['f16'](kValue.f16.positive.pi.three_quarters, 5), kPlusNULPFunctions['f16'](kValue.f16.positive.pi.three_quarters, 6)] },\n\n    // negative y, negative x\n    // atan2(-1, -1)=-pi*3/4=-2.3561944901923449288469825374591 rounded to f16 0xC0B7 or 0xC0B6,\n    // kValue.f16.negative.pi.three_quarters is 0xC0B6.\n    { input: [-1, -1], expected: [kMinusNULPFunctions['f16'](kValue.f16.negative.pi.three_quarters, 6), kPlusNULPFunctions['f16'](kValue.f16.negative.pi.three_quarters, 5)] },\n\n    // negative y, positive x\n    // atan2(-1, 1)=-pi/4=-0.78539816339744830961566084581988 rounded to f16 0xBA49 or 0xBA48,\n    // kValue.f16.negative.pi.quarter is 0xBA48.\n    { input: [-1, 1], expected: [kMinusNULPFunctions['f16'](kValue.f16.negative.pi.quarter, 6), kPlusNULPFunctions['f16'](kValue.f16.negative.pi.quarter, 5)] },\n\n    // When y/x ~ 0, test that ULP applied to result of atan2, not the intermediate y/x value.\n    // y/x ~ 0, y<0, x<0, atan2(y,x) ~ -pi rounded to f16 0xC249 or 0xC248,\n    // kValue.f16.negative.pi.whole is 0xC248.\n    {input: [kValue.f16.negative.max, -1], expected: [kMinusNULPFunctions['f16'](kValue.f16.negative.pi.whole, 6), kPlusNULPFunctions['f16'](kValue.f16.negative.pi.whole, 5)] },\n    // y/x ~ 0, y>0, x<0, atan2(y,x) ~ pi rounded to f16 0x4248 or 0x4249,\n    // kValue.f16.positive.pi.whole is 0x4248.\n    {input: [kValue.f16.positive.min, -1], expected: [kMinusNULPFunctions['f16'](kValue.f16.positive.pi.whole, 5), kPlusNULPFunctions['f16'](kValue.f16.positive.pi.whole, 6)] },\n  ] as ScalarPairToIntervalCase[],\n} as const;\n\ng.test('atan2Interval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarPairToIntervalCase>(p => {\n        const constants = FP[p.trait].constants();\n        // prettier-ignore\n        return [\n          ...kAtan2IntervalCases[p.trait],\n\n          // Cases that y out of bound.\n          // positive y, positive x\n          { input: [Number.POSITIVE_INFINITY, 1], expected: kUnboundedBounds },\n          // positive y, negative x\n          { input: [Number.POSITIVE_INFINITY, -1], expected: kUnboundedBounds },\n          // negative y, negative x\n          { input: [Number.NEGATIVE_INFINITY, -1], expected: kUnboundedBounds },\n          // negative y, positive x\n          { input: [Number.NEGATIVE_INFINITY, 1], expected: kUnboundedBounds },\n\n          // Discontinuity @ origin (0,0)\n          { input: [0, 0], expected: kUnboundedBounds },\n          { input: [0, constants.positive.subnormal.max], expected: kUnboundedBounds },\n          { input: [0, constants.negative.subnormal.min], expected: kUnboundedBounds },\n          { input: [0, constants.positive.min], expected: kUnboundedBounds },\n          { input: [0, constants.negative.max], expected: kUnboundedBounds },\n          { input: [0, constants.positive.max], expected: kUnboundedBounds },\n          { input: [0, constants.negative.min], expected: kUnboundedBounds },\n          { input: [0, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [0, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [0, 1], expected: kUnboundedBounds },\n          { input: [constants.positive.subnormal.max, 1], expected: kUnboundedBounds },\n          { input: [constants.negative.subnormal.min, 1], expected: kUnboundedBounds },\n\n          // Very large |x| values should cause kUnboundedBounds to be returned, due to the restrictions on division\n          { input: [1, constants.positive.max], expected: kUnboundedBounds },\n          { input: [1, constants.positive.nearest_max], expected: kUnboundedBounds },\n          { input: [1, constants.negative.min], expected: kUnboundedBounds },\n          { input: [1, constants.negative.nearest_min], expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const [y, x] = t.params.input;\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.atan2Interval(y, x);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.atan2Interval(${y}, ${x}) returned ${got}]. Expected ${expected}`\n    );\n  });\n\ng.test('distanceIntervalScalar')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarPairToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          { input: [1.0, 0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [0.0, 1.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [-0.0, -1.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [0.0, -1.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [0.1, 0], expected: kRootSumSquareExpectionInterval[p.trait]['[0.1]'] },  // ~0.1\n          { input: [0, 0.1], expected: kRootSumSquareExpectionInterval[p.trait]['[0.1]'] },  // ~0.1\n          { input: [-0.1, 0], expected: kRootSumSquareExpectionInterval[p.trait]['[0.1]'] },  // ~0.1\n          { input: [0, -0.1], expected: kRootSumSquareExpectionInterval[p.trait]['[0.1]'] },  // ~0.1\n          { input: [10.0, 0], expected: kRootSumSquareExpectionInterval[p.trait]['[10]'] },  // ~10\n          { input: [0, 10.0], expected: kRootSumSquareExpectionInterval[p.trait]['[10]'] },  // ~10\n          { input: [-10.0, 0], expected: kRootSumSquareExpectionInterval[p.trait]['[10]'] },  // ~10\n          { input: [0, -10.0], expected: kRootSumSquareExpectionInterval[p.trait]['[10]'] },  // ~10\n\n          // distance(x, y), where x - y = 0 has an acceptance interval of kUnboundedBounds,\n          // because distance(x, y) = length(x - y), and length(0) = kUnboundedBounds\n          { input: [0, 0], expected: kUnboundedBounds },\n          { input: [1.0, 1.0], expected: kUnboundedBounds },\n          { input: [-1.0, -1.0], expected: kUnboundedBounds },\n\n          // Subnormal Cases\n          { input: [constants.negative.subnormal.min, 0], expected: kUnboundedBounds },\n          { input: [constants.negative.subnormal.max, 0], expected: kUnboundedBounds },\n          { input: [constants.positive.subnormal.min, 0], expected: kUnboundedBounds },\n          { input: [constants.positive.subnormal.max, 0], expected: kUnboundedBounds },\n\n          // Edge cases\n          { input: [constants.positive.infinity, 0], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, 0], expected: kUnboundedBounds },\n          { input: [constants.negative.min, 0], expected: kUnboundedBounds },\n          { input: [constants.negative.max, 0], expected: kUnboundedBounds },\n          { input: [constants.positive.min, 0], expected: kUnboundedBounds },\n          { input: [constants.positive.max, 0], expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.distanceInterval(...t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.distanceInterval(${t.params.input[0]}, ${t.params.input[1]}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// prettier-ignore\nconst kDivisionInterval64BitsNormalCases = {\n  f32: [\n    // Zero divided by any non-zero finite value results in zero.\n    { input: [0, 0.1], expected: 0 },\n    { input: [0, -0.1], expected: 0 },\n    // 0.1 rounded to f32 0x3DCCCCCC or 0x3DCCCCCD,\n    // 1.0/0x3DCCCCCD = 9.9999998509883902204460179966303 rounded to f32 0x411FFFFF or 0x41200000,\n    // 1.0/0x3DCCCCCC = 10.000000596046483527138934924167 rounded to f32 0x41200000 or 0x41200001.\n    { input: [1, 0.1], expected: [reinterpretU32AsF32(0x411fffff), reinterpretU32AsF32(0x41200001)] },  // ~10.0\n    // The same for -1/-0.1\n    { input: [-1, -0.1], expected: [reinterpretU32AsF32(0x411fffff), reinterpretU32AsF32(0x41200001)] },  // ~10.0\n    // -10.000000596046483527138934924167 rounded to f32 0xC1200001 or 0xC1200000,\n    // -9.9999998509883902204460179966303 rounded to f32 0xC1200000 or 0xC11FFFFF.\n    { input: [-1, 0.1], expected: [reinterpretU32AsF32(0xc1200001), reinterpretU32AsF32(0xc11fffff)] },  // ~-10.0\n    { input: [1, -0.1], expected: [reinterpretU32AsF32(0xc1200001), reinterpretU32AsF32(0xc11fffff)] },  // ~-10.0\n    // Cases that expected interval larger than +-1ULP.\n    // 0.000001 rounded to f32 0x358637BD or 0x358637BE,\n    // 1.0/0x358637BE = 999999.88883793195700674522548684 rounded to f32 0x497423FE or 0x497423FF,\n    // 1.0/0x358637BD = 1000000.0025247573063743994399971 rounded to f32 0x49742400 or 0x49742401.\n    { input: [1, 0.000001], expected: [reinterpretU32AsF32(0x497423fe), reinterpretU32AsF32(0x49742401)] },  // ~1000000.0\n    { input: [1, -0.000001], expected: [reinterpretU32AsF32(0xc9742401), reinterpretU32AsF32(0xc97423fe)] },  // ~-1000000.0\n  ] as ScalarPairToIntervalCase[],\n  f16: [\n    // Zero divided by any non-zero finite value results in zero.\n    { input: [0, 0.1], expected: 0 },\n    { input: [0, -0.1], expected: 0 },\n    // 0.1 rounded to f16 0x2E66 or 0x2E67,\n    // 1.0/0x2E67 = 9.9963392312385600976205003050641 rounded to f16 0x48FF or 0x4900,\n    // 1.0/0x2E66 = 10.002442002442002442002442002442 rounded to f16 0x4900 or 0x4901.\n    { input: [1, 0.1], expected: [reinterpretU16AsF16(0x48ff), reinterpretU16AsF16(0x4901)] },  // ~10.0\n    // The same for -1/-0.1\n    { input: [-1, -0.1], expected: [reinterpretU16AsF16(0x48ff), reinterpretU16AsF16(0x4901)] },  // ~10.0\n    // -10.002442002442002442002442002442 rounded to f16 0xC901 or 0xC900,\n    // -9.9963392312385600976205003050641 rounded to f16 0xC900 or 0xC8FF.\n    { input: [-1, 0.1], expected: [reinterpretU16AsF16(0xc901), reinterpretU16AsF16(0xc8ff)] },  // ~-10.0\n    { input: [1, -0.1], expected: [reinterpretU16AsF16(0xc901), reinterpretU16AsF16(0xc8ff)] },  // ~-10.0\n    // Cases that expected interval larger than +-1ULP.\n    // 0.001 rounded to f16 0x1418 or 0x1419,\n    // 1.0/0x1419 = 999.59580552907535977846384072716 rounded to f16 0x63CF or 0x63D0,\n    // 1.0/0x1418 = 1000.5496183206106870229007633588 rounded to f16 0x63D1 or 0x63D2.\n    { input: [1, 0.001], expected: [reinterpretU16AsF16(0x63cf), reinterpretU16AsF16(0x63d2)] },  // ~1000.0\n    { input: [1, -0.001], expected: [reinterpretU16AsF16(0xe3d2), reinterpretU16AsF16(0xe3cf)] },  // ~-1000.0\n  ] as ScalarPairToIntervalCase[],\n} as const;\n\ng.test('divisionInterval')\n  .params(u =>\n    u\n      .combine('trait', ['abstract', 'f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarPairToIntervalCase>(p => {\n        // This is a ULP based interval, so abstract should behave like f32, so\n        // swizzling the trait as needed.\n        const trait = p.trait === 'abstract' ? 'f32' : p.trait;\n        const fp = FP[trait];\n        const constants = fp.constants();\n        // prettier-ignore\n        return [\n          // Representable normals\n          { input: [0, 1], expected: 0 },\n          { input: [0, -1], expected: 0 },\n          { input: [1, 1], expected: 1 },\n          { input: [1, -1], expected: -1 },\n          { input: [-1, 1], expected: -1 },\n          { input: [-1, -1], expected: 1 },\n          { input: [4, 2], expected: 2 },\n          { input: [-4, 2], expected: -2 },\n          { input: [4, -2], expected: -2 },\n          { input: [-4, -2], expected: 2 },\n\n          // 64-bit normals that can not be exactly represented\n          ...kDivisionInterval64BitsNormalCases[trait],\n\n          // Denominator out of range\n          { input: [1, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [1, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [1, constants.positive.max], expected: kUnboundedBounds },\n          { input: [1, constants.negative.min], expected: kUnboundedBounds },\n          { input: [1, 0], expected: kUnboundedBounds },\n          { input: [1, constants.positive.subnormal.max], expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    // This is a ULP based interval, so abstract should behave like f32, so\n    // swizzling the trait as needed for calculating the expected result.\n    const trait = t.params.trait === 'abstract' ? 'f32' : t.params.trait;\n    const fp = FP[trait];\n\n    const error = (n: number): number => {\n      return 2.5 * fp.oneULP(n);\n    };\n\n    const [x, y] = t.params.input;\n\n    // Do not swizzle here, so the correct implementation under test is called.\n    const expected = FP[t.params.trait].toInterval(applyError(t.params.expected, error));\n    const got = FP[t.params.trait].divisionInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.divisionInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\nconst kLdexpIntervalCases = {\n  f32: [\n    // 64-bit normals\n    { input: [1.0000000001, 1], expected: [2, kPlusNULPFunctions['f32'](2, 2)] }, // ~2, additional ULP error due to first param not being f32 precise\n    { input: [-1.0000000001, 1], expected: [kMinusNULPFunctions['f32'](-2, 2), -2] }, // ~-2, additional ULP error due to first param not being f32 precise\n    // Edge Cases\n    // f32 0b0_01111111_11111111111111111111111 = 1.9999998807907104,\n    // 1.9999998807907104 * 2 ** 127 = f32.positive.max\n    { input: [1.9999998807907104, 127], expected: kValue.f32.positive.max },\n    // f32.positive.min = 1 * 2 ** -126\n    { input: [1, -126], expected: kValue.f32.positive.min },\n    // f32.positive.subnormal.max = 0.9999998807907104 * 2 ** -126\n    { input: [0.9999998807907104, -126], expected: [0, kValue.f32.positive.subnormal.max] },\n    // f32.positive.subnormal.min = 1.1920928955078125e-07 * 2 ** -126\n    { input: [1.1920928955078125e-7, -126], expected: [0, kValue.f32.positive.subnormal.min] },\n    { input: [-1.1920928955078125e-7, -126], expected: [kValue.f32.negative.subnormal.max, 0] },\n    { input: [-0.9999998807907104, -126], expected: [kValue.f32.negative.subnormal.min, 0] },\n    { input: [-1, -126], expected: kValue.f32.negative.max },\n    { input: [-1.9999998807907104, 127], expected: kValue.f32.negative.min },\n    // e2 + bias <= 0, expect correctly rounded intervals.\n    { input: [2 ** 120, -130], expected: 2 ** -10 },\n    // Out of Bounds\n    { input: [1, 128], expected: kUnboundedBounds },\n    { input: [-1, 128], expected: kUnboundedBounds },\n    { input: [100, 126], expected: kUnboundedBounds },\n    { input: [-100, 126], expected: kUnboundedBounds },\n    { input: [2 ** 100, 100], expected: kUnboundedBounds },\n  ] as ScalarPairToIntervalCase[],\n  f16: [\n    // 64-bit normals\n    { input: [1.0000000001, 1], expected: [2, kPlusNULPFunctions['f16'](2, 2)] }, // ~2, additional ULP error due to first param not being f16 precise\n    { input: [-1.0000000001, 1], expected: [kMinusNULPFunctions['f16'](-2, 2), -2] }, // ~-2, additional ULP error due to first param not being f16 precise\n    // Edge Cases\n    // f16 0b0_01111_1111111111 = 1.9990234375, 1.9990234375 * 2 ** 15 = f16.positive.max\n    { input: [1.9990234375, 15], expected: kValue.f16.positive.max },\n    // f16.positive.min = 1 * 2 ** -14\n    { input: [1, -14], expected: kValue.f16.positive.min },\n    // f16.positive.subnormal.max = 0.9990234375 * 2 ** -14\n    { input: [0.9990234375, -14], expected: [0, kValue.f16.positive.subnormal.max] },\n    // f16.positive.subnormal.min = 1 * 2 ** -10 * 2 ** -14 = 0.0009765625 * 2 ** -14\n    { input: [0.0009765625, -14], expected: [0, kValue.f16.positive.subnormal.min] },\n    { input: [-0.0009765625, -14], expected: [kValue.f16.negative.subnormal.max, 0] },\n    { input: [-0.9990234375, -14], expected: [kValue.f16.negative.subnormal.min, 0] },\n    { input: [-1, -14], expected: kValue.f16.negative.max },\n    { input: [-1.9990234375, 15], expected: kValue.f16.negative.min },\n    // e2 + bias <= 0, expect correctly rounded intervals.\n    { input: [2 ** 12, -18], expected: 2 ** -6 },\n    // Out of Bounds\n    { input: [1, 16], expected: kUnboundedBounds },\n    { input: [-1, 16], expected: kUnboundedBounds },\n    { input: [100, 14], expected: kUnboundedBounds },\n    { input: [-100, 14], expected: kUnboundedBounds },\n    { input: [2 ** 10, 10], expected: kUnboundedBounds },\n  ] as ScalarPairToIntervalCase[],\n} as const;\n\ng.test('ldexpInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarPairToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          // always exactly represeantable cases\n          { input: [0, 0], expected: 0 },\n          { input: [0, 1], expected: 0 },\n          { input: [0, -1], expected: 0 },\n          { input: [1, 1], expected: 2 },\n          { input: [1, -1], expected: 0.5 },\n          { input: [-1, 1], expected: -2 },\n          { input: [-1, -1], expected: -0.5 },\n\n          ...kLdexpIntervalCases[p.trait],\n\n          // Extremely negative e2, any float value should be scale to 0.0 as the ground truth\n          // f64 e1 * 2 ** e2 would be 0.0 for e2 = -2147483648.\n          { input: [constants.positive.max, kValue.i32.negative.min], expected: 0 },\n          { input: [constants.negative.min, kValue.i32.negative.min], expected: 0 },\n          // Out of Bounds\n          { input: [constants.positive.max, kValue.i32.positive.max], expected: kUnboundedBounds },\n          { input: [constants.negative.min, kValue.i32.positive.max], expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.ldexpInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.ldexpInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('maxInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarPairToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          // Representable normals\n          { input: [0, 0], expected: 0 },\n          { input: [1, 0], expected: 1 },\n          { input: [0, 1], expected: 1 },\n          { input: [-1, 0], expected: 0 },\n          { input: [0, -1], expected: 0 },\n          { input: [1, 1], expected: 1 },\n          { input: [1, -1], expected: 1 },\n          { input: [-1, 1], expected: 1 },\n          { input: [-1, -1], expected: -1 },\n\n          // 0.1 and -0.1 should be correctly rounded\n          { input: [-0.1, 0], expected: 0 },\n          { input: [0, -0.1], expected: 0 },\n          { input: [0.1, 0], expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1'] },  // ~0.1\n          { input: [0, 0.1], expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1'] },  // ~0.1\n          { input: [0.1, 0.1], expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1'] },  // ~0.1\n          { input: [0.1, -0.1], expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1'] },  // ~0.1\n          { input: [-0.1, 0.1], expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1'] },  // ~0.1\n          { input: [-0.1, -0.1], expected: kConstantCorrectlyRoundedExpectation[p.trait]['-0.1'] },  // ~-0.1\n\n          // Representable subnormals\n          { input: [constants.positive.subnormal.max, 0], expected: [0, constants.positive.subnormal.max] },\n          { input: [0, constants.positive.subnormal.max], expected: [0, constants.positive.subnormal.max] },\n          { input: [constants.positive.subnormal.min, 0], expected: [0, constants.positive.subnormal.min] },\n          { input: [0, constants.positive.subnormal.min], expected: [0, constants.positive.subnormal.min] },\n          { input: [constants.negative.subnormal.max, 0], expected: [constants.negative.subnormal.max, 0] },\n          { input: [0, constants.negative.subnormal.max], expected: [constants.negative.subnormal.max, 0] },\n          { input: [constants.negative.subnormal.min, 0], expected: [constants.negative.subnormal.min, 0] },\n          { input: [0, constants.negative.subnormal.min], expected: [constants.negative.subnormal.min, 0] },\n          { input: [1, constants.positive.subnormal.max], expected: 1 },\n          { input: [constants.negative.subnormal.min, constants.positive.subnormal.max], expected: [constants.negative.subnormal.min, constants.positive.subnormal.max] },\n\n          // Infinities\n          { input: [0, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, 0], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [0, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, 0], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, constants.negative.infinity], expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const [x, y] = t.params.input;\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.maxInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.maxInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('minInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarPairToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          // Representable normals\n          { input: [0, 0], expected: 0 },\n          { input: [1, 0], expected: 0 },\n          { input: [0, 1], expected: 0 },\n          { input: [-1, 0], expected: -1 },\n          { input: [0, -1], expected: -1 },\n          { input: [1, 1], expected: 1 },\n          { input: [1, -1], expected: -1 },\n          { input: [-1, 1], expected: -1 },\n          { input: [-1, -1], expected: -1 },\n\n          // 64-bit normals that not exactly representable\n          { input: [0.1, 0], expected: 0 },\n          { input: [0, 0.1], expected: 0 },\n          { input: [-0.1, 0], expected: kConstantCorrectlyRoundedExpectation[p.trait]['-0.1'] },  // ~-0.1\n          { input: [0, -0.1], expected: kConstantCorrectlyRoundedExpectation[p.trait]['-0.1'] },  // ~-0.1\n          { input: [0.1, 0.1], expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1'] },  // ~0.1\n          { input: [0.1, -0.1], expected: kConstantCorrectlyRoundedExpectation[p.trait]['-0.1'] },  // ~-0.1\n          { input: [-0.1, 0.1], expected: kConstantCorrectlyRoundedExpectation[p.trait]['-0.1'] },  // ~-0.1\n          { input: [-0.1, -0.1], expected: kConstantCorrectlyRoundedExpectation[p.trait]['-0.1'] },  // ~-0.1\n\n          // Representable subnormals\n          { input: [constants.positive.subnormal.max, 0], expected: [0, constants.positive.subnormal.max] },\n          { input: [0, constants.positive.subnormal.max], expected: [0, constants.positive.subnormal.max] },\n          { input: [constants.positive.subnormal.min, 0], expected: [0, constants.positive.subnormal.min] },\n          { input: [0, constants.positive.subnormal.min], expected: [0, constants.positive.subnormal.min] },\n          { input: [constants.negative.subnormal.max, 0], expected: [constants.negative.subnormal.max, 0] },\n          { input: [0, constants.negative.subnormal.max], expected: [constants.negative.subnormal.max, 0] },\n          { input: [constants.negative.subnormal.min, 0], expected: [constants.negative.subnormal.min, 0] },\n          { input: [0, constants.negative.subnormal.min], expected: [constants.negative.subnormal.min, 0] },\n          { input: [-1, constants.positive.subnormal.max], expected: -1 },\n          { input: [constants.negative.subnormal.min, constants.positive.subnormal.max], expected: [constants.negative.subnormal.min, constants.positive.subnormal.max] },\n\n          // Infinities\n          { input: [0, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, 0], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [0, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, 0], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, constants.negative.infinity], expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const [x, y] = t.params.input;\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.minInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.minInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// prettier-ignore\nconst kMultiplicationInterval64BitsNormalCases = {\n  f32: [\n    // 0.1*0.1, 0.1 falls between f32 0x3DCCCCCC and 0x3DCCCCCD,\n    // min result 0x3DCCCCCC*0x3DCCCCCC=0.00999999880790713952713681734167 rounded to f32 0x3C23D708 or 0x3C23D709,\n    // max result 0x3DCCCCCD*0x3DCCCCCD=0.01000000029802322622044605108385 rounded to f32 0x3C23D70A or 0x3C23D70B.\n    { input: [0.1, 0.1], expected: [reinterpretU32AsF32(0x3c23d708), reinterpretU32AsF32(0x3c23d70b)] },  // ~0.01\n    { input: [-0.1, -0.1], expected: [reinterpretU32AsF32(0x3c23d708), reinterpretU32AsF32(0x3c23d70b)] },  // ~0.01\n    // -0.01000000029802322622044605108385 rounded to f32 0xBC23D70B or 0xBC23D70A,\n    // -0.00999999880790713952713681734167 rounded to f32 0xBC23D709 or 0xBC23D708.\n    { input: [0.1, -0.1], expected: [reinterpretU32AsF32(0xbc23d70b), reinterpretU32AsF32(0xbc23d708)] },  // ~-0.01\n    { input: [-0.1, 0.1], expected: [reinterpretU32AsF32(0xbc23d70b), reinterpretU32AsF32(0xbc23d708)] },  // ~-0.01\n  ] as ScalarPairToIntervalCase[],\n  f16: [\n    // 0.1*0.1, 0.1 falls between f16 0x2E66 and 0x2E67,\n    // min result 0x2E66*0x2E66=0.00999511778354644775390625 rounded to f16 0x211E or 0x211F,\n    // max result 0x2E67*0x2E67=0.0100073255598545074462890625 rounded to f16 0x211F or 0x2120.\n    { input: [0.1, 0.1], expected: [reinterpretU16AsF16(0x211e), reinterpretU16AsF16(0x2120)] },  // ~0.01\n    { input: [-0.1, -0.1], expected: [reinterpretU16AsF16(0x211e), reinterpretU16AsF16(0x2120)] },  // ~0.01\n    // -0.0100073255598545074462890625 rounded to f16 0xA120 or 0xA11F,\n    // -0.00999511778354644775390625 rounded to f16 0xA11F or 0xA11E.\n    { input: [0.1, -0.1], expected: [reinterpretU16AsF16(0xa120), reinterpretU16AsF16(0xa11e)] },  // ~-0.01\n    { input: [-0.1, 0.1], expected: [reinterpretU16AsF16(0xa120), reinterpretU16AsF16(0xa11e)] },  // ~-0.01\n  ] as ScalarPairToIntervalCase[],\n  abstract: [\n    // 0.1 isn't exactly representable in f64, but will be quantized to an\n    // exact value when storing to a 'number' (0x3FB999999999999A).\n    // This is why below the expectations are not intervals.\n    // f64 0.1 * 0.1 = 0x3f847ae147ae147c,\n    { input: [0.1, 0.1], expected: reinterpretU64AsF64(0x3f847ae147ae147cn) },  // ~0.01\n    { input: [-0.1, -0.1], expected: reinterpretU64AsF64(0x3f847ae147ae147cn) },  // ~0.01\n    { input: [0.1, -0.1], expected: reinterpretU64AsF64(0xbf847ae147ae147cn) },  // ~-0.01\n    { input: [-0.1, 0.1], expected: reinterpretU64AsF64(0xbf847ae147ae147cn) },  // ~-0.01\n  ] as ScalarPairToIntervalCase[],\n} as const;\n\ng.test('multiplicationInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarPairToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          // Representable normals\n          { input: [0, 0], expected: 0 },\n          { input: [1, 0], expected: 0 },\n          { input: [0, 1], expected: 0 },\n          { input: [-1, 0], expected: 0 },\n          { input: [0, -1], expected: 0 },\n          { input: [1, 1], expected: 1 },\n          { input: [1, -1], expected: -1 },\n          { input: [-1, 1], expected: -1 },\n          { input: [-1, -1], expected: 1 },\n          { input: [2, 1], expected: 2 },\n          { input: [1, -2], expected: -2 },\n          { input: [-2, 1], expected: -2 },\n          { input: [-2, -1], expected: 2 },\n          { input: [2, 2], expected: 4 },\n          { input: [2, -2], expected: -4 },\n          { input: [-2, 2], expected: -4 },\n          { input: [-2, -2], expected: 4 },\n\n          // 64-bit normals that can not be exactly represented\n          // Finite values multiply zero result in zero\n          { input: [0.1, 0], expected: 0 },\n          { input: [0, 0.1], expected: 0 },\n          { input: [-0.1, 0], expected: 0 },\n          { input: [0, -0.1], expected: 0 },\n          // Finite value multiply +/-1.0\n          { input: [0.1, 1], expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1'] },\n          { input: [-1, -0.1], expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1'] },\n          { input: [-0.1, 1], expected: kConstantCorrectlyRoundedExpectation[p.trait]['-0.1'] },\n          { input: [-1, 0.1], expected: kConstantCorrectlyRoundedExpectation[p.trait]['-0.1'] },\n          // Other cases\n          ...kMultiplicationInterval64BitsNormalCases[p.trait],\n\n          // Infinities\n          { input: [0, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [1, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [-1, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [0, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [1, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [-1, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n\n          // Edges\n          { input: [constants.positive.max, constants.positive.max], expected: kUnboundedBounds },\n          { input: [constants.negative.min, constants.negative.min], expected: kUnboundedBounds },\n          { input: [constants.positive.max, constants.negative.min], expected: kUnboundedBounds },\n          { input: [constants.negative.min, constants.positive.max], expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.multiplicationInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.multiplicationInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Some of these are hard coded, since the error intervals are difficult to express in a closed\n// human-readable form due to the inherited nature of the errors.\n// prettier-ignore\nconst kPowIntervalCases = {\n  f32 : [\n    { input: [1, 0], expected: [kMinusNULPFunctions['f32'](1, 3), reinterpretU64AsF64(0x3ff0_0000_3000_0000n)] },  // ~1\n    { input: [2, 0], expected: [kMinusNULPFunctions['f32'](1, 3), reinterpretU64AsF64(0x3ff0_0000_3000_0000n)] },  // ~1\n    { input: [kValue.f32.positive.max, 0], expected: [kMinusNULPFunctions['f32'](1, 3), reinterpretU64AsF64(0x3ff0_0000_3000_0000n)] },  // ~1\n    { input: [1, 1], expected: [reinterpretU64AsF64(0x3fef_fffe_dfff_fe00n), reinterpretU64AsF64(0x3ff0_0000_c000_0200n)] },  // ~1\n    { input: [1, 100], expected: [reinterpretU64AsF64(0x3fef_ffba_3fff_3800n), reinterpretU64AsF64(0x3ff0_0023_2000_c800n)] },  // ~1\n    { input: [2, 1], expected: [reinterpretU64AsF64(0x3fff_fffe_a000_0200n), reinterpretU64AsF64(0x4000_0001_0000_0200n)] },  // ~2\n    { input: [2, 2], expected: [reinterpretU64AsF64(0x400f_fffd_a000_0400n), reinterpretU64AsF64(0x4010_0001_a000_0400n)] },  // ~4\n    { input: [10, 10], expected: [reinterpretU64AsF64(0x4202_a04f_51f7_7000n), reinterpretU64AsF64(0x4202_a070_ee08_e000n)] },  // ~10000000000\n    { input: [10, 1], expected: [reinterpretU64AsF64(0x4023_fffe_0b65_8b00n), reinterpretU64AsF64(0x4024_0002_149a_7c00n)] },  // ~10\n  ] as ScalarPairToIntervalCase[],\n  f16 : [\n    { input: [1, 0], expected: [reinterpretU64AsF64(0x3fef_fc00_0000_0000n), reinterpretU64AsF64(0x3ff0_0200_0000_0000n)] },  // ~1\n    { input: [2, 0], expected: [reinterpretU64AsF64(0x3fef_fc00_0000_0000n), reinterpretU64AsF64(0x3ff0_0200_0000_0000n)] },  // ~1\n    { input: [kValue.f16.positive.max, 0], expected: [reinterpretU64AsF64(0x3fef_fc00_0000_0000n), reinterpretU64AsF64(0x3ff0_0200_0000_0000n)] },  // ~1\n    { input: [1, 1], expected: [reinterpretU64AsF64(0x3fef_cbf0_0000_0000n), reinterpretU64AsF64(0x3ff0_1c10_0000_0000n)] },  // ~1\n    { input: [1, 100], expected: [reinterpretU64AsF64(0x3fe2_91c0_0000_0000n), reinterpretU64AsF64(0x3ffb_8a40_0000_0000n)] },  // ~1\n    { input: [2, 1], expected: [reinterpretU64AsF64(0x3fff_c410_0000_0000n), reinterpretU64AsF64(0x4000_2410_0000_0000n)] },  // ~2\n    { input: [2, 2], expected: [reinterpretU64AsF64(0x400f_9020_0000_0000n), reinterpretU64AsF64(0x4010_4420_0000_0000n)] },  // ~4\n    { input: [5, 5], expected: [reinterpretU64AsF64(0x40a7_5f70_0000_0000n), reinterpretU64AsF64(0x40a9_5520_0000_0000n)] },  // ~3125\n    { input: [10, 1], expected: [reinterpretU64AsF64(0x4023_c57c_0000_0000n), reinterpretU64AsF64(0x4024_36a0_0000_0000n)] },  // ~10\n  ] as ScalarPairToIntervalCase[],\n} as const;\n\ng.test('powInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarPairToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          { input: [-1, 0], expected: kUnboundedBounds },\n          { input: [0, 0], expected: kUnboundedBounds },\n          { input: [0, 1], expected: kUnboundedBounds },\n          { input: [1, constants.positive.max], expected: kUnboundedBounds },\n          { input: [constants.positive.max, 1], expected: kUnboundedBounds },\n\n          ...kPowIntervalCases[p.trait],\n        ];\n      })\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.powInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.powInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// prettier-ignore\nconst kRemainderCases = {\n  f32: [\n    { input: [1, 0.1], expected: [reinterpretU32AsF32(0xb4000000), reinterpretU32AsF32(0x3dccccd8)] }, // ~[0, 0.1]\n    { input: [-1, 0.1], expected: [reinterpretU32AsF32(0xbdccccd8), reinterpretU32AsF32(0x34000000)] }, // ~[-0.1, 0]\n    { input: [1, -0.1], expected: [reinterpretU32AsF32(0xb4000000), reinterpretU32AsF32(0x3dccccd8)] }, // ~[0, 0.1]\n    { input: [-1, -0.1], expected: [reinterpretU32AsF32(0xbdccccd8), reinterpretU32AsF32(0x34000000)] }, // ~[-0.1, 0]\n  ] as ScalarPairToIntervalCase[],\n  f16: [\n    { input: [1, 0.1], expected: [reinterpretU16AsF16(0x9400), reinterpretU16AsF16(0x2e70)] }, // ~[0, 0.1]\n    { input: [-1, 0.1], expected: [reinterpretU16AsF16(0xae70), reinterpretU16AsF16(0x1400)] }, // ~[-0.1, 0]\n    { input: [1, -0.1], expected: [reinterpretU16AsF16(0x9400), reinterpretU16AsF16(0x2e70)] }, // ~[0, 0.1]\n    { input: [-1, -0.1], expected: [reinterpretU16AsF16(0xae70), reinterpretU16AsF16(0x1400)] }, // ~[-0.1, 0]\n  ] as ScalarPairToIntervalCase[],\n} as const;\n\ng.test('remainderInterval')\n  .params(u =>\n    u\n      .combine('trait', ['abstract', 'f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarPairToIntervalCase>(p => {\n        const trait = kFPTraitForULP[p.trait];\n        const constants = FP[trait].constants();\n\n        // prettier-ignore\n        return [\n          ...kRemainderCases[trait],\n          // Normals\n          { input: [0, 1], expected: 0 },\n          { input: [0, -1], expected: 0 },\n          { input: [1, 1], expected: [0, 1] },\n          { input: [1, -1], expected: [0, 1] },\n          { input: [-1, 1], expected: [-1, 0] },\n          { input: [-1, -1], expected: [-1, 0] },\n          { input: [4, 2], expected: [0, 2] },\n          { input: [-4, 2], expected: [-2, 0] },\n          { input: [4, -2], expected: [0, 2] },\n          { input: [-4, -2], expected: [-2, 0] },\n          { input: [2, 4], expected: [2, 2] },\n          { input: [-2, 4], expected: -2 },\n          { input: [2, -4], expected: 2 },\n          { input: [-2, -4], expected: [-2, -2] },\n          { input: [0, 0.1], expected: 0 },\n          { input: [0, -0.1], expected: 0 },\n          { input: [8.5, 2], expected: 0.5 },\n          { input: [1.125, 1], expected: 0.125 },\n\n          // Denominator out of range\n          { input: [1, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [1, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [1, constants.positive.max], expected: kUnboundedBounds },\n          { input: [1, constants.negative.min], expected: kUnboundedBounds },\n          { input: [1, 0], expected: kUnboundedBounds },\n          { input: [1, constants.positive.subnormal.max], expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const [x, y] = t.params.input;\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.remainderInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.remainderInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('stepInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarPairToIntervalCase>(p => {\n        const constants = FP[p.trait].constants();\n        // prettier-ignore\n        return [\n          // 32-bit normals\n          { input: [0, 0], expected: 1 },\n          { input: [1, 1], expected: 1 },\n          { input: [0, 1], expected: 1 },\n          { input: [1, 0], expected: 0 },\n          { input: [-1, -1], expected: 1 },\n          { input: [0, -1], expected: 0 },\n          { input: [-1, 0], expected: 1 },\n          { input: [-1, 1], expected: 1 },\n          { input: [1, -1], expected: 0 },\n\n          // 64-bit normals\n          { input: [0.1, 0.1], expected: [0, 1] },\n          { input: [0, 0.1], expected: 1 },\n          { input: [0.1, 0], expected: 0 },\n          { input: [0.1, 1], expected: 1 },\n          { input: [1, 0.1], expected: 0 },\n          { input: [-0.1, -0.1], expected: [0, 1] },\n          { input: [0, -0.1], expected: 0 },\n          { input: [-0.1, 0], expected: 1 },\n          { input: [-0.1, -1], expected: 0 },\n          { input: [-1, -0.1], expected: 1 },\n\n          // Subnormals\n          { input: [0, constants.positive.subnormal.max], expected: 1 },\n          { input: [0, constants.positive.subnormal.min], expected: 1 },\n          { input: [0, constants.negative.subnormal.max], expected: [0, 1] },\n          { input: [0, constants.negative.subnormal.min], expected: [0, 1] },\n          { input: [1, constants.positive.subnormal.max], expected: 0 },\n          { input: [1, constants.positive.subnormal.min], expected: 0 },\n          { input: [1, constants.negative.subnormal.max], expected: 0 },\n          { input: [1, constants.negative.subnormal.min], expected: 0 },\n          { input: [-1, constants.positive.subnormal.max], expected: 1 },\n          { input: [-1, constants.positive.subnormal.min], expected: 1 },\n          { input: [-1, constants.negative.subnormal.max], expected: 1 },\n          { input: [-1, constants.negative.subnormal.min], expected: 1 },\n          { input: [constants.positive.subnormal.max, 0], expected: [0, 1] },\n          { input: [constants.positive.subnormal.min, 0], expected: [0, 1] },\n          { input: [constants.negative.subnormal.max, 0], expected: 1 },\n          { input: [constants.negative.subnormal.min, 0], expected: 1 },\n          { input: [constants.positive.subnormal.max, 1], expected: 1 },\n          { input: [constants.positive.subnormal.min, 1], expected: 1 },\n          { input: [constants.negative.subnormal.max, 1], expected: 1 },\n          { input: [constants.negative.subnormal.min, 1], expected: 1 },\n          { input: [constants.positive.subnormal.max, -1], expected: 0 },\n          { input: [constants.positive.subnormal.min, -1], expected: 0 },\n          { input: [constants.negative.subnormal.max, -1], expected: 0 },\n          { input: [constants.negative.subnormal.min, -1], expected: 0 },\n          { input: [constants.negative.subnormal.min, constants.positive.subnormal.max], expected: 1 },\n          { input: [constants.positive.subnormal.max, constants.negative.subnormal.min], expected: [0, 1] },\n\n          // Infinities\n          { input: [0, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, 0], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [0, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, 0], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, constants.negative.infinity], expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const [edge, x] = t.params.input;\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.stepInterval(edge, x);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.stepInterval(${edge}, ${x}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// prettier-ignore\nconst kSubtractionInterval64BitsNormalCases = {\n  f32: [\n    // 0.1 falls between f32 0x3DCCCCCC and 0x3DCCCCCD, -0.1 falls between f32 0xBDCCCCCD and 0xBDCCCCCC\n    // Expect f32 interval [0x3DCCCCCC-0x3DCCCCCD, 0x3DCCCCCD-0x3DCCCCCC]\n    { input: [0.1, 0.1], expected: [reinterpretU32AsF32(0x3dcccccc)-reinterpretU32AsF32(0x3dcccccd), reinterpretU32AsF32(0x3dcccccd)-reinterpretU32AsF32(0x3dcccccc)] },\n    // Expect f32 interval [0xBDCCCCCD-0xBDCCCCCC, 0xBDCCCCCC-0xBDCCCCCD]\n    { input: [-0.1, -0.1], expected: [reinterpretU32AsF32(0xbdcccccd)-reinterpretU32AsF32(0xbdcccccc), reinterpretU32AsF32(0xbdcccccc)-reinterpretU32AsF32(0xbdcccccd)] },\n    // Expect f32 interval [0x3DCCCCCC-0xBDCCCCCC, 0x3DCCCCCD-0xBDCCCCCD]\n    { input: [0.1, -0.1], expected: [reinterpretU32AsF32(0x3dcccccc)-reinterpretU32AsF32(0xbdcccccc), reinterpretU32AsF32(0x3dcccccd)-reinterpretU32AsF32(0xbdcccccd)] },\n    // Expect f32 interval [0xBDCCCCCD-0x3DCCCCCD, 0xBDCCCCCC-0x3DCCCCCC]\n    { input: [-0.1, 0.1], expected: [reinterpretU32AsF32(0xbdcccccd)-reinterpretU32AsF32(0x3dcccccd), reinterpretU32AsF32(0xbdcccccc)-reinterpretU32AsF32(0x3dcccccc)] },\n  ] as ScalarPairToIntervalCase[],\n  f16: [\n    // 0.1 falls between f16 0x2E66 and 0x2E67, -0.1 falls between f16 0xAE67 and 0xAE66\n    // Expect f16 interval [0x2E66-0x2E67, 0x2E67-0x2E66]\n    { input: [0.1, 0.1], expected: [reinterpretU16AsF16(0x2e66)-reinterpretU16AsF16(0x2e67), reinterpretU16AsF16(0x2e67)-reinterpretU16AsF16(0x2e66)] },\n    // Expect f16 interval [0xAE67-0xAE66, 0xAE66-0xAE67]\n    { input: [-0.1, -0.1], expected: [reinterpretU16AsF16(0xae67)-reinterpretU16AsF16(0xae66), reinterpretU16AsF16(0xae66)-reinterpretU16AsF16(0xae67)] },\n    // Expect f16 interval [0x2E66-0xAE66, 0x2E67-0xAE67]\n    { input: [0.1, -0.1], expected: [reinterpretU16AsF16(0x2e66)-reinterpretU16AsF16(0xae66), reinterpretU16AsF16(0x2e67)-reinterpretU16AsF16(0xae67)] },\n    // Expect f16 interval [0xAE67-0x2E67, 0xAE66-0x2E66]\n    { input: [-0.1, 0.1], expected: [reinterpretU16AsF16(0xae67)-reinterpretU16AsF16(0x2e67), reinterpretU16AsF16(0xae66)-reinterpretU16AsF16(0x2e66)] },\n  ] as ScalarPairToIntervalCase[],\n  abstract: [\n    // 0.1 isn't exactly representable in f64, but will be quantized to an\n    // exact value when storing to a 'number' (0x3FB999999999999A).\n    // This is why below the expectations are not intervals.\n    { input: [0.1, 0.1], expected: 0 },\n    { input: [-0.1, -0.1], expected: 0 },\n    // f64 0x3FB999999999999A - 0xBFB999999999999A = 0x3FC999999999999A\n    { input: [0.1, -0.1], expected: reinterpretU64AsF64(0x3fc999999999999an) },  // ~0.2\n    // f64 0xBFB999999999999A - 0x3FB999999999999A = 0xBFC999999999999A\n    { input: [-0.1, 0.1], expected: reinterpretU64AsF64(0xbfc999999999999an) },  // ~-0.2,\n  ] as ScalarPairToIntervalCase[],\n} as const;\n\ng.test('subtractionInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarPairToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          // Representable normals\n          { input: [0, 0], expected: 0 },\n          { input: [1, 0], expected: 1 },\n          { input: [0, 1], expected: -1 },\n          { input: [-1, 0], expected: -1 },\n          { input: [0, -1], expected: 1 },\n          { input: [1, 1], expected: 0 },\n          { input: [1, -1], expected: 2 },\n          { input: [-1, 1], expected: -2 },\n          { input: [-1, -1], expected: 0 },\n\n          // 64-bit normals that can not be exactly represented in f32/f16\n          { input: [0.1, 0], expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1'] },\n          { input: [0, -0.1], expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1'] },\n          { input: [-0.1, 0], expected: kConstantCorrectlyRoundedExpectation[p.trait]['-0.1'] },\n          { input: [0, 0.1], expected: kConstantCorrectlyRoundedExpectation[p.trait]['-0.1'] },\n          ...kSubtractionInterval64BitsNormalCases[p.trait],\n\n          // Subnormals\n          { input: [constants.positive.subnormal.max, 0], expected: [0, constants.positive.subnormal.max] },\n          { input: [0, constants.positive.subnormal.max], expected: [constants.negative.subnormal.min, 0] },\n          { input: [constants.positive.subnormal.min, 0], expected: [0, constants.positive.subnormal.min] },\n          { input: [0, constants.positive.subnormal.min], expected: [constants.negative.subnormal.max, 0] },\n          { input: [constants.negative.subnormal.max, 0], expected: [constants.negative.subnormal.max, 0] },\n          { input: [0, constants.negative.subnormal.max], expected: [0, constants.positive.subnormal.min] },\n          { input: [constants.negative.subnormal.min, 0], expected: [constants.negative.subnormal.min, 0] },\n          { input: [0, constants.negative.subnormal.min], expected: [0, constants.positive.subnormal.max] },\n\n          // Infinities\n          { input: [0, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, 0], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [0, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, 0], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, constants.negative.infinity], expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.subtractionInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.subtractionInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface ScalarTripleToIntervalCase {\n  input: [number, number, number];\n  expected: number | IntervalBounds;\n}\n\ng.test('clampMedianInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarTripleToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          // Normals\n          { input: [0, 0, 0], expected: 0 },\n          { input: [1, 0, 0], expected: 0 },\n          { input: [0, 1, 0], expected: 0 },\n          { input: [0, 0, 1], expected: 0 },\n          { input: [1, 0, 1], expected: 1 },\n          { input: [1, 1, 0], expected: 1 },\n          { input: [0, 1, 1], expected: 1 },\n          { input: [1, 1, 1], expected: 1 },\n          { input: [1, 10, 100], expected: 10 },\n          { input: [10, 1, 100], expected: 10 },\n          { input: [100, 1, 10], expected: 10 },\n          { input: [-10, 1, 100], expected: 1 },\n          { input: [10, 1, -100], expected: 1 },\n          { input: [-10, 1, -100], expected: -10 },\n          { input: [-10, -10, -10], expected: -10 },\n\n          // Subnormals\n          { input: [constants.positive.subnormal.max, 0, 0], expected: 0 },\n          { input: [0, constants.positive.subnormal.max, 0], expected: 0 },\n          { input: [0, 0, constants.positive.subnormal.max], expected: 0 },\n          { input: [constants.positive.subnormal.max, 0, constants.positive.subnormal.max], expected: [0, constants.positive.subnormal.max] },\n          { input: [constants.positive.subnormal.max, constants.positive.subnormal.max, 0], expected: [0, constants.positive.subnormal.max] },\n          { input: [0, constants.positive.subnormal.max, constants.positive.subnormal.max], expected: [0, constants.positive.subnormal.max] },\n          { input: [constants.positive.subnormal.max, constants.positive.subnormal.max, constants.positive.subnormal.max], expected: [0, constants.positive.subnormal.max] },\n          { input: [constants.positive.subnormal.max, constants.positive.subnormal.min, constants.negative.subnormal.max], expected: [0, constants.positive.subnormal.min] },\n          { input: [constants.positive.subnormal.max, constants.negative.subnormal.min, constants.negative.subnormal.max], expected: [constants.negative.subnormal.max, 0] },\n          { input: [constants.positive.max, constants.positive.max, constants.positive.subnormal.min], expected: constants.positive.max },\n\n          // Infinities\n          { input: [0, 1, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [0, constants.positive.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.positive.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.positive.infinity, constants.negative.infinity], expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const [x, y, z] = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.clampMedianInterval(x, y, z);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.clampMedianInterval(${x}, ${y}, ${z}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('clampMinMaxInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarTripleToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          // Normals\n          { input: [0, 0, 0], expected: 0 },\n          { input: [1, 0, 0], expected: 0 },\n          { input: [0, 1, 0], expected: 0 },\n          { input: [0, 0, 1], expected: 0 },\n          { input: [1, 0, 1], expected: 1 },\n          { input: [1, 1, 0], expected: 0 },\n          { input: [0, 1, 1], expected: 1 },\n          { input: [1, 1, 1], expected: 1 },\n          { input: [1, 10, 100], expected: 10 },\n          { input: [10, 1, 100], expected: 10 },\n          { input: [100, 1, 10], expected: 10 },\n          { input: [-10, 1, 100], expected: 1 },\n          { input: [10, 1, -100], expected: -100 },\n          { input: [-10, 1, -100], expected: -100 },\n          { input: [-10, -10, -10], expected: -10 },\n\n          // Subnormals\n          { input: [constants.positive.subnormal.max, 0, 0], expected: [0, constants.positive.subnormal.max] },\n          { input: [0, constants.positive.subnormal.max, 0], expected: [0, constants.positive.subnormal.max] },\n          { input: [0, 0, constants.positive.subnormal.max], expected: [0, constants.positive.subnormal.max] },\n          { input: [constants.positive.subnormal.max, 0, constants.positive.subnormal.max], expected: [0, constants.positive.subnormal.max] },\n          { input: [constants.positive.subnormal.max, constants.positive.subnormal.max, 0], expected: [0, constants.positive.subnormal.max] },\n          { input: [0, constants.positive.subnormal.max, constants.positive.subnormal.max], expected: [0, constants.positive.subnormal.max] },\n          { input: [constants.positive.subnormal.max, constants.positive.subnormal.max, constants.positive.subnormal.max], expected: [0, constants.positive.subnormal.max] },\n          { input: [constants.positive.subnormal.max, constants.positive.subnormal.min, constants.negative.subnormal.max], expected: [constants.negative.subnormal.max, constants.positive.subnormal.max] },\n          { input: [constants.positive.subnormal.max, constants.negative.subnormal.min, constants.negative.subnormal.max], expected: [constants.negative.subnormal.min, constants.positive.subnormal.max] },\n          { input: [constants.positive.max, constants.positive.max, constants.positive.subnormal.min], expected: [0, constants.positive.subnormal.min] },\n\n          // Infinities\n          { input: [0, 1, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [0, constants.positive.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.positive.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.positive.infinity, constants.negative.infinity], expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const [x, y, z] = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.clampMinMaxInterval(x, y, z);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.clampMinMaxInterval(${x}, ${y}, ${z}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// prettier-ignore\nconst kFmaIntervalCases = {\n  f32: [\n    // positive.subnormal.max * positive.subnormal.max is much smaller than positive.subnormal.min but larger than 0, rounded to [0, positive.subnormal.min]\n    { input: [kValue.f32.positive.subnormal.max, kValue.f32.positive.subnormal.max, 0], expected: [0, kValue.f32.positive.subnormal.min] },\n    // positive.subnormal.max * positive.subnormal.max rounded to 0 or positive.subnormal.min,\n    // 0 + constants.positive.subnormal.max rounded to [0, constants.positive.subnormal.max],\n    // positive.subnormal.min + constants.positive.subnormal.max = constants.positive.min.\n    { input: [kValue.f32.positive.subnormal.max, kValue.f32.positive.subnormal.max, kValue.f32.positive.subnormal.max], expected: [0, kValue.f32.positive.min] },\n    // positive.subnormal.max * positive.subnormal.max rounded to 0 or positive.subnormal.min,\n    // negative.subnormal.max may flushed to 0,\n    // minimum case: 0 + negative.subnormal.max rounded to [negative.subnormal.max, 0],\n    // maximum case: positive.subnormal.min + 0 rounded to [0, positive.subnormal.min].\n    { input: [kValue.f32.positive.subnormal.max, kValue.f32.positive.subnormal.min, kValue.f32.negative.subnormal.max], expected: [kValue.f32.negative.subnormal.max, kValue.f32.positive.subnormal.min] },\n    // positive.subnormal.max * negative.subnormal.min rounded to -0.0 or negative.subnormal.max = -1 * [subnormal ulp],\n    // negative.subnormal.max = -1 * [subnormal ulp] may flushed to -0.0,\n    // minimum case: -1 * [subnormal ulp] + -1 * [subnormal ulp] rounded to [-2 * [subnormal ulp], 0],\n    // maximum case: -0.0 + -0.0 = 0.\n    { input: [kValue.f32.positive.subnormal.max, kValue.f32.negative.subnormal.min, kValue.f32.negative.subnormal.max], expected: [-2 * FP['f32'].oneULP(0, 'no-flush'), 0] },\n  ] as ScalarTripleToIntervalCase[],\n  f16: [\n    // positive.subnormal.max * positive.subnormal.max is much smaller than positive.subnormal.min but larger than 0, rounded to [0, positive.subnormal.min]\n    { input: [kValue.f16.positive.subnormal.max, kValue.f16.positive.subnormal.max, 0], expected: [0, kValue.f16.positive.subnormal.min] },\n    // positive.subnormal.max * positive.subnormal.max rounded to 0 or positive.subnormal.min,\n    // 0 + constants.positive.subnormal.max rounded to [0, constants.positive.subnormal.max],\n    // positive.subnormal.min + constants.positive.subnormal.max = constants.positive.min.\n    { input: [kValue.f16.positive.subnormal.max, kValue.f16.positive.subnormal.max, kValue.f16.positive.subnormal.max], expected: [0, kValue.f16.positive.min] },\n    // positive.subnormal.max * positive.subnormal.max rounded to 0 or positive.subnormal.min,\n    // negative.subnormal.max may flushed to 0,\n    // minimum case: 0 + negative.subnormal.max rounded to [negative.subnormal.max, 0],\n    // maximum case: positive.subnormal.min + 0 rounded to [0, positive.subnormal.min].\n    { input: [kValue.f16.positive.subnormal.max, kValue.f16.positive.subnormal.min, kValue.f16.negative.subnormal.max], expected: [kValue.f16.negative.subnormal.max, kValue.f16.positive.subnormal.min] },\n    // positive.subnormal.max * negative.subnormal.min rounded to -0.0 or negative.subnormal.max = -1 * [subnormal ulp],\n    // negative.subnormal.max = -1 * [subnormal ulp] may flushed to -0.0,\n    // minimum case: -1 * [subnormal ulp] + -1 * [subnormal ulp] rounded to [-2 * [subnormal ulp], 0],\n    // maximum case: -0.0 + -0.0 = 0.\n    { input: [kValue.f16.positive.subnormal.max, kValue.f16.negative.subnormal.min, kValue.f16.negative.subnormal.max], expected: [-2 * FP['f16'].oneULP(0, 'no-flush'), 0] },  ] as ScalarTripleToIntervalCase[],\n  abstract: [\n    // These operations break down in the CTS, because `number` is a f64 under the hood, so precision is sometimes lost\n    // if intermediate results are  closer to 0 than the smallest subnormal will be precisely 0.\n    // See https://github.com/gpuweb/cts/issues/2993 for details\n    { input: [kValue.f64.positive.subnormal.max, kValue.f64.positive.subnormal.max, 0], expected: 0 },\n    { input: [kValue.f64.positive.subnormal.max, kValue.f64.positive.subnormal.max, kValue.f64.positive.subnormal.max], expected: [0, kValue.f64.positive.subnormal.max] },\n    { input: [kValue.f64.positive.subnormal.max, kValue.f64.positive.subnormal.min, kValue.f64.negative.subnormal.max], expected: [kValue.f64.negative.subnormal.max, 0] },\n    { input: [kValue.f64.positive.subnormal.max, kValue.f64.negative.subnormal.min, kValue.f64.negative.subnormal.max], expected: [kValue.f64.negative.subnormal.max, 0] },\n  ] as ScalarTripleToIntervalCase[],\n} as const;\n\ng.test('fmaInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarTripleToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          // Normals\n          { input: [0, 0, 0], expected: 0 },\n          { input: [1, 0, 0], expected: 0 },\n          { input: [0, 1, 0], expected: 0 },\n          { input: [0, 0, 1], expected: 1 },\n          { input: [1, 0, 1], expected: 1 },\n          { input: [1, 1, 0], expected: 1 },\n          { input: [0, 1, 1], expected: 1 },\n          { input: [1, 1, 1], expected: 2 },\n          { input: [1, 10, 100], expected: 110 },\n          { input: [10, 1, 100], expected: 110 },\n          { input: [100, 1, 10], expected: 110 },\n          { input: [-10, 1, 100], expected: 90 },\n          { input: [10, 1, -100], expected: -90 },\n          { input: [-10, 1, -100], expected: -110 },\n          { input: [-10, -10, -10], expected: 90 },\n\n          // Subnormals\n          { input: [constants.positive.subnormal.max, 0, 0], expected: 0 },\n          { input: [0, constants.positive.subnormal.max, 0], expected: 0 },\n          { input: [0, 0, constants.positive.subnormal.max], expected: [0, constants.positive.subnormal.max] },\n          { input: [constants.positive.subnormal.max, 0, constants.positive.subnormal.max], expected: [0, constants.positive.subnormal.max] },\n          { input: [0, constants.positive.subnormal.max, constants.positive.subnormal.max], expected: [0, constants.positive.subnormal.max] },\n\n          // Infinities\n          { input: [0, 1, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [0, constants.positive.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.positive.infinity, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.positive.infinity, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [constants.positive.max, constants.positive.max, constants.positive.subnormal.min], expected: kUnboundedBounds },\n          ...kFmaIntervalCases[p.trait],\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.fmaInterval(...t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.fmaInterval(${t.params.input.join(\n        ','\n      )}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Some of these are hard coded, since the error intervals are difficult to express in a closed\n// human-readable form due to the inherited nature of the errors.\n// prettier-ignore\nconst kMixImpreciseIntervalCases = {\n  f32: [\n      // [0.0, 1.0] cases\n      { input: [0.0, 1.0, 0.1], expected: [reinterpretU64AsF64(0x3fb9_9999_8000_0000n), reinterpretU64AsF64(0x3fb9_9999_a000_0000n)] },  // ~0.1\n      { input: [0.0, 1.0, 0.9], expected: [reinterpretU64AsF64(0x3fec_cccc_c000_0000n), reinterpretU64AsF64(0x3fec_cccc_e000_0000n)] },  // ~0.9\n      // [1.0, 0.0] cases\n      { input: [1.0, 0.0, 0.1], expected: [reinterpretU64AsF64(0x3fec_cccc_c000_0000n), reinterpretU64AsF64(0x3fec_cccc_e000_0000n)] },  // ~0.9\n      { input: [1.0, 0.0, 0.9], expected: [reinterpretU64AsF64(0x3fb9_9999_0000_0000n), reinterpretU64AsF64(0x3fb9_999a_0000_0000n)] },  // ~0.1\n      // [0.0, 10.0] cases\n      { input: [0.0, 10.0, 0.1], expected: [reinterpretU64AsF64(0x3fef_ffff_e000_0000n), reinterpretU64AsF64(0x3ff0_0000_2000_0000n)] },  // ~1\n      { input: [0.0, 10.0, 0.9], expected: [reinterpretU64AsF64(0x4021_ffff_e000_0000n), reinterpretU64AsF64(0x4022_0000_2000_0000n)] },  // ~9\n      // [2.0, 10.0] cases\n      { input: [2.0, 10.0, 0.1], expected: [reinterpretU64AsF64(0x4006_6666_6000_0000n), reinterpretU64AsF64(0x4006_6666_8000_0000n)] },  // ~2.8\n      { input: [2.0, 10.0, 0.9], expected: [reinterpretU64AsF64(0x4022_6666_6000_0000n), reinterpretU64AsF64(0x4022_6666_8000_0000n)] },  // ~9.2\n      // [-1.0, 1.0] cases\n      { input: [-1.0, 1.0, 0.1], expected: [reinterpretU64AsF64(0xbfe9_9999_a000_0000n), reinterpretU64AsF64(0xbfe9_9999_8000_0000n)] },  // ~-0.8\n      { input: [-1.0, 1.0, 0.9], expected: [reinterpretU64AsF64(0x3fe9_9999_8000_0000n), reinterpretU64AsF64(0x3fe9_9999_c000_0000n)] },  // ~0.8\n\n      // Showing how precise and imprecise versions diff\n      // Note that this expectation is 0 only in f32 as 10.0 is much smaller that f32.negative.min,\n      // So that 10 - f32.negative.min == f32.negative.min even in f64. But for f16, there is not\n      // a exactly-represenatble f16 value v that make v - f16.negative.min == f16.negative.min\n      // in f64, in fact that require v being smaller than 2**-37.\n      { input: [kValue.f32.negative.min, 10.0, 1.0], expected: 0.0 },\n      // -10.0 is the same, much smaller than f32.negative.min\n      { input: [kValue.f32.negative.min, -10.0, 1.0], expected: 0.0 },\n  ] as ScalarTripleToIntervalCase[],\n  f16: [\n      // [0.0, 1.0] cases\n      { input: [0.0, 1.0, 0.1], expected: [reinterpretU64AsF64(0x3fb9_9800_0000_0000n), reinterpretU64AsF64(0x3fb9_9c00_0000_0000n)] },  // ~0.1\n      { input: [0.0, 1.0, 0.9], expected: [reinterpretU64AsF64(0x3fec_cc00_0000_0000n), reinterpretU64AsF64(0x3fec_d000_0000_0000n)] },  // ~0.9\n      // [1.0, 0.0] cases\n      { input: [1.0, 0.0, 0.1], expected: [reinterpretU64AsF64(0x3fec_cc00_0000_0000n), reinterpretU64AsF64(0x3fec_d000_0000_0000n)] },  // ~0.9\n      { input: [1.0, 0.0, 0.9], expected: [reinterpretU64AsF64(0x3fb9_8000_0000_0000n), reinterpretU64AsF64(0x3fb9_a000_0000_0000n)] },  // ~0.1\n      // [0.0, 10.0] cases\n      { input: [0.0, 10.0, 0.1], expected: [reinterpretU64AsF64(0x3fef_fc00_0000_0000n), reinterpretU64AsF64(0x3ff0_0400_0000_0000n)] },  // ~1\n      { input: [0.0, 10.0, 0.9], expected: [reinterpretU64AsF64(0x4021_fc00_0000_0000n), reinterpretU64AsF64(0x4022_0400_0000_0000n)] },  // ~9\n      // [2.0, 10.0] cases\n      { input: [2.0, 10.0, 0.1], expected: [reinterpretU64AsF64(0x4006_6400_0000_0000n), reinterpretU64AsF64(0x4006_6800_0000_0000n)] },  // ~2.8\n      { input: [2.0, 10.0, 0.9], expected: [reinterpretU64AsF64(0x4022_6400_0000_0000n), reinterpretU64AsF64(0x4022_6800_0000_0000n)] },  // ~9.2\n      // [-1.0, 1.0] cases\n      { input: [-1.0, 1.0, 0.1], expected: [reinterpretU64AsF64(0xbfe9_9c00_0000_0000n), reinterpretU64AsF64(0xbfe9_9800_0000_0000n)] },  // ~-0.8\n      { input: [-1.0, 1.0, 0.9], expected: [reinterpretU64AsF64(0x3fe9_9800_0000_0000n), reinterpretU64AsF64(0x3fe9_a000_0000_0000n)] },  // ~0.8\n\n      // Showing how precise and imprecise versions diff\n      // In imprecise version, we compute (y - x), where y = 10 and x = -65504, the result is 65514\n      // and cause an overflow in f16.\n      { input: [kValue.f16.negative.min, 10.0, 1.0], expected: kUnboundedBounds },\n      // (y - x) * 1.0, where y = -10 and x = -65504, the result is 65494 rounded to 65472 or 65504.\n      // The result is -65504 + 65472 = -32 or -65504 + 65504 = 0.\n      { input: [kValue.f16.negative.min, -10.0, 1.0], expected: [-32, 0] },\n  ] as ScalarTripleToIntervalCase[],\n} as const;\n\ng.test('mixImpreciseInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarTripleToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          ...kMixImpreciseIntervalCases[p.trait],\n\n          // [0.0, 1.0] cases\n          { input: [0.0, 1.0, -1.0], expected: -1.0 },\n          { input: [0.0, 1.0, 0.0], expected: 0.0 },\n          { input: [0.0, 1.0, 0.5], expected: 0.5 },\n          { input: [0.0, 1.0, 1.0], expected: 1.0 },\n          { input: [0.0, 1.0, 2.0], expected: 2.0 },\n\n          // [1.0, 0.0] cases\n          { input: [1.0, 0.0, -1.0], expected: 2.0 },\n          { input: [1.0, 0.0, 0.0], expected: 1.0 },\n          { input: [1.0, 0.0, 0.5], expected: 0.5 },\n          { input: [1.0, 0.0, 1.0], expected: 0.0 },\n          { input: [1.0, 0.0, 2.0], expected: -1.0 },\n\n          // [0.0, 10.0] cases\n          { input: [0.0, 10.0, -1.0], expected: -10.0 },\n          { input: [0.0, 10.0, 0.0], expected: 0.0 },\n          { input: [0.0, 10.0, 0.5], expected: 5.0 },\n          { input: [0.0, 10.0, 1.0], expected: 10.0 },\n          { input: [0.0, 10.0, 2.0], expected: 20.0 },\n\n          // [2.0, 10.0] cases\n          { input: [2.0, 10.0, -1.0], expected: -6.0 },\n          { input: [2.0, 10.0, 0.0], expected: 2.0 },\n          { input: [2.0, 10.0, 0.5], expected: 6.0 },\n          { input: [2.0, 10.0, 1.0], expected: 10.0 },\n          { input: [2.0, 10.0, 2.0], expected: 18.0 },\n\n          // [-1.0, 1.0] cases\n          { input: [-1.0, 1.0, -2.0], expected: -5.0 },\n          { input: [-1.0, 1.0, 0.0], expected: -1.0 },\n          { input: [-1.0, 1.0, 0.5], expected: 0.0 },\n          { input: [-1.0, 1.0, 1.0], expected: 1.0 },\n          { input: [-1.0, 1.0, 2.0], expected: 3.0 },\n\n          // Infinities\n          { input: [0.0, constants.positive.infinity, 0.5], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, 0.0, 0.5], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, 1.0, 0.5], expected: kUnboundedBounds },\n          { input: [1.0, constants.negative.infinity, 0.5], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.positive.infinity, 0.5], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, constants.negative.infinity, 0.5], expected: kUnboundedBounds },\n          { input: [0.0, 1.0, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [1.0, 0.0, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [0.0, 1.0, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [1.0, 0.0, constants.positive.infinity], expected: kUnboundedBounds },\n\n          // The [negative.min, +/-10.0, 1.0] cases has different result for different trait on\n          // imprecise version.\n        ];\n      })\n  )\n  .fn(t => {\n    const [x, y, z] = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.mixImpreciseInterval(x, y, z);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.mixImpreciseInterval(${x}, ${y}, ${z}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Some of these are hard coded, since the error intervals are difficult to express in a closed\n// human-readable form due to the inherited nature of the errors.\n// prettier-ignore\nconst kMixPreciseIntervalCases = {\n  f32: [\n    // [0.0, 1.0] cases\n    { input: [0.0, 1.0, 0.1], expected: [reinterpretU64AsF64(0x3fb9_9999_8000_0000n), reinterpretU64AsF64(0x3fb9_9999_a000_0000n)] },  // ~0.1\n    { input: [0.0, 1.0, 0.9], expected: [reinterpretU64AsF64(0x3fec_cccc_c000_0000n), reinterpretU64AsF64(0x3fec_cccc_e000_0000n)] },  // ~0.9\n    // [1.0, 0.0] cases\n    { input: [1.0, 0.0, 0.1], expected: [reinterpretU64AsF64(0x3fec_cccc_c000_0000n), reinterpretU64AsF64(0x3fec_cccc_e000_0000n)] },  // ~0.9\n    { input: [1.0, 0.0, 0.9], expected: [reinterpretU64AsF64(0x3fb9_9999_0000_0000n), reinterpretU64AsF64(0x3fb9_999a_0000_0000n)] },  // ~0.1\n    // [0.0, 10.0] cases\n    { input: [0.0, 10.0, 0.1], expected: [reinterpretU64AsF64(0x3fef_ffff_e000_0000n), reinterpretU64AsF64(0x3ff0_0000_2000_0000n)] },  // ~1\n    { input: [0.0, 10.0, 0.9], expected: [reinterpretU64AsF64(0x4021_ffff_e000_0000n), reinterpretU64AsF64(0x4022_0000_2000_0000n)] },  // ~9\n    // [2.0, 10.0] cases\n    { input: [2.0, 10.0, 0.1], expected: [reinterpretU64AsF64(0x4006_6666_4000_0000n), reinterpretU64AsF64(0x4006_6666_8000_0000n)] },  // ~2.8\n    { input: [2.0, 10.0, 0.9], expected: [reinterpretU64AsF64(0x4022_6666_4000_0000n), reinterpretU64AsF64(0x4022_6666_a000_0000n)] },  // ~9.2\n    // [-1.0, 1.0] cases\n    { input: [-1.0, 1.0, 0.1], expected: [reinterpretU64AsF64(0xbfe9_9999_c000_0000n), reinterpretU64AsF64(0xbfe9_9999_8000_0000n)] },  // ~-0.8\n    { input: [-1.0, 1.0, 0.9], expected: [reinterpretU64AsF64(0x3fe9_9999_8000_0000n), reinterpretU64AsF64(0x3fe9_9999_c000_0000n)] },  // ~0.8\n  ] as ScalarTripleToIntervalCase[],\n  f16: [\n    // [0.0, 1.0] cases\n    { input: [0.0, 1.0, 0.1], expected: [reinterpretU64AsF64(0x3fb9_9800_0000_0000n), reinterpretU64AsF64(0x3fb9_9c00_0000_0000n)] },  // ~0.1\n    { input: [0.0, 1.0, 0.9], expected: [reinterpretU64AsF64(0x3fec_cc00_0000_0000n), reinterpretU64AsF64(0x3fec_d000_0000_0000n)] },  // ~0.9\n    // [1.0, 0.0] cases\n    { input: [1.0, 0.0, 0.1], expected: [reinterpretU64AsF64(0x3fec_cc00_0000_0000n), reinterpretU64AsF64(0x3fec_d000_0000_0000n)] },  // ~0.9\n    { input: [1.0, 0.0, 0.9], expected: [reinterpretU64AsF64(0x3fb9_8000_0000_0000n), reinterpretU64AsF64(0x3fb9_a000_0000_0000n)] },  // ~0.1\n    // [0.0, 10.0] cases\n    { input: [0.0, 10.0, 0.1], expected: [reinterpretU64AsF64(0x3fef_fc00_0000_0000n), reinterpretU64AsF64(0x3ff0_0400_0000_0000n)] },  // ~1\n    { input: [0.0, 10.0, 0.9], expected: [reinterpretU64AsF64(0x4021_fc00_0000_0000n), reinterpretU64AsF64(0x4022_0400_0000_0000n)] },  // ~9\n    // [2.0, 10.0] cases\n    { input: [2.0, 10.0, 0.1], expected: [reinterpretU64AsF64(0x4006_6400_0000_0000n), reinterpretU64AsF64(0x4006_6c00_0000_0000n)] },  // ~2.8\n    { input: [2.0, 10.0, 0.9], expected: [reinterpretU64AsF64(0x4022_6000_0000_0000n), reinterpretU64AsF64(0x4022_6c00_0000_0000n)] },  // ~9.2\n    // [-1.0, 1.0] cases\n    { input: [-1.0, 1.0, 0.1], expected: [reinterpretU64AsF64(0xbfe9_a000_0000_0000n), reinterpretU64AsF64(0xbfe9_9800_0000_0000n)] },  // ~-0.8\n    { input: [-1.0, 1.0, 0.9], expected: [reinterpretU64AsF64(0x3fe9_9800_0000_0000n), reinterpretU64AsF64(0x3fe9_a000_0000_0000n)] },  // ~0.8\n  ] as ScalarTripleToIntervalCase[],\n} as const;\n\ng.test('mixPreciseInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarTripleToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          ...kMixPreciseIntervalCases[p.trait],\n\n          // [0.0, 1.0] cases\n          { input: [0.0, 1.0, -1.0], expected: -1.0 },\n          { input: [0.0, 1.0, 0.0], expected: 0.0 },\n          { input: [0.0, 1.0, 0.5], expected: 0.5 },\n          { input: [0.0, 1.0, 1.0], expected: 1.0 },\n          { input: [0.0, 1.0, 2.0], expected: 2.0 },\n\n          // [1.0, 0.0] cases\n          { input: [1.0, 0.0, -1.0], expected: 2.0 },\n          { input: [1.0, 0.0, 0.0], expected: 1.0 },\n          { input: [1.0, 0.0, 0.5], expected: 0.5 },\n          { input: [1.0, 0.0, 1.0], expected: 0.0 },\n          { input: [1.0, 0.0, 2.0], expected: -1.0 },\n\n          // [0.0, 10.0] cases\n          { input: [0.0, 10.0, -1.0], expected: -10.0 },\n          { input: [0.0, 10.0, 0.0], expected: 0.0 },\n          { input: [0.0, 10.0, 0.5], expected: 5.0 },\n          { input: [0.0, 10.0, 1.0], expected: 10.0 },\n          { input: [0.0, 10.0, 2.0], expected: 20.0 },\n\n          // [2.0, 10.0] cases\n          { input: [2.0, 10.0, -1.0], expected: -6.0 },\n          { input: [2.0, 10.0, 0.0], expected: 2.0 },\n          { input: [2.0, 10.0, 0.5], expected: 6.0 },\n          { input: [2.0, 10.0, 1.0], expected: 10.0 },\n          { input: [2.0, 10.0, 2.0], expected: 18.0 },\n\n          // [-1.0, 1.0] cases\n          { input: [-1.0, 1.0, -2.0], expected: -5.0 },\n          { input: [-1.0, 1.0, 0.0], expected: -1.0 },\n          { input: [-1.0, 1.0, 0.5], expected: 0.0 },\n          { input: [-1.0, 1.0, 1.0], expected: 1.0 },\n          { input: [-1.0, 1.0, 2.0], expected: 3.0 },\n\n          // Infinities\n          { input: [0.0, constants.positive.infinity, 0.5], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, 0.0, 0.5], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, 1.0, 0.5], expected: kUnboundedBounds },\n          { input: [1.0, constants.negative.infinity, 0.5], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, constants.positive.infinity, 0.5], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, constants.negative.infinity, 0.5], expected: kUnboundedBounds },\n          { input: [0.0, 1.0, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [1.0, 0.0, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [0.0, 1.0, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [1.0, 0.0, constants.positive.infinity], expected: kUnboundedBounds },\n\n          // Showing how precise and imprecise versions diff\n          { input: [constants.negative.min, 10.0, 1.0], expected: 10.0 },\n          { input: [constants.negative.min, -10.0, 1.0], expected: -10.0 },\n        ];\n      })\n  )\n  .fn(t => {\n    const [x, y, z] = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.mixPreciseInterval(x, y, z);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.mixPreciseInterval(${x}, ${y}, ${z}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Some of these are hard coded, since the error intervals are difficult to express in a closed\n// human-readable form due to the inherited nature of the errors.\n// prettier-ignore\nconst kSmoothStepIntervalCases = {\n  f32: [\n    // Normals\n    { input: [0, 1, 0], expected: [0, kValue.f32.positive.subnormal.min] },\n    { input: [0, 1, 1], expected: [reinterpretU32AsF32(0x3f7ffffa), reinterpretU32AsF32(0x3f800003)] },  // ~1\n    { input: [0, 2, 1], expected: [reinterpretU32AsF32(0x3efffff8), reinterpretU32AsF32(0x3f000007)] },  // ~0.5\n    { input: [0, 2, 0.5], expected: [reinterpretU32AsF32(0x3e1ffffb), reinterpretU32AsF32(0x3e200007)] },  // ~0.15625...\n    { input: [2, 0, 1], expected: [reinterpretU32AsF32(0x3efffff8), reinterpretU32AsF32(0x3f000007)] },  // ~0.5\n    { input: [2, 0, 1.5], expected: [reinterpretU32AsF32(0x3e1ffffb), reinterpretU32AsF32(0x3e200007)] },  // ~0.15625...\n    { input: [0, 100, 50], expected: [reinterpretU32AsF32(0x3efffff8), reinterpretU32AsF32(0x3f000007)] },  // ~0.5\n    { input: [0, 100, 25], expected: [reinterpretU32AsF32(0x3e1ffffb), reinterpretU32AsF32(0x3e200007)] },  // ~0.15625...\n    { input: [0, -2, -1], expected: [reinterpretU32AsF32(0x3efffff8), reinterpretU32AsF32(0x3f000007)] },  // ~0.5\n    { input: [0, -2, -0.5], expected: [reinterpretU32AsF32(0x3e1ffffb), reinterpretU32AsF32(0x3e200007)] },  // ~0.15625...\n    // Subnormals\n    { input: [kValue.f32.positive.subnormal.max, 2, 1], expected: [reinterpretU32AsF32(0x3efffff8), reinterpretU32AsF32(0x3f000007)] },  // ~0.5\n    { input: [kValue.f32.positive.subnormal.min, 2, 1], expected: [reinterpretU32AsF32(0x3efffff8), reinterpretU32AsF32(0x3f000007)] },  // ~0.5\n    { input: [kValue.f32.negative.subnormal.max, 2, 1], expected: [reinterpretU32AsF32(0x3efffff8), reinterpretU32AsF32(0x3f000007)] },  // ~0.5\n    { input: [kValue.f32.negative.subnormal.min, 2, 1], expected: [reinterpretU32AsF32(0x3efffff8), reinterpretU32AsF32(0x3f000007)] },  // ~0.5\n    { input: [0, 2, kValue.f32.positive.subnormal.max], expected: [0, kValue.f32.positive.subnormal.min] },\n    { input: [0, 2, kValue.f32.positive.subnormal.min], expected: [0, kValue.f32.positive.subnormal.min] },\n    { input: [0, 2, kValue.f32.negative.subnormal.max], expected: [0, kValue.f32.positive.subnormal.min] },\n    { input: [0, 2, kValue.f32.negative.subnormal.min], expected: [0, kValue.f32.positive.subnormal.min] },\n  ] as ScalarTripleToIntervalCase[],\n  f16: [\n    // Normals\n    { input: [0, 1, 0], expected: [0, reinterpretU16AsF16(0x0002)] },\n    { input: [0, 1, 1], expected: [reinterpretU16AsF16(0x3bfa), reinterpretU16AsF16(0x3c03)] },  // ~1\n    { input: [0, 2, 1], expected: [reinterpretU16AsF16(0x37f8), reinterpretU16AsF16(0x3807)] },  // ~0.5\n    { input: [0, 2, 0.5], expected: [reinterpretU16AsF16(0x30fb), reinterpretU16AsF16(0x3107)] },  // ~0.15625...\n    { input: [2, 0, 1], expected: [reinterpretU16AsF16(0x37f8), reinterpretU16AsF16(0x3807)] },  // ~0.5\n    { input: [2, 0, 1.5], expected: [reinterpretU16AsF16(0x30fb), reinterpretU16AsF16(0x3107)] },  // ~0.15625...\n    { input: [0, 100, 50], expected: [reinterpretU16AsF16(0x37f8), reinterpretU16AsF16(0x3807)] },  // ~0.5\n    { input: [0, 100, 25], expected: [reinterpretU16AsF16(0x30fb), reinterpretU16AsF16(0x3107)] },  // ~0.15625...\n    { input: [0, -2, -1], expected: [reinterpretU16AsF16(0x37f8), reinterpretU16AsF16(0x3807)] },  // ~0.5\n    { input: [0, -2, -0.5], expected: [reinterpretU16AsF16(0x30fb), reinterpretU16AsF16(0x3107)] },  // ~0.15625...\n    // Subnormals\n    { input: [kValue.f16.positive.subnormal.max, 2, 1], expected: [reinterpretU16AsF16(0x37f4), reinterpretU16AsF16(0x380b)] },  // ~0.5\n    { input: [kValue.f16.positive.subnormal.min, 2, 1], expected: [reinterpretU16AsF16(0x37f4), reinterpretU16AsF16(0x380b)] },  // ~0.5\n    { input: [kValue.f16.negative.subnormal.max, 2, 1], expected: [reinterpretU16AsF16(0x37f2), reinterpretU16AsF16(0x380c)] },  // ~0.5\n    { input: [kValue.f16.negative.subnormal.min, 2, 1], expected: [reinterpretU16AsF16(0x37f2), reinterpretU16AsF16(0x380c)] },  // ~0.5\n    { input: [0, 2, kValue.f16.positive.subnormal.max], expected: [0, reinterpretU16AsF16(0x0002)] },\n    { input: [0, 2, kValue.f16.positive.subnormal.min], expected: [0, reinterpretU16AsF16(0x0002)] },\n    { input: [0, 2, kValue.f32.negative.subnormal.max], expected: [0, reinterpretU16AsF16(0x0002)] },\n    { input: [0, 2, kValue.f32.negative.subnormal.min], expected: [0, reinterpretU16AsF16(0x0002)] },\n  ] as ScalarTripleToIntervalCase[],\n} as const;\n\ng.test('smoothStepInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<ScalarTripleToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          ...kSmoothStepIntervalCases[p.trait],\n\n          // Normals\n          { input: [0, 1, 10], expected: 1 },\n          { input: [0, 1, -10], expected: 0 },\n\n          // Subnormals\n          { input: [0, constants.positive.subnormal.max, 1], expected: kUnboundedBounds },\n          { input: [0, constants.positive.subnormal.min, 1], expected: kUnboundedBounds },\n          { input: [0, constants.negative.subnormal.max, 1], expected: kUnboundedBounds },\n          { input: [0, constants.negative.subnormal.min, 1], expected: kUnboundedBounds },\n\n          // Infinities\n          { input: [0, 2, constants.positive.infinity], expected: kUnboundedBounds },\n          { input: [0, 2, constants.negative.infinity], expected: kUnboundedBounds },\n          { input: [constants.positive.infinity, 2, 1], expected: kUnboundedBounds },\n          { input: [constants.negative.infinity, 2, 1], expected: kUnboundedBounds },\n          { input: [0, constants.positive.infinity, 1], expected: kUnboundedBounds },\n          { input: [0, constants.negative.infinity, 1], expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const [low, high, x] = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.smoothStepInterval(low, high, x);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.smoothStepInterval(${low}, ${high}, ${x}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface ScalarToVectorCase {\n  input: number;\n  expected: (number | IntervalBounds)[];\n}\n\ng.test('unpack2x16floatInterval')\n  .paramsSubcasesOnly<ScalarToVectorCase>(\n    // prettier-ignore\n    [\n      // f16 normals\n      { input: 0x00000000, expected: [0, 0] },\n      { input: 0x80000000, expected: [0, 0] },\n      { input: 0x00008000, expected: [0, 0] },\n      { input: 0x80008000, expected: [0, 0] },\n      { input: 0x00003c00, expected: [1, 0] },\n      { input: 0x3c000000, expected: [0, 1] },\n      { input: 0x3c003c00, expected: [1, 1] },\n      { input: 0xbc00bc00, expected: [-1, -1] },\n      { input: 0x49004900, expected: [10, 10] },\n      { input: 0xc900c900, expected: [-10, -10] },\n\n      // f16 subnormals\n      { input: 0x000003ff, expected: [[0, kValue.f16.positive.subnormal.max], 0] },\n      { input: 0x000083ff, expected: [[kValue.f16.negative.subnormal.min, 0], 0] },\n\n      // f16 out of bounds\n      { input: 0x7c000000, expected: [kUnboundedBounds, kUnboundedBounds] },\n      { input: 0xffff0000, expected: [kUnboundedBounds, kUnboundedBounds] },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toVector(t.params.expected);\n    const got = FP.f32.unpack2x16floatInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `unpack2x16floatInterval(${t.params.input}) returned [${got}]. Expected [${expected}]`\n    );\n  });\n\n// Scope for unpack2x16snormInterval tests so that they can have constants for\n// magic numbers that don't pollute the global namespace or have unwieldy long\n// names.\n{\n  const kZeroBounds: IntervalBounds = [\n    reinterpretU32AsF32(0x81400000),\n    reinterpretU32AsF32(0x01400000),\n  ];\n  const kOneBoundsSnorm: IntervalBounds = [\n    reinterpretU64AsF64(0x3fef_ffff_a000_0000n),\n    reinterpretU64AsF64(0x3ff0_0000_3000_0000n),\n  ];\n  const kNegOneBoundsSnorm: IntervalBounds = [\n    reinterpretU64AsF64(0xbff0_0000_3000_0000n),\n    reinterpretU64AsF64(0xbfef_ffff_a000_0000n),\n  ];\n\n  const kHalfBounds2x16snorm: IntervalBounds = [\n    reinterpretU64AsF64(0x3fe0_001f_a000_0000n),\n    reinterpretU64AsF64(0x3fe0_0020_8000_0000n),\n  ]; // ~0.5..., due to lack of precision in i16\n  const kNegHalfBounds2x16snorm: IntervalBounds = [\n    reinterpretU64AsF64(0xbfdf_ffc0_6000_0000n),\n    reinterpretU64AsF64(0xbfdf_ffbf_8000_0000n),\n  ]; // ~-0.5..., due to lack of precision in i16\n\n  g.test('unpack2x16snormInterval')\n    .paramsSubcasesOnly<ScalarToVectorCase>(\n      // prettier-ignore\n      [\n        { input: 0x00000000, expected: [kZeroBounds, kZeroBounds] },\n        { input: 0x00007fff, expected: [kOneBoundsSnorm, kZeroBounds] },\n        { input: 0x7fff0000, expected: [kZeroBounds, kOneBoundsSnorm] },\n        { input: 0x7fff7fff, expected: [kOneBoundsSnorm, kOneBoundsSnorm] },\n        { input: 0x80018001, expected: [kNegOneBoundsSnorm, kNegOneBoundsSnorm] },\n        { input: 0x40004000, expected: [kHalfBounds2x16snorm, kHalfBounds2x16snorm] },\n        { input: 0xc001c001, expected: [kNegHalfBounds2x16snorm, kNegHalfBounds2x16snorm] },\n      ]\n    )\n    .fn(t => {\n      const expected = FP.f32.toVector(t.params.expected);\n      const got = FP.f32.unpack2x16snormInterval(t.params.input);\n      t.expect(\n        objectEquals(expected, got),\n        `unpack2x16snormInterval(${t.params.input}) returned [${got}]. Expected [${expected}]`\n      );\n    });\n}\n\n// Scope for unpack2x16unormInterval tests so that they can have constants for\n// magic numbers that don't pollute the global namespace or have unwieldy long\n// names.\n{\n  const kZeroBounds: IntervalBounds = [\n    reinterpretU32AsF32(0x8140_0000),\n    reinterpretU32AsF32(0x0140_0000),\n  ]; // ~0\n  const kOneBounds: IntervalBounds = [\n    reinterpretU64AsF64(0x3fef_ffff_a000_0000n),\n    reinterpretU64AsF64(0x3ff0_0000_3000_0000n),\n  ]; // ~1\n  const kHalfBounds: IntervalBounds = [\n    reinterpretU64AsF64(0x3fe0_000f_a000_0000n),\n    reinterpretU64AsF64(0x3fe0_0010_8000_0000n),\n  ]; // ~0.5..., due to the lack of accuracy in u16\n\n  g.test('unpack2x16unormInterval')\n    .paramsSubcasesOnly<ScalarToVectorCase>(\n      // prettier-ignore\n      [\n        { input: 0x00000000, expected: [kZeroBounds, kZeroBounds] },\n        { input: 0x0000ffff, expected: [kOneBounds, kZeroBounds] },\n        { input: 0xffff0000, expected: [kZeroBounds, kOneBounds] },\n        { input: 0xffffffff, expected: [kOneBounds, kOneBounds] },\n        { input: 0x80008000, expected: [kHalfBounds, kHalfBounds] },\n      ]\n    )\n    .fn(t => {\n      const expected = FP.f32.toVector(t.params.expected);\n      const got = FP.f32.unpack2x16unormInterval(t.params.input);\n      t.expect(\n        objectEquals(expected, got),\n        `unpack2x16unormInterval(${t.params.input})\\n\\tReturned [${got}]\\n\\tExpected [${expected}]`\n      );\n    });\n}\n\n// Scope for unpack4x8snormInterval tests so that they can have constants for\n// magic numbers that don't pollute the global namespace or have unwieldy long\n// names.\n{\n  const kZeroBounds: IntervalBounds = [\n    reinterpretU32AsF32(0x8140_0000),\n    reinterpretU32AsF32(0x0140_0000),\n  ]; // ~0\n  const kOneBounds: IntervalBounds = [\n    reinterpretU64AsF64(0x3fef_ffff_a000_0000n),\n    reinterpretU64AsF64(0x3ff0_0000_3000_0000n),\n  ]; // ~1\n  const kNegOneBounds: IntervalBounds = [\n    reinterpretU64AsF64(0xbff0_0000_3000_0000n),\n    reinterpretU64AsF64(0xbfef_ffff_a0000_000n),\n  ]; // ~-1\n  const kHalfBounds: IntervalBounds = [\n    reinterpretU64AsF64(0x3fe0_2040_2000_0000n),\n    reinterpretU64AsF64(0x3fe0_2041_0000_0000n),\n  ]; // ~0.50196..., due to lack of precision in i8\n  const kNegHalfBounds: IntervalBounds = [\n    reinterpretU64AsF64(0xbfdf_bf7f_6000_0000n),\n    reinterpretU64AsF64(0xbfdf_bf7e_8000_0000n),\n  ]; // ~-0.49606..., due to lack of precision in i8\n\n  g.test('unpack4x8snormInterval')\n    .paramsSubcasesOnly<ScalarToVectorCase>(\n      // prettier-ignore\n      [\n        { input: 0x00000000, expected: [kZeroBounds, kZeroBounds, kZeroBounds, kZeroBounds] },\n        { input: 0x0000007f, expected: [kOneBounds, kZeroBounds, kZeroBounds, kZeroBounds] },\n        { input: 0x00007f00, expected: [kZeroBounds, kOneBounds, kZeroBounds, kZeroBounds] },\n        { input: 0x007f0000, expected: [kZeroBounds, kZeroBounds, kOneBounds, kZeroBounds] },\n        { input: 0x7f000000, expected: [kZeroBounds, kZeroBounds, kZeroBounds, kOneBounds] },\n        { input: 0x00007f7f, expected: [kOneBounds, kOneBounds, kZeroBounds, kZeroBounds] },\n        { input: 0x7f7f0000, expected: [kZeroBounds, kZeroBounds, kOneBounds, kOneBounds] },\n        { input: 0x7f007f00, expected: [kZeroBounds, kOneBounds, kZeroBounds, kOneBounds] },\n        { input: 0x007f007f, expected: [kOneBounds, kZeroBounds, kOneBounds, kZeroBounds] },\n        { input: 0x7f7f7f7f, expected: [kOneBounds, kOneBounds, kOneBounds, kOneBounds] },\n        {\n          input: 0x81818181,\n          expected: [kNegOneBounds, kNegOneBounds, kNegOneBounds, kNegOneBounds]\n        },\n        {\n          input: 0x40404040,\n          expected: [kHalfBounds, kHalfBounds, kHalfBounds, kHalfBounds]\n        },\n        {\n          input: 0xc1c1c1c1,\n          expected: [kNegHalfBounds, kNegHalfBounds, kNegHalfBounds, kNegHalfBounds]\n        },\n      ]\n    )\n    .fn(t => {\n      const expected = FP.f32.toVector(t.params.expected);\n      const got = FP.f32.unpack4x8snormInterval(t.params.input);\n      t.expect(\n        objectEquals(expected, got),\n        `unpack4x8snormInterval(${t.params.input})\\n\\tReturned [${got}]\\n\\tExpected [${expected}]`\n      );\n    });\n}\n\n// Scope for unpack4x8unormInterval tests so that they can have constants for\n// magic numbers that don't pollute the global namespace or have unwieldy long\n// names.\n{\n  const kZeroBounds: IntervalBounds = [\n    reinterpretU32AsF32(0x8140_0000),\n    reinterpretU32AsF32(0x0140_0000),\n  ]; // ~0\n  const kOneBounds: IntervalBounds = [\n    reinterpretU64AsF64(0x3fef_ffff_a000_0000n),\n    reinterpretU64AsF64(0x3ff0_0000_3000_0000n),\n  ]; // ~1\n  const kHalfBounds: IntervalBounds = [\n    reinterpretU64AsF64(0x3fe0_100f_a000_0000n),\n    reinterpretU64AsF64(0x3fe0_1010_8000_0000n),\n  ]; // ~0.50196..., due to lack of precision in u8\n\n  g.test('unpack4x8unormInterval')\n    .paramsSubcasesOnly<ScalarToVectorCase>(\n      // prettier-ignore\n      [\n        { input: 0x00000000, expected: [kZeroBounds, kZeroBounds, kZeroBounds, kZeroBounds] },\n        { input: 0x000000ff, expected: [kOneBounds, kZeroBounds, kZeroBounds, kZeroBounds] },\n        { input: 0x0000ff00, expected: [kZeroBounds, kOneBounds, kZeroBounds, kZeroBounds] },\n        { input: 0x00ff0000, expected: [kZeroBounds, kZeroBounds, kOneBounds, kZeroBounds] },\n        { input: 0xff000000, expected: [kZeroBounds, kZeroBounds, kZeroBounds, kOneBounds] },\n        { input: 0x0000ffff, expected: [kOneBounds, kOneBounds, kZeroBounds, kZeroBounds] },\n        { input: 0xffff0000, expected: [kZeroBounds, kZeroBounds, kOneBounds, kOneBounds] },\n        { input: 0xff00ff00, expected: [kZeroBounds, kOneBounds, kZeroBounds, kOneBounds] },\n        { input: 0x00ff00ff, expected: [kOneBounds, kZeroBounds, kOneBounds, kZeroBounds] },\n        { input: 0xffffffff, expected: [kOneBounds, kOneBounds, kOneBounds, kOneBounds] },\n        {\n          input: 0x80808080,\n          expected: [kHalfBounds, kHalfBounds, kHalfBounds, kHalfBounds]\n        },\n      ]\n    )\n    .fn(t => {\n      const expected = FP.f32.toVector(t.params.expected);\n      const got = FP.f32.unpack4x8unormInterval(t.params.input);\n      t.expect(\n        objectEquals(expected, got),\n        `unpack4x8unormInterval(${t.params.input})\\n\\tReturned [${got}]\\n\\tExpected [${expected}]`\n      );\n    });\n}\n\ninterface VectorToIntervalCase {\n  input: number[];\n  expected: number | IntervalBounds;\n}\n\ng.test('lengthIntervalVector')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<VectorToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          // vec2\n          {input: [1.0, 0.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          {input: [0.0, 1.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          {input: [1.0, 1.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0, 1.0]'] },  // ~√2\n          {input: [-1.0, -1.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0, 1.0]'] },  // ~√2\n          {input: [-1.0, 1.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0, 1.0]'] },  // ~√2\n          {input: [0.1, 0.0], expected: kRootSumSquareExpectionInterval[p.trait]['[0.1]'] },  // ~0.1\n\n          // vec3\n          {input: [1.0, 0.0, 0.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          {input: [0.0, 1.0, 0.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          {input: [0.0, 0.0, 1.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          {input: [1.0, 1.0, 1.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0, 1.0, 1.0]'] },  // ~√3\n          {input: [-1.0, -1.0, -1.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0, 1.0, 1.0]'] },  // ~√3\n          {input: [1.0, -1.0, -1.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0, 1.0, 1.0]'] },  // ~√3\n          {input: [0.1, 0.0, 0.0], expected: kRootSumSquareExpectionInterval[p.trait]['[0.1]'] },  // ~0.1\n\n          // vec4\n          {input: [1.0, 0.0, 0.0, 0.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          {input: [0.0, 1.0, 0.0, 0.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          {input: [0.0, 0.0, 1.0, 0.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          {input: [0.0, 0.0, 0.0, 1.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          {input: [1.0, 1.0, 1.0, 1.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0, 1.0, 1.0, 1.0]'] },  // ~2\n          {input: [-1.0, -1.0, -1.0, -1.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0, 1.0, 1.0, 1.0]'] },  // ~2\n          {input: [-1.0, 1.0, -1.0, 1.0], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0, 1.0, 1.0, 1.0]'] },  // ~2\n          {input: [0.1, 0.0, 0.0, 0.0], expected: kRootSumSquareExpectionInterval[p.trait]['[0.1]'] },  // ~0.1\n\n          // Test that dot going OOB bounds in the intermediate calculations propagates\n          { input: [constants.positive.nearest_max, constants.positive.max, constants.negative.min], expected: kUnboundedBounds },\n          { input: [constants.positive.max, constants.positive.nearest_max, constants.negative.min], expected: kUnboundedBounds },\n          { input: [constants.negative.min, constants.positive.max, constants.positive.nearest_max], expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.lengthInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.lengthInterval([${t.params.input}]) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface VectorPairToIntervalCase {\n  input: [number[], number[]];\n  expected: number | IntervalBounds;\n}\n\ng.test('distanceIntervalVector')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<VectorPairToIntervalCase>(p => {\n        // prettier-ignore\n        return [\n          // distance(x, y), where x - y = 0 has an acceptance interval of kUnboundedBounds,\n          // because distance(x, y) = length(x - y), and length(0) = kUnboundedBounds.\n\n          // vec2\n          { input: [[1.0, 0.0], [1.0, 0.0]], expected: kUnboundedBounds },\n          { input: [[1.0, 0.0], [0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [[0.0, 0.0], [1.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [[-1.0, 0.0], [0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [[0.0, 0.0], [-1.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [[0.0, 1.0], [-1.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0, 1.0]'] },  // ~√2\n          { input: [[0.1, 0.0], [0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[0.1]'] },  // ~0.1\n\n          // vec3\n          { input: [[1.0, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: kUnboundedBounds },\n          { input: [[1.0, 0.0, 0.0], [0.0, 0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [[0.0, 1.0, 0.0], [0.0, 0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [[0.0, 0.0, 1.0], [0.0, 0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [[0.0, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [[0.0, 0.0, 0.0], [0.0, 1.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [[0.0, 0.0, 0.0], [0.0, 0.0, 1.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [[1.0, 1.0, 1.0], [0.0, 0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0, 1.0, 1.0]'] },  // ~√3\n          { input: [[0.0, 0.0, 0.0], [1.0, 1.0, 1.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0, 1.0, 1.0]'] },  // ~√3\n          { input: [[-1.0, -1.0, -1.0], [0.0, 0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0, 1.0, 1.0]'] },  // ~√3\n          { input: [[0.0, 0.0, 0.0], [-1.0, -1.0, -1.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0, 1.0, 1.0]'] },  // ~√3\n          { input: [[0.1, 0.0, 0.0], [0.0, 0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[0.1]'] },  // ~0.1\n          { input: [[0.0, 0.0, 0.0], [0.1, 0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[0.1]'] },  // ~0.1\n\n          // vec4\n          { input: [[1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: kUnboundedBounds },\n          { input: [[1.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [[0.0, 1.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [[0.0, 0.0, 1.0, 0.0], [0.0, 0.0, 0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [[0.0, 0.0, 0.0, 1.0], [0.0, 0.0, 0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [[0.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [[0.0, 0.0, 0.0, 0.0], [0.0, 1.0, 0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [[0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 1.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [[0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 1.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0]'] },  // ~1\n          { input: [[1.0, 1.0, 1.0, 1.0], [0.0, 0.0, 0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0, 1.0, 1.0, 1.0]'] },  // ~2\n          { input: [[0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 1.0, 1.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0, 1.0, 1.0, 1.0]'] },  // ~2\n          { input: [[-1.0, 1.0, -1.0, 1.0], [0.0, 0.0, 0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0, 1.0, 1.0, 1.0]'] },  // ~2\n          { input: [[0.0, 0.0, 0.0, 0.0], [1.0, -1.0, 1.0, -1.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[1.0, 1.0, 1.0, 1.0]'] },  // ~2\n          { input: [[0.1, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[0.1]'] },  // ~0.1\n          { input: [[0.0, 0.0, 0.0, 0.0], [0.1, 0.0, 0.0, 0.0]], expected: kRootSumSquareExpectionInterval[p.trait]['[0.1]'] },  // ~0.1\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.distanceInterval(...t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.lengthInterval([${t.params.input[0]}, ${t.params.input[1]}]) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// prettier-ignore\nconst kDotIntervalCases = {\n  f32: [\n    // Inputs with large values but cancel out to finite result. In these cases, 2.0*2.0 = 4.0 and\n    // 3.0*3.0 = 9.0 is much smaller than kValue.f32.positive.max, as a result\n    // kValue.f32.positive.max + 9.0 = kValue.f32.positive.max in f32 and even f64. So, if the\n    // positive and negative large number cancel each other first, the result would be\n    // 2.0*2.0+3.0*3.0 = 13. Otherwise, the resule would be 0.0 or 4.0 or 9.0.\n    // https://github.com/gpuweb/cts/issues/2155\n    { input: [[kValue.f32.positive.max, 1.0, 2.0, 3.0], [-1.0, kValue.f32.positive.max, -2.0, -3.0]], expected: [-13, 0] },\n    { input: [[kValue.f32.positive.max, 1.0, 2.0, 3.0], [1.0, kValue.f32.negative.min, 2.0, 3.0]], expected: [0, 13] },\n  ] as VectorPairToIntervalCase[],\n  f16: [\n    // Inputs with large values but cancel out to finite result. In these cases, 2.0*2.0 = 4.0 and\n    // 3.0*3.0 = 9.0 is not small enough comparing to kValue.f16.positive.max = 65504, as a result\n    // kValue.f16.positive.max + 9.0 = 65513 is exactly representable in f32 and f64. So, if the\n    // positive and negative large number don't cancel each other first, the computation will\n    // overflow f16 and result in unbounded bounds.\n    // https://github.com/gpuweb/cts/issues/2155\n    { input: [[kValue.f16.positive.max, 1.0, 2.0, 3.0], [-1.0, kValue.f16.positive.max, -2.0, -3.0]], expected: kUnboundedBounds },\n    { input: [[kValue.f16.positive.max, 1.0, 2.0, 3.0], [1.0, kValue.f16.negative.min, 2.0, 3.0]], expected: kUnboundedBounds },\n  ] as VectorPairToIntervalCase[],\n} as const;\n\ng.test('dotInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<VectorPairToIntervalCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          // vec2\n          { input: [[1.0, 0.0], [1.0, 0.0]], expected: 1.0 },\n          { input: [[0.0, 1.0], [0.0, 1.0]], expected: 1.0 },\n          { input: [[1.0, 1.0], [1.0, 1.0]], expected: 2.0 },\n          { input: [[-1.0, -1.0], [-1.0, -1.0]], expected: 2.0 },\n          { input: [[-1.0, 1.0], [1.0, -1.0]], expected: -2.0 },\n          { input: [[0.1, 0.0], [1.0, 0.0]], expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1']},  // correclt rounded of 0.1\n\n          // vec3\n          { input: [[1.0, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: 1.0 },\n          { input: [[0.0, 1.0, 0.0], [0.0, 1.0, 0.0]], expected: 1.0 },\n          { input: [[0.0, 0.0, 1.0], [0.0, 0.0, 1.0]], expected: 1.0 },\n          { input: [[1.0, 1.0, 1.0], [1.0, 1.0, 1.0]], expected: 3.0 },\n          { input: [[-1.0, -1.0, -1.0], [-1.0, -1.0, -1.0]], expected: 3.0 },\n          { input: [[1.0, -1.0, -1.0], [-1.0, 1.0, -1.0]], expected: -1.0 },\n          { input: [[0.1, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1']},  // correclt rounded of 0.1\n\n          // vec4\n          { input: [[1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: 1.0 },\n          { input: [[0.0, 1.0, 0.0, 0.0], [0.0, 1.0, 0.0, 0.0]], expected: 1.0 },\n          { input: [[0.0, 0.0, 1.0, 0.0], [0.0, 0.0, 1.0, 0.0]], expected: 1.0 },\n          { input: [[0.0, 0.0, 0.0, 1.0], [0.0, 0.0, 0.0, 1.0]], expected: 1.0 },\n          { input: [[1.0, 1.0, 1.0, 1.0], [1.0, 1.0, 1.0, 1.0]], expected: 4.0 },\n          { input: [[-1.0, -1.0, -1.0, -1.0], [-1.0, -1.0, -1.0, -1.0]], expected: 4.0 },\n          { input: [[-1.0, 1.0, -1.0, 1.0], [1.0, -1.0, 1.0, -1.0]], expected: -4.0 },\n          { input: [[0.1, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: kConstantCorrectlyRoundedExpectation[p.trait]['0.1']},  // correclt rounded of 0.1\n\n          ...kDotIntervalCases[p.trait],\n\n          // Test that going out of bounds in the intermediate calculations is caught correctly.\n          { input: [[constants.positive.nearest_max, constants.positive.max, constants.negative.min], [1.0, 1.0, 1.0]], expected: kUnboundedBounds },\n          { input: [[constants.positive.nearest_max, constants.negative.min, constants.positive.max], [1.0, 1.0, 1.0]], expected: kUnboundedBounds },\n          { input: [[constants.positive.max, constants.positive.nearest_max, constants.negative.min], [1.0, 1.0, 1.0]], expected: kUnboundedBounds },\n          { input: [[constants.negative.min, constants.positive.nearest_max, constants.positive.max], [1.0, 1.0, 1.0]], expected: kUnboundedBounds },\n          { input: [[constants.positive.max, constants.negative.min, constants.positive.nearest_max], [1.0, 1.0, 1.0]], expected: kUnboundedBounds },\n          { input: [[constants.negative.min, constants.positive.max, constants.positive.nearest_max], [1.0, 1.0, 1.0]], expected: kUnboundedBounds },\n        ];\n      })\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.dotInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.dotInterval([${x}], [${y}]) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface VectorToVectorCase {\n  input: number[];\n  expected: (number | IntervalBounds)[];\n}\n\n// prettier-ignore\nconst kNormalizeIntervalCases = {\n  f32: [\n    // vec2\n    {input: [1.0, 0.0], expected: [[reinterpretU64AsF64(0x3fef_fffe_7000_0000n), reinterpretU64AsF64(0x3ff0_0000_b000_0000n)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)]] },  // [ ~1.0, ~0.0]\n    {input: [0.0, 1.0], expected: [[reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)], [reinterpretU64AsF64(0x3fef_fffe_7000_0000n), reinterpretU64AsF64(0x3ff0_0000_b000_0000n)]] },  // [ ~0.0, ~1.0]\n    {input: [-1.0, 0.0], expected: [[reinterpretU64AsF64(0xbff0_0000_b000_0000n), reinterpretU64AsF64(0xbfef_fffe_7000_0000n)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)]] },  // [ ~1.0, ~0.0]\n    {input: [1.0, 1.0], expected: [[reinterpretU64AsF64(0x3fe6_a09d_5000_0000n), reinterpretU64AsF64(0x3fe6_a09f_9000_0000n)], [reinterpretU64AsF64(0x3fe6_a09d_5000_0000n), reinterpretU64AsF64(0x3fe6_a09f_9000_0000n)]] },  // [ ~1/√2, ~1/√2]\n\n    // vec3\n    {input: [1.0, 0.0, 0.0], expected: [[reinterpretU64AsF64(0x3fef_fffe_7000_0000n), reinterpretU64AsF64(0x3ff0_0000_b000_0000n)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)]] },  // [ ~1.0, ~0.0, ~0.0]\n    {input: [0.0, 1.0, 0.0], expected: [[reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)], [reinterpretU64AsF64(0x3fef_fffe_7000_0000n), reinterpretU64AsF64(0x3ff0_0000_b000_0000n)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)]] },  // [ ~0.0, ~1.0, ~0.0]\n    {input: [0.0, 0.0, 1.0], expected: [[reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)], [reinterpretU64AsF64(0x3fef_fffe_7000_0000n), reinterpretU64AsF64(0x3ff0_0000_b000_0000n)]] },  // [ ~0.0, ~0.0, ~1.0]\n    {input: [-1.0, 0.0, 0.0], expected: [[reinterpretU64AsF64(0xbff0_0000_b000_0000n), reinterpretU64AsF64(0xbfef_fffe_7000_0000n)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)]] },  // [ ~1.0, ~0.0, ~0.0]\n    {input: [1.0, 1.0, 1.0], expected: [[reinterpretU64AsF64(0x3fe2_79a6_5000_0000n), reinterpretU64AsF64(0x3fe2_79a8_5000_0000n)], [reinterpretU64AsF64(0x3fe2_79a6_5000_0000n), reinterpretU64AsF64(0x3fe2_79a8_5000_0000n)], [reinterpretU64AsF64(0x3fe2_79a6_5000_0000n), reinterpretU64AsF64(0x3fe2_79a8_5000_0000n)]] },  // [ ~1/√3, ~1/√3, ~1/√3]\n\n    // vec4\n    {input: [1.0, 0.0, 0.0, 0.0], expected: [[reinterpretU64AsF64(0x3fef_fffe_7000_0000n), reinterpretU64AsF64(0x3ff0_0000_b000_0000n)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)]] },  // [ ~1.0, ~0.0, ~0.0, ~0.0]\n    {input: [0.0, 1.0, 0.0, 0.0], expected: [[reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)], [reinterpretU64AsF64(0x3fef_fffe_7000_0000n), reinterpretU64AsF64(0x3ff0_0000_b000_0000n)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)]] },  // [ ~0.0, ~1.0, ~0.0, ~0.0]\n    {input: [0.0, 0.0, 1.0, 0.0], expected: [[reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)], [reinterpretU64AsF64(0x3fef_fffe_7000_0000n), reinterpretU64AsF64(0x3ff0_0000_b000_0000n)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)]] },  // [ ~0.0, ~0.0, ~1.0, ~0.0]\n    {input: [0.0, 0.0, 0.0, 1.0], expected: [[reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)], [reinterpretU64AsF64(0x3fef_fffe_7000_0000n), reinterpretU64AsF64(0x3ff0_0000_b000_0000n)]] },  // [ ~0.0, ~0.0, ~0.0, ~1.0]\n    {input: [-1.0, 0.0, 0.0, 0.0], expected: [[reinterpretU64AsF64(0xbff0_0000_b000_0000n), reinterpretU64AsF64(0xbfef_fffe_7000_0000n)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)], [reinterpretU32AsF32(0x81200000), reinterpretU32AsF32(0x01200000)]] },  // [ ~1.0, ~0.0, ~0.0, ~0.0]\n    {input: [1.0, 1.0, 1.0, 1.0], expected: [[reinterpretU64AsF64(0x3fdf_fffe_7000_0000n), reinterpretU64AsF64(0x3fe0_0000_b000_0000n)], [reinterpretU64AsF64(0x3fdf_fffe_7000_0000n), reinterpretU64AsF64(0x3fe0_0000_b000_0000n)], [reinterpretU64AsF64(0x3fdf_fffe_7000_0000n), reinterpretU64AsF64(0x3fe0_0000_b000_0000n)], [reinterpretU64AsF64(0x3fdf_fffe_7000_0000n), reinterpretU64AsF64(0x3fe0_0000_b000_0000n)]] },  // [ ~1/√4, ~1/√4, ~1/√4]\n  ] as VectorToVectorCase[],\n  f16: [\n    // vec2\n    {input: [1.0, 0.0], expected: [[reinterpretU64AsF64(0x3fef_ce00_0000_0000n), reinterpretU64AsF64(0x3ff0_1600_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)]] },  // [ ~1.0, ~0.0]\n    {input: [0.0, 1.0], expected: [[reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)], [reinterpretU64AsF64(0x3fef_ce00_0000_0000n), reinterpretU64AsF64(0x3ff0_1600_0000_0000n)]] },  // [ ~0.0, ~1.0]\n    {input: [-1.0, 0.0], expected: [[reinterpretU64AsF64(0xbff0_1600_0000_0000n), reinterpretU64AsF64(0xbfef_ce00_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)]] },  // [ ~1.0, ~0.0]\n    {input: [1.0, 1.0], expected: [[reinterpretU64AsF64(0x3fe6_7e00_0000_0000n), reinterpretU64AsF64(0x3fe6_c600_0000_0000n)], [reinterpretU64AsF64(0x3fe6_7e00_0000_0000n), reinterpretU64AsF64(0x3fe6_c600_0000_0000n)]] },  // [ ~1/√2, ~1/√2]\n\n    // vec3\n    {input: [1.0, 0.0, 0.0], expected: [[reinterpretU64AsF64(0x3fef_ce00_0000_0000n), reinterpretU64AsF64(0x3ff0_1600_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)]] },  // [ ~1.0, ~0.0, ~0.0]\n    {input: [0.0, 1.0, 0.0], expected: [[reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)], [reinterpretU64AsF64(0x3fef_ce00_0000_0000n), reinterpretU64AsF64(0x3ff0_1600_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)]] },  // [ ~0.0, ~1.0, ~0.0]\n    {input: [0.0, 0.0, 1.0], expected: [[reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)], [reinterpretU64AsF64(0x3fef_ce00_0000_0000n), reinterpretU64AsF64(0x3ff0_1600_0000_0000n)]] },  // [ ~0.0, ~0.0, ~1.0]\n    {input: [-1.0, 0.0, 0.0], expected: [[reinterpretU64AsF64(0xbff0_1600_0000_0000n), reinterpretU64AsF64(0xbfef_ce00_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)]] },  // [ ~1.0, ~0.0, ~0.0]\n    {input: [1.0, 1.0, 1.0], expected: [[reinterpretU64AsF64(0x3fe2_5a00_0000_0000n), reinterpretU64AsF64(0x3fe2_9a00_0000_0000n)], [reinterpretU64AsF64(0x3fe2_5a00_0000_0000n), reinterpretU64AsF64(0x3fe2_9a00_0000_0000n)], [reinterpretU64AsF64(0x3fe2_5a00_0000_0000n), reinterpretU64AsF64(0x3fe2_9a00_0000_0000n)]] },  // [ ~1/√3, ~1/√3, ~1/√3]\n\n    // vec4\n    {input: [1.0, 0.0, 0.0, 0.0], expected: [[reinterpretU64AsF64(0x3fef_ce00_0000_0000n), reinterpretU64AsF64(0x3ff0_1600_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)]] },  // [ ~1.0, ~0.0, ~0.0, ~0.0]\n    {input: [0.0, 1.0, 0.0, 0.0], expected: [[reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)], [reinterpretU64AsF64(0x3fef_ce00_0000_0000n), reinterpretU64AsF64(0x3ff0_1600_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)]] },  // [ ~0.0, ~1.0, ~0.0, ~0.0]\n    {input: [0.0, 0.0, 1.0, 0.0], expected: [[reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)], [reinterpretU64AsF64(0x3fef_ce00_0000_0000n), reinterpretU64AsF64(0x3ff0_1600_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)]] },  // [ ~0.0, ~0.0, ~1.0, ~0.0]\n    {input: [0.0, 0.0, 0.0, 1.0], expected: [[reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)], [reinterpretU64AsF64(0x3fef_ce00_0000_0000n), reinterpretU64AsF64(0x3ff0_1600_0000_0000n)]] },  // [ ~0.0, ~0.0, ~0.0, ~1.0]\n    {input: [-1.0, 0.0, 0.0, 0.0], expected: [[reinterpretU64AsF64(0xbff0_1600_0000_0000n), reinterpretU64AsF64(0xbfef_ce00_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)], [reinterpretU64AsF64(0xbf24_0000_0000_0000n), reinterpretU64AsF64(0x3f24_0000_0000_0000n)]] },  // [ ~1.0, ~0.0, ~0.0, ~0.0]\n    {input: [1.0, 1.0, 1.0, 1.0], expected: [[reinterpretU64AsF64(0x3fdf_ce00_0000_0000n), reinterpretU64AsF64(0x3fe0_1600_0000_0000n)], [reinterpretU64AsF64(0x3fdf_ce00_0000_0000n), reinterpretU64AsF64(0x3fe0_1600_0000_0000n)], [reinterpretU64AsF64(0x3fdf_ce00_0000_0000n), reinterpretU64AsF64(0x3fe0_1600_0000_0000n)], [reinterpretU64AsF64(0x3fdf_ce00_0000_0000n), reinterpretU64AsF64(0x3fe0_1600_0000_0000n)]] },  // [ ~1/√4, ~1/√4, ~1/√4]\n  ] as VectorToVectorCase[],\n} as const;\n\ng.test('normalizeInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<VectorToVectorCase>(p => kNormalizeIntervalCases[p.trait])\n  )\n  .fn(t => {\n    const x = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = trait.toVector(t.params.expected);\n    const got = trait.normalizeInterval(x);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.normalizeInterval([${x}]) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface VectorPairToVectorCase {\n  input: [number[], number[]];\n  expected: (number | IntervalBounds)[];\n}\n\n// prettier-ignore\nconst kCrossIntervalCases = {\n  f32: [\n    { input: [\n        [kValue.f32.positive.subnormal.max, kValue.f32.negative.subnormal.max, kValue.f32.negative.subnormal.min],\n        [kValue.f32.negative.subnormal.min, kValue.f32.positive.subnormal.min, kValue.f32.negative.subnormal.max]\n      ],\n      expected: [\n        [0.0, reinterpretU32AsF32(0x00000002)], // ~0\n        [0.0, reinterpretU32AsF32(0x00000002)], // ~0\n        [kValue.f32.negative.subnormal.max, kValue.f32.positive.subnormal.min] // ~0\n      ]\n    },\n    { input: [\n        [0.1, -0.1, -0.1],\n        [-0.1, 0.1, -0.1]\n      ],\n      expected: [\n        [reinterpretU32AsF32(0x3ca3d708), reinterpretU32AsF32(0x3ca3d70b)], // ~0.02\n        [reinterpretU32AsF32(0x3ca3d708), reinterpretU32AsF32(0x3ca3d70b)], // ~0.02\n        [reinterpretU32AsF32(0xb1400000), reinterpretU32AsF32(0x31400000)], // ~0\n      ]\n    },\n  ] as VectorPairToVectorCase[],\n  f16: [\n    { input: [\n        [kValue.f16.positive.subnormal.max, kValue.f16.negative.subnormal.max, kValue.f16.negative.subnormal.min],\n        [kValue.f16.negative.subnormal.min, kValue.f16.positive.subnormal.min, kValue.f16.negative.subnormal.max]\n      ],\n      expected: [\n        [0.0, reinterpretU16AsF16(0x0002)], // ~0\n        [0.0, reinterpretU16AsF16(0x0002)], // ~0\n        [kValue.f16.negative.subnormal.max, kValue.f16.positive.subnormal.min] // ~0\n      ]\n    },\n    { input: [\n        [0.1, -0.1, -0.1],\n        [-0.1, 0.1, -0.1]\n      ],\n      expected: [\n        [reinterpretU16AsF16(0x251e), reinterpretU16AsF16(0x2520)], // ~0.02\n        [reinterpretU16AsF16(0x251e), reinterpretU16AsF16(0x2520)], // ~0.02\n        [reinterpretU16AsF16(0x8100), reinterpretU16AsF16(0x0100)] // ~0\n      ]\n    },\n  ] as VectorPairToVectorCase[],\n  abstract: [\n    { input: [\n        [kValue.f64.positive.subnormal.max, kValue.f64.negative.subnormal.max, kValue.f64.negative.subnormal.min],\n        [kValue.f64.negative.subnormal.min, kValue.f64.positive.subnormal.min, kValue.f64.negative.subnormal.max]\n      ],\n      expected: [0.0, 0.0, 0.0]\n    },\n    { input: [\n        [0.1, -0.1, -0.1],\n        [-0.1, 0.1, -0.1]\n      ],\n      expected: [\n        reinterpretU64AsF64(0x3f94_7ae1_47ae_147cn), // ~0.02\n        reinterpretU64AsF64(0x3f94_7ae1_47ae_147cn), // ~0.02\n        0.0\n      ]\n    },\n  ] as VectorPairToVectorCase[],\n} as const;\n\ng.test('crossInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<VectorPairToVectorCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          // parallel vectors, AXB == 0\n          { input: [[1.0, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [0.0, 0.0, 0.0] },\n          { input: [[0.0, 1.0, 0.0], [0.0, 1.0, 0.0]], expected: [0.0, 0.0, 0.0] },\n          { input: [[0.0, 0.0, 1.0], [0.0, 0.0, 1.0]], expected: [0.0, 0.0, 0.0] },\n          { input: [[1.0, 1.0, 1.0], [1.0, 1.0, 1.0]], expected: [0.0, 0.0, 0.0] },\n          { input: [[-1.0, -1.0, -1.0], [-1.0, -1.0, -1.0]], expected: [0.0, 0.0, 0.0] },\n          { input: [[0.1, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [0.0, 0.0, 0.0] },\n          { input: [[constants.positive.subnormal.max, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [0.0, 0.0, 0.0] },\n\n          // non-parallel vectors, AXB != 0\n          { input: [[1.0, -1.0, -1.0], [-1.0, 1.0, -1.0]], expected: [2.0, 2.0, 0.0] },\n          { input: [[1.0, 2, 3], [1.0, 5.0, 7.0]], expected: [-1, -4, 3] },\n          ...kCrossIntervalCases[p.trait],\n        ];\n      })\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = trait.toVector(t.params.expected);\n    const got = trait.crossInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.crossInterval([${x}], [${y}]) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// prettier-ignore\nconst kReflectIntervalCases = {\n  f32: [\n    // vec2s\n    { input: [[0.1, 0.1], [1.0, 1.0]], expected: [[reinterpretU32AsF32(0xbe99999a), reinterpretU32AsF32(0xbe999998)], [reinterpretU32AsF32(0xbe99999a), reinterpretU32AsF32(0xbe999998)]] },  // [~-0.3, ~-0.3]\n    { input: [[kValue.f32.positive.subnormal.max, kValue.f32.negative.subnormal.max], [1.0, 1.0]], expected: [[reinterpretU32AsF32(0x80fffffe), reinterpretU32AsF32(0x00800001)], [reinterpretU32AsF32(0x80ffffff), reinterpretU32AsF32(0x00000002)]] },  // [~0.0, ~0.0]\n    // vec3s\n    { input: [[0.1, 0.1, 0.1], [1.0, 1.0, 1.0]], expected: [[reinterpretU32AsF32(0xbf000001), reinterpretU32AsF32(0xbefffffe)], [reinterpretU32AsF32(0xbf000001), reinterpretU32AsF32(0xbefffffe)], [reinterpretU32AsF32(0xbf000001), reinterpretU32AsF32(0xbefffffe)]] },  // [~-0.5, ~-0.5, ~-0.5]\n    { input: [[kValue.f32.positive.subnormal.max, kValue.f32.negative.subnormal.max, 0.0], [1.0, 1.0, 1.0]], expected: [[reinterpretU32AsF32(0x80fffffe), reinterpretU32AsF32(0x00800001)], [reinterpretU32AsF32(0x80ffffff), reinterpretU32AsF32(0x00000002)], [reinterpretU32AsF32(0x80fffffe), reinterpretU32AsF32(0x00000002)]] },  // [~0.0, ~0.0, ~0.0]\n    // vec4s\n    { input: [[0.1, 0.1, 0.1, 0.1], [1.0, 1.0, 1.0, 1.0]], expected: [[reinterpretU32AsF32(0xbf333335), reinterpretU32AsF32(0xbf333332)], [reinterpretU32AsF32(0xbf333335), reinterpretU32AsF32(0xbf333332)], [reinterpretU32AsF32(0xbf333335), reinterpretU32AsF32(0xbf333332)], [reinterpretU32AsF32(0xbf333335), reinterpretU32AsF32(0xbf333332)]] },  // [~-0.7, ~-0.7, ~-0.7, ~-0.7]\n    { input: [[kValue.f32.positive.subnormal.max, kValue.f32.negative.subnormal.max, 0.0, 0.0], [1.0, 1.0, 1.0, 1.0]], expected: [[reinterpretU32AsF32(0x80fffffe), reinterpretU32AsF32(0x00800001)], [reinterpretU32AsF32(0x80ffffff), reinterpretU32AsF32(0x00000002)], [reinterpretU32AsF32(0x80fffffe), reinterpretU32AsF32(0x00000002)], [reinterpretU32AsF32(0x80fffffe), reinterpretU32AsF32(0x00000002)]] },  // [~0.0, ~0.0, ~0.0, ~0.0]\n  ] as VectorPairToVectorCase[],\n  f16: [\n    // vec2s\n    { input: [[0.1, 0.1], [1.0, 1.0]], expected: [[reinterpretU16AsF16(0xb4ce), reinterpretU16AsF16(0xb4cc)], [reinterpretU16AsF16(0xb4ce), reinterpretU16AsF16(0xb4cc)]] },  // [~-0.3, ~-0.3]\n    { input: [[kValue.f16.positive.subnormal.max, kValue.f16.negative.subnormal.max], [1.0, 1.0]], expected: [[reinterpretU16AsF16(0x87fe), reinterpretU16AsF16(0x0401)], [reinterpretU16AsF16(0x87ff), reinterpretU16AsF16(0x0002)]] },  // [~0.0, ~0.0]\n    // vec3s\n    { input: [[0.1, 0.1, 0.1], [1.0, 1.0, 1.0]], expected: [[reinterpretU16AsF16(0xb802), reinterpretU16AsF16(0xb7fe)], [reinterpretU16AsF16(0xb802), reinterpretU16AsF16(0xb7fe)], [reinterpretU16AsF16(0xb802), reinterpretU16AsF16(0xb7fe)]] },  // [~-0.5, ~-0.5, ~-0.5]\n    { input: [[kValue.f16.positive.subnormal.max, kValue.f16.negative.subnormal.max, 0.0], [1.0, 1.0, 1.0]], expected: [[reinterpretU16AsF16(0x87fe), reinterpretU16AsF16(0x0401)], [reinterpretU16AsF16(0x87ff), reinterpretU16AsF16(0x0002)], [reinterpretU16AsF16(0x87fe), reinterpretU16AsF16(0x0002)]] },  // [~0.0, ~0.0, ~0.0]\n    // vec4s\n    { input: [[0.1, 0.1, 0.1, 0.1], [1.0, 1.0, 1.0, 1.0]], expected: [[reinterpretU16AsF16(0xb99c), reinterpretU16AsF16(0xb998)], [reinterpretU16AsF16(0xb99c), reinterpretU16AsF16(0xb998)], [reinterpretU16AsF16(0xb99c), reinterpretU16AsF16(0xb998)], [reinterpretU16AsF16(0xb99c), reinterpretU16AsF16(0xb998)]] },  // [~-0.7, ~-0.7, ~-0.7, ~-0.7]\n    { input: [[kValue.f16.positive.subnormal.max, kValue.f16.negative.subnormal.max, 0.0, 0.0], [1.0, 1.0, 1.0, 1.0]], expected: [[reinterpretU16AsF16(0x87fe), reinterpretU16AsF16(0x0401)], [reinterpretU16AsF16(0x87ff), reinterpretU16AsF16(0x0002)], [reinterpretU16AsF16(0x87fe), reinterpretU16AsF16(0x0002)], [reinterpretU16AsF16(0x87fe), reinterpretU16AsF16(0x0002)]] },  // [~0.0, ~0.0, ~0.0, ~0.0]\n  ] as VectorPairToVectorCase[],\n} as const;\n\ng.test('reflectInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<VectorPairToVectorCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          ...kReflectIntervalCases[p.trait],\n\n          // vec2s\n          { input: [[1.0, 0.0], [1.0, 0.0]], expected: [-1.0, 0.0] },\n          { input: [[1.0, 0.0], [0.0, 1.0]], expected: [1.0, 0.0] },\n          { input: [[0.0, 1.0], [0.0, 1.0]], expected: [0.0, -1.0] },\n          { input: [[0.0, 1.0], [1.0, 0.0]], expected: [0.0, 1.0] },\n          { input: [[1.0, 1.0], [1.0, 1.0]], expected: [-3.0, -3.0] },\n          { input: [[-1.0, -1.0], [1.0, 1.0]], expected: [3.0, 3.0] },\n          // vec3s\n          { input: [[1.0, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [-1.0, 0.0, 0.0] },\n          { input: [[0.0, 1.0, 0.0], [1.0, 0.0, 0.0]], expected: [0.0, 1.0, 0.0] },\n          { input: [[0.0, 0.0, 1.0], [1.0, 0.0, 0.0]], expected: [0.0, 0.0, 1.0] },\n          { input: [[1.0, 0.0, 0.0], [0.0, 1.0, 0.0]], expected: [1.0, 0.0, 0.0] },\n          { input: [[1.0, 0.0, 0.0], [0.0, 0.0, 1.0]], expected: [1.0, 0.0, 0.0] },\n          { input: [[1.0, 1.0, 1.0], [1.0, 1.0, 1.0]], expected: [-5.0, -5.0, -5.0] },\n          { input: [[-1.0, -1.0, -1.0], [1.0, 1.0, 1.0]], expected: [5.0, 5.0, 5.0] },\n          // vec4s\n          { input: [[1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: [-1.0, 0.0, 0.0, 0.0] },\n          { input: [[0.0, 1.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: [0.0, 1.0, 0.0, 0.0] },\n          { input: [[0.0, 0.0, 1.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: [0.0, 0.0, 1.0, 0.0] },\n          { input: [[0.0, 0.0, 0.0, 1.0], [1.0, 0.0, 0.0, 0.0]], expected: [0.0, 0.0, 0.0, 1.0] },\n          { input: [[1.0, 0.0, 0.0, 0.0], [0.0, 1.0, 0.0, 0.0]], expected: [1.0, 0.0, 0.0, 0.0] },\n          { input: [[1.0, 0.0, 0.0, 0.0], [0.0, 0.0, 1.0, 0.0]], expected: [1.0, 0.0, 0.0, 0.0] },\n          { input: [[1.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 1.0]], expected: [1.0, 0.0, 0.0, 0.0] },\n          { input: [[-1.0, -1.0, -1.0, -1.0], [1.0, 1.0, 1.0, 1.0]], expected: [7.0, 7.0, 7.0, 7.0] },\n          // Test that dot going OOB bounds in the intermediate calculations propagates\n          { input: [[constants.positive.nearest_max, constants.positive.max, constants.negative.min], [1.0, 1.0, 1.0]], expected: [kUnboundedBounds, kUnboundedBounds, kUnboundedBounds] },\n          { input: [[constants.positive.nearest_max, constants.negative.min, constants.positive.max], [1.0, 1.0, 1.0]], expected: [kUnboundedBounds, kUnboundedBounds, kUnboundedBounds] },\n          { input: [[constants.positive.max, constants.positive.nearest_max, constants.negative.min], [1.0, 1.0, 1.0]], expected: [kUnboundedBounds, kUnboundedBounds, kUnboundedBounds] },\n          { input: [[constants.negative.min, constants.positive.nearest_max, constants.positive.max], [1.0, 1.0, 1.0]], expected: [kUnboundedBounds, kUnboundedBounds, kUnboundedBounds] },\n          { input: [[constants.positive.max, constants.negative.min, constants.positive.nearest_max], [1.0, 1.0, 1.0]], expected: [kUnboundedBounds, kUnboundedBounds, kUnboundedBounds] },\n          { input: [[constants.negative.min, constants.positive.max, constants.positive.nearest_max], [1.0, 1.0, 1.0]], expected: [kUnboundedBounds, kUnboundedBounds, kUnboundedBounds] },\n\n          // Test that post-dot going OOB propagates\n          { input: [[constants.positive.max, 1.0, 2.0, 3.0], [-1.0, constants.positive.max, -2.0, -3.0]], expected: [kUnboundedBounds, kUnboundedBounds, kUnboundedBounds, kUnboundedBounds] },\n        ];\n      })\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = trait.toVector(t.params.expected);\n    const got = trait.reflectInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.reflectInterval([${x}], [${y}]) returned ${JSON.stringify(\n        got\n      )}. Expected ${JSON.stringify(expected)}`\n    );\n  });\n\ninterface MatrixToScalarCase {\n  input: number[][];\n  expected: number | IntervalBounds;\n}\n\ng.test('determinantInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .combineWithParams<MatrixToScalarCase>([\n        // Extreme values, i.e. subnormals, very large magnitudes, and those lead to\n        // non-precise products, are intentionally not tested, since the accuracy of\n        // determinant is restricted to well behaving inputs. Handling all cases\n        // requires ~23! options to be calculated in the 4x4 case, so is not\n        // feasible.\n        {\n          input: [\n            [1, 2],\n            [3, 4],\n          ],\n          expected: -2,\n        },\n        {\n          input: [\n            [-1, 2],\n            [-3, 4],\n          ],\n          expected: 2,\n        },\n        {\n          input: [\n            [11, 22],\n            [33, 44],\n          ],\n          expected: -242,\n        },\n        {\n          input: [\n            [5, 6],\n            [8, 9],\n          ],\n          expected: -3,\n        },\n        {\n          input: [\n            [4, 6],\n            [7, 9],\n          ],\n          expected: -6,\n        },\n        {\n          input: [\n            [4, 5],\n            [7, 8],\n          ],\n          expected: -3,\n        },\n        {\n          input: [\n            [1, 2, 3],\n            [4, 5, 6],\n            [7, 8, 9],\n          ],\n          expected: 0,\n        },\n        {\n          input: [\n            [-1, 2, 3],\n            [-4, 5, 6],\n            [-7, 8, 9],\n          ],\n          expected: 0,\n        },\n        {\n          input: [\n            [4, 1, -1],\n            [-3, 0, 5],\n            [5, 3, 2],\n          ],\n          expected: -20,\n        },\n        {\n          input: [\n            [1, 2, 3, 4],\n            [5, 6, 7, 8],\n            [9, 10, 11, 12],\n            [13, 14, 15, 16],\n          ],\n          expected: 0,\n        },\n        {\n          input: [\n            [4, 0, 0, 0],\n            [3, 1, -1, 3],\n            [2, -3, 3, 1],\n            [2, 3, 3, 1],\n          ],\n          expected: -240,\n        },\n      ])\n  )\n  .fn(t => {\n    const input = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = trait.toInterval(t.params.expected);\n    const got = trait.determinantInterval(input);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.determinantInterval([${JSON.stringify(\n        input\n      )}]) returned '${got}. Expected '${expected}'`\n    );\n  });\n\ninterface MatrixToMatrixCase {\n  input: number[][];\n  expected: (number | IntervalBounds)[][];\n}\n\ng.test('transposeInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<MatrixToMatrixCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        return [\n          {\n            input: [\n              [1, 2],\n              [3, 4],\n            ],\n            expected: [\n              [1, 3],\n              [2, 4],\n            ],\n          },\n          {\n            input: [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n            ],\n            expected: [\n              [1, 3, 5],\n              [2, 4, 6],\n            ],\n          },\n          {\n            input: [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n              [7, 8],\n            ],\n            expected: [\n              [1, 3, 5, 7],\n              [2, 4, 6, 8],\n            ],\n          },\n          {\n            input: [\n              [1, 2, 3],\n              [4, 5, 6],\n            ],\n            expected: [\n              [1, 4],\n              [2, 5],\n              [3, 6],\n            ],\n          },\n          {\n            input: [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n            ],\n            expected: [\n              [1, 4, 7],\n              [2, 5, 8],\n              [3, 6, 9],\n            ],\n          },\n          {\n            input: [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n              [10, 11, 12],\n            ],\n            expected: [\n              [1, 4, 7, 10],\n              [2, 5, 8, 11],\n              [3, 6, 9, 12],\n            ],\n          },\n          {\n            input: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n            ],\n            expected: [\n              [1, 5],\n              [2, 6],\n              [3, 7],\n              [4, 8],\n            ],\n          },\n          {\n            input: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n            ],\n            expected: [\n              [1, 5, 9],\n              [2, 6, 10],\n              [3, 7, 11],\n              [4, 8, 12],\n            ],\n          },\n          {\n            input: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n              [13, 14, 15, 16],\n            ],\n            expected: [\n              [1, 5, 9, 13],\n              [2, 6, 10, 14],\n              [3, 7, 11, 15],\n              [4, 8, 12, 16],\n            ],\n          },\n          {\n            input: [\n              [constants.positive.subnormal.max, constants.positive.subnormal.min],\n              [constants.negative.subnormal.min, constants.negative.subnormal.max],\n            ],\n            expected: [\n              [\n                [0, constants.positive.subnormal.max],\n                [constants.negative.subnormal.min, 0],\n              ],\n              [\n                [0, constants.positive.subnormal.min],\n                [constants.negative.subnormal.max, 0],\n              ],\n            ],\n          },\n        ];\n      })\n  )\n  .fn(t => {\n    const input = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = trait.toMatrix(t.params.expected);\n    const got = trait.transposeInterval(input);\n    t.expect(\n      objectEquals(expected, got),\n      `FP.${t.params.trait}.transposeInterval([${JSON.stringify(\n        input\n      )}]) returned '[${JSON.stringify(got)}]'. Expected '[${JSON.stringify(expected)}]'`\n    );\n  });\n\ninterface MatrixPairToMatrixCase {\n  input: [number[][], number[][]];\n  expected: (number | IntervalBounds)[][];\n}\n\ng.test('additionMatrixMatrixInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .combineWithParams<MatrixPairToMatrixCase>([\n        // Only testing that different shapes of matrices are handled correctly\n        // here, to reduce test duplication.\n        // additionMatrixMatrixInterval uses AdditionIntervalOp for calculating intervals,\n        // so the testing for additionInterval covers the actual interval\n        // calculations.\n        {\n          input: [\n            [\n              [1, 2],\n              [3, 4],\n            ],\n            [\n              [10, 20],\n              [30, 40],\n            ],\n          ],\n          expected: [\n            [11, 22],\n            [33, 44],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n            ],\n            [\n              [10, 20],\n              [30, 40],\n              [50, 60],\n            ],\n          ],\n          expected: [\n            [11, 22],\n            [33, 44],\n            [55, 66],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n              [7, 8],\n            ],\n            [\n              [10, 20],\n              [30, 40],\n              [50, 60],\n              [70, 80],\n            ],\n          ],\n          expected: [\n            [11, 22],\n            [33, 44],\n            [55, 66],\n            [77, 88],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3],\n              [4, 5, 6],\n            ],\n            [\n              [10, 20, 30],\n              [40, 50, 60],\n            ],\n          ],\n          expected: [\n            [11, 22, 33],\n            [44, 55, 66],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n            ],\n            [\n              [10, 20, 30],\n              [40, 50, 60],\n              [70, 80, 90],\n            ],\n          ],\n          expected: [\n            [11, 22, 33],\n            [44, 55, 66],\n            [77, 88, 99],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n              [10, 11, 12],\n            ],\n            [\n              [10, 20, 30],\n              [40, 50, 60],\n              [70, 80, 90],\n              [1000, 1100, 1200],\n            ],\n          ],\n          expected: [\n            [11, 22, 33],\n            [44, 55, 66],\n            [77, 88, 99],\n            [1010, 1111, 1212],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n            ],\n            [\n              [10, 20, 30, 40],\n              [50, 60, 70, 80],\n            ],\n          ],\n          expected: [\n            [11, 22, 33, 44],\n            [55, 66, 77, 88],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n            ],\n            [\n              [10, 20, 30, 40],\n              [50, 60, 70, 80],\n              [90, 1000, 1100, 1200],\n            ],\n          ],\n          expected: [\n            [11, 22, 33, 44],\n            [55, 66, 77, 88],\n            [99, 1010, 1111, 1212],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n              [13, 14, 15, 16],\n            ],\n            [\n              [10, 20, 30, 40],\n              [50, 60, 70, 80],\n              [90, 1000, 1100, 1200],\n              [1300, 1400, 1500, 1600],\n            ],\n          ],\n          expected: [\n            [11, 22, 33, 44],\n            [55, 66, 77, 88],\n            [99, 1010, 1111, 1212],\n            [1313, 1414, 1515, 1616],\n          ],\n        },\n      ])\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = trait.toMatrix(t.params.expected);\n    const got = trait.additionMatrixMatrixInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.additionMatrixMatrixInterval([${JSON.stringify(x)}], [${JSON.stringify(\n        y\n      )}]) returned '[${JSON.stringify(got)}]'. Expected '[${JSON.stringify(expected)}]'`\n    );\n  });\n\ng.test('subtractionMatrixMatrixInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .combineWithParams<MatrixPairToMatrixCase>([\n        // Only testing that different shapes of matrices are handled correctly\n        // here, to reduce test duplication.\n        // subtractionMatrixMatrixInterval uses AdditionIntervalOp for calculating intervals,\n        // so the testing for subtractionInterval covers the actual interval\n        // calculations.\n        {\n          input: [\n            [\n              [1, 2],\n              [3, 4],\n            ],\n            [\n              [-10, -20],\n              [-30, -40],\n            ],\n          ],\n          expected: [\n            [11, 22],\n            [33, 44],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n            ],\n            [\n              [-10, -20],\n              [-30, -40],\n              [-50, -60],\n            ],\n          ],\n          expected: [\n            [11, 22],\n            [33, 44],\n            [55, 66],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n              [7, 8],\n            ],\n            [\n              [-10, -20],\n              [-30, -40],\n              [-50, -60],\n              [-70, -80],\n            ],\n          ],\n          expected: [\n            [11, 22],\n            [33, 44],\n            [55, 66],\n            [77, 88],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3],\n              [4, 5, 6],\n            ],\n            [\n              [-10, -20, -30],\n              [-40, -50, -60],\n            ],\n          ],\n          expected: [\n            [11, 22, 33],\n            [44, 55, 66],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n            ],\n            [\n              [-10, -20, -30],\n              [-40, -50, -60],\n              [-70, -80, -90],\n            ],\n          ],\n          expected: [\n            [11, 22, 33],\n            [44, 55, 66],\n            [77, 88, 99],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n              [10, 11, 12],\n            ],\n            [\n              [-10, -20, -30],\n              [-40, -50, -60],\n              [-70, -80, -90],\n              [-1000, -1100, -1200],\n            ],\n          ],\n          expected: [\n            [11, 22, 33],\n            [44, 55, 66],\n            [77, 88, 99],\n            [1010, 1111, 1212],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n            ],\n            [\n              [-10, -20, -30, -40],\n              [-50, -60, -70, -80],\n            ],\n          ],\n          expected: [\n            [11, 22, 33, 44],\n            [55, 66, 77, 88],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n            ],\n            [\n              [-10, -20, -30, -40],\n              [-50, -60, -70, -80],\n              [-90, -1000, -1100, -1200],\n            ],\n          ],\n          expected: [\n            [11, 22, 33, 44],\n            [55, 66, 77, 88],\n            [99, 1010, 1111, 1212],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n              [13, 14, 15, 16],\n            ],\n            [\n              [-10, -20, -30, -40],\n              [-50, -60, -70, -80],\n              [-90, -1000, -1100, -1200],\n              [-1300, -1400, -1500, -1600],\n            ],\n          ],\n          expected: [\n            [11, 22, 33, 44],\n            [55, 66, 77, 88],\n            [99, 1010, 1111, 1212],\n            [1313, 1414, 1515, 1616],\n          ],\n        },\n      ])\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = trait.toMatrix(t.params.expected);\n    const got = trait.subtractionMatrixMatrixInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.subtractionMatrixMatrixInterval([${JSON.stringify(x)}], [${JSON.stringify(\n        y\n      )}]) returned '[${JSON.stringify(got)}]'. Expected '[${JSON.stringify(expected)}]'`\n    );\n  });\n\ng.test('multiplicationMatrixMatrixInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .combineWithParams<MatrixPairToMatrixCase>([\n        // Only testing that different shapes of matrices are handled correctly\n        // here, to reduce test duplication.\n        // multiplicationMatrixMatrixInterval uses and transposeInterval &\n        // dotInterval for calculating intervals, so the testing for those functions\n        // will cover the actual interval calculations.\n        // Keep all expected result integer no larger than 2047 to ensure that all result is exactly\n        // represeantable in both f32 and f16.\n        {\n          input: [\n            [\n              [1, 2],\n              [3, 4],\n            ],\n            [\n              [11, 22],\n              [33, 44],\n            ],\n          ],\n          expected: [\n            [77, 110],\n            [165, 242],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2],\n              [3, 4],\n            ],\n            [\n              [11, 22],\n              [33, 44],\n              [55, 66],\n            ],\n          ],\n          expected: [\n            [77, 110],\n            [165, 242],\n            [253, 374],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2],\n              [3, 4],\n            ],\n            [\n              [11, 22],\n              [33, 44],\n              [55, 66],\n              [77, 88],\n            ],\n          ],\n          expected: [\n            [77, 110],\n            [165, 242],\n            [253, 374],\n            [341, 506],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3],\n              [4, 5, 6],\n            ],\n            [\n              [11, 22],\n              [33, 44],\n            ],\n          ],\n          expected: [\n            [99, 132, 165],\n            [209, 286, 363],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3],\n              [4, 5, 6],\n            ],\n            [\n              [11, 22],\n              [33, 44],\n              [55, 66],\n            ],\n          ],\n          expected: [\n            [99, 132, 165],\n            [209, 286, 363],\n            [319, 440, 561],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3],\n              [4, 5, 6],\n            ],\n            [\n              [11, 22],\n              [33, 44],\n              [55, 66],\n              [77, 88],\n            ],\n          ],\n          expected: [\n            [99, 132, 165],\n            [209, 286, 363],\n            [319, 440, 561],\n            [429, 594, 759],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n            ],\n            [\n              [11, 22],\n              [33, 44],\n            ],\n          ],\n          expected: [\n            [121, 154, 187, 220],\n            [253, 330, 407, 484],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n            ],\n            [\n              [11, 22],\n              [33, 44],\n              [55, 66],\n            ],\n          ],\n          expected: [\n            [121, 154, 187, 220],\n            [253, 330, 407, 484],\n            [385, 506, 627, 748],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n            ],\n            [\n              [11, 22],\n              [33, 44],\n              [55, 66],\n              [77, 88],\n            ],\n          ],\n          expected: [\n            [121, 154, 187, 220],\n            [253, 330, 407, 484],\n            [385, 506, 627, 748],\n            [517, 682, 847, 1012],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n            ],\n            [\n              [11, 22, 33],\n              [44, 55, 66],\n            ],\n          ],\n          expected: [\n            [242, 308],\n            [539, 704],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n            ],\n            [\n              [11, 22, 33],\n              [44, 55, 66],\n              [77, 88, 99],\n            ],\n          ],\n          expected: [\n            [242, 308],\n            [539, 704],\n            [836, 1100],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n            ],\n            [\n              [11, 22, 33],\n              [44, 55, 66],\n              [77, 88, 99],\n              [10, 11, 12],\n            ],\n          ],\n          expected: [\n            [242, 308],\n            [539, 704],\n            [836, 1100],\n            [103, 136],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n            ],\n            [\n              [11, 22, 33],\n              [44, 55, 66],\n            ],\n          ],\n          expected: [\n            [330, 396, 462],\n            [726, 891, 1056],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n            ],\n            [\n              [11, 22, 33],\n              [44, 55, 66],\n              [77, 88, 99],\n            ],\n          ],\n          expected: [\n            [330, 396, 462],\n            [726, 891, 1056],\n            [1122, 1386, 1650],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n            ],\n            [\n              [11, 22, 33],\n              [44, 55, 66],\n              [77, 88, 99],\n              [10, 11, 12],\n            ],\n          ],\n          expected: [\n            [330, 396, 462],\n            [726, 891, 1056],\n            [1122, 1386, 1650],\n            [138, 171, 204],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n            ],\n            [\n              [11, 12, 13],\n              [21, 22, 23],\n            ],\n          ],\n          expected: [\n            [188, 224, 260, 296],\n            [338, 404, 470, 536],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n            ],\n            [\n              [11, 12, 13],\n              [21, 22, 23],\n              [31, 32, 33],\n            ],\n          ],\n          expected: [\n            [188, 224, 260, 296],\n            [338, 404, 470, 536],\n            [488, 584, 680, 776],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n            ],\n            [\n              [11, 12, 13],\n              [21, 22, 23],\n              [31, 32, 33],\n              [41, 42, 43],\n            ],\n          ],\n          expected: [\n            [188, 224, 260, 296],\n            [338, 404, 470, 536],\n            [488, 584, 680, 776],\n            [638, 764, 890, 1016],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n              [7, 8],\n            ],\n            [\n              [11, 22, 33, 44],\n              [55, 66, 77, 88],\n            ],\n          ],\n          expected: [\n            [550, 660],\n            [1254, 1540],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n              [7, 8],\n            ],\n            [\n              [11, 12, 13, 14],\n              [21, 22, 23, 24],\n              [31, 32, 33, 34],\n            ],\n          ],\n          expected: [\n            [210, 260],\n            [370, 460],\n            [530, 660],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n              [7, 8],\n            ],\n            [\n              [11, 12, 13, 14],\n              [21, 22, 23, 24],\n              [31, 32, 33, 34],\n              [41, 42, 43, 44],\n            ],\n          ],\n          expected: [\n            [210, 260],\n            [370, 460],\n            [530, 660],\n            [690, 860],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n              [10, 11, 12],\n            ],\n            [\n              [11, 12, 13, 14],\n              [21, 22, 23, 24],\n            ],\n          ],\n          expected: [\n            [290, 340, 390],\n            [510, 600, 690],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n              [10, 11, 12],\n            ],\n            [\n              [11, 12, 13, 14],\n              [21, 22, 23, 24],\n              [31, 32, 33, 34],\n            ],\n          ],\n          expected: [\n            [290, 340, 390],\n            [510, 600, 690],\n            [730, 860, 990],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n              [10, 11, 12],\n            ],\n            [\n              [11, 12, 13, 14],\n              [21, 22, 23, 24],\n              [31, 32, 33, 34],\n              [41, 42, 43, 44],\n            ],\n          ],\n          expected: [\n            [290, 340, 390],\n            [510, 600, 690],\n            [730, 860, 990],\n            [950, 1120, 1290],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n              [13, 14, 15, 16],\n            ],\n            [\n              [11, 12, 13, 14],\n              [21, 22, 23, 24],\n            ],\n          ],\n          expected: [\n            [370, 420, 470, 520],\n            [650, 740, 830, 920],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n              [13, 14, 15, 16],\n            ],\n            [\n              [11, 12, 13, 14],\n              [21, 22, 23, 24],\n              [31, 32, 33, 34],\n            ],\n          ],\n          expected: [\n            [370, 420, 470, 520],\n            [650, 740, 830, 920],\n            [930, 1060, 1190, 1320],\n          ],\n        },\n        {\n          input: [\n            [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n              [13, 14, 15, 16],\n            ],\n            [\n              [11, 12, 13, 14],\n              [21, 22, 23, 24],\n              [31, 32, 33, 34],\n              [41, 42, 43, 44],\n            ],\n          ],\n          expected: [\n            [370, 420, 470, 520],\n            [650, 740, 830, 920],\n            [930, 1060, 1190, 1320],\n            [1210, 1380, 1550, 1720],\n          ],\n        },\n      ])\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = trait.toMatrix(t.params.expected);\n    const got = trait.multiplicationMatrixMatrixInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.multiplicationMatrixMatrixInterval([${JSON.stringify(\n        x\n      )}], [${JSON.stringify(y)}]) returned '[${JSON.stringify(got)}]'. Expected '[${JSON.stringify(\n        expected\n      )}]'`\n    );\n  });\n\ninterface MatrixScalarToMatrixCase {\n  matrix: number[][];\n  scalar: number;\n  expected: (number | IntervalBounds)[][];\n}\n\nconst kMultiplicationMatrixScalarIntervalCases = {\n  f32: [\n    // From https://github.com/gpuweb/cts/issues/3044\n    {\n      matrix: [\n        [kValue.f32.negative.min, 0],\n        [0, 0],\n      ],\n      scalar: kValue.f32.negative.subnormal.min,\n      expected: [\n        [[0, reinterpretU32AsF32(0x407ffffe)], 0], // [[0, 3.9999995...], 0],\n        [0, 0],\n      ],\n    },\n  ] as MatrixScalarToMatrixCase[],\n  f16: [\n    // From https://github.com/gpuweb/cts/issues/3044\n    {\n      matrix: [\n        [kValue.f16.negative.min, 0],\n        [0, 0],\n      ],\n      scalar: kValue.f16.negative.subnormal.min,\n      expected: [\n        [[0, reinterpretU16AsF16(0x43fe)], 0], // [[0, 3.99609375], 0]\n        [0, 0],\n      ],\n    },\n  ] as MatrixScalarToMatrixCase[],\n} as const;\n\ng.test('multiplicationMatrixScalarInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<MatrixScalarToMatrixCase>(p => {\n        // Primarily testing that different shapes of matrices are handled correctly\n        // here, to reduce test duplication. Additional testing for edge case\n        // discovered in https://github.com/gpuweb/cts/issues/3044.\n        //\n        // multiplicationMatrixScalarInterval uses for calculating intervals,\n        // so the testing for multiplicationInterval covers the actual interval\n        // calculations.\n        return [\n          {\n            matrix: [\n              [1, 2],\n              [3, 4],\n            ],\n            scalar: 10,\n            expected: [\n              [10, 20],\n              [30, 40],\n            ],\n          },\n          {\n            matrix: [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n            ],\n            scalar: 10,\n            expected: [\n              [10, 20],\n              [30, 40],\n              [50, 60],\n            ],\n          },\n          {\n            matrix: [\n              [1, 2],\n              [3, 4],\n              [5, 6],\n              [7, 8],\n            ],\n            scalar: 10,\n            expected: [\n              [10, 20],\n              [30, 40],\n              [50, 60],\n              [70, 80],\n            ],\n          },\n          {\n            matrix: [\n              [1, 2, 3],\n              [4, 5, 6],\n            ],\n            scalar: 10,\n            expected: [\n              [10, 20, 30],\n              [40, 50, 60],\n            ],\n          },\n          {\n            matrix: [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n            ],\n            scalar: 10,\n            expected: [\n              [10, 20, 30],\n              [40, 50, 60],\n              [70, 80, 90],\n            ],\n          },\n          {\n            matrix: [\n              [1, 2, 3],\n              [4, 5, 6],\n              [7, 8, 9],\n              [10, 11, 12],\n            ],\n            scalar: 10,\n            expected: [\n              [10, 20, 30],\n              [40, 50, 60],\n              [70, 80, 90],\n              [100, 110, 120],\n            ],\n          },\n          {\n            matrix: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n            ],\n            scalar: 10,\n            expected: [\n              [10, 20, 30, 40],\n              [50, 60, 70, 80],\n            ],\n          },\n          {\n            matrix: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n            ],\n            scalar: 10,\n            expected: [\n              [10, 20, 30, 40],\n              [50, 60, 70, 80],\n              [90, 100, 110, 120],\n            ],\n          },\n          {\n            matrix: [\n              [1, 2, 3, 4],\n              [5, 6, 7, 8],\n              [9, 10, 11, 12],\n              [13, 14, 15, 16],\n            ],\n            scalar: 10,\n            expected: [\n              [10, 20, 30, 40],\n              [50, 60, 70, 80],\n              [90, 100, 110, 120],\n              [130, 140, 150, 160],\n            ],\n          },\n          ...kMultiplicationMatrixScalarIntervalCases[p.trait],\n        ];\n      })\n  )\n  .fn(t => {\n    const matrix = t.params.matrix;\n    const scalar = t.params.scalar;\n    const trait = FP[t.params.trait];\n    const expected = trait.toMatrix(t.params.expected);\n    const got = trait.multiplicationMatrixScalarInterval(matrix, scalar);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.multiplicationMatrixScalarInterval([${JSON.stringify(\n        matrix\n      )}], ${scalar}) returned '[${JSON.stringify(got)}]'. Expected '[${JSON.stringify(expected)}]'`\n    );\n  });\n\n// There are no explicit tests for multiplicationScalarMatrixInterval, since it\n// is just a pass-through to multiplicationMatrixScalarInterval\n\ninterface MatrixVectorToVectorCase {\n  matrix: number[][];\n  vector: number[];\n  expected: (number | IntervalBounds)[];\n}\n\ng.test('multiplicationMatrixVectorInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .combineWithParams<MatrixVectorToVectorCase>([\n        // Only testing that different shapes of matrices are handled correctly\n        // here, to reduce test duplication.\n        // multiplicationMatrixVectorInterval uses DotIntervalOp &\n        // TransposeIntervalOp for calculating intervals, so the testing for\n        // dotInterval & transposeInterval covers the actual interval\n        // calculations.\n        {\n          matrix: [\n            [1, 2],\n            [3, 4],\n          ],\n          vector: [11, 22],\n          expected: [77, 110],\n        },\n        {\n          matrix: [\n            [1, 2, 3],\n            [4, 5, 6],\n          ],\n          vector: [11, 22],\n          expected: [99, 132, 165],\n        },\n        {\n          matrix: [\n            [1, 2, 3, 4],\n            [5, 6, 7, 8],\n          ],\n          vector: [11, 22],\n          expected: [121, 154, 187, 220],\n        },\n        {\n          matrix: [\n            [1, 2],\n            [3, 4],\n            [5, 6],\n          ],\n          vector: [11, 22, 33],\n          expected: [242, 308],\n        },\n        {\n          matrix: [\n            [1, 2, 3],\n            [4, 5, 6],\n            [7, 8, 9],\n          ],\n          vector: [11, 22, 33],\n          expected: [330, 396, 462],\n        },\n        {\n          matrix: [\n            [1, 2, 3, 4],\n            [5, 6, 7, 8],\n            [9, 10, 11, 12],\n          ],\n          vector: [11, 22, 33],\n          expected: [418, 484, 550, 616],\n        },\n        {\n          matrix: [\n            [1, 2],\n            [3, 4],\n            [5, 6],\n            [7, 8],\n          ],\n          vector: [11, 22, 33, 44],\n          expected: [550, 660],\n        },\n        {\n          matrix: [\n            [1, 2, 3],\n            [4, 5, 6],\n            [7, 8, 9],\n            [10, 11, 12],\n          ],\n          vector: [11, 22, 33, 44],\n          expected: [770, 880, 990],\n        },\n        {\n          matrix: [\n            [1, 2, 3, 4],\n            [5, 6, 7, 8],\n            [9, 10, 11, 12],\n            [13, 14, 15, 16],\n          ],\n          vector: [11, 22, 33, 44],\n          expected: [990, 1100, 1210, 1320],\n        },\n      ])\n  )\n  .fn(t => {\n    const matrix = t.params.matrix;\n    const vector = t.params.vector;\n    const trait = FP[t.params.trait];\n    const expected = trait.toVector(t.params.expected);\n    const got = trait.multiplicationMatrixVectorInterval(matrix, vector);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.multiplicationMatrixVectorInterval([${JSON.stringify(\n        matrix\n      )}], [${JSON.stringify(vector)}]) returned '[${JSON.stringify(\n        got\n      )}]'. Expected '[${JSON.stringify(expected)}]'`\n    );\n  });\n\ninterface VectorMatrixToVectorCase {\n  vector: number[];\n  matrix: number[][];\n  expected: (number | IntervalBounds)[];\n}\n\ng.test('multiplicationVectorMatrixInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .combineWithParams<VectorMatrixToVectorCase>([\n        // Only testing that different shapes of matrices are handled correctly\n        // here, to reduce test duplication.\n        // multiplicationVectorMatrixInterval uses DotIntervalOp for calculating\n        // intervals, so the testing for dotInterval covers the actual interval\n        // calculations.\n        // Keep all expected result integer no larger than 2047 to ensure that all result is exactly\n        // represeantable in both f32 and f16.\n        {\n          vector: [1, 2],\n          matrix: [\n            [11, 22],\n            [33, 44],\n          ],\n          expected: [55, 121],\n        },\n        {\n          vector: [1, 2],\n          matrix: [\n            [11, 22],\n            [33, 44],\n            [55, 66],\n          ],\n          expected: [55, 121, 187],\n        },\n        {\n          vector: [1, 2],\n          matrix: [\n            [11, 22],\n            [33, 44],\n            [55, 66],\n            [77, 88],\n          ],\n          expected: [55, 121, 187, 253],\n        },\n        {\n          vector: [1, 2, 3],\n          matrix: [\n            [11, 12, 13],\n            [21, 22, 23],\n          ],\n          expected: [74, 134],\n        },\n        {\n          vector: [1, 2, 3],\n          matrix: [\n            [11, 12, 13],\n            [21, 22, 23],\n            [31, 32, 33],\n          ],\n          expected: [74, 134, 194],\n        },\n        {\n          vector: [1, 2, 3],\n          matrix: [\n            [11, 12, 13],\n            [21, 22, 23],\n            [31, 32, 33],\n            [41, 42, 43],\n          ],\n          expected: [74, 134, 194, 254],\n        },\n        {\n          vector: [1, 2, 3, 4],\n          matrix: [\n            [11, 12, 13, 14],\n            [21, 22, 23, 24],\n          ],\n          expected: [130, 230],\n        },\n        {\n          vector: [1, 2, 3, 4],\n          matrix: [\n            [11, 12, 13, 14],\n            [21, 22, 23, 24],\n            [31, 32, 33, 34],\n          ],\n          expected: [130, 230, 330],\n        },\n        {\n          vector: [1, 2, 3, 4],\n          matrix: [\n            [11, 12, 13, 14],\n            [21, 22, 23, 24],\n            [31, 32, 33, 34],\n            [41, 42, 43, 44],\n          ],\n          expected: [130, 230, 330, 430],\n        },\n      ])\n  )\n  .fn(t => {\n    const vector = t.params.vector;\n    const matrix = t.params.matrix;\n    const trait = FP[t.params.trait];\n    const expected = trait.toVector(t.params.expected);\n    const got = trait.multiplicationVectorMatrixInterval(vector, matrix);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.multiplicationVectorMatrixInterval([${JSON.stringify(\n        vector\n      )}], [${JSON.stringify(matrix)}]) returned '[${JSON.stringify(\n        got\n      )}]'. Expected '[${JSON.stringify(expected)}]'`\n    );\n  });\n\n// API - Acceptance Intervals w/ bespoke implementations\n\ninterface FaceForwardCase {\n  input: [number[], number[], number[]];\n  expected: ((number | IntervalBounds)[] | undefined)[];\n}\n\ng.test('faceForwardIntervals')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .expandWithParams<FaceForwardCase>(p => {\n        const trait = FP[p.trait];\n        const constants = trait.constants();\n        // prettier-ignore\n        return [\n          // vec2\n          { input: [[1.0, 0.0], [1.0, 0.0], [1.0, 0.0]], expected: [[-1.0, 0.0]] },\n          { input: [[-1.0, 0.0], [1.0, 0.0], [1.0, 0.0]], expected: [[1.0, 0.0]] },\n          { input: [[1.0, 0.0], [-1.0, 1.0], [1.0, -1.0]], expected: [[1.0, 0.0]] },\n          { input: [[-1.0, 0.0], [-1.0, 1.0], [1.0, -1.0]], expected: [[-1.0, 0.0]] },\n          { input: [[10.0, 0.0], [10.0, 0.0], [10.0, 0.0]], expected: [[-10.0, 0.0]] },\n          { input: [[-10.0, 0.0], [10.0, 0.0], [10.0, 0.0]], expected: [[10.0, 0.0]] },\n          { input: [[10.0, 0.0], [-10.0, 10.0], [10.0, -10.0]], expected: [[10.0, 0.0]] },\n          { input: [[-10.0, 0.0], [-10.0, 10.0], [10.0, -10.0]], expected: [[-10.0, 0.0]] },\n          { input: [[0.1, 0.0], [0.1, 0.0], [0.1, 0.0]], expected: [[kConstantCorrectlyRoundedExpectation[p.trait]['-0.1'], 0.0]] },\n          { input: [[-0.1, 0.0], [0.1, 0.0], [0.1, 0.0]], expected: [[kConstantCorrectlyRoundedExpectation[p.trait]['0.1'], 0.0]] },\n          { input: [[0.1, 0.0], [-0.1, 0.1], [0.1, -0.1]], expected: [[kConstantCorrectlyRoundedExpectation[p.trait]['0.1'], 0.0]] },\n          { input: [[-0.1, 0.0], [-0.1, 0.1], [0.1, -0.1]], expected: [[kConstantCorrectlyRoundedExpectation[p.trait]['-0.1'], 0.0]] },\n\n          // vec3\n          { input: [[1.0, 0.0, 0.0], [1.0, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [[-1.0, 0.0, 0.0]] },\n          { input: [[-1.0, 0.0, 0.0], [1.0, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [[1.0, 0.0, 0.0]] },\n          { input: [[1.0, 0.0, 0.0], [-1.0, 1.0, 0.0], [1.0, -1.0, 0.0]], expected: [[1.0, 0.0, 0.0]] },\n          { input: [[-1.0, 0.0, 0.0], [-1.0, 1.0, 0.0], [1.0, -1.0, 0.0]], expected: [[-1.0, 0.0, 0.0]] },\n          { input: [[10.0, 0.0, 0.0], [10.0, 0.0, 0.0], [10.0, 0.0, 0.0]], expected: [[-10.0, 0.0, 0.0]] },\n          { input: [[-10.0, 0.0, 0.0], [10.0, 0.0, 0.0], [10.0, 0.0, 0.0]], expected: [[10.0, 0.0, 0.0]] },\n          { input: [[10.0, 0.0, 0.0], [-10.0, 10.0, 0.0], [10.0, -10.0, 0.0]], expected: [[10.0, 0.0, 0.0]] },\n          { input: [[-10.0, 0.0, 0.0], [-10.0, 10.0, 0.0], [10.0, -10.0, 0.0]], expected: [[-10.0, 0.0, 0.0]] },\n          { input: [[0.1, 0.0, 0.0], [0.1, 0.0, 0.0], [0.1, 0.0, 0.0]], expected: [[kConstantCorrectlyRoundedExpectation[p.trait]['-0.1'], 0.0, 0.0]] },\n          { input: [[-0.1, 0.0, 0.0], [0.1, 0.0, 0.0], [0.1, 0.0, 0.0]], expected: [[kConstantCorrectlyRoundedExpectation[p.trait]['0.1'], 0.0, 0.0]] },\n          { input: [[0.1, 0.0, 0.0], [-0.1, 0.0, 0.0], [0.1, -0.0, 0.0]], expected: [[kConstantCorrectlyRoundedExpectation[p.trait]['0.1'], 0.0, 0.0]] },\n          { input: [[-0.1, 0.0, 0.0], [-0.1, 0.0, 0.0], [0.1, -0.0, 0.0]], expected: [[kConstantCorrectlyRoundedExpectation[p.trait]['-0.1'], 0.0, 0.0]] },\n\n          // vec4\n          { input: [[1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: [[-1.0, 0.0, 0.0, 0.0]] },\n          { input: [[-1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: [[1.0, 0.0, 0.0, 0.0]] },\n          { input: [[1.0, 0.0, 0.0, 0.0], [-1.0, 1.0, 0.0, 0.0], [1.0, -1.0, 0.0, 0.0]], expected: [[1.0, 0.0, 0.0, 0.0]] },\n          { input: [[-1.0, 0.0, 0.0, 0.0], [-1.0, 1.0, 0.0, 0.0], [1.0, -1.0, 0.0, 0.0]], expected: [[-1.0, 0.0, 0.0, 0.0]] },\n          { input: [[10.0, 0.0, 0.0, 0.0], [10.0, 0.0, 0.0, 0.0], [10.0, 0.0, 0.0, 0.0]], expected: [[-10.0, 0.0, 0.0, 0.0]] },\n          { input: [[-10.0, 0.0, 0.0, 0.0], [10.0, 0.0, 0.0, 0.0], [10.0, 0.0, 0.0, 0.0]], expected: [[10.0, 0.0, 0.0, 0.0]] },\n          { input: [[10.0, 0.0, 0.0, 0.0], [-10.0, 10.0, 0.0, 0.0], [10.0, -10.0, 0.0, 0.0]], expected: [[10.0, 0.0, 0.0, 0.0]] },\n          { input: [[-10.0, 0.0, 0.0, 0.0], [-10.0, 10.0, 0.0, 0.0], [10.0, -10.0, 0.0, 0.0]], expected: [[-10.0, 0.0, 0.0, 0.0]] },\n          { input: [[0.1, 0.0, 0.0, 0.0], [0.1, 0.0, 0.0, 0.0], [0.1, 0.0, 0.0, 0.0]], expected: [[kConstantCorrectlyRoundedExpectation[p.trait]['-0.1'], 0.0, 0.0, 0.0]] },\n          { input: [[-0.1, 0.0, 0.0, 0.0], [0.1, 0.0, 0.0, 0.0], [0.1, 0.0, 0.0, 0.0]], expected: [[kConstantCorrectlyRoundedExpectation[p.trait]['0.1'], 0.0, 0.0, 0.0]] },\n          { input: [[0.1, 0.0, 0.0, 0.0], [-0.1, 0.0, 0.0, 0.0], [0.1, -0.0, 0.0, 0.0]], expected: [[kConstantCorrectlyRoundedExpectation[p.trait]['0.1'], 0.0, 0.0, 0.0]] },\n          { input: [[-0.1, 0.0, 0.0, 0.0], [-0.1, 0.0, 0.0, 0.0], [0.1, -0.0, 0.0, 0.0]], expected: [[kConstantCorrectlyRoundedExpectation[p.trait]['-0.1'], 0.0, 0.0, 0.0]] },\n\n          // dot(y, z) === 0\n          { input: [[1.0, 1.0], [1.0, 0.0], [0.0, 1.0]], expected:  [[-1.0, -1.0]] },\n\n          // subnormals, also dot(y, z) spans 0\n          { input: [[constants.positive.subnormal.max, 0.0], [constants.positive.subnormal.min, 0.0], [constants.negative.subnormal.min, 0.0]], expected:  [[[0.0, constants.positive.subnormal.max], 0.0], [[constants.negative.subnormal.min, 0], 0.0]] },\n\n          // dot going OOB returns [undefined, x, -x]\n          { input: [[1.0, 1.0], [constants.positive.max, constants.positive.max], [constants.positive.max, constants.positive.max]], expected: [undefined, [1, 1], [-1, -1]] },\n        ];\n      })\n  )\n  .fn(t => {\n    const [x, y, z] = t.params.input;\n    const trait = FP[t.params.trait];\n    const expected = t.params.expected.map(e => (e !== undefined ? trait.toVector(e) : undefined));\n    const got = trait.faceForwardIntervals(x, y, z);\n    t.expect(\n      objectEquals(expected, got),\n      `${t.params.trait}.faceForwardInterval([${x}], [${y}], [${z}]) returned [${got}]. Expected [${expected}]`\n    );\n  });\n\ninterface ModfCase {\n  input: number;\n  fract: number | IntervalBounds;\n  whole: number | IntervalBounds;\n}\n\ng.test('modfInterval')\n  .params(u =>\n    u\n      .combine('trait', ['f32', 'f16', 'abstract'] as const)\n      .beginSubcases()\n      .expandWithParams<ModfCase>(p => {\n        const constants = FP[p.trait].constants();\n        // prettier-ignore\n        return [\n          // Normals\n          { input: 0, fract: 0, whole: 0 },\n          { input: 1, fract: 0, whole: 1 },\n          { input: -1, fract: 0, whole: -1 },\n          { input: 0.5, fract: 0.5, whole: 0 },\n          { input: -0.5, fract: -0.5, whole: 0 },\n          { input: 2.5, fract: 0.5, whole: 2 },\n          { input: -2.5, fract: -0.5, whole: -2 },\n          { input: 10.0, fract: 0, whole: 10 },\n          { input: -10.0, fract: 0, whole: -10 },\n\n          // Subnormals\n          { input: constants.positive.subnormal.min, fract: [0, constants.positive.subnormal.min], whole: 0 },\n          { input: constants.positive.subnormal.max, fract: [0, constants.positive.subnormal.max], whole: 0 },\n          { input: constants.negative.subnormal.min, fract: [constants.negative.subnormal.min, 0], whole: 0 },\n          { input: constants.negative.subnormal.max, fract: [constants.negative.subnormal.max, 0], whole: 0 },\n\n          // Boundaries\n          { input: constants.negative.min, fract: 0, whole: constants.negative.min },\n          { input: constants.negative.max, fract: constants.negative.max, whole: 0 },\n          { input: constants.positive.min, fract: constants.positive.min, whole: 0 },\n          { input: constants.positive.max, fract: 0, whole: constants.positive.max },\n        ];\n      })\n  )\n  .fn(t => {\n    const trait = FP[t.params.trait];\n    const expected = {\n      fract: trait.toInterval(t.params.fract),\n      whole: trait.toInterval(t.params.whole),\n    };\n\n    const got = trait.modfInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `${trait}.modfInterval([${t.params.input}) returned { fract: [${got.fract}], whole: [${got.whole}] }. Expected { fract: [${expected.fract}], whole: [${expected.whole}] }`\n    );\n  });\n\ninterface RefractCase {\n  input: [number[], number[], number];\n  expected: (number | IntervalBounds)[];\n}\n\n// Scope for refractInterval tests so that they can have constants for magic\n// numbers that don't pollute the global namespace or have unwieldy long names.\n{\n  const kNegativeOneBounds = {\n    f32: [\n      reinterpretU64AsF64(0xbff0_0000_c000_0000n),\n      reinterpretU64AsF64(0xbfef_ffff_4000_0000n),\n    ] as IntervalBounds,\n    f16: [reinterpretU16AsF16(0xbc06), reinterpretU16AsF16(0xbbfa)] as IntervalBounds,\n  } as const;\n\n  // prettier-ignore\n  const kRefractIntervalCases = {\n    f32: [\n      // k > 0\n      // vec2\n      { input: [[1, -2], [3, 4], 5], expected: [[reinterpretU32AsF32(0x40ce87a4), reinterpretU32AsF32(0x40ce8840)],  // ~6.454...\n          [reinterpretU32AsF32(0xc100fae8), reinterpretU32AsF32(0xc100fa80)]] },  // ~-8.061...\n      // vec3\n      { input: [[1, -2, 3], [-4, 5, -6], 7], expected: [[reinterpretU32AsF32(0x40d24480), reinterpretU32AsF32(0x40d24c00)],  // ~6.571...\n          [reinterpretU32AsF32(0xc1576f80), reinterpretU32AsF32(0xc1576ad0)],  // ~-13.464...\n          [reinterpretU32AsF32(0x41a2d9b0), reinterpretU32AsF32(0x41a2dc80)]] },  // ~20.356...\n      // vec4\n      { input: [[1, -2, 3, -4], [-5, 6, -7, 8], 9], expected: [[reinterpretU32AsF32(0x410ae480), reinterpretU32AsF32(0x410af240)],  // ~8.680...\n          [reinterpretU32AsF32(0xc18cf7c0), reinterpretU32AsF32(0xc18cef80)],  // ~-17.620...\n          [reinterpretU32AsF32(0x41d46cc0), reinterpretU32AsF32(0x41d47660)],  // ~26.553...\n          [reinterpretU32AsF32(0xc20dfa80), reinterpretU32AsF32(0xc20df500)]] },  // ~-35.494...\n    ] as RefractCase[],\n    f16: [\n      // k > 0\n      // vec2\n      { input: [[1, -2], [3, 4], 5], expected: [[reinterpretU16AsF16(0x4620), reinterpretU16AsF16(0x46bc)],  // ~6.454...\n          [reinterpretU16AsF16(0xc840), reinterpretU16AsF16(0xc7b0)]] },  // ~-8.061...\n      // vec3\n      { input: [[1, -2, 3], [-4, 5, -6], 7], expected: [[reinterpretU16AsF16(0x4100), reinterpretU16AsF16(0x4940)],  // ~6.571...\n      [reinterpretU16AsF16(0xcc98), reinterpretU16AsF16(0xc830)],  // ~-13.464...\n      [reinterpretU16AsF16(0x4b20), reinterpretU16AsF16(0x4e90)]] },  // ~20.356...\n      // vec4\n      // x = [1, -2, 3, -4], y = [-5, 6, -7, 8], z = 9,\n      // dot(y, x) = -71, k = 1.0 - 9 * 9 * (1.0 - 71 * 71) = 408241 overflow f16.\n      { input: [[1, -2, 3, -4], [-5, 6, -7, 8], 9], expected: [kUnboundedBounds, kUnboundedBounds, kUnboundedBounds, kUnboundedBounds] },\n      // x = [1, -2, 3, -4], y = [-5, 4, -3, 2], z = 2.5,\n      // dot(y, x) = -30, k = 1.0 - 2.5 * 2.5 * (1.0 - 30 * 30) = 5619.75.\n      // a = z * dot(y, x) + sqrt(k) = ~-0.035, result is about z * x - a * y = [~2.325, ~-4.86, ~7.4025, ~-9.93]\n      { input: [[1, -2, 3, -4], [-5, 4, -3, 2], 2.5], expected: [[reinterpretU16AsF16(0x3900), reinterpretU16AsF16(0x4410)],  // ~2.325\n          [reinterpretU16AsF16(0xc640), reinterpretU16AsF16(0xc300)],  // ~-4.86\n          [reinterpretU16AsF16(0x4660), reinterpretU16AsF16(0x4838)],  // ~7.4025\n          [reinterpretU16AsF16(0xc950), reinterpretU16AsF16(0xc8a0)]] },  // ~-9.93\n    ] as RefractCase[],\n  } as const;\n\n  g.test('refractInterval')\n    .params(u =>\n      u\n        .combine('trait', ['f32', 'f16'] as const)\n        .beginSubcases()\n        .expandWithParams<RefractCase>(p => {\n          const trait = FP[p.trait];\n          const constants = trait.constants();\n          // prettier-ignore\n          return [\n            ...kRefractIntervalCases[p.trait],\n\n            // k < 0\n            { input: [[1, 1], [0.1, 0], 10], expected: [0, 0] },\n\n            // k contains 0\n            { input: [[1, 1], [0.1, 0], 1.005038], expected: [kUnboundedBounds, kUnboundedBounds] },\n\n            // k > 0\n            // vec2\n            { input: [[1, 1], [1, 0], 1], expected: [kNegativeOneBounds[p.trait], 1] },\n            // vec3\n            { input: [[1, 1, 1], [1, 0, 0], 1], expected: [kNegativeOneBounds[p.trait], 1, 1] },\n            // vec4\n            { input: [[1, 1, 1, 1], [1, 0, 0, 0], 1], expected: [kNegativeOneBounds[p.trait], 1, 1, 1] },\n\n            // Test that dot going OOB bounds in the intermediate calculations propagates\n            { input: [[constants.positive.nearest_max, constants.positive.max, constants.negative.min], [1.0, 1.0, 1.0], 1], expected: [kUnboundedBounds, kUnboundedBounds, kUnboundedBounds] },\n            { input: [[constants.positive.nearest_max, constants.negative.min, constants.positive.max], [1.0, 1.0, 1.0], 1], expected: [kUnboundedBounds, kUnboundedBounds, kUnboundedBounds] },\n            { input: [[constants.positive.max, constants.positive.nearest_max, constants.negative.min], [1.0, 1.0, 1.0], 1], expected: [kUnboundedBounds, kUnboundedBounds, kUnboundedBounds] },\n            { input: [[constants.negative.min, constants.positive.nearest_max, constants.positive.max], [1.0, 1.0, 1.0], 1], expected: [kUnboundedBounds, kUnboundedBounds, kUnboundedBounds] },\n            { input: [[constants.positive.max, constants.negative.min, constants.positive.nearest_max], [1.0, 1.0, 1.0], 1], expected: [kUnboundedBounds, kUnboundedBounds, kUnboundedBounds] },\n            { input: [[constants.negative.min, constants.positive.max, constants.positive.nearest_max], [1.0, 1.0, 1.0], 1], expected: [kUnboundedBounds, kUnboundedBounds, kUnboundedBounds] },\n          ];\n        })\n    )\n    .fn(t => {\n      const [i, s, r] = t.params.input;\n      const trait = FP[t.params.trait];\n      const expected = trait.toVector(t.params.expected);\n      const got = trait.refractInterval(i, s, r);\n      t.expect(\n        objectEquals(expected, got),\n        `${t.params.trait}.refractIntervals([${i}], [${s}], ${r}) returned [${got}]. Expected [${expected}]`\n      );\n    });\n}\n"],"mappings":"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"}