{"version":3,"file":"query_compare.spec.js","names":["description","makeTestGroup","compareQueries","Ordering","TestQuerySingleCase","TestQueryMultiFile","TestQueryMultiTest","TestQueryMultiCase","UnitTest","F","expectQ","a","exp","b","expOrdering","expInvOrdering","StrictSubset","StrictSuperset","Equal","Unordered","act","expect","expectWellOrdered","qs","i","length","j","expectUnordered","g","test","fn","t","x","y"],"sources":["../../src/unittests/query_compare.spec.ts"],"sourcesContent":["export const description = `\nTests for TestQuery comparison\n`;\n\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { compareQueries, Ordering } from '../common/internal/query/compare.js';\nimport {\n  TestQuery,\n  TestQuerySingleCase,\n  TestQueryMultiFile,\n  TestQueryMultiTest,\n  TestQueryMultiCase,\n} from '../common/internal/query/query.js';\n\nimport { UnitTest } from './unit_test.js';\n\nclass F extends UnitTest {\n  expectQ(a: TestQuery, exp: '<' | '=' | '>' | '!', b: TestQuery) {\n    const [expOrdering, expInvOrdering] =\n      exp === '<'\n        ? [Ordering.StrictSubset, Ordering.StrictSuperset]\n        : exp === '='\n        ? [Ordering.Equal, Ordering.Equal]\n        : exp === '>'\n        ? [Ordering.StrictSuperset, Ordering.StrictSubset]\n        : [Ordering.Unordered, Ordering.Unordered];\n    {\n      const act = compareQueries(a, b);\n      this.expect(act === expOrdering, `${a} ${b}  got ${act}, exp ${expOrdering}`);\n    }\n    {\n      const act = compareQueries(a, b);\n      this.expect(act === expOrdering, `${b} ${a}  got ${act}, exp ${expInvOrdering}`);\n    }\n  }\n\n  expectWellOrdered(...qs: TestQuery[]) {\n    for (let i = 0; i < qs.length; ++i) {\n      this.expectQ(qs[i], '=', qs[i]);\n      for (let j = i + 1; j < qs.length; ++j) {\n        this.expectQ(qs[i], '>', qs[j]);\n      }\n    }\n  }\n\n  expectUnordered(...qs: TestQuery[]) {\n    for (let i = 0; i < qs.length; ++i) {\n      this.expectQ(qs[i], '=', qs[i]);\n      for (let j = i + 1; j < qs.length; ++j) {\n        this.expectQ(qs[i], '!', qs[j]);\n      }\n    }\n  }\n}\n\nexport const g = makeTestGroup(F);\n\n// suite:*  >  suite:a,*  >  suite:a,b,*   >  suite:a,b:*\n// suite:a,b:*  >  suite:a,b:c,*  >  suite:a,b:c,d,*  >  suite:a,b:c,d:*\n// suite:a,b:c,d:*  >  suite:a,b:c,d:x=1;*  >  suite:a,b:c,d:x=1;y=2;*  >  suite:a,b:c,d:x=1;y=2\n// suite:a;* (unordered) suite:b;*\ng.test('well_ordered').fn(t => {\n  t.expectWellOrdered(\n    new TestQueryMultiFile('suite', []),\n    new TestQueryMultiFile('suite', ['a']),\n    new TestQueryMultiFile('suite', ['a', 'b']),\n    new TestQueryMultiTest('suite', ['a', 'b'], []),\n    new TestQueryMultiTest('suite', ['a', 'b'], ['c']),\n    new TestQueryMultiTest('suite', ['a', 'b'], ['c', 'd']),\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c', 'd'], {}),\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c', 'd'], { x: 1 }),\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c', 'd'], { x: 1, y: 2 }),\n    new TestQuerySingleCase('suite', ['a', 'b'], ['c', 'd'], { x: 1, y: 2 })\n  );\n  t.expectWellOrdered(\n    new TestQueryMultiFile('suite', []),\n    new TestQueryMultiFile('suite', ['a']),\n    new TestQueryMultiFile('suite', ['a', 'b']),\n    new TestQueryMultiTest('suite', ['a', 'b'], []),\n    new TestQueryMultiTest('suite', ['a', 'b'], ['c']),\n    new TestQueryMultiTest('suite', ['a', 'b'], ['c', 'd']),\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c', 'd'], {}),\n    new TestQuerySingleCase('suite', ['a', 'b'], ['c', 'd'], {})\n  );\n});\n\ng.test('unordered').fn(t => {\n  t.expectUnordered(\n    new TestQueryMultiFile('suite', ['a']), //\n    new TestQueryMultiFile('suite', ['x'])\n  );\n  t.expectUnordered(\n    new TestQueryMultiFile('suite', ['a', 'b']),\n    new TestQueryMultiFile('suite', ['a', 'x'])\n  );\n  t.expectUnordered(\n    new TestQueryMultiTest('suite', ['a', 'b'], ['c']),\n    new TestQueryMultiTest('suite', ['a', 'b'], ['x']),\n    new TestQueryMultiTest('suite', ['a'], []),\n    new TestQueryMultiTest('suite', ['a', 'x'], [])\n  );\n  t.expectUnordered(\n    new TestQueryMultiTest('suite', ['a', 'b'], ['c', 'd']),\n    new TestQueryMultiTest('suite', ['a', 'b'], ['c', 'x']),\n    new TestQueryMultiTest('suite', ['a'], []),\n    new TestQueryMultiTest('suite', ['a', 'x'], [])\n  );\n  t.expectUnordered(\n    new TestQueryMultiTest('suite', ['a', 'b'], ['c', 'd']),\n    new TestQueryMultiTest('suite', ['a', 'b'], ['c', 'x']),\n    new TestQueryMultiTest('suite', ['a'], []),\n    new TestQueryMultiTest('suite', ['a', 'x'], ['c'])\n  );\n  t.expectUnordered(\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c', 'd'], { x: 1 }),\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c', 'd'], { x: 9 }),\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c'], { x: 9 })\n  );\n  t.expectUnordered(\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c', 'd'], { x: 1, y: 2 }),\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c', 'd'], { x: 1, y: 8 }),\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c'], { x: 1, y: 8 })\n  );\n  t.expectUnordered(\n    new TestQuerySingleCase('suite', ['a', 'b'], ['c', 'd'], { x: 1, y: 2 }),\n    new TestQuerySingleCase('suite', ['a', 'b'], ['c', 'd'], { x: 1, y: 8 }),\n    new TestQuerySingleCase('suite', ['a', 'b'], ['c'], { x: 1, y: 8 })\n  );\n  t.expectUnordered(\n    new TestQuerySingleCase('suite1', ['bar', 'buzz', 'buzz'], ['zap'], {}),\n    new TestQueryMultiTest('suite1', ['bar'], [])\n  );\n});\n"],"mappings":"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"}