{"version":3,"file":"parse_imports.spec.js","names":["description","makeTestGroup","parseImports","UnitTest","F","test","content","expect","got","expectJoined","join","gotJoined","g","fn","t"],"sources":["../../src/unittests/parse_imports.spec.ts"],"sourcesContent":["export const description = `\nTest for \"parseImports\" utility.\n`;\n\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { parseImports } from '../common/util/parse_imports.js';\n\nimport { UnitTest } from './unit_test.js';\n\nclass F extends UnitTest {\n  test(content: string, expect: string[]): void {\n    const got = parseImports('a/b/c.js', content);\n    const expectJoined = expect.join('\\n');\n    const gotJoined = got.join('\\n');\n    this.expect(\n      expectJoined === gotJoined,\n      `\nexpected: ${expectJoined}\ngot:      ${gotJoined}`\n    );\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('empty').fn(t => {\n  t.test(``, []);\n  t.test(`\\n`, []);\n  t.test(`\\n\\n`, []);\n});\n\ng.test('simple').fn(t => {\n  t.test(`import 'x/y/z.js';`, ['a/b/x/y/z.js']);\n  t.test(`import * as blah from 'x/y/z.js';`, ['a/b/x/y/z.js']);\n  t.test(`import { blah } from 'x/y/z.js';`, ['a/b/x/y/z.js']);\n});\n\ng.test('multiple').fn(t => {\n  t.test(\n    `\nblah blah blah\nimport 'x/y/z.js';\nmore blah\nimport * as blah from 'm/n/o.js';\nextra blah\nimport { blah } from '../h.js';\nending with blah\n`,\n    ['a/b/x/y/z.js', 'a/b/m/n/o.js', 'a/h.js']\n  );\n});\n\ng.test('multiline').fn(t => {\n  t.test(\n    `import {\n  blah\n} from 'x/y/z.js';`,\n    ['a/b/x/y/z.js']\n  );\n  t.test(\n    `import {\n  blahA,\n  blahB,\n} from 'x/y/z.js';`,\n    ['a/b/x/y/z.js']\n  );\n});\n\ng.test('file_characters').fn(t => {\n  t.test(`import '01234_56789.js';`, ['a/b/01234_56789.js']);\n});\n\ng.test('relative_paths').fn(t => {\n  t.test(`import '../x.js';`, ['a/x.js']);\n  t.test(`import '../x/y.js';`, ['a/x/y.js']);\n  t.test(`import '../../x.js';`, ['x.js']);\n  t.test(`import '../../../x.js';`, ['../x.js']);\n  t.test(`import '../../../../x.js';`, ['../../x.js']);\n});\n"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,mCAAmC;AACjE,SAASC,YAAY,QAAQ,iCAAiC;;AAE9D,SAASC,QAAQ,QAAQ,gBAAgB;;AAEzC,MAAMC,CAAC,SAASD,QAAQ,CAAC;EACvBE,IAAIA,CAACC,OAAe,EAAEC,MAAgB,EAAQ;IAC5C,MAAMC,GAAG,GAAGN,YAAY,CAAC,UAAU,EAAEI,OAAO,CAAC;IAC7C,MAAMG,YAAY,GAAGF,MAAM,CAACG,IAAI,CAAC,IAAI,CAAC;IACtC,MAAMC,SAAS,GAAGH,GAAG,CAACE,IAAI,CAAC,IAAI,CAAC;IAChC,IAAI,CAACH,MAAM;MACTE,YAAY,KAAKE,SAAS;MACzB;AACP,YAAYF,YAAa;AACzB,YAAYE,SAAU;IAClB,CAAC;EACH;AACF;;AAEA,OAAO,MAAMC,CAAC,GAAGX,aAAa,CAACG,CAAC,CAAC;;AAEjCQ,CAAC,CAACP,IAAI,CAAC,OAAO,CAAC,CAACQ,EAAE,CAAC,CAAAC,CAAC,KAAI;EACtBA,CAAC,CAACT,IAAI,CAAE,EAAC,EAAE,EAAE,CAAC;EACdS,CAAC,CAACT,IAAI,CAAE,IAAG,EAAE,EAAE,CAAC;EAChBS,CAAC,CAACT,IAAI,CAAE,MAAK,EAAE,EAAE,CAAC;AACpB,CAAC,CAAC;;AAEFO,CAAC,CAACP,IAAI,CAAC,QAAQ,CAAC,CAACQ,EAAE,CAAC,CAAAC,CAAC,KAAI;EACvBA,CAAC,CAACT,IAAI,CAAE,oBAAmB,EAAE,CAAC,cAAc,CAAC,CAAC;EAC9CS,CAAC,CAACT,IAAI,CAAE,mCAAkC,EAAE,CAAC,cAAc,CAAC,CAAC;EAC7DS,CAAC,CAACT,IAAI,CAAE,kCAAiC,EAAE,CAAC,cAAc,CAAC,CAAC;AAC9D,CAAC,CAAC;;AAEFO,CAAC,CAACP,IAAI,CAAC,UAAU,CAAC,CAACQ,EAAE,CAAC,CAAAC,CAAC,KAAI;EACzBA,CAAC,CAACT,IAAI;IACH;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;IACG,CAAC,cAAc,EAAE,cAAc,EAAE,QAAQ;EAC3C,CAAC;AACH,CAAC,CAAC;;AAEFO,CAAC,CAACP,IAAI,CAAC,WAAW,CAAC,CAACQ,EAAE,CAAC,CAAAC,CAAC,KAAI;EAC1BA,CAAC,CAACT,IAAI;IACH;AACL;AACA,mBAAmB;IACf,CAAC,cAAc;EACjB,CAAC;EACDS,CAAC,CAACT,IAAI;IACH;AACL;AACA;AACA,mBAAmB;IACf,CAAC,cAAc;EACjB,CAAC;AACH,CAAC,CAAC;;AAEFO,CAAC,CAACP,IAAI,CAAC,iBAAiB,CAAC,CAACQ,EAAE,CAAC,CAAAC,CAAC,KAAI;EAChCA,CAAC,CAACT,IAAI,CAAE,0BAAyB,EAAE,CAAC,oBAAoB,CAAC,CAAC;AAC5D,CAAC,CAAC;;AAEFO,CAAC,CAACP,IAAI,CAAC,gBAAgB,CAAC,CAACQ,EAAE,CAAC,CAAAC,CAAC,KAAI;EAC/BA,CAAC,CAACT,IAAI,CAAE,mBAAkB,EAAE,CAAC,QAAQ,CAAC,CAAC;EACvCS,CAAC,CAACT,IAAI,CAAE,qBAAoB,EAAE,CAAC,UAAU,CAAC,CAAC;EAC3CS,CAAC,CAACT,IAAI,CAAE,sBAAqB,EAAE,CAAC,MAAM,CAAC,CAAC;EACxCS,CAAC,CAACT,IAAI,CAAE,yBAAwB,EAAE,CAAC,SAAS,CAAC,CAAC;EAC9CS,CAAC,CAACT,IAAI,CAAE,4BAA2B,EAAE,CAAC,YAAY,CAAC,CAAC;AACtD,CAAC,CAAC"}