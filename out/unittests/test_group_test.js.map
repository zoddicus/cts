{"version":3,"file":"test_group_test.js","names":["Logger","TestQuerySingleCase","objectEquals","UnitTest","TestGroupTest","run","g","logger","overrideDebugMode","t","iterate","rc","query","id","test","params","rec","record","toString","results","expectCases","cases","gcases","push","Array","from","c","expect","JSON","stringify"],"sources":["../../src/unittests/test_group_test.ts"],"sourcesContent":["import { Logger, LogResults } from '../common/internal/logging/logger.js';\nimport { TestQuerySingleCase } from '../common/internal/query/query.js';\nimport { IterableTestGroup, TestCaseID } from '../common/internal/test_group.js';\nimport { objectEquals } from '../common/util/util.js';\n\nimport { UnitTest } from './unit_test.js';\n\nexport class TestGroupTest extends UnitTest {\n  async run(g: IterableTestGroup): Promise<LogResults> {\n    const logger = new Logger({ overrideDebugMode: true });\n    for (const t of g.iterate()) {\n      for (const rc of t.iterate()) {\n        const query = new TestQuerySingleCase('xx', ['yy'], rc.id.test, rc.id.params);\n        const [rec] = logger.record(query.toString());\n        await rc.run(rec, query, []);\n      }\n    }\n    return logger.results;\n  }\n\n  expectCases(g: IterableTestGroup, cases: TestCaseID[]): void {\n    const gcases = [];\n    for (const t of g.iterate()) {\n      gcases.push(...Array.from(t.iterate(), c => c.id));\n    }\n    this.expect(\n      objectEquals(gcases, cases),\n      `expected\n  ${JSON.stringify(cases)}\ngot\n  ${JSON.stringify(gcases)}`\n    );\n  }\n}\n"],"mappings":";AAAA;AAAA,GAAA,SAASA,MAAM,QAAoB,sCAAsC,CACzE,SAASC,mBAAmB,QAAQ,mCAAmC;AAEvE,SAASC,YAAY,QAAQ,wBAAwB;;AAErD,SAASC,QAAQ,QAAQ,gBAAgB;;AAEzC,OAAO,MAAMC,aAAa,SAASD,QAAQ,CAAC;EAC1C,MAAME,GAAG,CAACC,CAAoB,EAAuB;IACnD,MAAMC,MAAM,GAAG,IAAIP,MAAM,CAAC,EAAEQ,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC;IACtD,KAAK,MAAMC,CAAC,IAAIH,CAAC,CAACI,OAAO,EAAE,EAAE;MAC3B,KAAK,MAAMC,EAAE,IAAIF,CAAC,CAACC,OAAO,EAAE,EAAE;QAC5B,MAAME,KAAK,GAAG,IAAIX,mBAAmB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAEU,EAAE,CAACE,EAAE,CAACC,IAAI,EAAEH,EAAE,CAACE,EAAE,CAACE,MAAM,CAAC;QAC7E,MAAM,CAACC,GAAG,CAAC,GAAGT,MAAM,CAACU,MAAM,CAACL,KAAK,CAACM,QAAQ,EAAE,CAAC;QAC7C,MAAMP,EAAE,CAACN,GAAG,CAACW,GAAG,EAAEJ,KAAK,EAAE,EAAE,CAAC;MAC9B;IACF;IACA,OAAOL,MAAM,CAACY,OAAO;EACvB;;EAEAC,WAAW,CAACd,CAAoB,EAAEe,KAAmB,EAAQ;IAC3D,MAAMC,MAAM,GAAG,EAAE;IACjB,KAAK,MAAMb,CAAC,IAAIH,CAAC,CAACI,OAAO,EAAE,EAAE;MAC3BY,MAAM,CAACC,IAAI,CAAC,GAAGC,KAAK,CAACC,IAAI,CAAChB,CAAC,CAACC,OAAO,EAAE,EAAE,CAAAgB,CAAC,KAAIA,CAAC,CAACb,EAAE,CAAC,CAAC;IACpD;IACA,IAAI,CAACc,MAAM;IACTzB,YAAY,CAACoB,MAAM,EAAED,KAAK,CAAC;IAC1B;AACP,IAAIO,IAAI,CAACC,SAAS,CAACR,KAAK,CAAE;AAC1B;AACA,IAAIO,IAAI,CAACC,SAAS,CAACP,MAAM,CAAE,EAAC,CACvB;;EACH;AACF"}