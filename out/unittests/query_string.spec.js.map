{"version":3,"file":"query_string.spec.js","names":["description","makeTestGroup","compareQueries","Ordering","TestQuerySingleCase","TestQueryMultiCase","TestQueryMultiTest","TestQueryMultiFile","relativeQueryString","UnitTest","T","expectQueryString","q","exp","s","toString","expect","expectRelativeQueryString","parent","child","Equal","shouldThrow","g","test","fn","t","f","_pri1","x","_pri2","p","a","h"],"sources":["../../src/unittests/query_string.spec.ts"],"sourcesContent":["export const description = `\nUnit tests for TestQuery strings.\n`;\n\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { compareQueries, Ordering } from '../common/internal/query/compare.js';\nimport {\n  TestQuery,\n  TestQuerySingleCase,\n  TestQueryMultiCase,\n  TestQueryMultiTest,\n  TestQueryMultiFile,\n  relativeQueryString,\n} from '../common/internal/query/query.js';\n\nimport { UnitTest } from './unit_test.js';\n\nclass T extends UnitTest {\n  expectQueryString(q: TestQuery, exp: string): void {\n    const s = q.toString();\n    this.expect(s === exp, `got ${s} expected ${exp}`);\n  }\n\n  expectRelativeQueryString(parent: TestQuery, child: TestQuery, exp: string): void {\n    const s = relativeQueryString(parent, child);\n    this.expect(s === exp, `got ${s} expected ${exp}`);\n\n    if (compareQueries(parent, child) !== Ordering.Equal) {\n      // Test in reverse\n      this.shouldThrow('Error', () => {\n        relativeQueryString(child, parent);\n      });\n    }\n  }\n}\n\nexport const g = makeTestGroup(T);\n\ng.test('stringifyQuery,single_case').fn(t => {\n  t.expectQueryString(\n    new TestQuerySingleCase('a', ['b_1', '2_c'], ['d_3', '4_e'], {\n      f: 'g',\n      _pri1: 0,\n      x: 3,\n      _pri2: 1,\n    }),\n    'a:b_1,2_c:d_3,4_e:f=\"g\";x=3'\n  );\n});\n\ng.test('stringifyQuery,single_case,json').fn(t => {\n  t.expectQueryString(\n    new TestQuerySingleCase('a', ['b_1', '2_c'], ['d_3', '4_e'], {\n      f: 'g',\n      x: { p: 2, q: 'Q' },\n    }),\n    'a:b_1,2_c:d_3,4_e:f=\"g\";x={\"p\":2,\"q\":\"Q\"}'\n  );\n});\n\ng.test('stringifyQuery,multi_case').fn(t => {\n  t.expectQueryString(\n    new TestQueryMultiCase('a', ['b_1', '2_c'], ['d_3', '4_e'], {\n      f: 'g',\n      _pri1: 0,\n      a: 3,\n      _pri2: 1,\n    }),\n    'a:b_1,2_c:d_3,4_e:f=\"g\";a=3;*'\n  );\n\n  t.expectQueryString(\n    new TestQueryMultiCase('a', ['b_1', '2_c'], ['d_3', '4_e'], {}),\n    'a:b_1,2_c:d_3,4_e:*'\n  );\n});\n\ng.test('stringifyQuery,multi_test').fn(t => {\n  t.expectQueryString(\n    new TestQueryMultiTest('a', ['b_1', '2_c'], ['d_3', '4_e']),\n    'a:b_1,2_c:d_3,4_e,*'\n  );\n\n  t.expectQueryString(\n    new TestQueryMultiTest('a', ['b_1', '2_c'], []), //\n    'a:b_1,2_c:*'\n  );\n});\n\ng.test('stringifyQuery,multi_file').fn(t => {\n  t.expectQueryString(\n    new TestQueryMultiFile('a', ['b_1', '2_c']), //\n    'a:b_1,2_c,*'\n  );\n\n  t.expectQueryString(\n    new TestQueryMultiFile('a', []), //\n    'a:*'\n  );\n});\n\ng.test('relativeQueryString,equal_or_child').fn(t => {\n  // Depth difference = 0\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', []), //\n    new TestQueryMultiFile('a', []), //\n    ''\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', ['b', 'c']), //\n    new TestQueryMultiFile('a', ['b', 'c']), //\n    ''\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiTest('a', ['b', 'c'], ['d', 'e']), //\n    new TestQueryMultiTest('a', ['b', 'c'], ['d', 'e']), //\n    ''\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0 }), //\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0 }), //\n    ''\n  );\n  t.expectRelativeQueryString(\n    new TestQuerySingleCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    new TestQuerySingleCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    ''\n  );\n\n  // Depth difference = 1\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', []), //\n    new TestQueryMultiFile('a', ['b']), //\n    ':b,*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', ['b']), //\n    new TestQueryMultiFile('a', ['b', 'c']), //\n    ',c,*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', ['b', 'c']), //\n    new TestQueryMultiTest('a', ['b', 'c'], []), //\n    ':*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiTest('a', ['b', 'c'], []), //\n    new TestQueryMultiTest('a', ['b', 'c'], ['d']), //\n    ':d,*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiTest('a', ['b', 'c'], ['d']), //\n    new TestQueryMultiTest('a', ['b', 'c'], ['d', 'e']), //\n    ',e,*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiTest('a', ['b', 'c'], ['d', 'e']), //\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], {}), //\n    ':*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], {}), //\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0 }), //\n    ':f=0;*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0 }), //\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    ';g=1;*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    new TestQuerySingleCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    ''\n  );\n\n  // Depth difference = 2\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', []), //\n    new TestQueryMultiFile('a', ['b', 'c']), //\n    ':b,c,*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', ['b', 'c']), //\n    new TestQueryMultiTest('a', ['b', 'c'], ['d']), //\n    ':d,*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiTest('a', ['b', 'c'], ['d']), //\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], {}), //\n    ',e:*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], {}), //\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    ':f=0;g=1;*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    new TestQuerySingleCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1, h: 2 }), //\n    ';h=2'\n  );\n  // Depth difference = 2\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', ['b']), //\n    new TestQueryMultiTest('a', ['b', 'c'], []), //\n    ',c:*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiTest('a', ['b', 'c'], []), //\n    new TestQueryMultiTest('a', ['b', 'c'], ['d', 'e']), //\n    ':d,e,*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiTest('a', ['b', 'c'], ['d', 'e']), //\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0 }), //\n    ':f=0;*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0 }), //\n    new TestQuerySingleCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    ';g=1'\n  );\n\n  // Depth difference = 4\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', []), //\n    new TestQueryMultiTest('a', ['b', 'c'], ['d']), //\n    ':b,c:d,*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiTest('a', ['b', 'c'], ['d']), //\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    ',e:f=0;g=1;*'\n  );\n  // Depth difference = 4\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', ['b']), //\n    new TestQueryMultiTest('a', ['b', 'c'], ['d', 'e']), //\n    ',c:d,e,*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiTest('a', ['b', 'c'], ['d', 'e']), //\n    new TestQuerySingleCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    ':f=0;g=1'\n  );\n});\n\ng.test('relativeQueryString,unrelated').fn(t => {\n  t.shouldThrow('Error', () => {\n    relativeQueryString(\n      new TestQueryMultiFile('a', ['b', 'x']), //\n      new TestQueryMultiFile('a', ['b', 'c']) //\n    );\n  });\n  t.shouldThrow('Error', () => {\n    relativeQueryString(\n      new TestQueryMultiTest('a', ['b', 'c'], ['d', 'x']), //\n      new TestQueryMultiTest('a', ['b', 'c'], ['d', 'e']) //\n    );\n  });\n  t.shouldThrow('Error', () => {\n    relativeQueryString(\n      new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0 }), //\n      new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 1 }) //\n    );\n  });\n});\n"],"mappings":"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"}