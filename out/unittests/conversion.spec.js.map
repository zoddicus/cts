{"version":3,"file":"conversion.spec.js","names":["description","makeTestGroup","assert","objectEquals","kValue","bool","f16Bits","f32","f32Bits","float16BitsToFloat32","float32ToFloat16Bits","float32ToFloatBits","floatBitsToNormalULPFromZero","floatBitsToNumber","i32","kFloat16Format","kFloat32Format","Matrix","pack2x16float","pack2x16snorm","pack2x16unorm","pack4x8snorm","pack4x8unorm","toMatrix","u32","vec2","vec3","vec4","UnitTest","g","cases","test","fn","t","bits","number","actual","expect","Math","abs","toString","paramsSubcasesOnly","u","combine","signed","exponentBits","mantissaBits","params","bias","value","reconstituted","ulpFromZero","testThrows","b","shouldThrow","got","wgsl","type","elements","cols","rows","scalar_builder","undefined","Array","keys","map","c","r","got_type","elementType","kind","JSON","stringify","paramsSimple","inputs","result","subnormal","positive","max","negative","min","f16","data","d","got_str","expect_str","sort"],"sources":["../../src/unittests/conversion.spec.ts"],"sourcesContent":["export const description = `Unit tests for conversion`;\n\nimport { makeTestGroup } from '../common/internal/test_group.js';\nimport { assert, objectEquals } from '../common/util/util.js';\nimport { kValue } from '../webgpu/util/constants.js';\nimport {\n  bool,\n  f16Bits,\n  f32,\n  f32Bits,\n  float16BitsToFloat32,\n  float32ToFloat16Bits,\n  float32ToFloatBits,\n  floatBitsToNormalULPFromZero,\n  floatBitsToNumber,\n  i32,\n  kFloat16Format,\n  kFloat32Format,\n  Matrix,\n  pack2x16float,\n  pack2x16snorm,\n  pack2x16unorm,\n  pack4x8snorm,\n  pack4x8unorm,\n  Scalar,\n  toMatrix,\n  u32,\n  vec2,\n  vec3,\n  vec4,\n  Vector,\n} from '../webgpu/util/conversion.js';\n\nimport { UnitTest } from './unit_test.js';\n\nexport const g = makeTestGroup(UnitTest);\n\nconst cases = [\n  [0b0_01111_0000000000, 1],\n  [0b0_00001_0000000000, 0.00006103515625],\n  [0b0_01101_0101010101, 0.33325195],\n  [0b0_11110_1111111111, 65504],\n  [0b0_00000_0000000000, 0],\n  [0b0_01110_0000000000, 0.5],\n  [0b0_01100_1001100110, 0.1999512],\n  [0b0_01111_0000000001, 1.00097656],\n  [0b0_10101_1001000000, 100],\n  [0b1_01100_1001100110, -0.1999512],\n  [0b1_10101_1001000000, -100],\n];\n\ng.test('float16BitsToFloat32').fn(t => {\n  for (const [bits, number] of [\n    ...cases,\n    [0b1_00000_0000000000, -0], // (resulting sign is not actually tested)\n    [0b0_00000_1111111111, 0.00006104], // subnormal f16 input\n    [0b1_00000_1111111111, -0.00006104],\n  ]) {\n    const actual = float16BitsToFloat32(bits);\n    t.expect(\n      // some loose check\n      Math.abs(actual - number) <= 0.00001,\n      `for ${bits.toString(2)}, expected ${number}, got ${actual}`\n    );\n  }\n});\n\ng.test('float32ToFloat16Bits').fn(t => {\n  for (const [bits, number] of [\n    ...cases,\n    [0b0_00000_0000000000, 0.00001], // input that becomes subnormal in f16 is rounded to 0\n    [0b1_00000_0000000000, -0.00001], // and sign is preserved\n  ]) {\n    // some loose check\n    const actual = float32ToFloat16Bits(number);\n    t.expect(\n      Math.abs(actual - bits) <= 1,\n      `for ${number}, expected ${bits.toString(2)}, got ${actual.toString(2)}`\n    );\n  }\n});\n\ng.test('float32ToFloatBits_floatBitsToNumber')\n  .paramsSubcasesOnly(u =>\n    u\n      .combine('signed', [0, 1] as const)\n      .combine('exponentBits', [5, 8])\n      .combine('mantissaBits', [10, 23])\n  )\n  .fn(t => {\n    const { signed, exponentBits, mantissaBits } = t.params;\n    const bias = (1 << (exponentBits - 1)) - 1;\n\n    for (const [, value] of cases) {\n      if (value < 0 && signed === 0) continue;\n      const bits = float32ToFloatBits(value, signed, exponentBits, mantissaBits, bias);\n      const reconstituted = floatBitsToNumber(bits, { signed, exponentBits, mantissaBits, bias });\n      t.expect(Math.abs(reconstituted - value) <= 0.0000001, `${reconstituted} vs ${value}`);\n    }\n  });\n\ng.test('floatBitsToULPFromZero,16').fn(t => {\n  const test = (bits: number, ulpFromZero: number) =>\n    t.expect(floatBitsToNormalULPFromZero(bits, kFloat16Format) === ulpFromZero, bits.toString(2));\n  // Zero\n  test(0b0_00000_0000000000, 0);\n  // Subnormal\n  test(0b0_00000_0000000001, 0);\n  test(0b1_00000_0000000001, 0);\n  test(0b0_00000_1111111111, 0);\n  test(0b1_00000_1111111111, 0);\n  // Normal\n  test(0b0_00001_0000000000, 1); // 0 + 1ULP\n  test(0b1_00001_0000000000, -1); // 0 - 1ULP\n  test(0b0_00001_0000000001, 2); // 0 + 2ULP\n  test(0b1_00001_0000000001, -2); // 0 - 2ULP\n  test(0b0_01110_0000000000, 0b01101_0000000001); // 0.5\n  test(0b1_01110_0000000000, -0b01101_0000000001); // -0.5\n  test(0b0_01110_1111111110, 0b01101_1111111111); // 1.0 - 2ULP\n  test(0b1_01110_1111111110, -0b01101_1111111111); // -(1.0 - 2ULP)\n  test(0b0_01110_1111111111, 0b01110_0000000000); // 1.0 - 1ULP\n  test(0b1_01110_1111111111, -0b01110_0000000000); // -(1.0 - 1ULP)\n  test(0b0_01111_0000000000, 0b01110_0000000001); // 1.0\n  test(0b1_01111_0000000000, -0b01110_0000000001); // -1.0\n  test(0b0_01111_0000000001, 0b01110_0000000010); // 1.0 + 1ULP\n  test(0b1_01111_0000000001, -0b01110_0000000010); // -(1.0 + 1ULP)\n  test(0b0_10000_0000000000, 0b01111_0000000001); // 2.0\n  test(0b1_10000_0000000000, -0b01111_0000000001); // -2.0\n\n  const testThrows = (b: number) =>\n    t.shouldThrow('Error', () => floatBitsToNormalULPFromZero(b, kFloat16Format));\n  // Infinity\n  testThrows(0b0_11111_0000000000);\n  testThrows(0b1_11111_0000000000);\n  // NaN\n  testThrows(0b0_11111_1111111111);\n  testThrows(0b1_11111_1111111111);\n});\n\ng.test('floatBitsToULPFromZero,32').fn(t => {\n  const test = (bits: number, ulpFromZero: number) =>\n    t.expect(floatBitsToNormalULPFromZero(bits, kFloat32Format) === ulpFromZero, bits.toString(2));\n  // Zero\n  test(0b0_00000000_00000000000000000000000, 0);\n  // Subnormal\n  test(0b0_00000000_00000000000000000000001, 0);\n  test(0b1_00000000_00000000000000000000001, 0);\n  test(0b0_00000000_11111111111111111111111, 0);\n  test(0b1_00000000_11111111111111111111111, 0);\n  // Normal\n  test(0b0_00000001_00000000000000000000000, 1); // 0 + 1ULP\n  test(0b1_00000001_00000000000000000000000, -1); // 0 - 1ULP\n  test(0b0_00000001_00000000000000000000001, 2); // 0 + 2ULP\n  test(0b1_00000001_00000000000000000000001, -2); // 0 - 2ULP\n  test(0b0_01111110_00000000000000000000000, 0b01111101_00000000000000000000001); // 0.5\n  test(0b1_01111110_00000000000000000000000, -0b01111101_00000000000000000000001); // -0.5\n  test(0b0_01111110_11111111111111111111110, 0b01111101_11111111111111111111111); // 1.0 - 2ULP\n  test(0b1_01111110_11111111111111111111110, -0b01111101_11111111111111111111111); // -(1.0 - 2ULP)\n  test(0b0_01111110_11111111111111111111111, 0b01111110_00000000000000000000000); // 1.0 - 1ULP\n  test(0b1_01111110_11111111111111111111111, -0b01111110_00000000000000000000000); // -(1.0 - 1ULP)\n  test(0b0_01111111_00000000000000000000000, 0b01111110_00000000000000000000001); // 1.0\n  test(0b1_01111111_00000000000000000000000, -0b01111110_00000000000000000000001); // -1.0\n  test(0b0_01111111_00000000000000000000001, 0b01111110_00000000000000000000010); // 1.0 + 1ULP\n  test(0b1_01111111_00000000000000000000001, -0b01111110_00000000000000000000010); // -(1.0 + 1ULP)\n  test(0b0_11110000_00000000000000000000000, 0b11101111_00000000000000000000001); // 2.0\n  test(0b1_11110000_00000000000000000000000, -0b11101111_00000000000000000000001); // -2.0\n\n  const testThrows = (b: number) =>\n    t.shouldThrow('Error', () => floatBitsToNormalULPFromZero(b, kFloat32Format));\n  // Infinity\n  testThrows(0b0_11111111_00000000000000000000000);\n  testThrows(0b1_11111111_00000000000000000000000);\n  // NaN\n  testThrows(0b0_11111111_11111111111111111111111);\n  testThrows(0b0_11111111_00000000000000000000001);\n  testThrows(0b1_11111111_11111111111111111111111);\n  testThrows(0b1_11111111_00000000000000000000001);\n});\n\ng.test('scalarWGSL').fn(t => {\n  const cases: Array<[Scalar, string]> = [\n    [f32(0.0), '0.0f'],\n    [f32(1.0), '1.0f'],\n    [f32(-1.0), '-1.0f'],\n    [f32Bits(0x70000000), '1.5845632502852868e+29f'],\n    [f32Bits(0xf0000000), '-1.5845632502852868e+29f'],\n    [f16Bits(0), '0.0h'],\n    [f16Bits(0x3c00), '1.0h'],\n    [f16Bits(0xbc00), '-1.0h'],\n    [u32(0), '0u'],\n    [u32(1), '1u'],\n    [u32(2000000000), '2000000000u'],\n    [u32(-1), '4294967295u'],\n    [i32(0), 'i32(0)'],\n    [i32(1), 'i32(1)'],\n    [i32(-1), 'i32(-1)'],\n    [bool(true), 'true'],\n    [bool(false), 'false'],\n  ];\n  for (const [value, expect] of cases) {\n    const got = value.wgsl();\n    t.expect(\n      got === expect,\n      `[value: ${value.value}, type: ${value.type}]\ngot:    ${got}\nexpect: ${expect}`\n    );\n  }\n});\n\ng.test('vectorWGSL').fn(t => {\n  const cases: Array<[Vector, string]> = [\n    [vec2(f32(42.0), f32(24.0)), 'vec2(42.0f, 24.0f)'],\n    [vec2(f16Bits(0x5140), f16Bits(0x4e00)), 'vec2(42.0h, 24.0h)'],\n    [vec2(u32(42), u32(24)), 'vec2(42u, 24u)'],\n    [vec2(i32(42), i32(24)), 'vec2(i32(42), i32(24))'],\n    [vec2(bool(false), bool(true)), 'vec2(false, true)'],\n\n    [vec3(f32(0.0), f32(1.0), f32(-1.0)), 'vec3(0.0f, 1.0f, -1.0f)'],\n    [vec3(f16Bits(0), f16Bits(0x3c00), f16Bits(0xbc00)), 'vec3(0.0h, 1.0h, -1.0h)'],\n    [vec3(u32(0), u32(1), u32(-1)), 'vec3(0u, 1u, 4294967295u)'],\n    [vec3(i32(0), i32(1), i32(-1)), 'vec3(i32(0), i32(1), i32(-1))'],\n    [vec3(bool(true), bool(false), bool(true)), 'vec3(true, false, true)'],\n\n    [vec4(f32(1.0), f32(-2.0), f32(4.0), f32(-8.0)), 'vec4(1.0f, -2.0f, 4.0f, -8.0f)'],\n    [\n      vec4(f16Bits(0xbc00), f16Bits(0x4000), f16Bits(0xc400), f16Bits(0x4800)),\n      'vec4(-1.0h, 2.0h, -4.0h, 8.0h)',\n    ],\n    [vec4(u32(1), u32(-2), u32(4), u32(-8)), 'vec4(1u, 4294967294u, 4u, 4294967288u)'],\n    [vec4(i32(1), i32(-2), i32(4), i32(-8)), 'vec4(i32(1), i32(-2), i32(4), i32(-8))'],\n    [vec4(bool(false), bool(true), bool(true), bool(false)), 'vec4(false, true, true, false)'],\n  ];\n  for (const [value, expect] of cases) {\n    const got = value.wgsl();\n    t.expect(\n      got === expect,\n      `[values: ${value.elements}, type: ${value.type}]\ngot:    ${got}\nexpect: ${expect}`\n    );\n  }\n});\n\ng.test('matrixWGSL').fn(t => {\n  const cases: Array<[Matrix, string]> = [\n    [\n      toMatrix(\n        [\n          [0.0, 1.0],\n          [2.0, 3.0],\n        ],\n        f32\n      ),\n      'mat2x2(0.0f, 1.0f, 2.0f, 3.0f)',\n    ],\n    [\n      toMatrix(\n        [\n          [0.0, 1.0, 2.0],\n          [3.0, 4.0, 5.0],\n        ],\n        f32\n      ),\n      'mat2x3(0.0f, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f)',\n    ],\n    [\n      toMatrix(\n        [\n          [0.0, 1.0, 2.0, 3.0],\n          [4.0, 5.0, 6.0, 7.0],\n        ],\n        f32\n      ),\n      'mat2x4(0.0f, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f)',\n    ],\n    [\n      toMatrix(\n        [\n          [0.0, 1.0],\n          [2.0, 3.0],\n          [4.0, 5.0],\n        ],\n        f32\n      ),\n      'mat3x2(0.0f, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f)',\n    ],\n    [\n      toMatrix(\n        [\n          [0.0, 1.0, 2.0],\n          [3.0, 4.0, 5.0],\n          [6.0, 7.0, 8.0],\n        ],\n        f32\n      ),\n      'mat3x3(0.0f, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f)',\n    ],\n    [\n      toMatrix(\n        [\n          [0.0, 1.0, 2.0, 3.0],\n          [4.0, 5.0, 6.0, 7.0],\n          [8.0, 9.0, 10.0, 11.0],\n        ],\n        f32\n      ),\n      'mat3x4(0.0f, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f, 10.0f, 11.0f)',\n    ],\n    [\n      toMatrix(\n        [\n          [0.0, 1.0],\n          [2.0, 3.0],\n          [4.0, 5.0],\n          [6.0, 7.0],\n        ],\n        f32\n      ),\n      'mat4x2(0.0f, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f)',\n    ],\n    [\n      toMatrix(\n        [\n          [0.0, 1.0, 2.0],\n          [3.0, 4.0, 5.0],\n          [6.0, 7.0, 8.0],\n          [9.0, 10.0, 11.0],\n        ],\n        f32\n      ),\n      'mat4x3(0.0f, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f, 10.0f, 11.0f)',\n    ],\n    [\n      toMatrix(\n        [\n          [0.0, 1.0, 2.0, 3.0],\n          [4.0, 5.0, 6.0, 7.0],\n          [8.0, 9.0, 10.0, 11.0],\n          [12.0, 13.0, 14.0, 15.0],\n        ],\n        f32\n      ),\n      'mat4x4(0.0f, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f, 10.0f, 11.0f, 12.0f, 13.0f, 14.0f, 15.0f)',\n    ],\n  ];\n  for (const [value, expect] of cases) {\n    const got = value.wgsl();\n    t.expect(\n      got === expect,\n      `[values: ${value.elements}, type: ${value.type}]\ngot:    ${got}\nexpect: ${expect}`\n    );\n  }\n});\n\ng.test('constructorMatrix')\n  .params(u =>\n    u\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n      .combine('type', ['f32'] as const)\n  )\n  .fn(t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const type = t.params.type;\n    const scalar_builder = type === 'f32' ? f32 : undefined;\n    assert(scalar_builder !== undefined, `Unexpected type param '${type}' provided`);\n\n    const elements = [...Array(cols).keys()].map(c => {\n      return [...Array(rows).keys()].map(r => scalar_builder(c * cols + r));\n    });\n\n    const got = new Matrix(elements);\n    const got_type = got.type;\n    t.expect(\n      got_type.cols === cols,\n      `expected Matrix to have ${cols} columns, received ${got_type.cols} instead`\n    );\n    t.expect(\n      got_type.rows === rows,\n      `expected Matrix to have ${rows} columns, received ${got_type.rows} instead`\n    );\n    t.expect(\n      got_type.elementType.kind === type,\n      `expected Matrix to have ${type} elements, received ${got_type.elementType.kind} instead`\n    );\n    t.expect(\n      objectEquals(got.elements, elements),\n      `Matrix did not have expected elements (${JSON.stringify(elements)}), instead had (${\n        got.elements\n      })`\n    );\n  });\n\ng.test('pack2x16float')\n  .paramsSimple([\n    // f16 normals\n    { inputs: [0, 0], result: [0x00000000, 0x80000000, 0x00008000, 0x80008000] },\n    { inputs: [1, 0], result: [0x00003c00, 0x80003c00] },\n    { inputs: [1, 1], result: [0x3c003c00] },\n    { inputs: [-1, -1], result: [0xbc00bc00] },\n    { inputs: [10, 1], result: [0x3c004900] },\n    { inputs: [-10, 1], result: [0x3c00c900] },\n\n    // f32 normal, but not f16 precise\n    { inputs: [1.00000011920928955078125, 1], result: [0x3c003c00, 0x3c003c01] },\n\n    // f32 subnormals\n    // prettier-ignore\n    { inputs: [kValue.f32.subnormal.positive.max, 1], result: [0x3c000000, 0x3c008000, 0x3c000001] },\n    // prettier-ignore\n    { inputs: [kValue.f32.subnormal.negative.min, 1], result: [0x3c008001, 0x3c000000, 0x3c008000] },\n\n    // f16 subnormals\n    // prettier-ignore\n    { inputs: [kValue.f16.subnormal.positive.max, 1], result: [0x3c0003ff, 0x3c000000, 0x3c008000] },\n    // prettier-ignore\n    { inputs: [kValue.f16.subnormal.negative.min, 1], result: [0x03c0083ff, 0x3c000000, 0x3c008000] },\n\n    // f16 out of bounds\n    { inputs: [kValue.f16.positive.max + 1, 1], result: [undefined] },\n    { inputs: [kValue.f16.negative.min - 1, 1], result: [undefined] },\n    { inputs: [1, kValue.f16.positive.max + 1], result: [undefined] },\n    { inputs: [1, kValue.f16.negative.min - 1], result: [undefined] },\n  ] as const)\n  .fn(test => {\n    const toString = (data: readonly (undefined | number)[]): String[] => {\n      return data.map(d => (d !== undefined ? u32(d).toString() : 'undefined'));\n    };\n\n    const inputs = test.params.inputs;\n    const got = pack2x16float(inputs[0], inputs[1]);\n    const expect = test.params.result;\n\n    const got_str = toString(got);\n    const expect_str = toString(expect);\n\n    // Using strings of the outputs, so they can be easily sorted, since order of the results doesn't matter.\n    test.expect(\n      objectEquals(got_str.sort(), expect_str.sort()),\n      `pack2x16float(${inputs}) returned [${got_str}]. Expected [${expect_str}]`\n    );\n  });\n\ng.test('pack2x16snorm')\n  .paramsSimple([\n    // Normals\n    { inputs: [0, 0], result: 0x00000000 },\n    { inputs: [1, 0], result: 0x00007fff },\n    { inputs: [0, 1], result: 0x7fff0000 },\n    { inputs: [1, 1], result: 0x7fff7fff },\n    { inputs: [-1, -1], result: 0x80018001 },\n    { inputs: [10, 10], result: 0x7fff7fff },\n    { inputs: [-10, -10], result: 0x80018001 },\n    { inputs: [0.1, 0.1], result: 0x0ccd0ccd },\n    { inputs: [-0.1, -0.1], result: 0xf333f333 },\n    { inputs: [0.5, 0.5], result: 0x40004000 },\n    { inputs: [-0.5, -0.5], result: 0xc001c001 },\n    { inputs: [0.1, 0.5], result: 0x40000ccd },\n    { inputs: [-0.1, -0.5], result: 0xc001f333 },\n\n    // Subnormals\n    { inputs: [kValue.f32.subnormal.positive.max, 1], result: 0x7fff0000 },\n    { inputs: [kValue.f32.subnormal.negative.min, 1], result: 0x7fff0000 },\n  ] as const)\n  .fn(test => {\n    const inputs = test.params.inputs;\n    const got = pack2x16snorm(inputs[0], inputs[1]);\n    const expect = test.params.result;\n\n    test.expect(got === expect, `pack2x16snorm(${inputs}) returned ${got}. Expected ${expect}`);\n  });\n\ng.test('pack2x16unorm')\n  .paramsSimple([\n    // Normals\n    { inputs: [0, 0], result: 0x00000000 },\n    { inputs: [1, 0], result: 0x0000ffff },\n    { inputs: [0, 1], result: 0xffff0000 },\n    { inputs: [1, 1], result: 0xffffffff },\n    { inputs: [-1, -1], result: 0x00000000 },\n    { inputs: [0.1, 0.1], result: 0x199a199a },\n    { inputs: [0.5, 0.5], result: 0x80008000 },\n    { inputs: [0.1, 0.5], result: 0x8000199a },\n    { inputs: [10, 10], result: 0xffffffff },\n\n    // Subnormals\n    { inputs: [kValue.f32.subnormal.positive.max, 1], result: 0xffff0000 },\n  ] as const)\n  .fn(test => {\n    const inputs = test.params.inputs;\n    const got = pack2x16unorm(inputs[0], inputs[1]);\n    const expect = test.params.result;\n\n    test.expect(got === expect, `pack2x16unorm(${inputs}) returned ${got}. Expected ${expect}`);\n  });\n\ng.test('pack4x8snorm')\n  .paramsSimple([\n    // Normals\n    { inputs: [0, 0, 0, 0], result: 0x00000000 },\n    { inputs: [1, 0, 0, 0], result: 0x0000007f },\n    { inputs: [0, 1, 0, 0], result: 0x00007f00 },\n    { inputs: [0, 0, 1, 0], result: 0x007f0000 },\n    { inputs: [0, 0, 0, 1], result: 0x7f000000 },\n    { inputs: [1, 1, 1, 1], result: 0x7f7f7f7f },\n    { inputs: [10, 10, 10, 10], result: 0x7f7f7f7f },\n    { inputs: [-1, 0, 0, 0], result: 0x00000081 },\n    { inputs: [0, -1, 0, 0], result: 0x00008100 },\n    { inputs: [0, 0, -1, 0], result: 0x00810000 },\n    { inputs: [0, 0, 0, -1], result: 0x81000000 },\n    { inputs: [-1, -1, -1, -1], result: 0x81818181 },\n    { inputs: [-10, -10, -10, -10], result: 0x81818181 },\n    { inputs: [0.1, 0.1, 0.1, 0.1], result: 0x0d0d0d0d },\n    { inputs: [-0.1, -0.1, -0.1, -0.1], result: 0xf3f3f3f3 },\n    { inputs: [0.1, -0.1, 0.1, -0.1], result: 0xf30df30d },\n    { inputs: [0.5, 0.5, 0.5, 0.5], result: 0x40404040 },\n    { inputs: [-0.5, -0.5, -0.5, -0.5], result: 0xc1c1c1c1 },\n    { inputs: [-0.5, 0.5, -0.5, 0.5], result: 0x40c140c1 },\n    { inputs: [0.1, 0.5, 0.1, 0.5], result: 0x400d400d },\n    { inputs: [-0.1, -0.5, -0.1, -0.5], result: 0xc1f3c1f3 },\n\n    // Subnormals\n    { inputs: [kValue.f32.subnormal.positive.max, 1, 1, 1], result: 0x7f7f7f00 },\n    { inputs: [kValue.f32.subnormal.negative.min, 1, 1, 1], result: 0x7f7f7f00 },\n  ] as const)\n  .fn(test => {\n    const inputs = test.params.inputs;\n    const got = pack4x8snorm(inputs[0], inputs[1], inputs[2], inputs[3]);\n    const expect = test.params.result;\n\n    test.expect(got === expect, `pack4x8snorm(${inputs}) returned ${u32(got)}. Expected ${expect}`);\n  });\n\ng.test('pack4x8unorm')\n  .paramsSimple([\n    // Normals\n    { inputs: [0, 0, 0, 0], result: 0x00000000 },\n    { inputs: [1, 0, 0, 0], result: 0x000000ff },\n    { inputs: [0, 1, 0, 0], result: 0x0000ff00 },\n    { inputs: [0, 0, 1, 0], result: 0x00ff0000 },\n    { inputs: [0, 0, 0, 1], result: 0xff000000 },\n    { inputs: [1, 1, 1, 1], result: 0xffffffff },\n    { inputs: [10, 10, 10, 10], result: 0xffffffff },\n    { inputs: [-1, -1, -1, -1], result: 0x00000000 },\n    { inputs: [-10, -10, -10, -10], result: 0x00000000 },\n    { inputs: [0.1, 0.1, 0.1, 0.1], result: 0x1a1a1a1a },\n    { inputs: [0.5, 0.5, 0.5, 0.5], result: 0x80808080 },\n    { inputs: [0.1, 0.5, 0.1, 0.5], result: 0x801a801a },\n\n    // Subnormals\n    { inputs: [kValue.f32.subnormal.positive.max, 1, 1, 1], result: 0xffffff00 },\n  ] as const)\n  .fn(test => {\n    const inputs = test.params.inputs;\n    const got = pack4x8unorm(inputs[0], inputs[1], inputs[2], inputs[3]);\n    const expect = test.params.result;\n\n    test.expect(got === expect, `pack4x8unorm(${inputs}) returned ${got}. Expected ${expect}`);\n  });\n"],"mappings":"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"}