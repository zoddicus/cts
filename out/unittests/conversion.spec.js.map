{"version":3,"file":"conversion.spec.js","names":["description","mergeParams","makeTestGroup","keysOf","assert","objectEquals","kValue","bool","f16Bits","f32","f32Bits","float16BitsToFloat32","float32ToFloat16Bits","float32ToFloatBits","floatBitsToNormalULPFromZero","floatBitsToNumber","i32","kFloat16Format","kFloat32Format","Matrix","numbersApproximatelyEqual","pack2x16float","pack2x16snorm","pack2x16unorm","pack4x8snorm","pack4x8unorm","packRGB9E5UFloat","toMatrix","u32","unpackRGB9E5UFloat","vec2","vec3","vec4","UnitTest","g","kFloat16BitsToNumberCases","Number","NaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","test","fn","t","bits","number","actual","expect","toString","Math","abs","paramsSubcasesOnly","u","combine","signed","exponentBits","mantissaBits","params","bias","value","reconstituted","ulpFromZero","testThrows","b","shouldThrow","cases","got","wgsl","type","elements","cols","rows","scalar_builder","undefined","Array","keys","map","c","r","got_type","elementType","kind","JSON","stringify","paramsSimple","inputs","result","positive","subnormal","max","negative","min","f16","data","d","got_str","expect_str","sort","kRGB9E5UFloatCommonData","zero","encoded","rgb","r1","r2","g1","g2","b1","b2","r1_g1_b1","r1_g2_b1","r4_g8_b2","r1_g2_b3","r128_g3968_b65408","r128_g1984_b30016","r_5_g_25_b_8","kPackRGB9E5UFloatData","clamp_max","subnormals","r57423_g54_b3478","r6852_g3571_b2356","r68312_g12_b8123","r7321_g846_b32","bits5_9_9_9","x","s","padStart","slice","case","R","G","B"],"sources":["../../src/unittests/conversion.spec.ts"],"sourcesContent":["export const description = `Unit tests for conversion`;\n\nimport { mergeParams } from '../common/internal/params_utils.js';\nimport { makeTestGroup } from '../common/internal/test_group.js';\nimport { keysOf } from '../common/util/data_tables.js';\nimport { assert, objectEquals } from '../common/util/util.js';\nimport { kValue } from '../webgpu/util/constants.js';\nimport {\n  bool,\n  f16Bits,\n  f32,\n  f32Bits,\n  float16BitsToFloat32,\n  float32ToFloat16Bits,\n  float32ToFloatBits,\n  floatBitsToNormalULPFromZero,\n  floatBitsToNumber,\n  i32,\n  kFloat16Format,\n  kFloat32Format,\n  Matrix,\n  numbersApproximatelyEqual,\n  pack2x16float,\n  pack2x16snorm,\n  pack2x16unorm,\n  pack4x8snorm,\n  pack4x8unorm,\n  packRGB9E5UFloat,\n  Scalar,\n  toMatrix,\n  u32,\n  unpackRGB9E5UFloat,\n  vec2,\n  vec3,\n  vec4,\n  Vector,\n} from '../webgpu/util/conversion.js';\n\nimport { UnitTest } from './unit_test.js';\n\nexport const g = makeTestGroup(UnitTest);\n\nconst kFloat16BitsToNumberCases = [\n  [0b0_01111_0000000000, 1],\n  [0b0_00001_0000000000, 0.00006103515625],\n  [0b0_01101_0101010101, 0.33325195],\n  [0b0_11110_1111111111, 65504],\n  [0b0_00000_0000000000, 0],\n  [0b1_00000_0000000000, -0.0], // -0.0 compares as equal to 0.0\n  [0b0_01110_0000000000, 0.5],\n  [0b0_01100_1001100110, 0.1999512],\n  [0b0_01111_0000000001, 1.00097656],\n  [0b0_10101_1001000000, 100],\n  [0b1_01100_1001100110, -0.1999512],\n  [0b1_10101_1001000000, -100],\n  [0b0_11111_1111111111, Number.NaN],\n  [0b0_11111_0000000000, Number.POSITIVE_INFINITY],\n  [0b1_11111_0000000000, Number.NEGATIVE_INFINITY],\n];\n\ng.test('float16BitsToFloat32').fn(t => {\n  for (const [bits, number] of [\n    ...kFloat16BitsToNumberCases,\n    [0b0_00000_1111111111, 0.00006104], // subnormal f16 input\n    [0b1_00000_1111111111, -0.00006104],\n  ]) {\n    const actual = float16BitsToFloat32(bits);\n    t.expect(\n      // some loose check\n      numbersApproximatelyEqual(actual, number, 0.00001),\n      `for ${bits.toString(2)}, expected ${number}, got ${actual}`\n    );\n  }\n});\n\ng.test('float32ToFloat16Bits').fn(t => {\n  for (const [bits, number] of [\n    ...kFloat16BitsToNumberCases,\n    [0b0_00000_0000000000, 0.00001], // input that becomes subnormal in f16 is rounded to 0\n    [0b1_00000_0000000000, -0.00001], // and sign is preserved\n  ]) {\n    // some loose check\n    const actual = float32ToFloat16Bits(number);\n    t.expect(\n      Math.abs(actual - bits) <= 1,\n      `for ${number}, expected ${bits.toString(2)}, got ${actual.toString(2)}`\n    );\n  }\n});\n\ng.test('float32ToFloatBits_floatBitsToNumber')\n  .paramsSubcasesOnly(u =>\n    u\n      .combine('signed', [0, 1] as const)\n      .combine('exponentBits', [5, 8])\n      .combine('mantissaBits', [10, 23])\n  )\n  .fn(t => {\n    const { signed, exponentBits, mantissaBits } = t.params;\n    const bias = (1 << (exponentBits - 1)) - 1;\n\n    for (const [, value] of kFloat16BitsToNumberCases) {\n      if (value < 0 && signed === 0) continue;\n      const bits = float32ToFloatBits(value, signed, exponentBits, mantissaBits, bias);\n      const reconstituted = floatBitsToNumber(bits, { signed, exponentBits, mantissaBits, bias });\n      t.expect(\n        numbersApproximatelyEqual(reconstituted, value, 0.0000001),\n        `${reconstituted} vs ${value}`\n      );\n    }\n  });\n\ng.test('floatBitsToULPFromZero,16').fn(t => {\n  const test = (bits: number, ulpFromZero: number) =>\n    t.expect(floatBitsToNormalULPFromZero(bits, kFloat16Format) === ulpFromZero, bits.toString(2));\n  // Zero\n  test(0b0_00000_0000000000, 0);\n  test(0b1_00000_0000000000, 0);\n  // Subnormal\n  test(0b0_00000_0000000001, 0);\n  test(0b1_00000_0000000001, 0);\n  test(0b0_00000_1111111111, 0);\n  test(0b1_00000_1111111111, 0);\n  // Normal\n  test(0b0_00001_0000000000, 1); // 0 + 1ULP\n  test(0b1_00001_0000000000, -1); // 0 - 1ULP\n  test(0b0_00001_0000000001, 2); // 0 + 2ULP\n  test(0b1_00001_0000000001, -2); // 0 - 2ULP\n  test(0b0_01110_0000000000, 0b01101_0000000001); // 0.5\n  test(0b1_01110_0000000000, -0b01101_0000000001); // -0.5\n  test(0b0_01110_1111111110, 0b01101_1111111111); // 1.0 - 2ULP\n  test(0b1_01110_1111111110, -0b01101_1111111111); // -(1.0 - 2ULP)\n  test(0b0_01110_1111111111, 0b01110_0000000000); // 1.0 - 1ULP\n  test(0b1_01110_1111111111, -0b01110_0000000000); // -(1.0 - 1ULP)\n  test(0b0_01111_0000000000, 0b01110_0000000001); // 1.0\n  test(0b1_01111_0000000000, -0b01110_0000000001); // -1.0\n  test(0b0_01111_0000000001, 0b01110_0000000010); // 1.0 + 1ULP\n  test(0b1_01111_0000000001, -0b01110_0000000010); // -(1.0 + 1ULP)\n  test(0b0_10000_0000000000, 0b01111_0000000001); // 2.0\n  test(0b1_10000_0000000000, -0b01111_0000000001); // -2.0\n\n  const testThrows = (b: number) =>\n    t.shouldThrow('Error', () => floatBitsToNormalULPFromZero(b, kFloat16Format));\n  // Infinity\n  testThrows(0b0_11111_0000000000);\n  testThrows(0b1_11111_0000000000);\n  // NaN\n  testThrows(0b0_11111_1111111111);\n  testThrows(0b1_11111_1111111111);\n});\n\ng.test('floatBitsToULPFromZero,32').fn(t => {\n  const test = (bits: number, ulpFromZero: number) =>\n    t.expect(floatBitsToNormalULPFromZero(bits, kFloat32Format) === ulpFromZero, bits.toString(2));\n  // Zero\n  test(0b0_00000000_00000000000000000000000, 0);\n  test(0b1_00000000_00000000000000000000000, 0);\n  // Subnormal\n  test(0b0_00000000_00000000000000000000001, 0);\n  test(0b1_00000000_00000000000000000000001, 0);\n  test(0b0_00000000_11111111111111111111111, 0);\n  test(0b1_00000000_11111111111111111111111, 0);\n  // Normal\n  test(0b0_00000001_00000000000000000000000, 1); // 0 + 1ULP\n  test(0b1_00000001_00000000000000000000000, -1); // 0 - 1ULP\n  test(0b0_00000001_00000000000000000000001, 2); // 0 + 2ULP\n  test(0b1_00000001_00000000000000000000001, -2); // 0 - 2ULP\n  test(0b0_01111110_00000000000000000000000, 0b01111101_00000000000000000000001); // 0.5\n  test(0b1_01111110_00000000000000000000000, -0b01111101_00000000000000000000001); // -0.5\n  test(0b0_01111110_11111111111111111111110, 0b01111101_11111111111111111111111); // 1.0 - 2ULP\n  test(0b1_01111110_11111111111111111111110, -0b01111101_11111111111111111111111); // -(1.0 - 2ULP)\n  test(0b0_01111110_11111111111111111111111, 0b01111110_00000000000000000000000); // 1.0 - 1ULP\n  test(0b1_01111110_11111111111111111111111, -0b01111110_00000000000000000000000); // -(1.0 - 1ULP)\n  test(0b0_01111111_00000000000000000000000, 0b01111110_00000000000000000000001); // 1.0\n  test(0b1_01111111_00000000000000000000000, -0b01111110_00000000000000000000001); // -1.0\n  test(0b0_01111111_00000000000000000000001, 0b01111110_00000000000000000000010); // 1.0 + 1ULP\n  test(0b1_01111111_00000000000000000000001, -0b01111110_00000000000000000000010); // -(1.0 + 1ULP)\n  test(0b0_11110000_00000000000000000000000, 0b11101111_00000000000000000000001); // 2.0\n  test(0b1_11110000_00000000000000000000000, -0b11101111_00000000000000000000001); // -2.0\n\n  const testThrows = (b: number) =>\n    t.shouldThrow('Error', () => floatBitsToNormalULPFromZero(b, kFloat32Format));\n  // Infinity\n  testThrows(0b0_11111111_00000000000000000000000);\n  testThrows(0b1_11111111_00000000000000000000000);\n  // NaN\n  testThrows(0b0_11111111_11111111111111111111111);\n  testThrows(0b0_11111111_00000000000000000000001);\n  testThrows(0b1_11111111_11111111111111111111111);\n  testThrows(0b1_11111111_00000000000000000000001);\n});\n\ng.test('scalarWGSL').fn(t => {\n  const cases: Array<[Scalar, string]> = [\n    [f32(0.0), '0.0f'],\n    // The number -0.0 can be remapped to 0.0 when stored in a Scalar\n    // object. It is not possible to guarantee that '-0.0f' will\n    // be emitted. So the WGSL scalar value printing does not try\n    // to handle this case.\n    [f32(-0.0), '0.0f'], // -0.0 can be remapped to 0.0\n    [f32(1.0), '1.0f'],\n    [f32(-1.0), '-1.0f'],\n    [f32Bits(0x70000000), '1.5845632502852868e+29f'],\n    [f32Bits(0xf0000000), '-1.5845632502852868e+29f'],\n    [f16Bits(0), '0.0h'],\n    [f16Bits(0x3c00), '1.0h'],\n    [f16Bits(0xbc00), '-1.0h'],\n    [u32(0), '0u'],\n    [u32(1), '1u'],\n    [u32(2000000000), '2000000000u'],\n    [u32(-1), '4294967295u'],\n    [i32(0), 'i32(0)'],\n    [i32(1), 'i32(1)'],\n    [i32(-1), 'i32(-1)'],\n    [bool(true), 'true'],\n    [bool(false), 'false'],\n  ];\n  for (const [value, expect] of cases) {\n    const got = value.wgsl();\n    t.expect(\n      got === expect,\n      `[value: ${value.value}, type: ${value.type}]\ngot:    ${got}\nexpect: ${expect}`\n    );\n  }\n});\n\ng.test('vectorWGSL').fn(t => {\n  const cases: Array<[Vector, string]> = [\n    [vec2(f32(42.0), f32(24.0)), 'vec2(42.0f, 24.0f)'],\n    [vec2(f16Bits(0x5140), f16Bits(0x4e00)), 'vec2(42.0h, 24.0h)'],\n    [vec2(u32(42), u32(24)), 'vec2(42u, 24u)'],\n    [vec2(i32(42), i32(24)), 'vec2(i32(42), i32(24))'],\n    [vec2(bool(false), bool(true)), 'vec2(false, true)'],\n\n    [vec3(f32(0.0), f32(1.0), f32(-1.0)), 'vec3(0.0f, 1.0f, -1.0f)'],\n    [vec3(f16Bits(0), f16Bits(0x3c00), f16Bits(0xbc00)), 'vec3(0.0h, 1.0h, -1.0h)'],\n    [vec3(u32(0), u32(1), u32(-1)), 'vec3(0u, 1u, 4294967295u)'],\n    [vec3(i32(0), i32(1), i32(-1)), 'vec3(i32(0), i32(1), i32(-1))'],\n    [vec3(bool(true), bool(false), bool(true)), 'vec3(true, false, true)'],\n\n    [vec4(f32(1.0), f32(-2.0), f32(4.0), f32(-8.0)), 'vec4(1.0f, -2.0f, 4.0f, -8.0f)'],\n    [\n      vec4(f16Bits(0xbc00), f16Bits(0x4000), f16Bits(0xc400), f16Bits(0x4800)),\n      'vec4(-1.0h, 2.0h, -4.0h, 8.0h)',\n    ],\n    [vec4(u32(1), u32(-2), u32(4), u32(-8)), 'vec4(1u, 4294967294u, 4u, 4294967288u)'],\n    [vec4(i32(1), i32(-2), i32(4), i32(-8)), 'vec4(i32(1), i32(-2), i32(4), i32(-8))'],\n    [vec4(bool(false), bool(true), bool(true), bool(false)), 'vec4(false, true, true, false)'],\n  ];\n  for (const [value, expect] of cases) {\n    const got = value.wgsl();\n    t.expect(\n      got === expect,\n      `[values: ${value.elements}, type: ${value.type}]\ngot:    ${got}\nexpect: ${expect}`\n    );\n  }\n});\n\ng.test('matrixWGSL').fn(t => {\n  const cases: Array<[Matrix, string]> = [\n    [\n      toMatrix(\n        [\n          [0.0, 1.0],\n          [2.0, 3.0],\n        ],\n        f32\n      ),\n      'mat2x2(0.0f, 1.0f, 2.0f, 3.0f)',\n    ],\n    [\n      toMatrix(\n        [\n          [0.0, 1.0, 2.0],\n          [3.0, 4.0, 5.0],\n        ],\n        f32\n      ),\n      'mat2x3(0.0f, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f)',\n    ],\n    [\n      toMatrix(\n        [\n          [0.0, 1.0, 2.0, 3.0],\n          [4.0, 5.0, 6.0, 7.0],\n        ],\n        f32\n      ),\n      'mat2x4(0.0f, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f)',\n    ],\n    [\n      toMatrix(\n        [\n          [0.0, 1.0],\n          [2.0, 3.0],\n          [4.0, 5.0],\n        ],\n        f32\n      ),\n      'mat3x2(0.0f, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f)',\n    ],\n    [\n      toMatrix(\n        [\n          [0.0, 1.0, 2.0],\n          [3.0, 4.0, 5.0],\n          [6.0, 7.0, 8.0],\n        ],\n        f32\n      ),\n      'mat3x3(0.0f, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f)',\n    ],\n    [\n      toMatrix(\n        [\n          [0.0, 1.0, 2.0, 3.0],\n          [4.0, 5.0, 6.0, 7.0],\n          [8.0, 9.0, 10.0, 11.0],\n        ],\n        f32\n      ),\n      'mat3x4(0.0f, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f, 10.0f, 11.0f)',\n    ],\n    [\n      toMatrix(\n        [\n          [0.0, 1.0],\n          [2.0, 3.0],\n          [4.0, 5.0],\n          [6.0, 7.0],\n        ],\n        f32\n      ),\n      'mat4x2(0.0f, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f)',\n    ],\n    [\n      toMatrix(\n        [\n          [0.0, 1.0, 2.0],\n          [3.0, 4.0, 5.0],\n          [6.0, 7.0, 8.0],\n          [9.0, 10.0, 11.0],\n        ],\n        f32\n      ),\n      'mat4x3(0.0f, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f, 10.0f, 11.0f)',\n    ],\n    [\n      toMatrix(\n        [\n          [0.0, 1.0, 2.0, 3.0],\n          [4.0, 5.0, 6.0, 7.0],\n          [8.0, 9.0, 10.0, 11.0],\n          [12.0, 13.0, 14.0, 15.0],\n        ],\n        f32\n      ),\n      'mat4x4(0.0f, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f, 10.0f, 11.0f, 12.0f, 13.0f, 14.0f, 15.0f)',\n    ],\n  ];\n  for (const [value, expect] of cases) {\n    const got = value.wgsl();\n    t.expect(\n      got === expect,\n      `[values: ${value.elements}, type: ${value.type}]\ngot:    ${got}\nexpect: ${expect}`\n    );\n  }\n});\n\ng.test('constructorMatrix')\n  .params(u =>\n    u\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n      .combine('type', ['f32'] as const)\n  )\n  .fn(t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const type = t.params.type;\n    const scalar_builder = type === 'f32' ? f32 : undefined;\n    assert(scalar_builder !== undefined, `Unexpected type param '${type}' provided`);\n\n    const elements = [...Array(cols).keys()].map(c => {\n      return [...Array(rows).keys()].map(r => scalar_builder(c * cols + r));\n    });\n\n    const got = new Matrix(elements);\n    const got_type = got.type;\n    t.expect(\n      got_type.cols === cols,\n      `expected Matrix to have ${cols} columns, received ${got_type.cols} instead`\n    );\n    t.expect(\n      got_type.rows === rows,\n      `expected Matrix to have ${rows} columns, received ${got_type.rows} instead`\n    );\n    t.expect(\n      got_type.elementType.kind === type,\n      `expected Matrix to have ${type} elements, received ${got_type.elementType.kind} instead`\n    );\n    t.expect(\n      objectEquals(got.elements, elements),\n      `Matrix did not have expected elements (${JSON.stringify(elements)}), instead had (${\n        got.elements\n      })`\n    );\n  });\n\ng.test('pack2x16float')\n  .paramsSimple([\n    // f16 normals\n    { inputs: [0, 0], result: [0x00000000, 0x80000000, 0x00008000, 0x80008000] },\n    { inputs: [1, 0], result: [0x00003c00, 0x80003c00] },\n    { inputs: [1, 1], result: [0x3c003c00] },\n    { inputs: [-1, -1], result: [0xbc00bc00] },\n    { inputs: [10, 1], result: [0x3c004900] },\n    { inputs: [-10, 1], result: [0x3c00c900] },\n\n    // f32 normal, but not f16 precise\n    { inputs: [1.00000011920928955078125, 1], result: [0x3c003c00, 0x3c003c01] },\n\n    // f32 subnormals\n    // prettier-ignore\n    { inputs: [kValue.f32.positive.subnormal.max, 1], result: [0x3c000000, 0x3c008000, 0x3c000001] },\n    // prettier-ignore\n    { inputs: [kValue.f32.negative.subnormal.min, 1], result: [0x3c008001, 0x3c000000, 0x3c008000] },\n\n    // f16 subnormals\n    // prettier-ignore\n    { inputs: [kValue.f16.positive.subnormal.max, 1], result: [0x3c0003ff, 0x3c000000, 0x3c008000] },\n    // prettier-ignore\n    { inputs: [kValue.f16.negative.subnormal.min, 1], result: [0x03c0083ff, 0x3c000000, 0x3c008000] },\n\n    // f16 out of bounds\n    { inputs: [kValue.f16.positive.max + 1, 1], result: [undefined] },\n    { inputs: [kValue.f16.negative.min - 1, 1], result: [undefined] },\n    { inputs: [1, kValue.f16.positive.max + 1], result: [undefined] },\n    { inputs: [1, kValue.f16.negative.min - 1], result: [undefined] },\n  ] as const)\n  .fn(test => {\n    const toString = (data: readonly (undefined | number)[]): String[] => {\n      return data.map(d => (d !== undefined ? u32(d).toString() : 'undefined'));\n    };\n\n    const inputs = test.params.inputs;\n    const got = pack2x16float(inputs[0], inputs[1]);\n    const expect = test.params.result;\n\n    const got_str = toString(got);\n    const expect_str = toString(expect);\n\n    // Using strings of the outputs, so they can be easily sorted, since order of the results doesn't matter.\n    test.expect(\n      objectEquals(got_str.sort(), expect_str.sort()),\n      `pack2x16float(${inputs}) returned [${got_str}]. Expected [${expect_str}]`\n    );\n  });\n\ng.test('pack2x16snorm')\n  .paramsSimple([\n    // Normals\n    { inputs: [0, 0], result: 0x00000000 },\n    { inputs: [1, 0], result: 0x00007fff },\n    { inputs: [0, 1], result: 0x7fff0000 },\n    { inputs: [1, 1], result: 0x7fff7fff },\n    { inputs: [-1, -1], result: 0x80018001 },\n    { inputs: [10, 10], result: 0x7fff7fff },\n    { inputs: [-10, -10], result: 0x80018001 },\n    { inputs: [0.1, 0.1], result: 0x0ccd0ccd },\n    { inputs: [-0.1, -0.1], result: 0xf333f333 },\n    { inputs: [0.5, 0.5], result: 0x40004000 },\n    { inputs: [-0.5, -0.5], result: 0xc001c001 },\n    { inputs: [0.1, 0.5], result: 0x40000ccd },\n    { inputs: [-0.1, -0.5], result: 0xc001f333 },\n\n    // Subnormals\n    { inputs: [kValue.f32.positive.subnormal.max, 1], result: 0x7fff0000 },\n    { inputs: [kValue.f32.negative.subnormal.min, 1], result: 0x7fff0000 },\n  ] as const)\n  .fn(test => {\n    const inputs = test.params.inputs;\n    const got = pack2x16snorm(inputs[0], inputs[1]);\n    const expect = test.params.result;\n\n    test.expect(got === expect, `pack2x16snorm(${inputs}) returned ${got}. Expected ${expect}`);\n  });\n\ng.test('pack2x16unorm')\n  .paramsSimple([\n    // Normals\n    { inputs: [0, 0], result: 0x00000000 },\n    { inputs: [1, 0], result: 0x0000ffff },\n    { inputs: [0, 1], result: 0xffff0000 },\n    { inputs: [1, 1], result: 0xffffffff },\n    { inputs: [-1, -1], result: 0x00000000 },\n    { inputs: [0.1, 0.1], result: 0x199a199a },\n    { inputs: [0.5, 0.5], result: 0x80008000 },\n    { inputs: [0.1, 0.5], result: 0x8000199a },\n    { inputs: [10, 10], result: 0xffffffff },\n\n    // Subnormals\n    { inputs: [kValue.f32.positive.subnormal.max, 1], result: 0xffff0000 },\n  ] as const)\n  .fn(test => {\n    const inputs = test.params.inputs;\n    const got = pack2x16unorm(inputs[0], inputs[1]);\n    const expect = test.params.result;\n\n    test.expect(got === expect, `pack2x16unorm(${inputs}) returned ${got}. Expected ${expect}`);\n  });\n\ng.test('pack4x8snorm')\n  .paramsSimple([\n    // Normals\n    { inputs: [0, 0, 0, 0], result: 0x00000000 },\n    { inputs: [1, 0, 0, 0], result: 0x0000007f },\n    { inputs: [0, 1, 0, 0], result: 0x00007f00 },\n    { inputs: [0, 0, 1, 0], result: 0x007f0000 },\n    { inputs: [0, 0, 0, 1], result: 0x7f000000 },\n    { inputs: [1, 1, 1, 1], result: 0x7f7f7f7f },\n    { inputs: [10, 10, 10, 10], result: 0x7f7f7f7f },\n    { inputs: [-1, 0, 0, 0], result: 0x00000081 },\n    { inputs: [0, -1, 0, 0], result: 0x00008100 },\n    { inputs: [0, 0, -1, 0], result: 0x00810000 },\n    { inputs: [0, 0, 0, -1], result: 0x81000000 },\n    { inputs: [-1, -1, -1, -1], result: 0x81818181 },\n    { inputs: [-10, -10, -10, -10], result: 0x81818181 },\n    { inputs: [0.1, 0.1, 0.1, 0.1], result: 0x0d0d0d0d },\n    { inputs: [-0.1, -0.1, -0.1, -0.1], result: 0xf3f3f3f3 },\n    { inputs: [0.1, -0.1, 0.1, -0.1], result: 0xf30df30d },\n    { inputs: [0.5, 0.5, 0.5, 0.5], result: 0x40404040 },\n    { inputs: [-0.5, -0.5, -0.5, -0.5], result: 0xc1c1c1c1 },\n    { inputs: [-0.5, 0.5, -0.5, 0.5], result: 0x40c140c1 },\n    { inputs: [0.1, 0.5, 0.1, 0.5], result: 0x400d400d },\n    { inputs: [-0.1, -0.5, -0.1, -0.5], result: 0xc1f3c1f3 },\n\n    // Subnormals\n    { inputs: [kValue.f32.positive.subnormal.max, 1, 1, 1], result: 0x7f7f7f00 },\n    { inputs: [kValue.f32.negative.subnormal.min, 1, 1, 1], result: 0x7f7f7f00 },\n  ] as const)\n  .fn(test => {\n    const inputs = test.params.inputs;\n    const got = pack4x8snorm(inputs[0], inputs[1], inputs[2], inputs[3]);\n    const expect = test.params.result;\n\n    test.expect(got === expect, `pack4x8snorm(${inputs}) returned ${u32(got)}. Expected ${expect}`);\n  });\n\ng.test('pack4x8unorm')\n  .paramsSimple([\n    // Normals\n    { inputs: [0, 0, 0, 0], result: 0x00000000 },\n    { inputs: [1, 0, 0, 0], result: 0x000000ff },\n    { inputs: [0, 1, 0, 0], result: 0x0000ff00 },\n    { inputs: [0, 0, 1, 0], result: 0x00ff0000 },\n    { inputs: [0, 0, 0, 1], result: 0xff000000 },\n    { inputs: [1, 1, 1, 1], result: 0xffffffff },\n    { inputs: [10, 10, 10, 10], result: 0xffffffff },\n    { inputs: [-1, -1, -1, -1], result: 0x00000000 },\n    { inputs: [-10, -10, -10, -10], result: 0x00000000 },\n    { inputs: [0.1, 0.1, 0.1, 0.1], result: 0x1a1a1a1a },\n    { inputs: [0.5, 0.5, 0.5, 0.5], result: 0x80808080 },\n    { inputs: [0.1, 0.5, 0.1, 0.5], result: 0x801a801a },\n\n    // Subnormals\n    { inputs: [kValue.f32.positive.subnormal.max, 1, 1, 1], result: 0xffffff00 },\n  ] as const)\n  .fn(test => {\n    const inputs = test.params.inputs;\n    const got = pack4x8unorm(inputs[0], inputs[1], inputs[2], inputs[3]);\n    const expect = test.params.result;\n\n    test.expect(got === expect, `pack4x8unorm(${inputs}) returned ${got}. Expected ${expect}`);\n  });\n\nconst kRGB9E5UFloatCommonData = {\n  zero: /*        */ { encoded: 0b00000_000000000_000000000_000000000, rgb: [0, 0, 0] },\n  max: /*         */ { encoded: 0b11111_111111111_111111111_111111111, rgb: [65408, 65408, 65408] },\n  r1: /*          */ { encoded: 0b10000_000000000_000000000_100000000, rgb: [1, 0, 0] },\n  r2: /*          */ { encoded: 0b10001_000000000_000000000_100000000, rgb: [2, 0, 0] },\n  g1: /*          */ { encoded: 0b10000_000000000_100000000_000000000, rgb: [0, 1, 0] },\n  g2: /*          */ { encoded: 0b10001_000000000_100000000_000000000, rgb: [0, 2, 0] },\n  b1: /*          */ { encoded: 0b10000_100000000_000000000_000000000, rgb: [0, 0, 1] },\n  b2: /*          */ { encoded: 0b10001_100000000_000000000_000000000, rgb: [0, 0, 2] },\n  r1_g1_b1: /*    */ { encoded: 0b10000_100000000_100000000_100000000, rgb: [1, 1, 1] },\n  r1_g2_b1: /*    */ { encoded: 0b10001_010000000_100000000_010000000, rgb: [1, 2, 1] },\n  r4_g8_b2: /*    */ { encoded: 0b10011_001000000_100000000_010000000, rgb: [4, 8, 2] },\n  r1_g2_b3: /*    */ { encoded: 0b10001_110000000_100000000_010000000, rgb: [1, 2, 3] },\n  r128_g3968_b65408: { encoded: 0b11111_111111111_000011111_000000001, rgb: [128, 3968, 65408] },\n  r128_g1984_b30016: { encoded: 0b11110_111010101_000011111_000000010, rgb: [128, 1984, 30016] },\n  r_5_g_25_b_8: /**/ { encoded: 0b10011_100000000_000001000_000010000, rgb: [0.5, 0.25, 8] },\n};\n\nconst kPackRGB9E5UFloatData = mergeParams(kRGB9E5UFloatCommonData, {\n  clamp_max: /*   */ { encoded: 0b11111_111111111_111111111_111111111, rgb: [1e7, 1e10, 1e50] },\n  subnormals: /*  */ { encoded: 0b00000_000000000_000000000_000000000, rgb: [1e-10, 1e-20, 1e-30] },\n  r57423_g54_b3478: { encoded: 0b11111_000011011_000000000_111000001, rgb: [57423, 54, 3478] },\n  r6852_g3571_b2356: { encoded: 0b11100_010010011_011011111_110101100, rgb: [6852, 3571, 2356] },\n  r68312_g12_b8123: { encoded: 0b11111_000111111_000000000_111111111, rgb: [68312, 12, 8123] },\n  r7321_g846_b32: { encoded: 0b11100_000000010_000110101_111001010, rgb: [7321, 846, 32] },\n});\n\nfunction bits5_9_9_9(x: number) {\n  const s = (x >>> 0).toString(2).padStart(32, '0');\n  return `${s.slice(0, 5)}_${s.slice(5, 14)}_${s.slice(14, 23)}_${s.slice(23, 32)}`;\n}\n\ng.test('packRGB9E5UFloat')\n  .params(u => u.combine('case', keysOf(kPackRGB9E5UFloatData)))\n  .fn(test => {\n    const c = kPackRGB9E5UFloatData[test.params.case];\n    const got = packRGB9E5UFloat(c.rgb[0], c.rgb[1], c.rgb[2]);\n    const expect = c.encoded;\n\n    test.expect(\n      got === expect,\n      `packRGB9E5UFloat(${c.rgb}) returned ${bits5_9_9_9(got)}. Expected ${bits5_9_9_9(expect)}`\n    );\n  });\n\ng.test('unpackRGB9E5UFloat')\n  .params(u => u.combine('case', keysOf(kRGB9E5UFloatCommonData)))\n  .fn(test => {\n    const c = kRGB9E5UFloatCommonData[test.params.case];\n    const got = unpackRGB9E5UFloat(c.encoded);\n    const expect = c.rgb;\n\n    test.expect(\n      got.R === expect[0] && got.G === expect[1] && got.B === expect[2],\n      `unpackRGB9E5UFloat(${bits5_9_9_9(c.encoded)} ` +\n        `returned ${got.R},${got.G},${got.B}. Expected ${expect}`\n    );\n  });\n"],"mappings":"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"}