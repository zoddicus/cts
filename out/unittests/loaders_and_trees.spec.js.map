{"version":3,"file":"loaders_and_trees.spec.js","names":["description","makeTestGroup","TestFileLoader","Logger","parseQuery","TestQuerySingleCase","TestQueryMultiCase","TestQueryMultiTest","TestQueryMultiFile","makeTestGroupForUnitTesting","assert","objectEquals","UnitTest","listingData","suite1","file","readme","suite2","specsData","g","test","fn","desc","paramsSimple","x","a","b","_c","t","debug","fail","FakeTestFileLoader","listing","suite","Promise","resolve","import","path","LoadingTest","loader","events","isListenersAdded","collectEvents","addEventListener","ev","push","data","url","load","query","Array","from","loadCases","loadNames","map","c","toString","shouldReject","expect","length","s","runTestcase","log","testcases","i","expectations","status","logs","name","rec","res","record","run","results","get","timems","undefined","l","JSON","stringify","overrideDebugMode","startsWith","indexOf","zedCases","zedExpectationsSkipA1B2","expectation","zedExpectationsSkipA1B0","zedExpectationsSkipB3","zedExpectationsSkipA1","zedExpectationsSkipZed","suite1Cases","expectationsSkipAllInBaz","expectationsSkipAllInFoo","expectationsSkipAll","suite2Cases","expectedFailures","testIterateCollapsed","alwaysExpandThroughLevel","expectedResult","includeEmptySubtrees","treePromise","loadTree","tree","actualIter","iterateCollapsedNodes","testingTODOs","actual","subtreeCounts","nodesWithTODO"],"sources":["../../src/unittests/loaders_and_trees.spec.ts"],"sourcesContent":["export const description = `\nTests for queries/filtering, loading, and running.\n`;\n\nimport { Fixture } from '../common/framework/fixture.js';\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { TestFileLoader, SpecFile } from '../common/internal/file_loader.js';\nimport { Logger } from '../common/internal/logging/logger.js';\nimport { Status } from '../common/internal/logging/result.js';\nimport { parseQuery } from '../common/internal/query/parseQuery.js';\nimport {\n  TestQuery,\n  TestQuerySingleCase,\n  TestQueryMultiCase,\n  TestQueryMultiTest,\n  TestQueryMultiFile,\n  TestQueryWithExpectation,\n} from '../common/internal/query/query.js';\nimport { makeTestGroupForUnitTesting } from '../common/internal/test_group.js';\nimport { TestSuiteListing, TestSuiteListingEntry } from '../common/internal/test_suite_listing.js';\nimport { ExpandThroughLevel, TestTreeLeaf } from '../common/internal/tree.js';\nimport { assert, objectEquals } from '../common/util/util.js';\n\nimport { UnitTest } from './unit_test.js';\n\nconst listingData: { [k: string]: TestSuiteListingEntry[] } = {\n  suite1: [\n    { file: [], readme: 'desc 1a' },\n    { file: ['foo'] },\n    { file: ['bar'], readme: 'desc 1h' },\n    { file: ['bar', 'biz'] },\n    { file: ['bar', 'buzz', 'buzz'] },\n    { file: ['baz'] },\n    { file: ['empty'], readme: 'desc 1z' }, // directory with no files\n  ],\n  suite2: [{ file: [], readme: 'desc 2a' }, { file: ['foof'] }],\n};\n\nconst specsData: { [k: string]: SpecFile } = {\n  'suite1/foo.spec.js': {\n    description: 'desc 1b',\n    g: (() => {\n      const g = makeTestGroupForUnitTesting(UnitTest);\n      g.test('hello').fn(() => {});\n      g.test('bonjour').fn(() => {});\n      g.test('hola')\n        .desc('TODO TODO')\n        .fn(() => {});\n      return g;\n    })(),\n  },\n  'suite1/bar/biz.spec.js': {\n    description: 'desc 1f TODO TODO',\n    g: makeTestGroupForUnitTesting(UnitTest), // file with no tests\n  },\n  'suite1/bar/buzz/buzz.spec.js': {\n    description: 'desc 1d TODO',\n    g: (() => {\n      const g = makeTestGroupForUnitTesting(UnitTest);\n      g.test('zap').fn(() => {});\n      return g;\n    })(),\n  },\n  'suite1/baz.spec.js': {\n    description: 'desc 1e',\n    g: (() => {\n      const g = makeTestGroupForUnitTesting(UnitTest);\n      g.test('wye')\n        .paramsSimple([{}, { x: 1 }])\n        .fn(() => {});\n      g.test('zed')\n        .paramsSimple([\n          { a: 1, b: 2, _c: 0 },\n          { b: 3, a: 1, _c: 0 },\n        ])\n        .fn(() => {});\n      return g;\n    })(),\n  },\n  'suite2/foof.spec.js': {\n    description: 'desc 2b',\n    g: (() => {\n      const g = makeTestGroupForUnitTesting(UnitTest);\n      g.test('blah').fn(t => {\n        t.debug('OK');\n      });\n      g.test('bleh')\n        .paramsSimple([{ a: 1 }])\n        .fn(t => {\n          t.debug('OK');\n          t.debug('OK');\n        });\n      g.test('bluh,a').fn(t => {\n        t.fail('goodbye');\n      });\n      return g;\n    })(),\n  },\n};\n\nclass FakeTestFileLoader extends TestFileLoader {\n  listing(suite: string): Promise<TestSuiteListing> {\n    return Promise.resolve(listingData[suite]);\n  }\n\n  import(path: string): Promise<SpecFile> {\n    assert(path in specsData, '[test] mock file ' + path + ' does not exist');\n    return Promise.resolve(specsData[path]);\n  }\n}\n\nclass LoadingTest extends UnitTest {\n  loader: FakeTestFileLoader = new FakeTestFileLoader();\n  events: (string | null)[] = [];\n  private isListenersAdded = false;\n\n  collectEvents(): void {\n    this.events = [];\n    if (!this.isListenersAdded) {\n      this.isListenersAdded = true;\n      this.loader.addEventListener('import', ev => this.events.push(ev.data.url));\n      this.loader.addEventListener('finish', ev => this.events.push(null));\n    }\n  }\n\n  async load(query: string): Promise<TestTreeLeaf[]> {\n    return Array.from(await this.loader.loadCases(parseQuery(query)));\n  }\n\n  async loadNames(query: string): Promise<string[]> {\n    return (await this.load(query)).map(c => c.query.toString());\n  }\n}\n\nexport const g = makeTestGroup(LoadingTest);\n\ng.test('suite').fn(t => {\n  t.shouldReject('Error', t.load('suite1'));\n  t.shouldReject('Error', t.load('suite1:'));\n});\n\ng.test('group').fn(async t => {\n  t.collectEvents();\n  t.expect((await t.load('suite1:*')).length === 8);\n  t.expect(\n    objectEquals(t.events, [\n      'suite1/foo.spec.js',\n      'suite1/bar/biz.spec.js',\n      'suite1/bar/buzz/buzz.spec.js',\n      'suite1/baz.spec.js',\n      null,\n    ])\n  );\n\n  t.collectEvents();\n  t.expect((await t.load('suite1:foo,*')).length === 3); // x:foo,* matches x:foo:\n  t.expect(objectEquals(t.events, ['suite1/foo.spec.js', null]));\n\n  t.collectEvents();\n  t.expect((await t.load('suite1:bar,*')).length === 1);\n  t.expect(\n    objectEquals(t.events, ['suite1/bar/biz.spec.js', 'suite1/bar/buzz/buzz.spec.js', null])\n  );\n\n  t.collectEvents();\n  t.expect((await t.load('suite1:bar,buzz,buzz,*')).length === 1);\n  t.expect(objectEquals(t.events, ['suite1/bar/buzz/buzz.spec.js', null]));\n\n  t.shouldReject('Error', t.load('suite1:f*'));\n\n  {\n    const s = new TestQueryMultiFile('suite1', ['bar', 'buzz']).toString();\n    t.collectEvents();\n    t.expect((await t.load(s)).length === 1);\n    t.expect(objectEquals(t.events, ['suite1/bar/buzz/buzz.spec.js', null]));\n  }\n});\n\ng.test('test').fn(async t => {\n  t.shouldReject('Error', t.load('suite1::'));\n  t.shouldReject('Error', t.load('suite1:bar:'));\n  t.shouldReject('Error', t.load('suite1:bar,:'));\n\n  t.shouldReject('Error', t.load('suite1::*'));\n  t.shouldReject('Error', t.load('suite1:bar,:*'));\n  t.shouldReject('Error', t.load('suite1:bar:*'));\n\n  t.expect((await t.load('suite1:foo:*')).length === 3);\n  t.expect((await t.load('suite1:bar,buzz,buzz:*')).length === 1);\n  t.expect((await t.load('suite1:baz:*')).length === 4);\n\n  t.expect((await t.load('suite2:foof:bluh,*')).length === 1);\n  t.expect((await t.load('suite2:foof:bluh,a,*')).length === 1);\n\n  {\n    const s = new TestQueryMultiTest('suite2', ['foof'], ['bluh']).toString();\n    t.expect((await t.load(s)).length === 1);\n  }\n});\n\ng.test('case').fn(async t => {\n  t.shouldReject('Error', t.load('suite1:foo::'));\n  t.shouldReject('Error', t.load('suite1:bar:zed,:'));\n\n  t.shouldReject('Error', t.load('suite1:foo:h*'));\n\n  t.shouldReject('Error', t.load('suite1:foo::*'));\n  t.shouldReject('Error', t.load('suite1:baz::*'));\n  t.shouldReject('Error', t.load('suite1:baz:zed,:*'));\n\n  t.shouldReject('Error', t.load('suite1:baz:zed:'));\n  t.shouldReject('Error', t.load('suite1:baz:zed:a=1;b=2*'));\n  t.shouldReject('Error', t.load('suite1:baz:zed:a=1;b=2;'));\n  t.shouldReject('SyntaxError', t.load('suite1:baz:zed:a=1;b=2,')); // tries to parse '2,' as JSON\n  t.shouldReject('Error', t.load('suite1:baz:zed:a=1,b=2')); // '=' not allowed in value '1,b=2'\n  t.shouldReject('Error', t.load('suite1:baz:zed:b=2*'));\n  t.shouldReject('Error', t.load('suite1:baz:zed:b=2;a=1;_c=0'));\n  t.shouldReject('Error', t.load('suite1:baz:zed:a=1,*'));\n\n  t.expect((await t.load('suite1:baz:zed:*')).length === 2);\n  t.expect((await t.load('suite1:baz:zed:a=1;*')).length === 2);\n  t.expect((await t.load('suite1:baz:zed:a=1;b=2')).length === 1);\n  t.expect((await t.load('suite1:baz:zed:a=1;b=2;*')).length === 1);\n  t.expect((await t.load('suite1:baz:zed:b=2;*')).length === 1);\n  t.expect((await t.load('suite1:baz:zed:b=2;a=1')).length === 1);\n  t.expect((await t.load('suite1:baz:zed:b=2;a=1;*')).length === 1);\n  t.expect((await t.load('suite1:baz:zed:b=3;a=1')).length === 1);\n  t.expect((await t.load('suite1:baz:zed:a=1;b=3')).length === 1);\n  t.expect((await t.load('suite1:foo:hello:')).length === 1);\n\n  {\n    const s = new TestQueryMultiCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }).toString();\n    t.expect((await t.load(s)).length === 1);\n  }\n  {\n    const s = new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }).toString();\n    t.expect((await t.load(s)).length === 1);\n  }\n});\n\nasync function runTestcase(\n  t: Fixture,\n  log: Logger,\n  testcases: TestTreeLeaf[],\n  i: number,\n  query: TestQuery,\n  expectations: TestQueryWithExpectation[],\n  status: Status,\n  logs: (s: string[]) => boolean\n) {\n  t.expect(objectEquals(testcases[i].query, query));\n  const name = testcases[i].query.toString();\n  const [rec, res] = log.record(name);\n  await testcases[i].run(rec, expectations);\n\n  t.expect(log.results.get(name) === res);\n  t.expect(res.status === status);\n  t.expect(res.timems >= 0);\n  assert(res.logs !== undefined); // only undefined while pending\n  t.expect(logs(res.logs.map(l => JSON.stringify(l))));\n}\n\ng.test('end2end').fn(async t => {\n  const l = await t.load('suite2:foof:*');\n  assert(l.length === 3, 'listing length');\n\n  const log = new Logger({ overrideDebugMode: true });\n\n  await runTestcase(\n    t,\n    log,\n    l,\n    0,\n    new TestQuerySingleCase('suite2', ['foof'], ['blah'], {}),\n    [],\n    'pass',\n    logs => objectEquals(logs, ['\"DEBUG: OK\"'])\n  );\n  await runTestcase(\n    t,\n    log,\n    l,\n    1,\n    new TestQuerySingleCase('suite2', ['foof'], ['bleh'], { a: 1 }),\n    [],\n    'pass',\n    logs => objectEquals(logs, ['\"DEBUG: OK\"', '\"DEBUG: OK\"'])\n  );\n  await runTestcase(\n    t,\n    log,\n    l,\n    2,\n    new TestQuerySingleCase('suite2', ['foof'], ['bluh', 'a'], {}),\n    [],\n    'fail',\n    logs =>\n      logs.length === 1 &&\n      logs[0].startsWith('\"EXPECTATION FAILED: goodbye\\\\n') &&\n      logs[0].indexOf('loaders_and_trees.spec.') !== -1\n  );\n});\n\ng.test('expectations,single_case').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const zedCases = await t.load('suite1:baz:zed:*');\n\n  // Single-case. Covers one case.\n  const zedExpectationsSkipA1B2 = [\n    {\n      query: new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    0,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }),\n    zedExpectationsSkipA1B2,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    1,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 3 }),\n    zedExpectationsSkipA1B2,\n    'pass',\n    logs => logs.length === 0\n  );\n});\n\ng.test('expectations,single_case,none').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const zedCases = await t.load('suite1:baz:zed:*');\n  // Single-case. Doesn't cover any cases.\n  const zedExpectationsSkipA1B0 = [\n    {\n      query: new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 0 }),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    0,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }),\n    zedExpectationsSkipA1B0,\n    'pass',\n    logs => logs.length === 0\n  );\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    1,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 3 }),\n    zedExpectationsSkipA1B0,\n    'pass',\n    logs => logs.length === 0\n  );\n});\n\ng.test('expectations,multi_case').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const zedCases = await t.load('suite1:baz:zed:*');\n  // Multi-case, not all cases covered.\n  const zedExpectationsSkipB3 = [\n    {\n      query: new TestQueryMultiCase('suite1', ['baz'], ['zed'], { b: 3 }),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    0,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }),\n    zedExpectationsSkipB3,\n    'pass',\n    logs => logs.length === 0\n  );\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    1,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 3 }),\n    zedExpectationsSkipB3,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n});\n\ng.test('expectations,multi_case_all').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const zedCases = await t.load('suite1:baz:zed:*');\n  // Multi-case, all cases covered.\n  const zedExpectationsSkipA1 = [\n    {\n      query: new TestQueryMultiCase('suite1', ['baz'], ['zed'], { a: 1 }),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    0,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }),\n    zedExpectationsSkipA1,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    1,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 3 }),\n    zedExpectationsSkipA1,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n});\n\ng.test('expectations,multi_case_none').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const zedCases = await t.load('suite1:baz:zed:*');\n  // Multi-case, no params, all cases covered.\n  const zedExpectationsSkipZed = [\n    {\n      query: new TestQueryMultiCase('suite1', ['baz'], ['zed'], {}),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    0,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }),\n    zedExpectationsSkipZed,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    1,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 3 }),\n    zedExpectationsSkipZed,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n});\n\ng.test('expectations,multi_test').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const suite1Cases = await t.load('suite1:*');\n\n  // Multi-test, all cases covered.\n  const expectationsSkipAllInBaz = [\n    {\n      query: new TestQueryMultiTest('suite1', ['baz'], []),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    suite1Cases,\n    4,\n    new TestQuerySingleCase('suite1', ['baz'], ['wye'], {}),\n    expectationsSkipAllInBaz,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n\n  await runTestcase(\n    t,\n    log,\n    suite1Cases,\n    6,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }),\n    expectationsSkipAllInBaz,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n});\n\ng.test('expectations,multi_test,none').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const suite1Cases = await t.load('suite1:*');\n\n  // Multi-test, no cases covered.\n  const expectationsSkipAllInFoo = [\n    {\n      query: new TestQueryMultiTest('suite1', ['foo'], []),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    suite1Cases,\n    4,\n    new TestQuerySingleCase('suite1', ['baz'], ['wye'], {}),\n    expectationsSkipAllInFoo,\n    'pass',\n    logs => logs.length === 0\n  );\n\n  await runTestcase(\n    t,\n    log,\n    suite1Cases,\n    6,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }),\n    expectationsSkipAllInFoo,\n    'pass',\n    logs => logs.length === 0\n  );\n});\n\ng.test('expectations,multi_file').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const suite1Cases = await t.load('suite1:*');\n\n  // Multi-file\n  const expectationsSkipAll = [\n    {\n      query: new TestQueryMultiFile('suite1', []),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    suite1Cases,\n    0,\n    new TestQuerySingleCase('suite1', ['foo'], ['hello'], {}),\n    expectationsSkipAll,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n\n  await runTestcase(\n    t,\n    log,\n    suite1Cases,\n    3,\n    new TestQuerySingleCase('suite1', ['bar', 'buzz', 'buzz'], ['zap'], {}),\n    expectationsSkipAll,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n});\n\ng.test('expectations,catches_failure').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const suite2Cases = await t.load('suite2:*');\n\n  // Catches failure\n  const expectedFailures = [\n    {\n      query: new TestQueryMultiCase('suite2', ['foof'], ['bluh', 'a'], {}),\n      expectation: 'fail' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    suite2Cases,\n    0,\n    new TestQuerySingleCase('suite2', ['foof'], ['blah'], {}),\n    expectedFailures,\n    'pass',\n    logs => objectEquals(logs, ['\"DEBUG: OK\"'])\n  );\n\n  // Status is passed, but failure is logged.\n  await runTestcase(\n    t,\n    log,\n    suite2Cases,\n    2,\n    new TestQuerySingleCase('suite2', ['foof'], ['bluh', 'a'], {}),\n    expectedFailures,\n    'pass',\n    logs => logs.length === 1 && logs[0].startsWith('\"EXPECTATION FAILED: goodbye\\\\n')\n  );\n});\n\ng.test('expectations,skip_dominates_failure').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const suite2Cases = await t.load('suite2:*');\n\n  const expectedFailures = [\n    {\n      query: new TestQueryMultiCase('suite2', ['foof'], ['bluh', 'a'], {}),\n      expectation: 'fail' as const,\n    },\n    {\n      query: new TestQueryMultiCase('suite2', ['foof'], ['bluh', 'a'], {}),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    suite2Cases,\n    2,\n    new TestQuerySingleCase('suite2', ['foof'], ['bluh', 'a'], {}),\n    expectedFailures,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n});\n\ng.test('expectations,skip_inside_failure').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const suite2Cases = await t.load('suite2:*');\n\n  const expectedFailures = [\n    {\n      query: new TestQueryMultiFile('suite2', []),\n      expectation: 'fail' as const,\n    },\n    {\n      query: new TestQueryMultiCase('suite2', ['foof'], ['blah'], {}),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    suite2Cases,\n    0,\n    new TestQuerySingleCase('suite2', ['foof'], ['blah'], {}),\n    expectedFailures,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n\n  await runTestcase(\n    t,\n    log,\n    suite2Cases,\n    2,\n    new TestQuerySingleCase('suite2', ['foof'], ['bluh', 'a'], {}),\n    expectedFailures,\n    'pass',\n    logs => logs.length === 1 && logs[0].startsWith('\"EXPECTATION FAILED: goodbye\\\\n')\n  );\n});\n\nasync function testIterateCollapsed(\n  t: LoadingTest,\n  alwaysExpandThroughLevel: ExpandThroughLevel,\n  expectations: string[],\n  expectedResult: 'throws' | string[] | [string, number | undefined][],\n  includeEmptySubtrees = false\n) {\n  t.debug(`expandThrough=${alwaysExpandThroughLevel} expectations=${expectations}`);\n  const treePromise = t.loader.loadTree(new TestQueryMultiFile('suite1', []), expectations);\n  if (expectedResult === 'throws') {\n    t.shouldReject('Error', treePromise, 'loadTree should have thrown Error');\n    return;\n  }\n  const tree = await treePromise;\n  const actualIter = tree.iterateCollapsedNodes({\n    includeEmptySubtrees,\n    alwaysExpandThroughLevel,\n  });\n  const testingTODOs = expectedResult.length > 0 && expectedResult[0] instanceof Array;\n  const actual = Array.from(actualIter, ({ query, subtreeCounts }) =>\n    testingTODOs ? [query.toString(), subtreeCounts?.nodesWithTODO] : query.toString()\n  );\n  if (!objectEquals(actual, expectedResult)) {\n    t.fail(\n      `iterateCollapsed failed:\n  got ${JSON.stringify(actual)}\n  exp ${JSON.stringify(expectedResult)}\n${tree.toString()}`\n    );\n  }\n}\n\ng.test('print').fn(async t => {\n  const tree = await t.loader.loadTree(new TestQueryMultiFile('suite1', []));\n  tree.toString();\n});\n\ng.test('iterateCollapsed').fn(async t => {\n  await testIterateCollapsed(\n    t,\n    1,\n    [],\n    [\n      ['suite1:foo:*', 1], // to-do propagated up from foo:hola\n      ['suite1:bar,buzz,buzz:*', 1], // to-do in file description\n      ['suite1:baz:*', 0],\n    ]\n  );\n  await testIterateCollapsed(\n    t,\n    2,\n    [],\n    [\n      ['suite1:foo:hello:*', 0],\n      ['suite1:foo:bonjour:*', 0],\n      ['suite1:foo:hola:*', 1], // to-do in test description\n      ['suite1:bar,buzz,buzz:zap:*', 0],\n      ['suite1:baz:wye:*', 0],\n      ['suite1:baz:zed:*', 0],\n    ]\n  );\n  await testIterateCollapsed(\n    t,\n    3,\n    [],\n    [\n      ['suite1:foo:hello:', undefined],\n      ['suite1:foo:bonjour:', undefined],\n      ['suite1:foo:hola:', undefined],\n      ['suite1:bar,buzz,buzz:zap:', undefined],\n      ['suite1:baz:wye:', undefined],\n      ['suite1:baz:wye:x=1', undefined],\n      ['suite1:baz:zed:a=1;b=2', undefined],\n      ['suite1:baz:zed:b=3;a=1', undefined],\n    ]\n  );\n\n  // Expectations lists that have no effect\n  await testIterateCollapsed(\n    t,\n    1,\n    ['suite1:foo:*'],\n    ['suite1:foo:*', 'suite1:bar,buzz,buzz:*', 'suite1:baz:*']\n  );\n  await testIterateCollapsed(\n    t,\n    1,\n    ['suite1:bar,buzz,buzz:*'],\n    ['suite1:foo:*', 'suite1:bar,buzz,buzz:*', 'suite1:baz:*']\n  );\n  await testIterateCollapsed(\n    t,\n    2,\n    ['suite1:baz:wye:*'],\n    [\n      'suite1:foo:hello:*',\n      'suite1:foo:bonjour:*',\n      'suite1:foo:hola:*',\n      'suite1:bar,buzz,buzz:zap:*',\n      'suite1:baz:wye:*',\n      'suite1:baz:zed:*',\n    ]\n  );\n  // Test with includeEmptySubtrees=true\n  await testIterateCollapsed(\n    t,\n    1,\n    [],\n    [\n      'suite1:foo:*',\n      'suite1:bar,biz:*',\n      'suite1:bar,buzz,buzz:*',\n      'suite1:baz:*',\n      'suite1:empty,*',\n    ],\n    true\n  );\n  await testIterateCollapsed(\n    t,\n    2,\n    [],\n    [\n      'suite1:foo:hello:*',\n      'suite1:foo:bonjour:*',\n      'suite1:foo:hola:*',\n      'suite1:bar,biz:*',\n      'suite1:bar,buzz,buzz:zap:*',\n      'suite1:baz:wye:*',\n      'suite1:baz:zed:*',\n      'suite1:empty,*',\n    ],\n    true\n  );\n\n  // Expectations lists that have some effect\n  await testIterateCollapsed(\n    t,\n    1,\n    ['suite1:baz:wye:*'],\n    ['suite1:foo:*', 'suite1:bar,buzz,buzz:*', 'suite1:baz:wye:*', 'suite1:baz:zed,*']\n  );\n  await testIterateCollapsed(\n    t,\n    1,\n    ['suite1:baz:zed:*'],\n    ['suite1:foo:*', 'suite1:bar,buzz,buzz:*', 'suite1:baz:wye,*', 'suite1:baz:zed:*']\n  );\n  await testIterateCollapsed(\n    t,\n    1,\n    ['suite1:baz:wye:*', 'suite1:baz:zed:*'],\n    ['suite1:foo:*', 'suite1:bar,buzz,buzz:*', 'suite1:baz:wye:*', 'suite1:baz:zed:*']\n  );\n  await testIterateCollapsed(\n    t,\n    1,\n    ['suite1:baz:wye:'],\n    [\n      'suite1:foo:*',\n      'suite1:bar,buzz,buzz:*',\n      'suite1:baz:wye:',\n      'suite1:baz:wye:x=1;*',\n      'suite1:baz:zed,*',\n    ]\n  );\n  await testIterateCollapsed(\n    t,\n    1,\n    ['suite1:baz:wye:x=1'],\n    [\n      'suite1:foo:*',\n      'suite1:bar,buzz,buzz:*',\n      'suite1:baz:wye:',\n      'suite1:baz:wye:x=1',\n      'suite1:baz:zed,*',\n    ]\n  );\n  await testIterateCollapsed(\n    t,\n    1,\n    ['suite1:foo:*', 'suite1:baz:wye:'],\n    [\n      'suite1:foo:*',\n      'suite1:bar,buzz,buzz:*',\n      'suite1:baz:wye:',\n      'suite1:baz:wye:x=1;*',\n      'suite1:baz:zed,*',\n    ]\n  );\n  await testIterateCollapsed(\n    t,\n    2,\n    ['suite1:baz:wye:'],\n    [\n      'suite1:foo:hello:*',\n      'suite1:foo:bonjour:*',\n      'suite1:foo:hola:*',\n      'suite1:bar,buzz,buzz:zap:*',\n      'suite1:baz:wye:',\n      'suite1:baz:wye:x=1;*',\n      'suite1:baz:zed:*',\n    ]\n  );\n  await testIterateCollapsed(\n    t,\n    2,\n    ['suite1:baz:wye:x=1'],\n    [\n      'suite1:foo:hello:*',\n      'suite1:foo:bonjour:*',\n      'suite1:foo:hola:*',\n      'suite1:bar,buzz,buzz:zap:*',\n      'suite1:baz:wye:',\n      'suite1:baz:wye:x=1',\n      'suite1:baz:zed:*',\n    ]\n  );\n  await testIterateCollapsed(\n    t,\n    2,\n    ['suite1:foo:hello:*', 'suite1:baz:wye:'],\n    [\n      'suite1:foo:hello:*',\n      'suite1:foo:bonjour:*',\n      'suite1:foo:hola:*',\n      'suite1:bar,buzz,buzz:zap:*',\n      'suite1:baz:wye:',\n      'suite1:baz:wye:x=1;*',\n      'suite1:baz:zed:*',\n    ]\n  );\n\n  // Invalid expectation queries\n  await testIterateCollapsed(t, 1, ['*'], 'throws');\n  await testIterateCollapsed(t, 1, ['garbage'], 'throws');\n  await testIterateCollapsed(t, 1, ['garbage*'], 'throws');\n  await testIterateCollapsed(t, 1, ['suite1*'], 'throws');\n  await testIterateCollapsed(t, 1, ['suite1:foo*'], 'throws');\n  await testIterateCollapsed(t, 1, ['suite1:foo:he*'], 'throws');\n\n  // Valid expectation queries but they don't match anything\n  await testIterateCollapsed(t, 1, ['garbage:*'], 'throws');\n  await testIterateCollapsed(t, 1, ['suite1:doesntexist:*'], 'throws');\n  await testIterateCollapsed(t, 1, ['suite2:foo:*'], 'throws');\n  // Can't expand subqueries bigger than one file.\n  await testIterateCollapsed(t, 1, ['suite1:*'], 'throws');\n  await testIterateCollapsed(t, 1, ['suite1:bar,*'], 'throws');\n  await testIterateCollapsed(t, 1, ['suite1:*'], 'throws');\n  await testIterateCollapsed(t, 1, ['suite1:bar:hello,*'], 'throws');\n  await testIterateCollapsed(t, 1, ['suite1:baz,*'], 'throws');\n});\n"],"mappings":"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"}