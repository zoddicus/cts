{"version":3,"file":"metadata.js","names":["assert","loadMetadataForSuite","suiteDir","require","fs","metadataFile","existsSync","metadata","JSON","parse","readFileSync"],"sources":["../../../src/common/framework/metadata.ts"],"sourcesContent":["import { assert } from '../util/util.js';\n\n/** Metadata about tests (that can't be derived at runtime). */\nexport type TestMetadata = {\n  /**\n   * Estimated average time-per-subcase, in milliseconds.\n   * This is used to determine chunking granularity when exporting to WPT with\n   * chunking enabled (like out-wpt/cts-chunked2sec.https.html).\n   */\n  subcaseMS: number;\n};\n\nexport type TestMetadataListing = {\n  [testQuery: string]: TestMetadata;\n};\n\nexport function loadMetadataForSuite(suiteDir: string): TestMetadataListing | null {\n  assert(typeof require !== 'undefined', 'loadMetadataForSuite is only implemented on Node');\n  /* eslint-disable-next-line n/no-restricted-require */\n  const fs = require('fs');\n\n  const metadataFile = `${suiteDir}/listing_meta.json`;\n  if (!fs.existsSync(metadataFile)) {\n    return null;\n  }\n\n  const metadata: TestMetadataListing = JSON.parse(fs.readFileSync(metadataFile, 'utf8'));\n  return metadata;\n}\n"],"mappings":";;GAAA,SAASA,MAAM,QAAQ,iBAAiB,CAAC,CAEzC;;;;;;;;;;;;;;AAcA,OAAO,SAASC,oBAAoBA,CAACC,QAAgB,EAA8B;EACjFF,MAAM,CAAC,OAAOG,OAAO,KAAK,WAAW,EAAE,kDAAkD,CAAC;;EAE1F,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAI,CAAC;;EAExB,MAAME,YAAY,GAAI,GAAEH,QAAS,oBAAmB;EACpD,IAAI,CAACE,EAAE,CAACE,UAAU,CAACD,YAAY,CAAC,EAAE;IAChC,OAAO,IAAI;EACb;;EAEA,MAAME,QAA6B,GAAGC,IAAI,CAACC,KAAK,CAACL,EAAE,CAACM,YAAY,CAACL,YAAY,EAAE,MAAM,CAAC,CAAC;EACvF,OAAOE,QAAQ;AACjB"}