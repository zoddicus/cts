{"version":3,"file":"dev_server.js","names":["fs","os","path","babel","chokidar","express","morgan","portfinder","serveIndex","makeListing","process","env","STANDALONE_DEV_SERVER","usage","rc","console","error","exit","srcDir","resolve","__dirname","babelConfig","require","cache","sourceMaps","listingCache","Map","compileCache","log","watcher","watch","persistent","dirtyCompileCache","absPath","stats","relPath","relative","undefined","isFile","endsWith","tsUrl","has","debug","delete","dirtyListingAndCompileCache","segments","split","sep","listingChange","extname","basename","length","suite","on","app","use","_req","res","next","header","static","get","req","params","setHeader","send","listing","result","JSON","stringify","set","err","jsUrl","url","replace","join","existsSync","transformFileAsync","code","Error","host","argv","kPortFinderStart","port","getPortPromise","listen","iface","Object","values","networkInterfaces","details","family","address"],"sources":["../../../src/common/tools/dev_server.ts"],"sourcesContent":["import * as fs from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\n\nimport * as babel from '@babel/core';\nimport * as chokidar from 'chokidar';\nimport * as express from 'express';\nimport * as morgan from 'morgan';\nimport * as portfinder from 'portfinder';\nimport * as serveIndex from 'serve-index';\n\nimport { makeListing } from './crawl.js';\n\n// Make sure that makeListing doesn't cache imported spec files. See crawl().\nprocess.env.STANDALONE_DEV_SERVER = '1';\n\nfunction usage(rc: number): void {\n  console.error(`\\\nUsage:\n  tools/dev_server\n  tools/dev_server 0.0.0.0\n  npm start\n  npm start 0.0.0.0\n\nBy default, serves on localhost only. If the argument 0.0.0.0 is passed, serves on all interfaces.\n`);\n  process.exit(rc);\n}\n\nconst srcDir = path.resolve(__dirname, '../../');\n\n// Import the project's babel.config.js. We'll use the same config for the runtime compiler.\nconst babelConfig = {\n  ...require(path.resolve(srcDir, '../babel.config.js'))({\n    cache: () => {\n      /* not used */\n    },\n  }),\n  sourceMaps: 'inline',\n};\n\n// Caches for the generated listing file and compiled TS sources to speed up reloads.\n// Keyed by suite name\nconst listingCache = new Map<string, string>();\n// Keyed by the path to the .ts file, without src/\nconst compileCache = new Map<string, string>();\n\nconsole.log('Watching changes in', srcDir);\nconst watcher = chokidar.watch(srcDir, {\n  persistent: true,\n});\n\n/**\n * Handler to dirty the compile cache for changed .ts files.\n */\nfunction dirtyCompileCache(absPath: string, stats?: fs.Stats) {\n  const relPath = path.relative(srcDir, absPath);\n  if ((stats === undefined || stats.isFile()) && relPath.endsWith('.ts')) {\n    const tsUrl = relPath;\n    if (compileCache.has(tsUrl)) {\n      console.debug('Dirtying compile cache', tsUrl);\n    }\n    compileCache.delete(tsUrl);\n  }\n}\n\n/**\n * Handler to dirty the listing cache for:\n *  - Directory changes\n *  - .spec.ts changes\n *  - README.txt changes\n * Also dirties the compile cache for changed files.\n */\nfunction dirtyListingAndCompileCache(absPath: string, stats?: fs.Stats) {\n  const relPath = path.relative(srcDir, absPath);\n\n  const segments = relPath.split(path.sep);\n  // The listing changes if the directories change, or if a .spec.ts file is added/removed.\n  const listingChange =\n    // A directory or a file with no extension that we can't stat.\n    // (stat doesn't work for deletions)\n    ((path.extname(relPath) === '' && (stats === undefined || !stats.isFile())) ||\n      // A spec file\n      relPath.endsWith('.spec.ts') ||\n      // A README.txt\n      path.basename(relPath, 'txt') === 'README') &&\n    segments.length > 0;\n  if (listingChange) {\n    const suite = segments[0];\n    if (listingCache.has(suite)) {\n      console.debug('Dirtying listing cache', suite);\n    }\n    listingCache.delete(suite);\n  }\n\n  dirtyCompileCache(absPath, stats);\n}\n\nwatcher.on('add', dirtyListingAndCompileCache);\nwatcher.on('unlink', dirtyListingAndCompileCache);\nwatcher.on('addDir', dirtyListingAndCompileCache);\nwatcher.on('unlinkDir', dirtyListingAndCompileCache);\nwatcher.on('change', dirtyCompileCache);\n\nconst app = express();\n\n// Send Chrome Origin Trial tokens\napp.use((_req, res, next) => {\n  res.header('Origin-Trial', [\n    // Token for http://localhost:8080\n    'AvyDIV+RJoYs8fn3W6kIrBhWw0te0klraoz04mw/nPb8VTus3w5HCdy+vXqsSzomIH745CT6B5j1naHgWqt/tw8AAABJeyJvcmlnaW4iOiJodHRwOi8vbG9jYWxob3N0OjgwODAiLCJmZWF0dXJlIjoiV2ViR1BVIiwiZXhwaXJ5IjoxNjYzNzE4Mzk5fQ==',\n  ]);\n  next();\n});\n\n// Set up logging\napp.use(morgan('dev'));\n\n// Serve the standalone runner directory\napp.use('/standalone', express.static(path.resolve(srcDir, '../standalone')));\n// Add out-wpt/ build dir for convenience\napp.use('/out-wpt', express.static(path.resolve(srcDir, '../out-wpt')));\napp.use('/docs/tsdoc', express.static(path.resolve(srcDir, '../docs/tsdoc')));\n\n// Serve a suite's listing.js file by crawling the filesystem for all tests.\napp.get('/out/:suite([a-zA-Z0-9_-]+)/listing.js', async (req, res, next) => {\n  const suite = req.params['suite'];\n\n  if (listingCache.has(suite)) {\n    res.setHeader('Content-Type', 'application/javascript');\n    res.send(listingCache.get(suite));\n    return;\n  }\n\n  try {\n    const listing = await makeListing(path.resolve(srcDir, suite, 'listing.ts'));\n    const result = `export const listing = ${JSON.stringify(listing, undefined, 2)}`;\n\n    listingCache.set(suite, result);\n    res.setHeader('Content-Type', 'application/javascript');\n    res.send(result);\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Serve all other .js files by fetching the source .ts file and compiling it.\napp.get('/out/**/*.js', async (req, res, next) => {\n  const jsUrl = path.relative('/out', req.url);\n  const tsUrl = jsUrl.replace(/\\.js$/, '.ts');\n  if (compileCache.has(tsUrl)) {\n    res.setHeader('Content-Type', 'application/javascript');\n    res.send(compileCache.get(tsUrl));\n    return;\n  }\n\n  let absPath = path.join(srcDir, tsUrl);\n  if (!fs.existsSync(absPath)) {\n    // The .ts file doesn't exist. Try .js file in case this is a .js/.d.ts pair.\n    absPath = path.join(srcDir, jsUrl);\n  }\n\n  try {\n    const result = await babel.transformFileAsync(absPath, babelConfig);\n    if (result && result.code) {\n      compileCache.set(tsUrl, result.code);\n\n      res.setHeader('Content-Type', 'application/javascript');\n      res.send(result.code);\n    } else {\n      throw new Error(`Failed compile ${tsUrl}.`);\n    }\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Serve everything else (not .js) as static, and directories as directory listings.\napp.use('/out', serveIndex(path.resolve(srcDir, '../src')));\napp.use('/out', express.static(path.resolve(srcDir, '../src')));\n\nvoid (async () => {\n  let host = '127.0.0.1';\n  if (process.argv.length >= 3) {\n    if (process.argv.length !== 3) usage(1);\n    if (process.argv[2] === '0.0.0.0') {\n      host = '0.0.0.0';\n    } else {\n      usage(1);\n    }\n  }\n\n  console.log(`Finding an available port on ${host}...`);\n  const kPortFinderStart = 8080;\n  const port = await portfinder.getPortPromise({ host, port: kPortFinderStart });\n\n  watcher.on('ready', () => {\n    // Listen on the available port.\n    app.listen(port, host, () => {\n      console.log('Standalone test runner running at:');\n      if (host === '0.0.0.0') {\n        for (const iface of Object.values(os.networkInterfaces())) {\n          for (const details of iface || []) {\n            if (details.family === 'IPv4') {\n              console.log(`  http://${details.address}:${port}/standalone/`);\n            }\n          }\n        }\n      } else {\n        console.log(`  http://${host}:${port}/standalone/`);\n      }\n    });\n  });\n})();\n"],"mappings":"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"}