{"version":3,"file":"gen_wpt_cts_html.js","names":["promises","fs","path","DefaultTestFileLoader","TestQueryMultiCase","TestQueryMultiFile","TestQueryMultiTest","assert","printUsageAndExit","rc","console","error","process","exit","config","argv","length","configFile","configJSON","JSON","parse","readFile","jsonFileDir","dirname","suite","out","resolve","template","maxChunkTimeMS","Infinity","argumentsPrefixes","expectations","file","prefix","_nodeBinary","_thisScript","outFile","templateFile","argsPrefixesFile","expectationsFile","expectationsPrefix","split","filter","a","useChunking","Number","isFinite","sort","b","expectationLines","Set","l","Map","set","expLoop","exp","argsPrefix","startsWith","get","push","substring","log","loader","lines","rootQuery","tree","loadTree","subqueriesToExpand","maxChunkTime","undefined","prefixComment","comment","filesSeen","testsSeen","variantCount","alwaysExpandThroughLevel","query","subtreeCounts","iterateCollapsedNodes","queryString","toString","urlQueryString","totalTimeMS","toFixed","add","filePathParts","testPathParts","size","generateFile","catch","ex","stack","result","line","writeFile"],"sources":["../../../src/common/tools/gen_wpt_cts_html.ts"],"sourcesContent":["import { promises as fs } from 'fs';\nimport * as path from 'path';\n\nimport { DefaultTestFileLoader } from '../internal/file_loader.js';\nimport {\n  TestQueryMultiCase,\n  TestQueryMultiFile,\n  TestQueryMultiTest,\n} from '../internal/query/query.js';\nimport { assert } from '../util/util.js';\n\nfunction printUsageAndExit(rc: number): never {\n  console.error(`\\\nUsage (simple, for webgpu:* suite only):\n  tools/gen_wpt_cts_html OUTPUT_FILE TEMPLATE_FILE\n  tools/gen_wpt_cts_html out-wpt/cts.https.html templates/cts.https.html\n\nUsage (config file):\n  tools/gen_wpt_cts_html CONFIG_JSON_FILE\n\nwhere CONFIG_JSON_FILE is a JSON file in the format documented in the code of\ngen_wpt_cts_html.ts. Example:\n  {\n    \"suite\": \"webgpu\",\n    \"out\": \"path/to/output/cts.https.html\",\n    \"template\": \"path/to/template/cts.https.html\",\n    \"maxChunkTimeMS\": 2000\n  }\n\nUsage (advanced) (deprecated, use config file):\n  tools/gen_wpt_cts_html OUTPUT_FILE TEMPLATE_FILE ARGUMENTS_PREFIXES_FILE EXPECTATIONS_FILE EXPECTATIONS_PREFIX [SUITE]\n  tools/gen_wpt_cts_html my/path/to/cts.https.html templates/cts.https.html arguments.txt myexpectations.txt 'path/to/cts.https.html' cts\n\nwhere arguments.txt is a file containing a list of arguments prefixes to both generate and expect\nin the expectations. The entire variant list generation runs *once per prefix*, so this\nmultiplies the size of the variant list.\n\n  ?worker=0&q=\n  ?worker=1&q=\n\nand myexpectations.txt is a file containing a list of WPT paths to suppress, e.g.:\n\n  path/to/cts.https.html?worker=0&q=webgpu:a/foo:bar={\"x\":1}\n  path/to/cts.https.html?worker=1&q=webgpu:a/foo:bar={\"x\":1}\n\n  path/to/cts.https.html?worker=1&q=webgpu:a/foo:bar={\"x\":3}\n`);\n  process.exit(rc);\n}\n\ninterface ConfigJSON {\n  /** Test suite to generate from. */\n  suite: string;\n  /** Output filename, relative to JSON file. */\n  out: string;\n  /** Input template filename, relative to JSON file. */\n  template: string;\n  /**\n   * Maximum time for a single WPT \"variant\" chunk, in milliseconds. Defaults to infinity.\n   *\n   * This data is typically captured by developers on higher-end computers, so typical test\n   * machines might execute more slowly. For this reason, use a time much less than 5 seconds\n   * (a typical default time limit in WPT test executors).\n   */\n  maxChunkTimeMS?: number;\n  /** List of argument prefixes (what comes before the test query). Defaults to `['?q=']`. */\n  argumentsPrefixes?: string[];\n  expectations?: {\n    /** File containing a list of WPT paths to suppress. */\n    file: string;\n    /** The prefix to trim from every line of the expectations_file. */\n    prefix: string;\n  };\n}\n\ninterface Config {\n  suite: string;\n  out: string;\n  template: string;\n  maxChunkTimeMS: number;\n  argumentsPrefixes: string[];\n  expectations?: {\n    file: string;\n    prefix: string;\n  };\n}\n\nlet config: Config;\n\n(async () => {\n  // Load the config\n  switch (process.argv.length) {\n    case 3: {\n      const configFile = process.argv[2];\n      const configJSON: ConfigJSON = JSON.parse(await fs.readFile(configFile, 'utf8'));\n      const jsonFileDir = path.dirname(configFile);\n\n      config = {\n        suite: configJSON.suite,\n        out: path.resolve(jsonFileDir, configJSON.out),\n        template: path.resolve(jsonFileDir, configJSON.template),\n        maxChunkTimeMS: configJSON.maxChunkTimeMS ?? Infinity,\n        argumentsPrefixes: configJSON.argumentsPrefixes ?? ['?q='],\n      };\n      if (configJSON.expectations) {\n        config.expectations = {\n          file: path.resolve(jsonFileDir, configJSON.expectations.file),\n          prefix: configJSON.expectations.prefix,\n        };\n      }\n      break;\n    }\n    case 4:\n    case 7:\n    case 8: {\n      const [\n        _nodeBinary,\n        _thisScript,\n        outFile,\n        templateFile,\n        argsPrefixesFile,\n        expectationsFile,\n        expectationsPrefix,\n        suite = 'webgpu',\n      ] = process.argv;\n\n      config = {\n        out: outFile,\n        template: templateFile,\n        suite,\n        maxChunkTimeMS: Infinity,\n        argumentsPrefixes: ['?q='],\n      };\n      if (process.argv.length >= 7) {\n        config.argumentsPrefixes = (await fs.readFile(argsPrefixesFile, 'utf8'))\n          .split(/\\r?\\n/)\n          .filter(a => a.length);\n        config.expectations = {\n          file: expectationsFile,\n          prefix: expectationsPrefix,\n        };\n      }\n      break;\n    }\n    default:\n      console.error('incorrect number of arguments!');\n      printUsageAndExit(1);\n  }\n\n  const useChunking = Number.isFinite(config.maxChunkTimeMS);\n\n  // Sort prefixes from longest to shortest\n  config.argumentsPrefixes.sort((a, b) => b.length - a.length);\n\n  // Load expectations (if any)\n  let expectationLines = new Set<string>();\n  if (config.expectations) {\n    expectationLines = new Set(\n      (await fs.readFile(config.expectations.file, 'utf8')).split(/\\r?\\n/).filter(l => l.length)\n    );\n  }\n\n  const expectations: Map<string, string[]> = new Map();\n  for (const prefix of config.argumentsPrefixes) {\n    expectations.set(prefix, []);\n  }\n\n  expLoop: for (const exp of expectationLines) {\n    // Take each expectation for the longest prefix it matches.\n    for (const argsPrefix of config.argumentsPrefixes) {\n      const prefix = config.expectations!.prefix + argsPrefix;\n      if (exp.startsWith(prefix)) {\n        expectations.get(argsPrefix)!.push(exp.substring(prefix.length));\n        continue expLoop;\n      }\n    }\n    console.log('note: ignored expectation: ' + exp);\n  }\n\n  const loader = new DefaultTestFileLoader();\n  const lines = [];\n  for (const prefix of config.argumentsPrefixes) {\n    const rootQuery = new TestQueryMultiFile(config.suite, []);\n    const tree = await loader.loadTree(rootQuery, {\n      subqueriesToExpand: expectations.get(prefix),\n      maxChunkTime: config.maxChunkTimeMS,\n    });\n\n    lines.push(undefined); // output blank line between prefixes\n    const prefixComment = { comment: `Prefix: \"${prefix}\"` }; // contents will be updated later\n    if (useChunking) lines.push(prefixComment);\n\n    const filesSeen = new Set<string>();\n    const testsSeen = new Set<string>();\n    let variantCount = 0;\n\n    const alwaysExpandThroughLevel = 2; // expand to, at minimum, every test.\n    for (const { query, subtreeCounts } of tree.iterateCollapsedNodes({\n      alwaysExpandThroughLevel,\n    })) {\n      assert(query instanceof TestQueryMultiCase);\n      const queryString = query.toString();\n      // Check for a safe-ish path length limit. Filename must be <= 255, and on Windows the whole\n      // path must be <= 259. Leave room for e.g.:\n      // 'c:\\b\\s\\w\\xxxxxxxx\\layout-test-results\\external\\wpt\\webgpu\\cts_worker=0_q=...-actual.txt'\n      assert(\n        queryString.length < 185,\n        `Generated test variant would produce too-long -actual.txt filename. Possible solutions:\n- Reduce the length of the parts of the test query\n- Reduce the parameterization of the test\n- Make the test function faster and regenerate the listing_meta entry\n- Reduce the specificity of test expectations (if you're using them)\n${queryString}`\n      );\n\n      lines.push({\n        urlQueryString: prefix + query.toString(), // \"?worker=0&q=...\"\n        comment: useChunking ? `estimated: ${subtreeCounts?.totalTimeMS.toFixed(3)} ms` : undefined,\n      });\n\n      variantCount++;\n      filesSeen.add(new TestQueryMultiTest(query.suite, query.filePathParts, []).toString());\n      testsSeen.add(\n        new TestQueryMultiCase(query.suite, query.filePathParts, query.testPathParts, {}).toString()\n      );\n    }\n    prefixComment.comment += `; ${variantCount} variants generated from ${testsSeen.size} tests in ${filesSeen.size} files`;\n  }\n  await generateFile(lines);\n})().catch(ex => {\n  console.log(ex.stack ?? ex.toString());\n  process.exit(1);\n});\n\nasync function generateFile(\n  lines: Array<{ urlQueryString?: string; comment?: string } | undefined>\n): Promise<void> {\n  let result = '';\n  result += '<!-- AUTO-GENERATED - DO NOT EDIT. See WebGPU CTS: tools/gen_wpt_cts_html. -->\\n';\n\n  result += await fs.readFile(config.template, 'utf8');\n\n  for (const line of lines) {\n    if (line !== undefined) {\n      if (line.urlQueryString) result += `<meta name=variant content='${line.urlQueryString}'>`;\n      if (line.comment) result += `<!-- ${line.comment} -->`;\n    }\n    result += '\\n';\n  }\n\n  await fs.writeFile(config.out, result);\n}\n"],"mappings":"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"}