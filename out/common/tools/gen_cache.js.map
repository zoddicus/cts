{"version":3,"file":"gen_cache.js","names":["fs","path","process","dataCache","setIsBuildingDataCache","usage","rc","console","error","exit","mode","nth","i","n","verbose","nonFlagsArgs","argv","length","arg","startsWith","err","value","parts","split","parseInt","log","push","outRootDir","setStore","load","Promise","resolve","reject","readFile","data","message","suiteDir","slice","build","specFileSuffix","__filename","endsWith","crawlFilesRecursively","dir","subpathInfo","all","promises","readdir","map","d","p","join","stats","stat","isDirectory","isFile","files","filter","concat","reduce","a","b","existsSync","filesToEnumerate","sort","f","cacheablePathToTS","Map","fileIndex","file","pathWithoutExtension","substring","mod","serialize","undefined","cacheable","existing","get","set","outPath","serialized","mkdirSync","dirname","recursive","writeFileSync"],"sources":["../../../src/common/tools/gen_cache.ts"],"sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport * as process from 'process';\n\nimport { Cacheable, dataCache, setIsBuildingDataCache } from '../framework/data_cache.js';\n\nfunction usage(rc: number): void {\n  console.error(`Usage: tools/gen_cache [options] [OUT_DIR] [SUITE_DIRS...]\n\nFor each suite in SUITE_DIRS, pre-compute data that is expensive to generate\nat runtime and store it under OUT_DIR. If the data file is found then the\nDataCache will load this instead of building the expensive data at CTS runtime.\n\nOptions:\n  --help          Print this message and exit.\n  --list          Print the list of output files without writing them.\n  --nth i/n       Only process every file where (file_index % n == i)\n  --validate      Check that cache should build (Tests for collisions).\n  --verbose       Print each action taken.\n`);\n  process.exit(rc);\n}\n\nlet mode: 'emit' | 'list' | 'validate' = 'emit';\nlet nth = { i: 0, n: 1 };\nlet verbose = false;\n\nconst nonFlagsArgs: string[] = [];\n\nfor (let i = 0; i < process.argv.length; i++) {\n  const arg = process.argv[i];\n  if (arg.startsWith('-')) {\n    switch (arg) {\n      case '--list': {\n        mode = 'list';\n        break;\n      }\n      case '--help': {\n        usage(0);\n        break;\n      }\n      case '--verbose': {\n        verbose = true;\n        break;\n      }\n      case '--validate': {\n        mode = 'validate';\n        break;\n      }\n      case '--nth': {\n        const err = () => {\n          console.error(\n            `--nth requires a value of the form 'i/n', where i and n are positive integers and i < n`\n          );\n          process.exit(1);\n        };\n        i++;\n        if (i >= process.argv.length) {\n          err();\n        }\n        const value = process.argv[i];\n        const parts = value.split('/');\n        if (parts.length !== 2) {\n          err();\n        }\n        nth = { i: parseInt(parts[0]), n: parseInt(parts[1]) };\n        if (nth.i < 0 || nth.n < 1 || nth.i > nth.n) {\n          err();\n        }\n        break;\n      }\n      default: {\n        console.log('unrecognized flag: ', arg);\n        usage(1);\n      }\n    }\n  } else {\n    nonFlagsArgs.push(arg);\n  }\n}\n\nif (nonFlagsArgs.length < 4) {\n  usage(0);\n}\n\nconst outRootDir = nonFlagsArgs[2];\n\ndataCache.setStore({\n  load: (path: string) => {\n    return new Promise<string>((resolve, reject) => {\n      fs.readFile(`data/${path}`, 'utf8', (err, data) => {\n        if (err !== null) {\n          reject(err.message);\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  },\n});\nsetIsBuildingDataCache();\n\nvoid (async () => {\n  for (const suiteDir of nonFlagsArgs.slice(3)) {\n    await build(suiteDir);\n  }\n})();\n\nconst specFileSuffix = __filename.endsWith('.ts') ? '.spec.ts' : '.spec.js';\n\nasync function crawlFilesRecursively(dir: string): Promise<string[]> {\n  const subpathInfo = await Promise.all(\n    (await fs.promises.readdir(dir)).map(async d => {\n      const p = path.join(dir, d);\n      const stats = await fs.promises.stat(p);\n      return {\n        path: p,\n        isDirectory: stats.isDirectory(),\n        isFile: stats.isFile(),\n      };\n    })\n  );\n\n  const files = subpathInfo\n    .filter(i => i.isFile && i.path.endsWith(specFileSuffix))\n    .map(i => i.path);\n\n  return files.concat(\n    await subpathInfo\n      .filter(i => i.isDirectory)\n      .map(i => crawlFilesRecursively(i.path))\n      .reduce(async (a, b) => (await a).concat(await b), Promise.resolve([]))\n  );\n}\n\nasync function build(suiteDir: string) {\n  if (!fs.existsSync(suiteDir)) {\n    console.error(`Could not find ${suiteDir}`);\n    process.exit(1);\n  }\n\n  // Crawl files and convert paths to be POSIX-style, relative to suiteDir.\n  let filesToEnumerate = (await crawlFilesRecursively(suiteDir)).sort();\n\n  // Filter out non-spec files\n  filesToEnumerate = filesToEnumerate.filter(f => f.endsWith(specFileSuffix));\n\n  const cacheablePathToTS = new Map<string, string>();\n\n  let fileIndex = 0;\n  for (const file of filesToEnumerate) {\n    const pathWithoutExtension = file.substring(0, file.length - specFileSuffix.length);\n    const mod = await import(`../../../${pathWithoutExtension}.spec.js`);\n    if (mod.d?.serialize !== undefined) {\n      const cacheable = mod.d as Cacheable<unknown>;\n\n      {\n        // Check for collisions\n        const existing = cacheablePathToTS.get(cacheable.path);\n        if (existing !== undefined) {\n          console.error(\n            `error: Cacheable '${cacheable.path}' is emitted by both:\n    '${existing}'\nand\n    '${file}'`\n          );\n          process.exit(1);\n        }\n        cacheablePathToTS.set(cacheable.path, file);\n      }\n\n      const outPath = `${outRootDir}/data/${cacheable.path}`;\n\n      if (fileIndex++ % nth.n === nth.i) {\n        switch (mode) {\n          case 'emit': {\n            if (verbose) {\n              console.log(`building '${outPath}'`);\n            }\n            const data = await cacheable.build();\n            const serialized = cacheable.serialize(data);\n            fs.mkdirSync(path.dirname(outPath), { recursive: true });\n            fs.writeFileSync(outPath, serialized);\n            break;\n          }\n          case 'list': {\n            console.log(outPath);\n            break;\n          }\n          case 'validate': {\n            // Only check currently performed is the collision detection above\n            break;\n          }\n        }\n      }\n    }\n  }\n}\n"],"mappings":"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"}