{"version":3,"file":"test_worker-worker.js","names":["setBaseResourcePath","globalTestConfig","DefaultTestFileLoader","Logger","parseQuery","setDefaultRequestAdapterOptions","assert","loader","self","onmessage","ev","query","data","expectations","ctsOptions","debug","unrollConstEvalLoops","powerPreference","compatibility","globalDebugMode","log","compatibilityMode","testcases","Array","from","loadCases","length","testcase","rec","result","record","toString","run","postMessage"],"sources":["../../../../src/common/runtime/helper/test_worker-worker.ts"],"sourcesContent":["import { setBaseResourcePath } from '../../framework/resources.js';\nimport { globalTestConfig } from '../../framework/test_config.js';\nimport { DefaultTestFileLoader } from '../../internal/file_loader.js';\nimport { Logger } from '../../internal/logging/logger.js';\nimport { parseQuery } from '../../internal/query/parseQuery.js';\nimport { TestQueryWithExpectation } from '../../internal/query/query.js';\nimport { setDefaultRequestAdapterOptions } from '../../util/navigator_gpu.js';\nimport { assert } from '../../util/util.js';\n\nimport { CTSOptions } from './options.js';\n\n// Should be DedicatedWorkerGlobalScope, but importing lib \"webworker\" conflicts with lib \"dom\".\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\ndeclare const self: any;\n\nconst loader = new DefaultTestFileLoader();\n\nsetBaseResourcePath('../../../resources');\n\nself.onmessage = async (ev: MessageEvent) => {\n  const query: string = ev.data.query;\n  const expectations: TestQueryWithExpectation[] = ev.data.expectations;\n  const ctsOptions: CTSOptions = ev.data.ctsOptions;\n\n  const { debug, unrollConstEvalLoops, powerPreference, compatibility } = ctsOptions;\n  globalTestConfig.unrollConstEvalLoops = unrollConstEvalLoops;\n  globalTestConfig.compatibility = compatibility;\n\n  Logger.globalDebugMode = debug;\n  const log = new Logger();\n\n  if (powerPreference || compatibility) {\n    setDefaultRequestAdapterOptions({\n      ...(powerPreference && { powerPreference }),\n      // MAINTENANCE_TODO: Change this to whatever the option ends up being\n      ...(compatibility && { compatibilityMode: true }),\n    });\n  }\n\n  const testcases = Array.from(await loader.loadCases(parseQuery(query)));\n  assert(testcases.length === 1, 'worker query resulted in != 1 cases');\n\n  const testcase = testcases[0];\n  const [rec, result] = log.record(testcase.query.toString());\n  await testcase.run(rec, expectations);\n\n  self.postMessage({ query, result });\n};\n"],"mappings":";;GAAA,SAASA,mBAAmB,QAAQ,8BAA8B,CAClE,SAASC,gBAAgB,QAAQ,gCAAgC,CACjE,SAASC,qBAAqB,QAAQ,+BAA+B;AACrE,SAASC,MAAM,QAAQ,kCAAkC;AACzD,SAASC,UAAU,QAAQ,oCAAoC;;AAE/D,SAASC,+BAA+B,QAAQ,6BAA6B;AAC7E,SAASC,MAAM,QAAQ,oBAAoB;;;;AAI3C;;;;AAIA,MAAMC,MAAM,GAAG,IAAIL,qBAAqB,CAAC,CAAC;;AAE1CF,mBAAmB,CAAC,oBAAoB,CAAC;;AAEzCQ,IAAI,CAACC,SAAS,GAAG,OAAOC,EAAgB,KAAK;EAC3C,MAAMC,KAAa,GAAGD,EAAE,CAACE,IAAI,CAACD,KAAK;EACnC,MAAME,YAAwC,GAAGH,EAAE,CAACE,IAAI,CAACC,YAAY;EACrE,MAAMC,UAAsB,GAAGJ,EAAE,CAACE,IAAI,CAACE,UAAU;;EAEjD,MAAM,EAAEC,KAAK,EAAEC,oBAAoB,EAAEC,eAAe,EAAEC,aAAa,CAAC,CAAC,GAAGJ,UAAU;EAClFb,gBAAgB,CAACe,oBAAoB,GAAGA,oBAAoB;EAC5Df,gBAAgB,CAACiB,aAAa,GAAGA,aAAa;;EAE9Cf,MAAM,CAACgB,eAAe,GAAGJ,KAAK;EAC9B,MAAMK,GAAG,GAAG,IAAIjB,MAAM,CAAC,CAAC;;EAExB,IAAIc,eAAe,IAAIC,aAAa,EAAE;IACpCb,+BAA+B,CAAC;MAC9B,IAAIY,eAAe,IAAI,EAAEA,eAAe,CAAC,CAAC,CAAC;MAC3C;MACA,IAAIC,aAAa,IAAI,EAAEG,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC,CAAC;EACJ;;EAEA,MAAMC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAAC,MAAMjB,MAAM,CAACkB,SAAS,CAACrB,UAAU,CAACO,KAAK,CAAC,CAAC,CAAC;EACvEL,MAAM,CAACgB,SAAS,CAACI,MAAM,KAAK,CAAC,EAAE,qCAAqC,CAAC;;EAErE,MAAMC,QAAQ,GAAGL,SAAS,CAAC,CAAC,CAAC;EAC7B,MAAM,CAACM,GAAG,EAAEC,MAAM,CAAC,GAAGT,GAAG,CAACU,MAAM,CAACH,QAAQ,CAAChB,KAAK,CAACoB,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAMJ,QAAQ,CAACK,GAAG,CAACJ,GAAG,EAAEf,YAAY,CAAC;;EAErCL,IAAI,CAACyB,WAAW,CAAC,EAAEtB,KAAK,EAAEkB,MAAM,CAAC,CAAC,CAAC;AACrC,CAAC"}