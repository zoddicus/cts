{"version":3,"file":"wrap_for_worker.js","names":["LogMessageWithStack","comparePaths","comparePublicParamsPaths","Ordering","parseQuery","TestQuerySingleCase","assert","setupWorkerEnvironment","wrapTestGroupForWorker","g","self","onmessage","ev","query","expectations","ctsOptions","data","log","testQuery","testcase","t","iterate","testPath","testPathParts","Equal","c","params","id","rec","result","record","run","source","postMessage","thrown","ex","Error","status","timems","logs","wrapError"],"sources":["../../../../src/common/runtime/helper/wrap_for_worker.ts"],"sourcesContent":["import { Fixture } from '../../framework/fixture.js';\nimport { LogMessageWithStack } from '../../internal/logging/log_message.js';\nimport { comparePaths, comparePublicParamsPaths, Ordering } from '../../internal/query/compare.js';\nimport { parseQuery } from '../../internal/query/parseQuery.js';\nimport { TestQuerySingleCase } from '../../internal/query/query.js';\nimport { TestGroup } from '../../internal/test_group.js';\nimport { assert } from '../../util/util.js';\n\nimport { setupWorkerEnvironment, WorkerTestRunRequest } from './utils_worker.js';\n\n/**\n * Sets up the currently running Web Worker to wrap the TestGroup object `g`.\n * `g` is the `g` exported from a `.spec.ts` file: a TestGroupBuilder<F> interface,\n * which underneath is actually a TestGroup<F> object.\n *\n * This is used in the generated `.as_worker.js` files that are generated to use as service workers.\n */\nexport function wrapTestGroupForWorker(g: TestGroup<Fixture>) {\n  self.onmessage = async (ev: MessageEvent) => {\n    const { query, expectations, ctsOptions } = ev.data as WorkerTestRunRequest;\n    try {\n      const log = setupWorkerEnvironment(ctsOptions);\n\n      const testQuery = parseQuery(query);\n      assert(testQuery instanceof TestQuerySingleCase);\n      let testcase = null;\n      for (const t of g.iterate()) {\n        if (comparePaths(t.testPath, testQuery.testPathParts) !== Ordering.Equal) {\n          continue;\n        }\n        for (const c of t.iterate(testQuery.params)) {\n          if (comparePublicParamsPaths(c.id.params, testQuery.params) === Ordering.Equal) {\n            testcase = c;\n          }\n        }\n      }\n      assert(!!testcase, 'testcase not found');\n      const [rec, result] = log.record(query);\n      await testcase.run(rec, testQuery, expectations);\n\n      ev.source?.postMessage({ query, result });\n    } catch (thrown) {\n      const ex = thrown instanceof Error ? thrown : new Error(`${thrown}`);\n      ev.source?.postMessage({\n        query,\n        result: {\n          status: 'fail',\n          timems: 0,\n          logs: [LogMessageWithStack.wrapError('INTERNAL', ex)],\n        },\n      });\n    }\n  };\n}\n"],"mappings":";;GACA,SAASA,mBAAmB,QAAQ,uCAAuC,CAC3E,SAASC,YAAY,EAAEC,wBAAwB,EAAEC,QAAQ,QAAQ,iCAAiC;AAClG,SAASC,UAAU,QAAQ,oCAAoC;AAC/D,SAASC,mBAAmB,QAAQ,+BAA+B;;AAEnE,SAASC,MAAM,QAAQ,oBAAoB;;AAE3C,SAASC,sBAAsB,QAA8B,mBAAmB;;AAEhF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,sBAAsBA,CAACC,CAAqB,EAAE;EAC5DC,IAAI,CAACC,SAAS,GAAG,OAAOC,EAAgB,KAAK;IAC3C,MAAM,EAAEC,KAAK,EAAEC,YAAY,EAAEC,UAAU,CAAC,CAAC,GAAGH,EAAE,CAACI,IAA4B;IAC3E,IAAI;MACF,MAAMC,GAAG,GAAGV,sBAAsB,CAACQ,UAAU,CAAC;;MAE9C,MAAMG,SAAS,GAAGd,UAAU,CAACS,KAAK,CAAC;MACnCP,MAAM,CAACY,SAAS,YAAYb,mBAAmB,CAAC;MAChD,IAAIc,QAAQ,GAAG,IAAI;MACnB,KAAK,MAAMC,CAAC,IAAIX,CAAC,CAACY,OAAO,CAAC,CAAC,EAAE;QAC3B,IAAIpB,YAAY,CAACmB,CAAC,CAACE,QAAQ,EAAEJ,SAAS,CAACK,aAAa,CAAC,KAAKpB,QAAQ,CAACqB,KAAK,EAAE;UACxE;QACF;QACA,KAAK,MAAMC,CAAC,IAAIL,CAAC,CAACC,OAAO,CAACH,SAAS,CAACQ,MAAM,CAAC,EAAE;UAC3C,IAAIxB,wBAAwB,CAACuB,CAAC,CAACE,EAAE,CAACD,MAAM,EAAER,SAAS,CAACQ,MAAM,CAAC,KAAKvB,QAAQ,CAACqB,KAAK,EAAE;YAC9EL,QAAQ,GAAGM,CAAC;UACd;QACF;MACF;MACAnB,MAAM,CAAC,CAAC,CAACa,QAAQ,EAAE,oBAAoB,CAAC;MACxC,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGZ,GAAG,CAACa,MAAM,CAACjB,KAAK,CAAC;MACvC,MAAMM,QAAQ,CAACY,GAAG,CAACH,GAAG,EAAEV,SAAS,EAAEJ,YAAY,CAAC;;MAEhDF,EAAE,CAACoB,MAAM,EAAEC,WAAW,CAAC,EAAEpB,KAAK,EAAEgB,MAAM,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,OAAOK,MAAM,EAAE;MACf,MAAMC,EAAE,GAAGD,MAAM,YAAYE,KAAK,GAAGF,MAAM,GAAG,IAAIE,KAAK,CAAE,GAAEF,MAAO,EAAC,CAAC;MACpEtB,EAAE,CAACoB,MAAM,EAAEC,WAAW,CAAC;QACrBpB,KAAK;QACLgB,MAAM,EAAE;UACNQ,MAAM,EAAE,MAAM;UACdC,MAAM,EAAE,CAAC;UACTC,IAAI,EAAE,CAACvC,mBAAmB,CAACwC,SAAS,CAAC,UAAU,EAAEL,EAAE,CAAC;QACtD;MACF,CAAC,CAAC;IACJ;EACF,CAAC;AACH"}