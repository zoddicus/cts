{"version":3,"file":"result.js","names":[],"sources":["../../../../src/common/internal/logging/result.ts"],"sourcesContent":["import { LogMessageWithStack } from './log_message.js';\n\n// MAINTENANCE_TODO: Add warn expectations\nexport type Expectation = 'pass' | 'skip' | 'fail';\n\nexport type Status = 'notrun' | 'running' | 'warn' | Expectation;\n\nexport interface TestCaseResult {\n  status: Status;\n  timems: number;\n}\n\nexport interface LiveTestCaseResult extends TestCaseResult {\n  logs?: LogMessageWithStack[];\n}\n\n/**\n * Raw data for a test log message.\n *\n * This form is sendable over a message channel, except `extra` may get mangled.\n */\nexport interface LogMessageRawData {\n  name: string;\n  message: string;\n  stackHiddenMessage: string | undefined;\n  stack: string | undefined;\n  extra: unknown;\n}\n\n/**\n * Test case results in a form sendable over a message channel.\n *\n * Note `extra` may get mangled by postMessage.\n */\nexport interface TransferredTestCaseResult extends TestCaseResult {\n  logs?: LogMessageRawData[];\n}\n"],"mappings":";;IAEA;;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA,GAJA"}