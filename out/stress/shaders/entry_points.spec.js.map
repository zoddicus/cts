{"version":3,"file":"entry_points.spec.js","names":["description","makeTestGroup","range","GPUTest","g","makeCode","numEntryPoints","kBaseCode","makeEntryPoint","i","join","test","desc","fn","t","data","Uint32Array","buffer","makeBufferWithContents","GPUBufferUsage","STORAGE","COPY_SRC","kNumEntryPoints","shader","device","createShaderModule","code","layout","createBindGroupLayout","entries","binding","visibility","GPUShaderStage","COMPUTE","type","pipelineLayout","createPipelineLayout","bindGroupLayouts","bindGroup","createBindGroup","resource","encoder","createCommandEncoder","pipeline","createComputePipeline","compute","module","entryPoint","pass","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","end","queue","submit","finish","expectGPUBufferValuesEqual"],"sources":["../../../src/stress/shaders/entry_points.spec.ts"],"sourcesContent":["export const description = `\nStress tests covering behavior around shader entry points.\n`;\n\nimport { makeTestGroup } from '../../common/framework/test_group.js';\nimport { range } from '../../common/util/util.js';\nimport { GPUTest } from '../../webgpu/gpu_test.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nconst makeCode = (numEntryPoints: number) => {\n  const kBaseCode = `\n      struct Buffer { data: u32, };\n      @group(0) @binding(0) var<storage, read_write> buffer: Buffer;\n      fn main() { buffer.data = buffer.data + 1u;  }\n      `;\n  const makeEntryPoint = (i: number) => `\n      @compute @workgroup_size(1) fn computeMain${i}() { main(); }\n      `;\n  return kBaseCode + range(numEntryPoints, makeEntryPoint).join('');\n};\n\ng.test('many')\n  .desc(\n    `Tests compilation and usage of shaders with a huge number of entry points.\n\nTODO: There may be a normative limit to the number of entry points allowed in\na shader, in which case this would become a validation test instead.`\n  )\n  .fn(t => {\n    const data = new Uint32Array([0]);\n    const buffer = t.makeBufferWithContents(data, GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC);\n\n    // NOTE: Initial shader compilation time seems to scale exponentially with\n    // this value in Chrome.\n    const kNumEntryPoints = 200;\n\n    const shader = t.device.createShaderModule({\n      code: makeCode(kNumEntryPoints),\n    });\n\n    const layout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.COMPUTE,\n          buffer: { type: 'storage' },\n        },\n      ],\n    });\n    const pipelineLayout = t.device.createPipelineLayout({\n      bindGroupLayouts: [layout],\n    });\n    const bindGroup = t.device.createBindGroup({\n      layout,\n      entries: [{ binding: 0, resource: { buffer } }],\n    });\n\n    const encoder = t.device.createCommandEncoder();\n    range(kNumEntryPoints, i => {\n      const pipeline = t.device.createComputePipeline({\n        layout: pipelineLayout,\n        compute: {\n          module: shader,\n          entryPoint: `computeMain${i}`,\n        },\n      });\n\n      const pass = encoder.beginComputePass();\n      pass.setPipeline(pipeline);\n      pass.setBindGroup(0, bindGroup);\n      pass.dispatchWorkgroups(1);\n      pass.end();\n    });\n\n    t.device.queue.submit([encoder.finish()]);\n    t.expectGPUBufferValuesEqual(buffer, new Uint32Array([kNumEntryPoints]));\n  });\n"],"mappings":"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"}